/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!(function (e, t) {
  "use strict";
  "object" == typeof module && "object" == typeof module.exports
    ? (module.exports = e.document
        ? t(e, !0)
        : function (e) {
            if (!e.document)
              throw new Error("jQuery requires a window with a document");
            return t(e);
          })
    : t(e);
})("undefined" != typeof window ? window : this, function (ie, e) {
  "use strict";
  var oe = [],
    r = Object.getPrototypeOf,
    ae = oe.slice,
    g = oe.flat
      ? function (e) {
          return oe.flat.call(e);
        }
      : function (e) {
          return oe.concat.apply([], e);
        },
    s = oe.push,
    se = oe.indexOf,
    n = {},
    i = n.toString,
    ue = n.hasOwnProperty,
    o = ue.toString,
    a = o.call(Object),
    le = {},
    v = function (e) {
      return (
        "function" == typeof e &&
        "number" != typeof e.nodeType &&
        "function" != typeof e.item
      );
    },
    y = function (e) {
      return null != e && e === e.window;
    },
    C = ie.document,
    u = { type: !0, src: !0, nonce: !0, noModule: !0 };
  function m(e, t, n) {
    var r,
      i,
      o = (n = n || C).createElement("script");
    if (((o.text = e), t))
      for (r in u)
        (i = t[r] || (t.getAttribute && t.getAttribute(r))) &&
          o.setAttribute(r, i);
    n.head.appendChild(o).parentNode.removeChild(o);
  }
  function x(e) {
    return null == e
      ? e + ""
      : "object" == typeof e || "function" == typeof e
      ? n[i.call(e)] || "object"
      : typeof e;
  }
  var t = "3.7.1",
    l = /HTML$/i,
    ce = function (e, t) {
      return new ce.fn.init(e, t);
    };
  function c(e) {
    var t = !!e && "length" in e && e.length,
      n = x(e);
    return (
      !v(e) &&
      !y(e) &&
      ("array" === n ||
        0 === t ||
        ("number" == typeof t && 0 < t && t - 1 in e))
    );
  }
  function fe(e, t) {
    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
  }
  (ce.fn = ce.prototype =
    {
      jquery: t,
      constructor: ce,
      length: 0,
      toArray: function () {
        return ae.call(this);
      },
      get: function (e) {
        return null == e
          ? ae.call(this)
          : e < 0
          ? this[e + this.length]
          : this[e];
      },
      pushStack: function (e) {
        var t = ce.merge(this.constructor(), e);
        return (t.prevObject = this), t;
      },
      each: function (e) {
        return ce.each(this, e);
      },
      map: function (n) {
        return this.pushStack(
          ce.map(this, function (e, t) {
            return n.call(e, t, e);
          })
        );
      },
      slice: function () {
        return this.pushStack(ae.apply(this, arguments));
      },
      first: function () {
        return this.eq(0);
      },
      last: function () {
        return this.eq(-1);
      },
      even: function () {
        return this.pushStack(
          ce.grep(this, function (e, t) {
            return (t + 1) % 2;
          })
        );
      },
      odd: function () {
        return this.pushStack(
          ce.grep(this, function (e, t) {
            return t % 2;
          })
        );
      },
      eq: function (e) {
        var t = this.length,
          n = +e + (e < 0 ? t : 0);
        return this.pushStack(0 <= n && n < t ? [this[n]] : []);
      },
      end: function () {
        return this.prevObject || this.constructor();
      },
      push: s,
      sort: oe.sort,
      splice: oe.splice,
    }),
    (ce.extend = ce.fn.extend =
      function () {
        var e,
          t,
          n,
          r,
          i,
          o,
          a = arguments[0] || {},
          s = 1,
          u = arguments.length,
          l = !1;
        for (
          "boolean" == typeof a && ((l = a), (a = arguments[s] || {}), s++),
            "object" == typeof a || v(a) || (a = {}),
            s === u && ((a = this), s--);
          s < u;
          s++
        )
          if (null != (e = arguments[s]))
            for (t in e)
              (r = e[t]),
                "__proto__" !== t &&
                  a !== r &&
                  (l && r && (ce.isPlainObject(r) || (i = Array.isArray(r)))
                    ? ((n = a[t]),
                      (o =
                        i && !Array.isArray(n)
                          ? []
                          : i || ce.isPlainObject(n)
                          ? n
                          : {}),
                      (i = !1),
                      (a[t] = ce.extend(l, o, r)))
                    : void 0 !== r && (a[t] = r));
        return a;
      }),
    ce.extend({
      expando: "jQuery" + (t + Math.random()).replace(/\D/g, ""),
      isReady: !0,
      error: function (e) {
        throw new Error(e);
      },
      noop: function () {},
      isPlainObject: function (e) {
        var t, n;
        return (
          !(!e || "[object Object]" !== i.call(e)) &&
          (!(t = r(e)) ||
            ("function" ==
              typeof (n = ue.call(t, "constructor") && t.constructor) &&
              o.call(n) === a))
        );
      },
      isEmptyObject: function (e) {
        var t;
        for (t in e) return !1;
        return !0;
      },
      globalEval: function (e, t, n) {
        m(e, { nonce: t && t.nonce }, n);
      },
      each: function (e, t) {
        var n,
          r = 0;
        if (c(e)) {
          for (n = e.length; r < n; r++)
            if (!1 === t.call(e[r], r, e[r])) break;
        } else for (r in e) if (!1 === t.call(e[r], r, e[r])) break;
        return e;
      },
      text: function (e) {
        var t,
          n = "",
          r = 0,
          i = e.nodeType;
        if (!i) while ((t = e[r++])) n += ce.text(t);
        return 1 === i || 11 === i
          ? e.textContent
          : 9 === i
          ? e.documentElement.textContent
          : 3 === i || 4 === i
          ? e.nodeValue
          : n;
      },
      makeArray: function (e, t) {
        var n = t || [];
        return (
          null != e &&
            (c(Object(e))
              ? ce.merge(n, "string" == typeof e ? [e] : e)
              : s.call(n, e)),
          n
        );
      },
      inArray: function (e, t, n) {
        return null == t ? -1 : se.call(t, e, n);
      },
      isXMLDoc: function (e) {
        var t = e && e.namespaceURI,
          n = e && (e.ownerDocument || e).documentElement;
        return !l.test(t || (n && n.nodeName) || "HTML");
      },
      merge: function (e, t) {
        for (var n = +t.length, r = 0, i = e.length; r < n; r++) e[i++] = t[r];
        return (e.length = i), e;
      },
      grep: function (e, t, n) {
        for (var r = [], i = 0, o = e.length, a = !n; i < o; i++)
          !t(e[i], i) !== a && r.push(e[i]);
        return r;
      },
      map: function (e, t, n) {
        var r,
          i,
          o = 0,
          a = [];
        if (c(e))
          for (r = e.length; o < r; o++)
            null != (i = t(e[o], o, n)) && a.push(i);
        else for (o in e) null != (i = t(e[o], o, n)) && a.push(i);
        return g(a);
      },
      guid: 1,
      support: le,
    }),
    "function" == typeof Symbol &&
      (ce.fn[Symbol.iterator] = oe[Symbol.iterator]),
    ce.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " "
      ),
      function (e, t) {
        n["[object " + t + "]"] = t.toLowerCase();
      }
    );
  var pe = oe.pop,
    de = oe.sort,
    he = oe.splice,
    ge = "[\\x20\\t\\r\\n\\f]",
    ve = new RegExp("^" + ge + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ge + "+$", "g");
  ce.contains = function (e, t) {
    var n = t && t.parentNode;
    return (
      e === n ||
      !(
        !n ||
        1 !== n.nodeType ||
        !(e.contains
          ? e.contains(n)
          : e.compareDocumentPosition && 16 & e.compareDocumentPosition(n))
      )
    );
  };
  var f = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
  function p(e, t) {
    return t
      ? "\0" === e
        ? "\ufffd"
        : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " "
      : "\\" + e;
  }
  ce.escapeSelector = function (e) {
    return (e + "").replace(f, p);
  };
  var ye = C,
    me = s;
  !(function () {
    var e,
      b,
      w,
      o,
      a,
      T,
      r,
      C,
      d,
      i,
      k = me,
      S = ce.expando,
      E = 0,
      n = 0,
      s = W(),
      c = W(),
      u = W(),
      h = W(),
      l = function (e, t) {
        return e === t && (a = !0), 0;
      },
      f =
        "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
      t =
        "(?:\\\\[\\da-fA-F]{1,6}" +
        ge +
        "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
      p =
        "\\[" +
        ge +
        "*(" +
        t +
        ")(?:" +
        ge +
        "*([*^$|!~]?=)" +
        ge +
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
        t +
        "))|)" +
        ge +
        "*\\]",
      g =
        ":(" +
        t +
        ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
        p +
        ")*)|.*)\\)|)",
      v = new RegExp(ge + "+", "g"),
      y = new RegExp("^" + ge + "*," + ge + "*"),
      m = new RegExp("^" + ge + "*([>+~]|" + ge + ")" + ge + "*"),
      x = new RegExp(ge + "|>"),
      j = new RegExp(g),
      A = new RegExp("^" + t + "$"),
      D = {
        ID: new RegExp("^#(" + t + ")"),
        CLASS: new RegExp("^\\.(" + t + ")"),
        TAG: new RegExp("^(" + t + "|[*])"),
        ATTR: new RegExp("^" + p),
        PSEUDO: new RegExp("^" + g),
        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
            ge +
            "*(even|odd|(([+-]|)(\\d*)n|)" +
            ge +
            "*(?:([+-]|)" +
            ge +
            "*(\\d+)|))" +
            ge +
            "*\\)|)",
          "i"
        ),
        bool: new RegExp("^(?:" + f + ")$", "i"),
        needsContext: new RegExp(
          "^" +
            ge +
            "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
            ge +
            "*((?:-\\d)?\\d*)" +
            ge +
            "*\\)|)(?=[^-]|$)",
          "i"
        ),
      },
      N = /^(?:input|select|textarea|button)$/i,
      q = /^h\d$/i,
      L = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      H = /[+~]/,
      O = new RegExp("\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\([^\\r\\n\\f])", "g"),
      P = function (e, t) {
        var n = "0x" + e.slice(1) - 65536;
        return (
          t ||
          (n < 0
            ? String.fromCharCode(n + 65536)
            : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320))
        );
      },
      M = function () {
        V();
      },
      R = J(
        function (e) {
          return !0 === e.disabled && fe(e, "fieldset");
        },
        { dir: "parentNode", next: "legend" }
      );
    try {
      k.apply((oe = ae.call(ye.childNodes)), ye.childNodes),
        oe[ye.childNodes.length].nodeType;
    } catch (e) {
      k = {
        apply: function (e, t) {
          me.apply(e, ae.call(t));
        },
        call: function (e) {
          me.apply(e, ae.call(arguments, 1));
        },
      };
    }
    function I(t, e, n, r) {
      var i,
        o,
        a,
        s,
        u,
        l,
        c,
        f = e && e.ownerDocument,
        p = e ? e.nodeType : 9;
      if (
        ((n = n || []),
        "string" != typeof t || !t || (1 !== p && 9 !== p && 11 !== p))
      )
        return n;
      if (!r && (V(e), (e = e || T), C)) {
        if (11 !== p && (u = L.exec(t)))
          if ((i = u[1])) {
            if (9 === p) {
              if (!(a = e.getElementById(i))) return n;
              if (a.id === i) return k.call(n, a), n;
            } else if (
              f &&
              (a = f.getElementById(i)) &&
              I.contains(e, a) &&
              a.id === i
            )
              return k.call(n, a), n;
          } else {
            if (u[2]) return k.apply(n, e.getElementsByTagName(t)), n;
            if ((i = u[3]) && e.getElementsByClassName)
              return k.apply(n, e.getElementsByClassName(i)), n;
          }
        if (!(h[t + " "] || (d && d.test(t)))) {
          if (((c = t), (f = e), 1 === p && (x.test(t) || m.test(t)))) {
            ((f = (H.test(t) && U(e.parentNode)) || e) == e && le.scope) ||
              ((s = e.getAttribute("id"))
                ? (s = ce.escapeSelector(s))
                : e.setAttribute("id", (s = S))),
              (o = (l = Y(t)).length);
            while (o--) l[o] = (s ? "#" + s : ":scope") + " " + Q(l[o]);
            c = l.join(",");
          }
          try {
            return k.apply(n, f.querySelectorAll(c)), n;
          } catch (e) {
            h(t, !0);
          } finally {
            s === S && e.removeAttribute("id");
          }
        }
      }
      return re(t.replace(ve, "$1"), e, n, r);
    }
    function W() {
      var r = [];
      return function e(t, n) {
        return (
          r.push(t + " ") > b.cacheLength && delete e[r.shift()],
          (e[t + " "] = n)
        );
      };
    }
    function F(e) {
      return (e[S] = !0), e;
    }
    function $(e) {
      var t = T.createElement("fieldset");
      try {
        return !!e(t);
      } catch (e) {
        return !1;
      } finally {
        t.parentNode && t.parentNode.removeChild(t), (t = null);
      }
    }
    function B(t) {
      return function (e) {
        return fe(e, "input") && e.type === t;
      };
    }
    function _(t) {
      return function (e) {
        return (fe(e, "input") || fe(e, "button")) && e.type === t;
      };
    }
    function z(t) {
      return function (e) {
        return "form" in e
          ? e.parentNode && !1 === e.disabled
            ? "label" in e
              ? "label" in e.parentNode
                ? e.parentNode.disabled === t
                : e.disabled === t
              : e.isDisabled === t || (e.isDisabled !== !t && R(e) === t)
            : e.disabled === t
          : "label" in e && e.disabled === t;
      };
    }
    function X(a) {
      return F(function (o) {
        return (
          (o = +o),
          F(function (e, t) {
            var n,
              r = a([], e.length, o),
              i = r.length;
            while (i--) e[(n = r[i])] && (e[n] = !(t[n] = e[n]));
          })
        );
      });
    }
    function U(e) {
      return e && "undefined" != typeof e.getElementsByTagName && e;
    }
    function V(e) {
      var t,
        n = e ? e.ownerDocument || e : ye;
      return (
        n != T &&
          9 === n.nodeType &&
          n.documentElement &&
          ((r = (T = n).documentElement),
          (C = !ce.isXMLDoc(T)),
          (i = r.matches || r.webkitMatchesSelector || r.msMatchesSelector),
          r.msMatchesSelector &&
            ye != T &&
            (t = T.defaultView) &&
            t.top !== t &&
            t.addEventListener("unload", M),
          (le.getById = $(function (e) {
            return (
              (r.appendChild(e).id = ce.expando),
              !T.getElementsByName || !T.getElementsByName(ce.expando).length
            );
          })),
          (le.disconnectedMatch = $(function (e) {
            return i.call(e, "*");
          })),
          (le.scope = $(function () {
            return T.querySelectorAll(":scope");
          })),
          (le.cssHas = $(function () {
            try {
              return T.querySelector(":has(*,:jqfake)"), !1;
            } catch (e) {
              return !0;
            }
          })),
          le.getById
            ? ((b.filter.ID = function (e) {
                var t = e.replace(O, P);
                return function (e) {
                  return e.getAttribute("id") === t;
                };
              }),
              (b.find.ID = function (e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                  var n = t.getElementById(e);
                  return n ? [n] : [];
                }
              }))
            : ((b.filter.ID = function (e) {
                var n = e.replace(O, P);
                return function (e) {
                  var t =
                    "undefined" != typeof e.getAttributeNode &&
                    e.getAttributeNode("id");
                  return t && t.value === n;
                };
              }),
              (b.find.ID = function (e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                  var n,
                    r,
                    i,
                    o = t.getElementById(e);
                  if (o) {
                    if ((n = o.getAttributeNode("id")) && n.value === e)
                      return [o];
                    (i = t.getElementsByName(e)), (r = 0);
                    while ((o = i[r++]))
                      if ((n = o.getAttributeNode("id")) && n.value === e)
                        return [o];
                  }
                  return [];
                }
              })),
          (b.find.TAG = function (e, t) {
            return "undefined" != typeof t.getElementsByTagName
              ? t.getElementsByTagName(e)
              : t.querySelectorAll(e);
          }),
          (b.find.CLASS = function (e, t) {
            if ("undefined" != typeof t.getElementsByClassName && C)
              return t.getElementsByClassName(e);
          }),
          (d = []),
          $(function (e) {
            var t;
            (r.appendChild(e).innerHTML =
              "<a id='" +
              S +
              "' href='' disabled='disabled'></a><select id='" +
              S +
              "-\r\\' disabled='disabled'><option selected=''></option></select>"),
              e.querySelectorAll("[selected]").length ||
                d.push("\\[" + ge + "*(?:value|" + f + ")"),
              e.querySelectorAll("[id~=" + S + "-]").length || d.push("~="),
              e.querySelectorAll("a#" + S + "+*").length || d.push(".#.+[+~]"),
              e.querySelectorAll(":checked").length || d.push(":checked"),
              (t = T.createElement("input")).setAttribute("type", "hidden"),
              e.appendChild(t).setAttribute("name", "D"),
              (r.appendChild(e).disabled = !0),
              2 !== e.querySelectorAll(":disabled").length &&
                d.push(":enabled", ":disabled"),
              (t = T.createElement("input")).setAttribute("name", ""),
              e.appendChild(t),
              e.querySelectorAll("[name='']").length ||
                d.push("\\[" + ge + "*name" + ge + "*=" + ge + "*(?:''|\"\")");
          }),
          le.cssHas || d.push(":has"),
          (d = d.length && new RegExp(d.join("|"))),
          (l = function (e, t) {
            if (e === t) return (a = !0), 0;
            var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
            return (
              n ||
              (1 &
                (n =
                  (e.ownerDocument || e) == (t.ownerDocument || t)
                    ? e.compareDocumentPosition(t)
                    : 1) ||
              (!le.sortDetached && t.compareDocumentPosition(e) === n)
                ? e === T || (e.ownerDocument == ye && I.contains(ye, e))
                  ? -1
                  : t === T || (t.ownerDocument == ye && I.contains(ye, t))
                  ? 1
                  : o
                  ? se.call(o, e) - se.call(o, t)
                  : 0
                : 4 & n
                ? -1
                : 1)
            );
          })),
        T
      );
    }
    for (e in ((I.matches = function (e, t) {
      return I(e, null, null, t);
    }),
    (I.matchesSelector = function (e, t) {
      if ((V(e), C && !h[t + " "] && (!d || !d.test(t))))
        try {
          var n = i.call(e, t);
          if (
            n ||
            le.disconnectedMatch ||
            (e.document && 11 !== e.document.nodeType)
          )
            return n;
        } catch (e) {
          h(t, !0);
        }
      return 0 < I(t, T, null, [e]).length;
    }),
    (I.contains = function (e, t) {
      return (e.ownerDocument || e) != T && V(e), ce.contains(e, t);
    }),
    (I.attr = function (e, t) {
      (e.ownerDocument || e) != T && V(e);
      var n = b.attrHandle[t.toLowerCase()],
        r = n && ue.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !C) : void 0;
      return void 0 !== r ? r : e.getAttribute(t);
    }),
    (I.error = function (e) {
      throw new Error("Syntax error, unrecognized expression: " + e);
    }),
    (ce.uniqueSort = function (e) {
      var t,
        n = [],
        r = 0,
        i = 0;
      if (
        ((a = !le.sortStable),
        (o = !le.sortStable && ae.call(e, 0)),
        de.call(e, l),
        a)
      ) {
        while ((t = e[i++])) t === e[i] && (r = n.push(i));
        while (r--) he.call(e, n[r], 1);
      }
      return (o = null), e;
    }),
    (ce.fn.uniqueSort = function () {
      return this.pushStack(ce.uniqueSort(ae.apply(this)));
    }),
    ((b = ce.expr =
      {
        cacheLength: 50,
        createPseudo: F,
        match: D,
        attrHandle: {},
        find: {},
        relative: {
          ">": { dir: "parentNode", first: !0 },
          " ": { dir: "parentNode" },
          "+": { dir: "previousSibling", first: !0 },
          "~": { dir: "previousSibling" },
        },
        preFilter: {
          ATTR: function (e) {
            return (
              (e[1] = e[1].replace(O, P)),
              (e[3] = (e[3] || e[4] || e[5] || "").replace(O, P)),
              "~=" === e[2] && (e[3] = " " + e[3] + " "),
              e.slice(0, 4)
            );
          },
          CHILD: function (e) {
            return (
              (e[1] = e[1].toLowerCase()),
              "nth" === e[1].slice(0, 3)
                ? (e[3] || I.error(e[0]),
                  (e[4] = +(e[4]
                    ? e[5] + (e[6] || 1)
                    : 2 * ("even" === e[3] || "odd" === e[3]))),
                  (e[5] = +(e[7] + e[8] || "odd" === e[3])))
                : e[3] && I.error(e[0]),
              e
            );
          },
          PSEUDO: function (e) {
            var t,
              n = !e[6] && e[2];
            return D.CHILD.test(e[0])
              ? null
              : (e[3]
                  ? (e[2] = e[4] || e[5] || "")
                  : n &&
                    j.test(n) &&
                    (t = Y(n, !0)) &&
                    (t = n.indexOf(")", n.length - t) - n.length) &&
                    ((e[0] = e[0].slice(0, t)), (e[2] = n.slice(0, t))),
                e.slice(0, 3));
          },
        },
        filter: {
          TAG: function (e) {
            var t = e.replace(O, P).toLowerCase();
            return "*" === e
              ? function () {
                  return !0;
                }
              : function (e) {
                  return fe(e, t);
                };
          },
          CLASS: function (e) {
            var t = s[e + " "];
            return (
              t ||
              ((t = new RegExp("(^|" + ge + ")" + e + "(" + ge + "|$)")) &&
                s(e, function (e) {
                  return t.test(
                    ("string" == typeof e.className && e.className) ||
                      ("undefined" != typeof e.getAttribute &&
                        e.getAttribute("class")) ||
                      ""
                  );
                }))
            );
          },
          ATTR: function (n, r, i) {
            return function (e) {
              var t = I.attr(e, n);
              return null == t
                ? "!=" === r
                : !r ||
                    ((t += ""),
                    "=" === r
                      ? t === i
                      : "!=" === r
                      ? t !== i
                      : "^=" === r
                      ? i && 0 === t.indexOf(i)
                      : "*=" === r
                      ? i && -1 < t.indexOf(i)
                      : "$=" === r
                      ? i && t.slice(-i.length) === i
                      : "~=" === r
                      ? -1 < (" " + t.replace(v, " ") + " ").indexOf(i)
                      : "|=" === r &&
                        (t === i || t.slice(0, i.length + 1) === i + "-"));
            };
          },
          CHILD: function (d, e, t, h, g) {
            var v = "nth" !== d.slice(0, 3),
              y = "last" !== d.slice(-4),
              m = "of-type" === e;
            return 1 === h && 0 === g
              ? function (e) {
                  return !!e.parentNode;
                }
              : function (e, t, n) {
                  var r,
                    i,
                    o,
                    a,
                    s,
                    u = v !== y ? "nextSibling" : "previousSibling",
                    l = e.parentNode,
                    c = m && e.nodeName.toLowerCase(),
                    f = !n && !m,
                    p = !1;
                  if (l) {
                    if (v) {
                      while (u) {
                        o = e;
                        while ((o = o[u]))
                          if (m ? fe(o, c) : 1 === o.nodeType) return !1;
                        s = u = "only" === d && !s && "nextSibling";
                      }
                      return !0;
                    }
                    if (((s = [y ? l.firstChild : l.lastChild]), y && f)) {
                      (p =
                        (a =
                          (r = (i = l[S] || (l[S] = {}))[d] || [])[0] === E &&
                          r[1]) && r[2]),
                        (o = a && l.childNodes[a]);
                      while ((o = (++a && o && o[u]) || (p = a = 0) || s.pop()))
                        if (1 === o.nodeType && ++p && o === e) {
                          i[d] = [E, a, p];
                          break;
                        }
                    } else if (
                      (f &&
                        (p = a =
                          (r = (i = e[S] || (e[S] = {}))[d] || [])[0] === E &&
                          r[1]),
                      !1 === p)
                    )
                      while ((o = (++a && o && o[u]) || (p = a = 0) || s.pop()))
                        if (
                          (m ? fe(o, c) : 1 === o.nodeType) &&
                          ++p &&
                          (f && ((i = o[S] || (o[S] = {}))[d] = [E, p]),
                          o === e)
                        )
                          break;
                    return (p -= g) === h || (p % h == 0 && 0 <= p / h);
                  }
                };
          },
          PSEUDO: function (e, o) {
            var t,
              a =
                b.pseudos[e] ||
                b.setFilters[e.toLowerCase()] ||
                I.error("unsupported pseudo: " + e);
            return a[S]
              ? a(o)
              : 1 < a.length
              ? ((t = [e, e, "", o]),
                b.setFilters.hasOwnProperty(e.toLowerCase())
                  ? F(function (e, t) {
                      var n,
                        r = a(e, o),
                        i = r.length;
                      while (i--) e[(n = se.call(e, r[i]))] = !(t[n] = r[i]);
                    })
                  : function (e) {
                      return a(e, 0, t);
                    })
              : a;
          },
        },
        pseudos: {
          not: F(function (e) {
            var r = [],
              i = [],
              s = ne(e.replace(ve, "$1"));
            return s[S]
              ? F(function (e, t, n, r) {
                  var i,
                    o = s(e, null, r, []),
                    a = e.length;
                  while (a--) (i = o[a]) && (e[a] = !(t[a] = i));
                })
              : function (e, t, n) {
                  return (r[0] = e), s(r, null, n, i), (r[0] = null), !i.pop();
                };
          }),
          has: F(function (t) {
            return function (e) {
              return 0 < I(t, e).length;
            };
          }),
          contains: F(function (t) {
            return (
              (t = t.replace(O, P)),
              function (e) {
                return -1 < (e.textContent || ce.text(e)).indexOf(t);
              }
            );
          }),
          lang: F(function (n) {
            return (
              A.test(n || "") || I.error("unsupported lang: " + n),
              (n = n.replace(O, P).toLowerCase()),
              function (e) {
                var t;
                do {
                  if (
                    (t = C
                      ? e.lang
                      : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                  )
                    return (
                      (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-")
                    );
                } while ((e = e.parentNode) && 1 === e.nodeType);
                return !1;
              }
            );
          }),
          target: function (e) {
            var t = ie.location && ie.location.hash;
            return t && t.slice(1) === e.id;
          },
          root: function (e) {
            return e === r;
          },
          focus: function (e) {
            return (
              e ===
                (function () {
                  try {
                    return T.activeElement;
                  } catch (e) {}
                })() &&
              T.hasFocus() &&
              !!(e.type || e.href || ~e.tabIndex)
            );
          },
          enabled: z(!1),
          disabled: z(!0),
          checked: function (e) {
            return (
              (fe(e, "input") && !!e.checked) ||
              (fe(e, "option") && !!e.selected)
            );
          },
          selected: function (e) {
            return (
              e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
            );
          },
          empty: function (e) {
            for (e = e.firstChild; e; e = e.nextSibling)
              if (e.nodeType < 6) return !1;
            return !0;
          },
          parent: function (e) {
            return !b.pseudos.empty(e);
          },
          header: function (e) {
            return q.test(e.nodeName);
          },
          input: function (e) {
            return N.test(e.nodeName);
          },
          button: function (e) {
            return (fe(e, "input") && "button" === e.type) || fe(e, "button");
          },
          text: function (e) {
            var t;
            return (
              fe(e, "input") &&
              "text" === e.type &&
              (null == (t = e.getAttribute("type")) ||
                "text" === t.toLowerCase())
            );
          },
          first: X(function () {
            return [0];
          }),
          last: X(function (e, t) {
            return [t - 1];
          }),
          eq: X(function (e, t, n) {
            return [n < 0 ? n + t : n];
          }),
          even: X(function (e, t) {
            for (var n = 0; n < t; n += 2) e.push(n);
            return e;
          }),
          odd: X(function (e, t) {
            for (var n = 1; n < t; n += 2) e.push(n);
            return e;
          }),
          lt: X(function (e, t, n) {
            var r;
            for (r = n < 0 ? n + t : t < n ? t : n; 0 <= --r; ) e.push(r);
            return e;
          }),
          gt: X(function (e, t, n) {
            for (var r = n < 0 ? n + t : n; ++r < t; ) e.push(r);
            return e;
          }),
        },
      }).pseudos.nth = b.pseudos.eq),
    { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
      b.pseudos[e] = B(e);
    for (e in { submit: !0, reset: !0 }) b.pseudos[e] = _(e);
    function G() {}
    function Y(e, t) {
      var n,
        r,
        i,
        o,
        a,
        s,
        u,
        l = c[e + " "];
      if (l) return t ? 0 : l.slice(0);
      (a = e), (s = []), (u = b.preFilter);
      while (a) {
        for (o in ((n && !(r = y.exec(a))) ||
          (r && (a = a.slice(r[0].length) || a), s.push((i = []))),
        (n = !1),
        (r = m.exec(a)) &&
          ((n = r.shift()),
          i.push({ value: n, type: r[0].replace(ve, " ") }),
          (a = a.slice(n.length))),
        b.filter))
          !(r = D[o].exec(a)) ||
            (u[o] && !(r = u[o](r))) ||
            ((n = r.shift()),
            i.push({ value: n, type: o, matches: r }),
            (a = a.slice(n.length)));
        if (!n) break;
      }
      return t ? a.length : a ? I.error(e) : c(e, s).slice(0);
    }
    function Q(e) {
      for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value;
      return r;
    }
    function J(a, e, t) {
      var s = e.dir,
        u = e.next,
        l = u || s,
        c = t && "parentNode" === l,
        f = n++;
      return e.first
        ? function (e, t, n) {
            while ((e = e[s])) if (1 === e.nodeType || c) return a(e, t, n);
            return !1;
          }
        : function (e, t, n) {
            var r,
              i,
              o = [E, f];
            if (n) {
              while ((e = e[s]))
                if ((1 === e.nodeType || c) && a(e, t, n)) return !0;
            } else
              while ((e = e[s]))
                if (1 === e.nodeType || c)
                  if (((i = e[S] || (e[S] = {})), u && fe(e, u))) e = e[s] || e;
                  else {
                    if ((r = i[l]) && r[0] === E && r[1] === f)
                      return (o[2] = r[2]);
                    if (((i[l] = o)[2] = a(e, t, n))) return !0;
                  }
            return !1;
          };
    }
    function K(i) {
      return 1 < i.length
        ? function (e, t, n) {
            var r = i.length;
            while (r--) if (!i[r](e, t, n)) return !1;
            return !0;
          }
        : i[0];
    }
    function Z(e, t, n, r, i) {
      for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)
        (o = e[s]) && ((n && !n(o, r, i)) || (a.push(o), l && t.push(s)));
      return a;
    }
    function ee(d, h, g, v, y, e) {
      return (
        v && !v[S] && (v = ee(v)),
        y && !y[S] && (y = ee(y, e)),
        F(function (e, t, n, r) {
          var i,
            o,
            a,
            s,
            u = [],
            l = [],
            c = t.length,
            f =
              e ||
              (function (e, t, n) {
                for (var r = 0, i = t.length; r < i; r++) I(e, t[r], n);
                return n;
              })(h || "*", n.nodeType ? [n] : n, []),
            p = !d || (!e && h) ? f : Z(f, u, d, n, r);
          if (
            (g ? g(p, (s = y || (e ? d : c || v) ? [] : t), n, r) : (s = p), v)
          ) {
            (i = Z(s, l)), v(i, [], n, r), (o = i.length);
            while (o--) (a = i[o]) && (s[l[o]] = !(p[l[o]] = a));
          }
          if (e) {
            if (y || d) {
              if (y) {
                (i = []), (o = s.length);
                while (o--) (a = s[o]) && i.push((p[o] = a));
                y(null, (s = []), i, r);
              }
              o = s.length;
              while (o--)
                (a = s[o]) &&
                  -1 < (i = y ? se.call(e, a) : u[o]) &&
                  (e[i] = !(t[i] = a));
            }
          } else (s = Z(s === t ? s.splice(c, s.length) : s)), y ? y(null, t, s, r) : k.apply(t, s);
        })
      );
    }
    function te(e) {
      for (
        var i,
          t,
          n,
          r = e.length,
          o = b.relative[e[0].type],
          a = o || b.relative[" "],
          s = o ? 1 : 0,
          u = J(
            function (e) {
              return e === i;
            },
            a,
            !0
          ),
          l = J(
            function (e) {
              return -1 < se.call(i, e);
            },
            a,
            !0
          ),
          c = [
            function (e, t, n) {
              var r =
                (!o && (n || t != w)) ||
                ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
              return (i = null), r;
            },
          ];
        s < r;
        s++
      )
        if ((t = b.relative[e[s].type])) c = [J(K(c), t)];
        else {
          if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
            for (n = ++s; n < r; n++) if (b.relative[e[n].type]) break;
            return ee(
              1 < s && K(c),
              1 < s &&
                Q(
                  e
                    .slice(0, s - 1)
                    .concat({ value: " " === e[s - 2].type ? "*" : "" })
                ).replace(ve, "$1"),
              t,
              s < n && te(e.slice(s, n)),
              n < r && te((e = e.slice(n))),
              n < r && Q(e)
            );
          }
          c.push(t);
        }
      return K(c);
    }
    function ne(e, t) {
      var n,
        v,
        y,
        m,
        x,
        r,
        i = [],
        o = [],
        a = u[e + " "];
      if (!a) {
        t || (t = Y(e)), (n = t.length);
        while (n--) (a = te(t[n]))[S] ? i.push(a) : o.push(a);
        (a = u(
          e,
          ((v = o),
          (m = 0 < (y = i).length),
          (x = 0 < v.length),
          (r = function (e, t, n, r, i) {
            var o,
              a,
              s,
              u = 0,
              l = "0",
              c = e && [],
              f = [],
              p = w,
              d = e || (x && b.find.TAG("*", i)),
              h = (E += null == p ? 1 : Math.random() || 0.1),
              g = d.length;
            for (
              i && (w = t == T || t || i);
              l !== g && null != (o = d[l]);
              l++
            ) {
              if (x && o) {
                (a = 0), t || o.ownerDocument == T || (V(o), (n = !C));
                while ((s = v[a++]))
                  if (s(o, t || T, n)) {
                    k.call(r, o);
                    break;
                  }
                i && (E = h);
              }
              m && ((o = !s && o) && u--, e && c.push(o));
            }
            if (((u += l), m && l !== u)) {
              a = 0;
              while ((s = y[a++])) s(c, f, t, n);
              if (e) {
                if (0 < u) while (l--) c[l] || f[l] || (f[l] = pe.call(r));
                f = Z(f);
              }
              k.apply(r, f),
                i && !e && 0 < f.length && 1 < u + y.length && ce.uniqueSort(r);
            }
            return i && ((E = h), (w = p)), c;
          }),
          m ? F(r) : r)
        )).selector = e;
      }
      return a;
    }
    function re(e, t, n, r) {
      var i,
        o,
        a,
        s,
        u,
        l = "function" == typeof e && e,
        c = !r && Y((e = l.selector || e));
      if (((n = n || []), 1 === c.length)) {
        if (
          2 < (o = c[0] = c[0].slice(0)).length &&
          "ID" === (a = o[0]).type &&
          9 === t.nodeType &&
          C &&
          b.relative[o[1].type]
        ) {
          if (!(t = (b.find.ID(a.matches[0].replace(O, P), t) || [])[0]))
            return n;
          l && (t = t.parentNode), (e = e.slice(o.shift().value.length));
        }
        i = D.needsContext.test(e) ? 0 : o.length;
        while (i--) {
          if (((a = o[i]), b.relative[(s = a.type)])) break;
          if (
            (u = b.find[s]) &&
            (r = u(
              a.matches[0].replace(O, P),
              (H.test(o[0].type) && U(t.parentNode)) || t
            ))
          ) {
            if ((o.splice(i, 1), !(e = r.length && Q(o))))
              return k.apply(n, r), n;
            break;
          }
        }
      }
      return (
        (l || ne(e, c))(r, t, !C, n, !t || (H.test(e) && U(t.parentNode)) || t),
        n
      );
    }
    (G.prototype = b.filters = b.pseudos),
      (b.setFilters = new G()),
      (le.sortStable = S.split("").sort(l).join("") === S),
      V(),
      (le.sortDetached = $(function (e) {
        return 1 & e.compareDocumentPosition(T.createElement("fieldset"));
      })),
      (ce.find = I),
      (ce.expr[":"] = ce.expr.pseudos),
      (ce.unique = ce.uniqueSort),
      (I.compile = ne),
      (I.select = re),
      (I.setDocument = V),
      (I.tokenize = Y),
      (I.escape = ce.escapeSelector),
      (I.getText = ce.text),
      (I.isXML = ce.isXMLDoc),
      (I.selectors = ce.expr),
      (I.support = ce.support),
      (I.uniqueSort = ce.uniqueSort);
  })();
  var d = function (e, t, n) {
      var r = [],
        i = void 0 !== n;
      while ((e = e[t]) && 9 !== e.nodeType)
        if (1 === e.nodeType) {
          if (i && ce(e).is(n)) break;
          r.push(e);
        }
      return r;
    },
    h = function (e, t) {
      for (var n = []; e; e = e.nextSibling)
        1 === e.nodeType && e !== t && n.push(e);
      return n;
    },
    b = ce.expr.match.needsContext,
    w = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
  function T(e, n, r) {
    return v(n)
      ? ce.grep(e, function (e, t) {
          return !!n.call(e, t, e) !== r;
        })
      : n.nodeType
      ? ce.grep(e, function (e) {
          return (e === n) !== r;
        })
      : "string" != typeof n
      ? ce.grep(e, function (e) {
          return -1 < se.call(n, e) !== r;
        })
      : ce.filter(n, e, r);
  }
  (ce.filter = function (e, t, n) {
    var r = t[0];
    return (
      n && (e = ":not(" + e + ")"),
      1 === t.length && 1 === r.nodeType
        ? ce.find.matchesSelector(r, e)
          ? [r]
          : []
        : ce.find.matches(
            e,
            ce.grep(t, function (e) {
              return 1 === e.nodeType;
            })
          )
    );
  }),
    ce.fn.extend({
      find: function (e) {
        var t,
          n,
          r = this.length,
          i = this;
        if ("string" != typeof e)
          return this.pushStack(
            ce(e).filter(function () {
              for (t = 0; t < r; t++) if (ce.contains(i[t], this)) return !0;
            })
          );
        for (n = this.pushStack([]), t = 0; t < r; t++) ce.find(e, i[t], n);
        return 1 < r ? ce.uniqueSort(n) : n;
      },
      filter: function (e) {
        return this.pushStack(T(this, e || [], !1));
      },
      not: function (e) {
        return this.pushStack(T(this, e || [], !0));
      },
      is: function (e) {
        return !!T(
          this,
          "string" == typeof e && b.test(e) ? ce(e) : e || [],
          !1
        ).length;
      },
    });
  var k,
    S = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
  ((ce.fn.init = function (e, t, n) {
    var r, i;
    if (!e) return this;
    if (((n = n || k), "string" == typeof e)) {
      if (
        !(r =
          "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length
            ? [null, e, null]
            : S.exec(e)) ||
        (!r[1] && t)
      )
        return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
      if (r[1]) {
        if (
          ((t = t instanceof ce ? t[0] : t),
          ce.merge(
            this,
            ce.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : C, !0)
          ),
          w.test(r[1]) && ce.isPlainObject(t))
        )
          for (r in t) v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
        return this;
      }
      return (
        (i = C.getElementById(r[2])) && ((this[0] = i), (this.length = 1)), this
      );
    }
    return e.nodeType
      ? ((this[0] = e), (this.length = 1), this)
      : v(e)
      ? void 0 !== n.ready
        ? n.ready(e)
        : e(ce)
      : ce.makeArray(e, this);
  }).prototype = ce.fn),
    (k = ce(C));
  var E = /^(?:parents|prev(?:Until|All))/,
    j = { children: !0, contents: !0, next: !0, prev: !0 };
  function A(e, t) {
    while ((e = e[t]) && 1 !== e.nodeType);
    return e;
  }
  ce.fn.extend({
    has: function (e) {
      var t = ce(e, this),
        n = t.length;
      return this.filter(function () {
        for (var e = 0; e < n; e++) if (ce.contains(this, t[e])) return !0;
      });
    },
    closest: function (e, t) {
      var n,
        r = 0,
        i = this.length,
        o = [],
        a = "string" != typeof e && ce(e);
      if (!b.test(e))
        for (; r < i; r++)
          for (n = this[r]; n && n !== t; n = n.parentNode)
            if (
              n.nodeType < 11 &&
              (a
                ? -1 < a.index(n)
                : 1 === n.nodeType && ce.find.matchesSelector(n, e))
            ) {
              o.push(n);
              break;
            }
      return this.pushStack(1 < o.length ? ce.uniqueSort(o) : o);
    },
    index: function (e) {
      return e
        ? "string" == typeof e
          ? se.call(ce(e), this[0])
          : se.call(this, e.jquery ? e[0] : e)
        : this[0] && this[0].parentNode
        ? this.first().prevAll().length
        : -1;
    },
    add: function (e, t) {
      return this.pushStack(ce.uniqueSort(ce.merge(this.get(), ce(e, t))));
    },
    addBack: function (e) {
      return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
    },
  }),
    ce.each(
      {
        parent: function (e) {
          var t = e.parentNode;
          return t && 11 !== t.nodeType ? t : null;
        },
        parents: function (e) {
          return d(e, "parentNode");
        },
        parentsUntil: function (e, t, n) {
          return d(e, "parentNode", n);
        },
        next: function (e) {
          return A(e, "nextSibling");
        },
        prev: function (e) {
          return A(e, "previousSibling");
        },
        nextAll: function (e) {
          return d(e, "nextSibling");
        },
        prevAll: function (e) {
          return d(e, "previousSibling");
        },
        nextUntil: function (e, t, n) {
          return d(e, "nextSibling", n);
        },
        prevUntil: function (e, t, n) {
          return d(e, "previousSibling", n);
        },
        siblings: function (e) {
          return h((e.parentNode || {}).firstChild, e);
        },
        children: function (e) {
          return h(e.firstChild);
        },
        contents: function (e) {
          return null != e.contentDocument && r(e.contentDocument)
            ? e.contentDocument
            : (fe(e, "template") && (e = e.content || e),
              ce.merge([], e.childNodes));
        },
      },
      function (r, i) {
        ce.fn[r] = function (e, t) {
          var n = ce.map(this, i, e);
          return (
            "Until" !== r.slice(-5) && (t = e),
            t && "string" == typeof t && (n = ce.filter(t, n)),
            1 < this.length &&
              (j[r] || ce.uniqueSort(n), E.test(r) && n.reverse()),
            this.pushStack(n)
          );
        };
      }
    );
  var D = /[^\x20\t\r\n\f]+/g;
  function N(e) {
    return e;
  }
  function q(e) {
    throw e;
  }
  function L(e, t, n, r) {
    var i;
    try {
      e && v((i = e.promise))
        ? i.call(e).done(t).fail(n)
        : e && v((i = e.then))
        ? i.call(e, t, n)
        : t.apply(void 0, [e].slice(r));
    } catch (e) {
      n.apply(void 0, [e]);
    }
  }
  (ce.Callbacks = function (r) {
    var e, n;
    r =
      "string" == typeof r
        ? ((e = r),
          (n = {}),
          ce.each(e.match(D) || [], function (e, t) {
            n[t] = !0;
          }),
          n)
        : ce.extend({}, r);
    var i,
      t,
      o,
      a,
      s = [],
      u = [],
      l = -1,
      c = function () {
        for (a = a || r.once, o = i = !0; u.length; l = -1) {
          t = u.shift();
          while (++l < s.length)
            !1 === s[l].apply(t[0], t[1]) &&
              r.stopOnFalse &&
              ((l = s.length), (t = !1));
        }
        r.memory || (t = !1), (i = !1), a && (s = t ? [] : "");
      },
      f = {
        add: function () {
          return (
            s &&
              (t && !i && ((l = s.length - 1), u.push(t)),
              (function n(e) {
                ce.each(e, function (e, t) {
                  v(t)
                    ? (r.unique && f.has(t)) || s.push(t)
                    : t && t.length && "string" !== x(t) && n(t);
                });
              })(arguments),
              t && !i && c()),
            this
          );
        },
        remove: function () {
          return (
            ce.each(arguments, function (e, t) {
              var n;
              while (-1 < (n = ce.inArray(t, s, n)))
                s.splice(n, 1), n <= l && l--;
            }),
            this
          );
        },
        has: function (e) {
          return e ? -1 < ce.inArray(e, s) : 0 < s.length;
        },
        empty: function () {
          return s && (s = []), this;
        },
        disable: function () {
          return (a = u = []), (s = t = ""), this;
        },
        disabled: function () {
          return !s;
        },
        lock: function () {
          return (a = u = []), t || i || (s = t = ""), this;
        },
        locked: function () {
          return !!a;
        },
        fireWith: function (e, t) {
          return (
            a ||
              ((t = [e, (t = t || []).slice ? t.slice() : t]),
              u.push(t),
              i || c()),
            this
          );
        },
        fire: function () {
          return f.fireWith(this, arguments), this;
        },
        fired: function () {
          return !!o;
        },
      };
    return f;
  }),
    ce.extend({
      Deferred: function (e) {
        var o = [
            [
              "notify",
              "progress",
              ce.Callbacks("memory"),
              ce.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              ce.Callbacks("once memory"),
              ce.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              ce.Callbacks("once memory"),
              ce.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          i = "pending",
          a = {
            state: function () {
              return i;
            },
            always: function () {
              return s.done(arguments).fail(arguments), this;
            },
            catch: function (e) {
              return a.then(null, e);
            },
            pipe: function () {
              var i = arguments;
              return ce
                .Deferred(function (r) {
                  ce.each(o, function (e, t) {
                    var n = v(i[t[4]]) && i[t[4]];
                    s[t[1]](function () {
                      var e = n && n.apply(this, arguments);
                      e && v(e.promise)
                        ? e
                            .promise()
                            .progress(r.notify)
                            .done(r.resolve)
                            .fail(r.reject)
                        : r[t[0] + "With"](this, n ? [e] : arguments);
                    });
                  }),
                    (i = null);
                })
                .promise();
            },
            then: function (t, n, r) {
              var u = 0;
              function l(i, o, a, s) {
                return function () {
                  var n = this,
                    r = arguments,
                    e = function () {
                      var e, t;
                      if (!(i < u)) {
                        if ((e = a.apply(n, r)) === o.promise())
                          throw new TypeError("Thenable self-resolution");
                        (t =
                          e &&
                          ("object" == typeof e || "function" == typeof e) &&
                          e.then),
                          v(t)
                            ? s
                              ? t.call(e, l(u, o, N, s), l(u, o, q, s))
                              : (u++,
                                t.call(
                                  e,
                                  l(u, o, N, s),
                                  l(u, o, q, s),
                                  l(u, o, N, o.notifyWith)
                                ))
                            : (a !== N && ((n = void 0), (r = [e])),
                              (s || o.resolveWith)(n, r));
                      }
                    },
                    t = s
                      ? e
                      : function () {
                          try {
                            e();
                          } catch (e) {
                            ce.Deferred.exceptionHook &&
                              ce.Deferred.exceptionHook(e, t.error),
                              u <= i + 1 &&
                                (a !== q && ((n = void 0), (r = [e])),
                                o.rejectWith(n, r));
                          }
                        };
                  i
                    ? t()
                    : (ce.Deferred.getErrorHook
                        ? (t.error = ce.Deferred.getErrorHook())
                        : ce.Deferred.getStackHook &&
                          (t.error = ce.Deferred.getStackHook()),
                      ie.setTimeout(t));
                };
              }
              return ce
                .Deferred(function (e) {
                  o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)),
                    o[1][3].add(l(0, e, v(t) ? t : N)),
                    o[2][3].add(l(0, e, v(n) ? n : q));
                })
                .promise();
            },
            promise: function (e) {
              return null != e ? ce.extend(e, a) : a;
            },
          },
          s = {};
        return (
          ce.each(o, function (e, t) {
            var n = t[2],
              r = t[5];
            (a[t[1]] = n.add),
              r &&
                n.add(
                  function () {
                    i = r;
                  },
                  o[3 - e][2].disable,
                  o[3 - e][3].disable,
                  o[0][2].lock,
                  o[0][3].lock
                ),
              n.add(t[3].fire),
              (s[t[0]] = function () {
                return (
                  s[t[0] + "With"](this === s ? void 0 : this, arguments), this
                );
              }),
              (s[t[0] + "With"] = n.fireWith);
          }),
          a.promise(s),
          e && e.call(s, s),
          s
        );
      },
      when: function (e) {
        var n = arguments.length,
          t = n,
          r = Array(t),
          i = ae.call(arguments),
          o = ce.Deferred(),
          a = function (t) {
            return function (e) {
              (r[t] = this),
                (i[t] = 1 < arguments.length ? ae.call(arguments) : e),
                --n || o.resolveWith(r, i);
            };
          };
        if (
          n <= 1 &&
          (L(e, o.done(a(t)).resolve, o.reject, !n),
          "pending" === o.state() || v(i[t] && i[t].then))
        )
          return o.then();
        while (t--) L(i[t], a(t), o.reject);
        return o.promise();
      },
    });
  var H = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  (ce.Deferred.exceptionHook = function (e, t) {
    ie.console &&
      ie.console.warn &&
      e &&
      H.test(e.name) &&
      ie.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
  }),
    (ce.readyException = function (e) {
      ie.setTimeout(function () {
        throw e;
      });
    });
  var O = ce.Deferred();
  function P() {
    C.removeEventListener("DOMContentLoaded", P),
      ie.removeEventListener("load", P),
      ce.ready();
  }
  (ce.fn.ready = function (e) {
    return (
      O.then(e)["catch"](function (e) {
        ce.readyException(e);
      }),
      this
    );
  }),
    ce.extend({
      isReady: !1,
      readyWait: 1,
      ready: function (e) {
        (!0 === e ? --ce.readyWait : ce.isReady) ||
          ((ce.isReady = !0) !== e && 0 < --ce.readyWait) ||
          O.resolveWith(C, [ce]);
      },
    }),
    (ce.ready.then = O.then),
    "complete" === C.readyState ||
    ("loading" !== C.readyState && !C.documentElement.doScroll)
      ? ie.setTimeout(ce.ready)
      : (C.addEventListener("DOMContentLoaded", P),
        ie.addEventListener("load", P));
  var M = function (e, t, n, r, i, o, a) {
      var s = 0,
        u = e.length,
        l = null == n;
      if ("object" === x(n))
        for (s in ((i = !0), n)) M(e, t, s, n[s], !0, o, a);
      else if (
        void 0 !== r &&
        ((i = !0),
        v(r) || (a = !0),
        l &&
          (a
            ? (t.call(e, r), (t = null))
            : ((l = t),
              (t = function (e, t, n) {
                return l.call(ce(e), n);
              }))),
        t)
      )
        for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
      return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;
    },
    R = /^-ms-/,
    I = /-([a-z])/g;
  function W(e, t) {
    return t.toUpperCase();
  }
  function F(e) {
    return e.replace(R, "ms-").replace(I, W);
  }
  var $ = function (e) {
    return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
  };
  function B() {
    this.expando = ce.expando + B.uid++;
  }
  (B.uid = 1),
    (B.prototype = {
      cache: function (e) {
        var t = e[this.expando];
        return (
          t ||
            ((t = {}),
            $(e) &&
              (e.nodeType
                ? (e[this.expando] = t)
                : Object.defineProperty(e, this.expando, {
                    value: t,
                    configurable: !0,
                  }))),
          t
        );
      },
      set: function (e, t, n) {
        var r,
          i = this.cache(e);
        if ("string" == typeof t) i[F(t)] = n;
        else for (r in t) i[F(r)] = t[r];
        return i;
      },
      get: function (e, t) {
        return void 0 === t
          ? this.cache(e)
          : e[this.expando] && e[this.expando][F(t)];
      },
      access: function (e, t, n) {
        return void 0 === t || (t && "string" == typeof t && void 0 === n)
          ? this.get(e, t)
          : (this.set(e, t, n), void 0 !== n ? n : t);
      },
      remove: function (e, t) {
        var n,
          r = e[this.expando];
        if (void 0 !== r) {
          if (void 0 !== t) {
            n = (t = Array.isArray(t)
              ? t.map(F)
              : (t = F(t)) in r
              ? [t]
              : t.match(D) || []).length;
            while (n--) delete r[t[n]];
          }
          (void 0 === t || ce.isEmptyObject(r)) &&
            (e.nodeType ? (e[this.expando] = void 0) : delete e[this.expando]);
        }
      },
      hasData: function (e) {
        var t = e[this.expando];
        return void 0 !== t && !ce.isEmptyObject(t);
      },
    });
  var _ = new B(),
    z = new B(),
    X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    U = /[A-Z]/g;
  function V(e, t, n) {
    var r, i;
    if (void 0 === n && 1 === e.nodeType)
      if (
        ((r = "data-" + t.replace(U, "-$&").toLowerCase()),
        "string" == typeof (n = e.getAttribute(r)))
      ) {
        try {
          n =
            "true" === (i = n) ||
            ("false" !== i &&
              ("null" === i
                ? null
                : i === +i + ""
                ? +i
                : X.test(i)
                ? JSON.parse(i)
                : i));
        } catch (e) {}
        z.set(e, t, n);
      } else n = void 0;
    return n;
  }
  ce.extend({
    hasData: function (e) {
      return z.hasData(e) || _.hasData(e);
    },
    data: function (e, t, n) {
      return z.access(e, t, n);
    },
    removeData: function (e, t) {
      z.remove(e, t);
    },
    _data: function (e, t, n) {
      return _.access(e, t, n);
    },
    _removeData: function (e, t) {
      _.remove(e, t);
    },
  }),
    ce.fn.extend({
      data: function (n, e) {
        var t,
          r,
          i,
          o = this[0],
          a = o && o.attributes;
        if (void 0 === n) {
          if (
            this.length &&
            ((i = z.get(o)), 1 === o.nodeType && !_.get(o, "hasDataAttrs"))
          ) {
            t = a.length;
            while (t--)
              a[t] &&
                0 === (r = a[t].name).indexOf("data-") &&
                ((r = F(r.slice(5))), V(o, r, i[r]));
            _.set(o, "hasDataAttrs", !0);
          }
          return i;
        }
        return "object" == typeof n
          ? this.each(function () {
              z.set(this, n);
            })
          : M(
              this,
              function (e) {
                var t;
                if (o && void 0 === e)
                  return void 0 !== (t = z.get(o, n))
                    ? t
                    : void 0 !== (t = V(o, n))
                    ? t
                    : void 0;
                this.each(function () {
                  z.set(this, n, e);
                });
              },
              null,
              e,
              1 < arguments.length,
              null,
              !0
            );
      },
      removeData: function (e) {
        return this.each(function () {
          z.remove(this, e);
        });
      },
    }),
    ce.extend({
      queue: function (e, t, n) {
        var r;
        if (e)
          return (
            (t = (t || "fx") + "queue"),
            (r = _.get(e, t)),
            n &&
              (!r || Array.isArray(n)
                ? (r = _.access(e, t, ce.makeArray(n)))
                : r.push(n)),
            r || []
          );
      },
      dequeue: function (e, t) {
        t = t || "fx";
        var n = ce.queue(e, t),
          r = n.length,
          i = n.shift(),
          o = ce._queueHooks(e, t);
        "inprogress" === i && ((i = n.shift()), r--),
          i &&
            ("fx" === t && n.unshift("inprogress"),
            delete o.stop,
            i.call(
              e,
              function () {
                ce.dequeue(e, t);
              },
              o
            )),
          !r && o && o.empty.fire();
      },
      _queueHooks: function (e, t) {
        var n = t + "queueHooks";
        return (
          _.get(e, n) ||
          _.access(e, n, {
            empty: ce.Callbacks("once memory").add(function () {
              _.remove(e, [t + "queue", n]);
            }),
          })
        );
      },
    }),
    ce.fn.extend({
      queue: function (t, n) {
        var e = 2;
        return (
          "string" != typeof t && ((n = t), (t = "fx"), e--),
          arguments.length < e
            ? ce.queue(this[0], t)
            : void 0 === n
            ? this
            : this.each(function () {
                var e = ce.queue(this, t, n);
                ce._queueHooks(this, t),
                  "fx" === t && "inprogress" !== e[0] && ce.dequeue(this, t);
              })
        );
      },
      dequeue: function (e) {
        return this.each(function () {
          ce.dequeue(this, e);
        });
      },
      clearQueue: function (e) {
        return this.queue(e || "fx", []);
      },
      promise: function (e, t) {
        var n,
          r = 1,
          i = ce.Deferred(),
          o = this,
          a = this.length,
          s = function () {
            --r || i.resolveWith(o, [o]);
          };
        "string" != typeof e && ((t = e), (e = void 0)), (e = e || "fx");
        while (a--)
          (n = _.get(o[a], e + "queueHooks")) &&
            n.empty &&
            (r++, n.empty.add(s));
        return s(), i.promise(t);
      },
    });
  var G = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    Y = new RegExp("^(?:([+-])=|)(" + G + ")([a-z%]*)$", "i"),
    Q = ["Top", "Right", "Bottom", "Left"],
    J = C.documentElement,
    K = function (e) {
      return ce.contains(e.ownerDocument, e);
    },
    Z = { composed: !0 };
  J.getRootNode &&
    (K = function (e) {
      return (
        ce.contains(e.ownerDocument, e) || e.getRootNode(Z) === e.ownerDocument
      );
    });
  var ee = function (e, t) {
    return (
      "none" === (e = t || e).style.display ||
      ("" === e.style.display && K(e) && "none" === ce.css(e, "display"))
    );
  };
  function te(e, t, n, r) {
    var i,
      o,
      a = 20,
      s = r
        ? function () {
            return r.cur();
          }
        : function () {
            return ce.css(e, t, "");
          },
      u = s(),
      l = (n && n[3]) || (ce.cssNumber[t] ? "" : "px"),
      c =
        e.nodeType &&
        (ce.cssNumber[t] || ("px" !== l && +u)) &&
        Y.exec(ce.css(e, t));
    if (c && c[3] !== l) {
      (u /= 2), (l = l || c[3]), (c = +u || 1);
      while (a--)
        ce.style(e, t, c + l),
          (1 - o) * (1 - (o = s() / u || 0.5)) <= 0 && (a = 0),
          (c /= o);
      (c *= 2), ce.style(e, t, c + l), (n = n || []);
    }
    return (
      n &&
        ((c = +c || +u || 0),
        (i = n[1] ? c + (n[1] + 1) * n[2] : +n[2]),
        r && ((r.unit = l), (r.start = c), (r.end = i))),
      i
    );
  }
  var ne = {};
  function re(e, t) {
    for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)
      (r = e[c]).style &&
        ((n = r.style.display),
        t
          ? ("none" === n &&
              ((l[c] = _.get(r, "display") || null),
              l[c] || (r.style.display = "")),
            "" === r.style.display &&
              ee(r) &&
              (l[c] =
                ((u = a = o = void 0),
                (a = (i = r).ownerDocument),
                (s = i.nodeName),
                (u = ne[s]) ||
                  ((o = a.body.appendChild(a.createElement(s))),
                  (u = ce.css(o, "display")),
                  o.parentNode.removeChild(o),
                  "none" === u && (u = "block"),
                  (ne[s] = u)))))
          : "none" !== n && ((l[c] = "none"), _.set(r, "display", n)));
    for (c = 0; c < f; c++) null != l[c] && (e[c].style.display = l[c]);
    return e;
  }
  ce.fn.extend({
    show: function () {
      return re(this, !0);
    },
    hide: function () {
      return re(this);
    },
    toggle: function (e) {
      return "boolean" == typeof e
        ? e
          ? this.show()
          : this.hide()
        : this.each(function () {
            ee(this) ? ce(this).show() : ce(this).hide();
          });
    },
  });
  var xe,
    be,
    we = /^(?:checkbox|radio)$/i,
    Te = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
    Ce = /^$|^module$|\/(?:java|ecma)script/i;
  (xe = C.createDocumentFragment().appendChild(C.createElement("div"))),
    (be = C.createElement("input")).setAttribute("type", "radio"),
    be.setAttribute("checked", "checked"),
    be.setAttribute("name", "t"),
    xe.appendChild(be),
    (le.checkClone = xe.cloneNode(!0).cloneNode(!0).lastChild.checked),
    (xe.innerHTML = "<textarea>x</textarea>"),
    (le.noCloneChecked = !!xe.cloneNode(!0).lastChild.defaultValue),
    (xe.innerHTML = "<option></option>"),
    (le.option = !!xe.lastChild);
  var ke = {
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""],
  };
  function Se(e, t) {
    var n;
    return (
      (n =
        "undefined" != typeof e.getElementsByTagName
          ? e.getElementsByTagName(t || "*")
          : "undefined" != typeof e.querySelectorAll
          ? e.querySelectorAll(t || "*")
          : []),
      void 0 === t || (t && fe(e, t)) ? ce.merge([e], n) : n
    );
  }
  function Ee(e, t) {
    for (var n = 0, r = e.length; n < r; n++)
      _.set(e[n], "globalEval", !t || _.get(t[n], "globalEval"));
  }
  (ke.tbody = ke.tfoot = ke.colgroup = ke.caption = ke.thead),
    (ke.th = ke.td),
    le.option ||
      (ke.optgroup = ke.option =
        [1, "<select multiple='multiple'>", "</select>"]);
  var je = /<|&#?\w+;/;
  function Ae(e, t, n, r, i) {
    for (
      var o,
        a,
        s,
        u,
        l,
        c,
        f = t.createDocumentFragment(),
        p = [],
        d = 0,
        h = e.length;
      d < h;
      d++
    )
      if ((o = e[d]) || 0 === o)
        if ("object" === x(o)) ce.merge(p, o.nodeType ? [o] : o);
        else if (je.test(o)) {
          (a = a || f.appendChild(t.createElement("div"))),
            (s = (Te.exec(o) || ["", ""])[1].toLowerCase()),
            (u = ke[s] || ke._default),
            (a.innerHTML = u[1] + ce.htmlPrefilter(o) + u[2]),
            (c = u[0]);
          while (c--) a = a.lastChild;
          ce.merge(p, a.childNodes), ((a = f.firstChild).textContent = "");
        } else p.push(t.createTextNode(o));
    (f.textContent = ""), (d = 0);
    while ((o = p[d++]))
      if (r && -1 < ce.inArray(o, r)) i && i.push(o);
      else if (
        ((l = K(o)), (a = Se(f.appendChild(o), "script")), l && Ee(a), n)
      ) {
        c = 0;
        while ((o = a[c++])) Ce.test(o.type || "") && n.push(o);
      }
    return f;
  }
  var De = /^([^.]*)(?:\.(.+)|)/;
  function Ne() {
    return !0;
  }
  function qe() {
    return !1;
  }
  function Le(e, t, n, r, i, o) {
    var a, s;
    if ("object" == typeof t) {
      for (s in ("string" != typeof n && ((r = r || n), (n = void 0)), t))
        Le(e, s, n, r, t[s], o);
      return e;
    }
    if (
      (null == r && null == i
        ? ((i = n), (r = n = void 0))
        : null == i &&
          ("string" == typeof n
            ? ((i = r), (r = void 0))
            : ((i = r), (r = n), (n = void 0))),
      !1 === i)
    )
      i = qe;
    else if (!i) return e;
    return (
      1 === o &&
        ((a = i),
        ((i = function (e) {
          return ce().off(e), a.apply(this, arguments);
        }).guid = a.guid || (a.guid = ce.guid++))),
      e.each(function () {
        ce.event.add(this, t, i, r, n);
      })
    );
  }
  function He(e, r, t) {
    t
      ? (_.set(e, r, !1),
        ce.event.add(e, r, {
          namespace: !1,
          handler: function (e) {
            var t,
              n = _.get(this, r);
            if (1 & e.isTrigger && this[r]) {
              if (n)
                (ce.event.special[r] || {}).delegateType && e.stopPropagation();
              else if (
                ((n = ae.call(arguments)),
                _.set(this, r, n),
                this[r](),
                (t = _.get(this, r)),
                _.set(this, r, !1),
                n !== t)
              )
                return e.stopImmediatePropagation(), e.preventDefault(), t;
            } else
              n &&
                (_.set(this, r, ce.event.trigger(n[0], n.slice(1), this)),
                e.stopPropagation(),
                (e.isImmediatePropagationStopped = Ne));
          },
        }))
      : void 0 === _.get(e, r) && ce.event.add(e, r, Ne);
  }
  (ce.event = {
    global: {},
    add: function (t, e, n, r, i) {
      var o,
        a,
        s,
        u,
        l,
        c,
        f,
        p,
        d,
        h,
        g,
        v = _.get(t);
      if ($(t)) {
        n.handler && ((n = (o = n).handler), (i = o.selector)),
          i && ce.find.matchesSelector(J, i),
          n.guid || (n.guid = ce.guid++),
          (u = v.events) || (u = v.events = Object.create(null)),
          (a = v.handle) ||
            (a = v.handle =
              function (e) {
                return "undefined" != typeof ce && ce.event.triggered !== e.type
                  ? ce.event.dispatch.apply(t, arguments)
                  : void 0;
              }),
          (l = (e = (e || "").match(D) || [""]).length);
        while (l--)
          (d = g = (s = De.exec(e[l]) || [])[1]),
            (h = (s[2] || "").split(".").sort()),
            d &&
              ((f = ce.event.special[d] || {}),
              (d = (i ? f.delegateType : f.bindType) || d),
              (f = ce.event.special[d] || {}),
              (c = ce.extend(
                {
                  type: d,
                  origType: g,
                  data: r,
                  handler: n,
                  guid: n.guid,
                  selector: i,
                  needsContext: i && ce.expr.match.needsContext.test(i),
                  namespace: h.join("."),
                },
                o
              )),
              (p = u[d]) ||
                (((p = u[d] = []).delegateCount = 0),
                (f.setup && !1 !== f.setup.call(t, r, h, a)) ||
                  (t.addEventListener && t.addEventListener(d, a))),
              f.add &&
                (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)),
              i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
              (ce.event.global[d] = !0));
      }
    },
    remove: function (e, t, n, r, i) {
      var o,
        a,
        s,
        u,
        l,
        c,
        f,
        p,
        d,
        h,
        g,
        v = _.hasData(e) && _.get(e);
      if (v && (u = v.events)) {
        l = (t = (t || "").match(D) || [""]).length;
        while (l--)
          if (
            ((d = g = (s = De.exec(t[l]) || [])[1]),
            (h = (s[2] || "").split(".").sort()),
            d)
          ) {
            (f = ce.event.special[d] || {}),
              (p = u[(d = (r ? f.delegateType : f.bindType) || d)] || []),
              (s =
                s[2] &&
                new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)")),
              (a = o = p.length);
            while (o--)
              (c = p[o]),
                (!i && g !== c.origType) ||
                  (n && n.guid !== c.guid) ||
                  (s && !s.test(c.namespace)) ||
                  (r && r !== c.selector && ("**" !== r || !c.selector)) ||
                  (p.splice(o, 1),
                  c.selector && p.delegateCount--,
                  f.remove && f.remove.call(e, c));
            a &&
              !p.length &&
              ((f.teardown && !1 !== f.teardown.call(e, h, v.handle)) ||
                ce.removeEvent(e, d, v.handle),
              delete u[d]);
          } else for (d in u) ce.event.remove(e, d + t[l], n, r, !0);
        ce.isEmptyObject(u) && _.remove(e, "handle events");
      }
    },
    dispatch: function (e) {
      var t,
        n,
        r,
        i,
        o,
        a,
        s = new Array(arguments.length),
        u = ce.event.fix(e),
        l = (_.get(this, "events") || Object.create(null))[u.type] || [],
        c = ce.event.special[u.type] || {};
      for (s[0] = u, t = 1; t < arguments.length; t++) s[t] = arguments[t];
      if (
        ((u.delegateTarget = this),
        !c.preDispatch || !1 !== c.preDispatch.call(this, u))
      ) {
        (a = ce.event.handlers.call(this, u, l)), (t = 0);
        while ((i = a[t++]) && !u.isPropagationStopped()) {
          (u.currentTarget = i.elem), (n = 0);
          while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped())
            (u.rnamespace &&
              !1 !== o.namespace &&
              !u.rnamespace.test(o.namespace)) ||
              ((u.handleObj = o),
              (u.data = o.data),
              void 0 !==
                (r = (
                  (ce.event.special[o.origType] || {}).handle || o.handler
                ).apply(i.elem, s)) &&
                !1 === (u.result = r) &&
                (u.preventDefault(), u.stopPropagation()));
        }
        return c.postDispatch && c.postDispatch.call(this, u), u.result;
      }
    },
    handlers: function (e, t) {
      var n,
        r,
        i,
        o,
        a,
        s = [],
        u = t.delegateCount,
        l = e.target;
      if (u && l.nodeType && !("click" === e.type && 1 <= e.button))
        for (; l !== this; l = l.parentNode || this)
          if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
            for (o = [], a = {}, n = 0; n < u; n++)
              void 0 === a[(i = (r = t[n]).selector + " ")] &&
                (a[i] = r.needsContext
                  ? -1 < ce(i, this).index(l)
                  : ce.find(i, this, null, [l]).length),
                a[i] && o.push(r);
            o.length && s.push({ elem: l, handlers: o });
          }
      return (
        (l = this), u < t.length && s.push({ elem: l, handlers: t.slice(u) }), s
      );
    },
    addProp: function (t, e) {
      Object.defineProperty(ce.Event.prototype, t, {
        enumerable: !0,
        configurable: !0,
        get: v(e)
          ? function () {
              if (this.originalEvent) return e(this.originalEvent);
            }
          : function () {
              if (this.originalEvent) return this.originalEvent[t];
            },
        set: function (e) {
          Object.defineProperty(this, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: e,
          });
        },
      });
    },
    fix: function (e) {
      return e[ce.expando] ? e : new ce.Event(e);
    },
    special: {
      load: { noBubble: !0 },
      click: {
        setup: function (e) {
          var t = this || e;
          return (
            we.test(t.type) && t.click && fe(t, "input") && He(t, "click", !0),
            !1
          );
        },
        trigger: function (e) {
          var t = this || e;
          return (
            we.test(t.type) && t.click && fe(t, "input") && He(t, "click"), !0
          );
        },
        _default: function (e) {
          var t = e.target;
          return (
            (we.test(t.type) &&
              t.click &&
              fe(t, "input") &&
              _.get(t, "click")) ||
            fe(t, "a")
          );
        },
      },
      beforeunload: {
        postDispatch: function (e) {
          void 0 !== e.result &&
            e.originalEvent &&
            (e.originalEvent.returnValue = e.result);
        },
      },
    },
  }),
    (ce.removeEvent = function (e, t, n) {
      e.removeEventListener && e.removeEventListener(t, n);
    }),
    (ce.Event = function (e, t) {
      if (!(this instanceof ce.Event)) return new ce.Event(e, t);
      e && e.type
        ? ((this.originalEvent = e),
          (this.type = e.type),
          (this.isDefaultPrevented =
            e.defaultPrevented ||
            (void 0 === e.defaultPrevented && !1 === e.returnValue)
              ? Ne
              : qe),
          (this.target =
            e.target && 3 === e.target.nodeType
              ? e.target.parentNode
              : e.target),
          (this.currentTarget = e.currentTarget),
          (this.relatedTarget = e.relatedTarget))
        : (this.type = e),
        t && ce.extend(this, t),
        (this.timeStamp = (e && e.timeStamp) || Date.now()),
        (this[ce.expando] = !0);
    }),
    (ce.Event.prototype = {
      constructor: ce.Event,
      isDefaultPrevented: qe,
      isPropagationStopped: qe,
      isImmediatePropagationStopped: qe,
      isSimulated: !1,
      preventDefault: function () {
        var e = this.originalEvent;
        (this.isDefaultPrevented = Ne),
          e && !this.isSimulated && e.preventDefault();
      },
      stopPropagation: function () {
        var e = this.originalEvent;
        (this.isPropagationStopped = Ne),
          e && !this.isSimulated && e.stopPropagation();
      },
      stopImmediatePropagation: function () {
        var e = this.originalEvent;
        (this.isImmediatePropagationStopped = Ne),
          e && !this.isSimulated && e.stopImmediatePropagation(),
          this.stopPropagation();
      },
    }),
    ce.each(
      {
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0,
      },
      ce.event.addProp
    ),
    ce.each({ focus: "focusin", blur: "focusout" }, function (r, i) {
      function o(e) {
        if (C.documentMode) {
          var t = _.get(this, "handle"),
            n = ce.event.fix(e);
          (n.type = "focusin" === e.type ? "focus" : "blur"),
            (n.isSimulated = !0),
            t(e),
            n.target === n.currentTarget && t(n);
        } else ce.event.simulate(i, e.target, ce.event.fix(e));
      }
      (ce.event.special[r] = {
        setup: function () {
          var e;
          if ((He(this, r, !0), !C.documentMode)) return !1;
          (e = _.get(this, i)) || this.addEventListener(i, o),
            _.set(this, i, (e || 0) + 1);
        },
        trigger: function () {
          return He(this, r), !0;
        },
        teardown: function () {
          var e;
          if (!C.documentMode) return !1;
          (e = _.get(this, i) - 1)
            ? _.set(this, i, e)
            : (this.removeEventListener(i, o), _.remove(this, i));
        },
        _default: function (e) {
          return _.get(e.target, r);
        },
        delegateType: i,
      }),
        (ce.event.special[i] = {
          setup: function () {
            var e = this.ownerDocument || this.document || this,
              t = C.documentMode ? this : e,
              n = _.get(t, i);
            n ||
              (C.documentMode
                ? this.addEventListener(i, o)
                : e.addEventListener(r, o, !0)),
              _.set(t, i, (n || 0) + 1);
          },
          teardown: function () {
            var e = this.ownerDocument || this.document || this,
              t = C.documentMode ? this : e,
              n = _.get(t, i) - 1;
            n
              ? _.set(t, i, n)
              : (C.documentMode
                  ? this.removeEventListener(i, o)
                  : e.removeEventListener(r, o, !0),
                _.remove(t, i));
          },
        });
    }),
    ce.each(
      {
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout",
      },
      function (e, i) {
        ce.event.special[e] = {
          delegateType: i,
          bindType: i,
          handle: function (e) {
            var t,
              n = e.relatedTarget,
              r = e.handleObj;
            return (
              (n && (n === this || ce.contains(this, n))) ||
                ((e.type = r.origType),
                (t = r.handler.apply(this, arguments)),
                (e.type = i)),
              t
            );
          },
        };
      }
    ),
    ce.fn.extend({
      on: function (e, t, n, r) {
        return Le(this, e, t, n, r);
      },
      one: function (e, t, n, r) {
        return Le(this, e, t, n, r, 1);
      },
      off: function (e, t, n) {
        var r, i;
        if (e && e.preventDefault && e.handleObj)
          return (
            (r = e.handleObj),
            ce(e.delegateTarget).off(
              r.namespace ? r.origType + "." + r.namespace : r.origType,
              r.selector,
              r.handler
            ),
            this
          );
        if ("object" == typeof e) {
          for (i in e) this.off(i, t, e[i]);
          return this;
        }
        return (
          (!1 !== t && "function" != typeof t) || ((n = t), (t = void 0)),
          !1 === n && (n = qe),
          this.each(function () {
            ce.event.remove(this, e, n, t);
          })
        );
      },
    });
  var Oe = /<script|<style|<link/i,
    Pe = /checked\s*(?:[^=]|=\s*.checked.)/i,
    Me = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
  function Re(e, t) {
    return (
      (fe(e, "table") &&
        fe(11 !== t.nodeType ? t : t.firstChild, "tr") &&
        ce(e).children("tbody")[0]) ||
      e
    );
  }
  function Ie(e) {
    return (e.type = (null !== e.getAttribute("type")) + "/" + e.type), e;
  }
  function We(e) {
    return (
      "true/" === (e.type || "").slice(0, 5)
        ? (e.type = e.type.slice(5))
        : e.removeAttribute("type"),
      e
    );
  }
  function Fe(e, t) {
    var n, r, i, o, a, s;
    if (1 === t.nodeType) {
      if (_.hasData(e) && (s = _.get(e).events))
        for (i in (_.remove(t, "handle events"), s))
          for (n = 0, r = s[i].length; n < r; n++) ce.event.add(t, i, s[i][n]);
      z.hasData(e) && ((o = z.access(e)), (a = ce.extend({}, o)), z.set(t, a));
    }
  }
  function $e(n, r, i, o) {
    r = g(r);
    var e,
      t,
      a,
      s,
      u,
      l,
      c = 0,
      f = n.length,
      p = f - 1,
      d = r[0],
      h = v(d);
    if (h || (1 < f && "string" == typeof d && !le.checkClone && Pe.test(d)))
      return n.each(function (e) {
        var t = n.eq(e);
        h && (r[0] = d.call(this, e, t.html())), $e(t, r, i, o);
      });
    if (
      f &&
      ((t = (e = Ae(r, n[0].ownerDocument, !1, n, o)).firstChild),
      1 === e.childNodes.length && (e = t),
      t || o)
    ) {
      for (s = (a = ce.map(Se(e, "script"), Ie)).length; c < f; c++)
        (u = e),
          c !== p &&
            ((u = ce.clone(u, !0, !0)), s && ce.merge(a, Se(u, "script"))),
          i.call(n[c], u, c);
      if (s)
        for (
          l = a[a.length - 1].ownerDocument, ce.map(a, We), c = 0;
          c < s;
          c++
        )
          (u = a[c]),
            Ce.test(u.type || "") &&
              !_.access(u, "globalEval") &&
              ce.contains(l, u) &&
              (u.src && "module" !== (u.type || "").toLowerCase()
                ? ce._evalUrl &&
                  !u.noModule &&
                  ce._evalUrl(
                    u.src,
                    { nonce: u.nonce || u.getAttribute("nonce") },
                    l
                  )
                : m(u.textContent.replace(Me, ""), u, l));
    }
    return n;
  }
  function Be(e, t, n) {
    for (var r, i = t ? ce.filter(t, e) : e, o = 0; null != (r = i[o]); o++)
      n || 1 !== r.nodeType || ce.cleanData(Se(r)),
        r.parentNode &&
          (n && K(r) && Ee(Se(r, "script")), r.parentNode.removeChild(r));
    return e;
  }
  ce.extend({
    htmlPrefilter: function (e) {
      return e;
    },
    clone: function (e, t, n) {
      var r,
        i,
        o,
        a,
        s,
        u,
        l,
        c = e.cloneNode(!0),
        f = K(e);
      if (
        !(
          le.noCloneChecked ||
          (1 !== e.nodeType && 11 !== e.nodeType) ||
          ce.isXMLDoc(e)
        )
      )
        for (a = Se(c), r = 0, i = (o = Se(e)).length; r < i; r++)
          (s = o[r]),
            (u = a[r]),
            void 0,
            "input" === (l = u.nodeName.toLowerCase()) && we.test(s.type)
              ? (u.checked = s.checked)
              : ("input" !== l && "textarea" !== l) ||
                (u.defaultValue = s.defaultValue);
      if (t)
        if (n)
          for (o = o || Se(e), a = a || Se(c), r = 0, i = o.length; r < i; r++)
            Fe(o[r], a[r]);
        else Fe(e, c);
      return (
        0 < (a = Se(c, "script")).length && Ee(a, !f && Se(e, "script")), c
      );
    },
    cleanData: function (e) {
      for (var t, n, r, i = ce.event.special, o = 0; void 0 !== (n = e[o]); o++)
        if ($(n)) {
          if ((t = n[_.expando])) {
            if (t.events)
              for (r in t.events)
                i[r] ? ce.event.remove(n, r) : ce.removeEvent(n, r, t.handle);
            n[_.expando] = void 0;
          }
          n[z.expando] && (n[z.expando] = void 0);
        }
    },
  }),
    ce.fn.extend({
      detach: function (e) {
        return Be(this, e, !0);
      },
      remove: function (e) {
        return Be(this, e);
      },
      text: function (e) {
        return M(
          this,
          function (e) {
            return void 0 === e
              ? ce.text(this)
              : this.empty().each(function () {
                  (1 !== this.nodeType &&
                    11 !== this.nodeType &&
                    9 !== this.nodeType) ||
                    (this.textContent = e);
                });
          },
          null,
          e,
          arguments.length
        );
      },
      append: function () {
        return $e(this, arguments, function (e) {
          (1 !== this.nodeType &&
            11 !== this.nodeType &&
            9 !== this.nodeType) ||
            Re(this, e).appendChild(e);
        });
      },
      prepend: function () {
        return $e(this, arguments, function (e) {
          if (
            1 === this.nodeType ||
            11 === this.nodeType ||
            9 === this.nodeType
          ) {
            var t = Re(this, e);
            t.insertBefore(e, t.firstChild);
          }
        });
      },
      before: function () {
        return $e(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this);
        });
      },
      after: function () {
        return $e(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
        });
      },
      empty: function () {
        for (var e, t = 0; null != (e = this[t]); t++)
          1 === e.nodeType && (ce.cleanData(Se(e, !1)), (e.textContent = ""));
        return this;
      },
      clone: function (e, t) {
        return (
          (e = null != e && e),
          (t = null == t ? e : t),
          this.map(function () {
            return ce.clone(this, e, t);
          })
        );
      },
      html: function (e) {
        return M(
          this,
          function (e) {
            var t = this[0] || {},
              n = 0,
              r = this.length;
            if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
            if (
              "string" == typeof e &&
              !Oe.test(e) &&
              !ke[(Te.exec(e) || ["", ""])[1].toLowerCase()]
            ) {
              e = ce.htmlPrefilter(e);
              try {
                for (; n < r; n++)
                  1 === (t = this[n] || {}).nodeType &&
                    (ce.cleanData(Se(t, !1)), (t.innerHTML = e));
                t = 0;
              } catch (e) {}
            }
            t && this.empty().append(e);
          },
          null,
          e,
          arguments.length
        );
      },
      replaceWith: function () {
        var n = [];
        return $e(
          this,
          arguments,
          function (e) {
            var t = this.parentNode;
            ce.inArray(this, n) < 0 &&
              (ce.cleanData(Se(this)), t && t.replaceChild(e, this));
          },
          n
        );
      },
    }),
    ce.each(
      {
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith",
      },
      function (e, a) {
        ce.fn[e] = function (e) {
          for (var t, n = [], r = ce(e), i = r.length - 1, o = 0; o <= i; o++)
            (t = o === i ? this : this.clone(!0)),
              ce(r[o])[a](t),
              s.apply(n, t.get());
          return this.pushStack(n);
        };
      }
    );
  var _e = new RegExp("^(" + G + ")(?!px)[a-z%]+$", "i"),
    ze = /^--/,
    Xe = function (e) {
      var t = e.ownerDocument.defaultView;
      return (t && t.opener) || (t = ie), t.getComputedStyle(e);
    },
    Ue = function (e, t, n) {
      var r,
        i,
        o = {};
      for (i in t) (o[i] = e.style[i]), (e.style[i] = t[i]);
      for (i in ((r = n.call(e)), t)) e.style[i] = o[i];
      return r;
    },
    Ve = new RegExp(Q.join("|"), "i");
  function Ge(e, t, n) {
    var r,
      i,
      o,
      a,
      s = ze.test(t),
      u = e.style;
    return (
      (n = n || Xe(e)) &&
        ((a = n.getPropertyValue(t) || n[t]),
        s && a && (a = a.replace(ve, "$1") || void 0),
        "" !== a || K(e) || (a = ce.style(e, t)),
        !le.pixelBoxStyles() &&
          _e.test(a) &&
          Ve.test(t) &&
          ((r = u.width),
          (i = u.minWidth),
          (o = u.maxWidth),
          (u.minWidth = u.maxWidth = u.width = a),
          (a = n.width),
          (u.width = r),
          (u.minWidth = i),
          (u.maxWidth = o))),
      void 0 !== a ? a + "" : a
    );
  }
  function Ye(e, t) {
    return {
      get: function () {
        if (!e()) return (this.get = t).apply(this, arguments);
        delete this.get;
      },
    };
  }
  !(function () {
    function e() {
      if (l) {
        (u.style.cssText =
          "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
          (l.style.cssText =
            "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
          J.appendChild(u).appendChild(l);
        var e = ie.getComputedStyle(l);
        (n = "1%" !== e.top),
          (s = 12 === t(e.marginLeft)),
          (l.style.right = "60%"),
          (o = 36 === t(e.right)),
          (r = 36 === t(e.width)),
          (l.style.position = "absolute"),
          (i = 12 === t(l.offsetWidth / 3)),
          J.removeChild(u),
          (l = null);
      }
    }
    function t(e) {
      return Math.round(parseFloat(e));
    }
    var n,
      r,
      i,
      o,
      a,
      s,
      u = C.createElement("div"),
      l = C.createElement("div");
    l.style &&
      ((l.style.backgroundClip = "content-box"),
      (l.cloneNode(!0).style.backgroundClip = ""),
      (le.clearCloneStyle = "content-box" === l.style.backgroundClip),
      ce.extend(le, {
        boxSizingReliable: function () {
          return e(), r;
        },
        pixelBoxStyles: function () {
          return e(), o;
        },
        pixelPosition: function () {
          return e(), n;
        },
        reliableMarginLeft: function () {
          return e(), s;
        },
        scrollboxSize: function () {
          return e(), i;
        },
        reliableTrDimensions: function () {
          var e, t, n, r;
          return (
            null == a &&
              ((e = C.createElement("table")),
              (t = C.createElement("tr")),
              (n = C.createElement("div")),
              (e.style.cssText =
                "position:absolute;left:-11111px;border-collapse:separate"),
              (t.style.cssText = "box-sizing:content-box;border:1px solid"),
              (t.style.height = "1px"),
              (n.style.height = "9px"),
              (n.style.display = "block"),
              J.appendChild(e).appendChild(t).appendChild(n),
              (r = ie.getComputedStyle(t)),
              (a =
                parseInt(r.height, 10) +
                  parseInt(r.borderTopWidth, 10) +
                  parseInt(r.borderBottomWidth, 10) ===
                t.offsetHeight),
              J.removeChild(e)),
            a
          );
        },
      }));
  })();
  var Qe = ["Webkit", "Moz", "ms"],
    Je = C.createElement("div").style,
    Ke = {};
  function Ze(e) {
    var t = ce.cssProps[e] || Ke[e];
    return (
      t ||
      (e in Je
        ? e
        : (Ke[e] =
            (function (e) {
              var t = e[0].toUpperCase() + e.slice(1),
                n = Qe.length;
              while (n--) if ((e = Qe[n] + t) in Je) return e;
            })(e) || e))
    );
  }
  var et = /^(none|table(?!-c[ea]).+)/,
    tt = { position: "absolute", visibility: "hidden", display: "block" },
    nt = { letterSpacing: "0", fontWeight: "400" };
  function rt(e, t, n) {
    var r = Y.exec(t);
    return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
  }
  function it(e, t, n, r, i, o) {
    var a = "width" === t ? 1 : 0,
      s = 0,
      u = 0,
      l = 0;
    if (n === (r ? "border" : "content")) return 0;
    for (; a < 4; a += 2)
      "margin" === n && (l += ce.css(e, n + Q[a], !0, i)),
        r
          ? ("content" === n && (u -= ce.css(e, "padding" + Q[a], !0, i)),
            "margin" !== n &&
              (u -= ce.css(e, "border" + Q[a] + "Width", !0, i)))
          : ((u += ce.css(e, "padding" + Q[a], !0, i)),
            "padding" !== n
              ? (u += ce.css(e, "border" + Q[a] + "Width", !0, i))
              : (s += ce.css(e, "border" + Q[a] + "Width", !0, i)));
    return (
      !r &&
        0 <= o &&
        (u +=
          Math.max(
            0,
            Math.ceil(
              e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - 0.5
            )
          ) || 0),
      u + l
    );
  }
  function ot(e, t, n) {
    var r = Xe(e),
      i =
        (!le.boxSizingReliable() || n) &&
        "border-box" === ce.css(e, "boxSizing", !1, r),
      o = i,
      a = Ge(e, t, r),
      s = "offset" + t[0].toUpperCase() + t.slice(1);
    if (_e.test(a)) {
      if (!n) return a;
      a = "auto";
    }
    return (
      ((!le.boxSizingReliable() && i) ||
        (!le.reliableTrDimensions() && fe(e, "tr")) ||
        "auto" === a ||
        (!parseFloat(a) && "inline" === ce.css(e, "display", !1, r))) &&
        e.getClientRects().length &&
        ((i = "border-box" === ce.css(e, "boxSizing", !1, r)),
        (o = s in e) && (a = e[s])),
      (a = parseFloat(a) || 0) +
        it(e, t, n || (i ? "border" : "content"), o, r, a) +
        "px"
    );
  }
  function at(e, t, n, r, i) {
    return new at.prototype.init(e, t, n, r, i);
  }
  ce.extend({
    cssHooks: {
      opacity: {
        get: function (e, t) {
          if (t) {
            var n = Ge(e, "opacity");
            return "" === n ? "1" : n;
          }
        },
      },
    },
    cssNumber: {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageSlice: !0,
      columnCount: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      gridArea: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnStart: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowStart: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      scale: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
    },
    cssProps: {},
    style: function (e, t, n, r) {
      if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
        var i,
          o,
          a,
          s = F(t),
          u = ze.test(t),
          l = e.style;
        if (
          (u || (t = Ze(s)),
          (a = ce.cssHooks[t] || ce.cssHooks[s]),
          void 0 === n)
        )
          return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
        "string" === (o = typeof n) &&
          (i = Y.exec(n)) &&
          i[1] &&
          ((n = te(e, t, i)), (o = "number")),
          null != n &&
            n == n &&
            ("number" !== o ||
              u ||
              (n += (i && i[3]) || (ce.cssNumber[s] ? "" : "px")),
            le.clearCloneStyle ||
              "" !== n ||
              0 !== t.indexOf("background") ||
              (l[t] = "inherit"),
            (a && "set" in a && void 0 === (n = a.set(e, n, r))) ||
              (u ? l.setProperty(t, n) : (l[t] = n)));
      }
    },
    css: function (e, t, n, r) {
      var i,
        o,
        a,
        s = F(t);
      return (
        ze.test(t) || (t = Ze(s)),
        (a = ce.cssHooks[t] || ce.cssHooks[s]) &&
          "get" in a &&
          (i = a.get(e, !0, n)),
        void 0 === i && (i = Ge(e, t, r)),
        "normal" === i && t in nt && (i = nt[t]),
        "" === n || n
          ? ((o = parseFloat(i)), !0 === n || isFinite(o) ? o || 0 : i)
          : i
      );
    },
  }),
    ce.each(["height", "width"], function (e, u) {
      ce.cssHooks[u] = {
        get: function (e, t, n) {
          if (t)
            return !et.test(ce.css(e, "display")) ||
              (e.getClientRects().length && e.getBoundingClientRect().width)
              ? ot(e, u, n)
              : Ue(e, tt, function () {
                  return ot(e, u, n);
                });
        },
        set: function (e, t, n) {
          var r,
            i = Xe(e),
            o = !le.scrollboxSize() && "absolute" === i.position,
            a = (o || n) && "border-box" === ce.css(e, "boxSizing", !1, i),
            s = n ? it(e, u, n, a, i) : 0;
          return (
            a &&
              o &&
              (s -= Math.ceil(
                e["offset" + u[0].toUpperCase() + u.slice(1)] -
                  parseFloat(i[u]) -
                  it(e, u, "border", !1, i) -
                  0.5
              )),
            s &&
              (r = Y.exec(t)) &&
              "px" !== (r[3] || "px") &&
              ((e.style[u] = t), (t = ce.css(e, u))),
            rt(0, t, s)
          );
        },
      };
    }),
    (ce.cssHooks.marginLeft = Ye(le.reliableMarginLeft, function (e, t) {
      if (t)
        return (
          (parseFloat(Ge(e, "marginLeft")) ||
            e.getBoundingClientRect().left -
              Ue(e, { marginLeft: 0 }, function () {
                return e.getBoundingClientRect().left;
              })) + "px"
        );
    })),
    ce.each({ margin: "", padding: "", border: "Width" }, function (i, o) {
      (ce.cssHooks[i + o] = {
        expand: function (e) {
          for (
            var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e];
            t < 4;
            t++
          )
            n[i + Q[t] + o] = r[t] || r[t - 2] || r[0];
          return n;
        },
      }),
        "margin" !== i && (ce.cssHooks[i + o].set = rt);
    }),
    ce.fn.extend({
      css: function (e, t) {
        return M(
          this,
          function (e, t, n) {
            var r,
              i,
              o = {},
              a = 0;
            if (Array.isArray(t)) {
              for (r = Xe(e), i = t.length; a < i; a++)
                o[t[a]] = ce.css(e, t[a], !1, r);
              return o;
            }
            return void 0 !== n ? ce.style(e, t, n) : ce.css(e, t);
          },
          e,
          t,
          1 < arguments.length
        );
      },
    }),
    (((ce.Tween = at).prototype = {
      constructor: at,
      init: function (e, t, n, r, i, o) {
        (this.elem = e),
          (this.prop = n),
          (this.easing = i || ce.easing._default),
          (this.options = t),
          (this.start = this.now = this.cur()),
          (this.end = r),
          (this.unit = o || (ce.cssNumber[n] ? "" : "px"));
      },
      cur: function () {
        var e = at.propHooks[this.prop];
        return e && e.get ? e.get(this) : at.propHooks._default.get(this);
      },
      run: function (e) {
        var t,
          n = at.propHooks[this.prop];
        return (
          this.options.duration
            ? (this.pos = t =
                ce.easing[this.easing](
                  e,
                  this.options.duration * e,
                  0,
                  1,
                  this.options.duration
                ))
            : (this.pos = t = e),
          (this.now = (this.end - this.start) * t + this.start),
          this.options.step &&
            this.options.step.call(this.elem, this.now, this),
          n && n.set ? n.set(this) : at.propHooks._default.set(this),
          this
        );
      },
    }).init.prototype = at.prototype),
    ((at.propHooks = {
      _default: {
        get: function (e) {
          var t;
          return 1 !== e.elem.nodeType ||
            (null != e.elem[e.prop] && null == e.elem.style[e.prop])
            ? e.elem[e.prop]
            : (t = ce.css(e.elem, e.prop, "")) && "auto" !== t
            ? t
            : 0;
        },
        set: function (e) {
          ce.fx.step[e.prop]
            ? ce.fx.step[e.prop](e)
            : 1 !== e.elem.nodeType ||
              (!ce.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)])
            ? (e.elem[e.prop] = e.now)
            : ce.style(e.elem, e.prop, e.now + e.unit);
        },
      },
    }).scrollTop = at.propHooks.scrollLeft =
      {
        set: function (e) {
          e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        },
      }),
    (ce.easing = {
      linear: function (e) {
        return e;
      },
      swing: function (e) {
        return 0.5 - Math.cos(e * Math.PI) / 2;
      },
      _default: "swing",
    }),
    (ce.fx = at.prototype.init),
    (ce.fx.step = {});
  var st,
    ut,
    lt,
    ct,
    ft = /^(?:toggle|show|hide)$/,
    pt = /queueHooks$/;
  function dt() {
    ut &&
      (!1 === C.hidden && ie.requestAnimationFrame
        ? ie.requestAnimationFrame(dt)
        : ie.setTimeout(dt, ce.fx.interval),
      ce.fx.tick());
  }
  function ht() {
    return (
      ie.setTimeout(function () {
        st = void 0;
      }),
      (st = Date.now())
    );
  }
  function gt(e, t) {
    var n,
      r = 0,
      i = { height: e };
    for (t = t ? 1 : 0; r < 4; r += 2 - t)
      i["margin" + (n = Q[r])] = i["padding" + n] = e;
    return t && (i.opacity = i.width = e), i;
  }
  function vt(e, t, n) {
    for (
      var r,
        i = (yt.tweeners[t] || []).concat(yt.tweeners["*"]),
        o = 0,
        a = i.length;
      o < a;
      o++
    )
      if ((r = i[o].call(n, t, e))) return r;
  }
  function yt(o, e, t) {
    var n,
      a,
      r = 0,
      i = yt.prefilters.length,
      s = ce.Deferred().always(function () {
        delete u.elem;
      }),
      u = function () {
        if (a) return !1;
        for (
          var e = st || ht(),
            t = Math.max(0, l.startTime + l.duration - e),
            n = 1 - (t / l.duration || 0),
            r = 0,
            i = l.tweens.length;
          r < i;
          r++
        )
          l.tweens[r].run(n);
        return (
          s.notifyWith(o, [l, n, t]),
          n < 1 && i
            ? t
            : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1)
        );
      },
      l = s.promise({
        elem: o,
        props: ce.extend({}, e),
        opts: ce.extend(
          !0,
          { specialEasing: {}, easing: ce.easing._default },
          t
        ),
        originalProperties: e,
        originalOptions: t,
        startTime: st || ht(),
        duration: t.duration,
        tweens: [],
        createTween: function (e, t) {
          var n = ce.Tween(
            o,
            l.opts,
            e,
            t,
            l.opts.specialEasing[e] || l.opts.easing
          );
          return l.tweens.push(n), n;
        },
        stop: function (e) {
          var t = 0,
            n = e ? l.tweens.length : 0;
          if (a) return this;
          for (a = !0; t < n; t++) l.tweens[t].run(1);
          return (
            e
              ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e]))
              : s.rejectWith(o, [l, e]),
            this
          );
        },
      }),
      c = l.props;
    for (
      !(function (e, t) {
        var n, r, i, o, a;
        for (n in e)
          if (
            ((i = t[(r = F(n))]),
            (o = e[n]),
            Array.isArray(o) && ((i = o[1]), (o = e[n] = o[0])),
            n !== r && ((e[r] = o), delete e[n]),
            (a = ce.cssHooks[r]) && ("expand" in a))
          )
            for (n in ((o = a.expand(o)), delete e[r], o))
              (n in e) || ((e[n] = o[n]), (t[n] = i));
          else t[r] = i;
      })(c, l.opts.specialEasing);
      r < i;
      r++
    )
      if ((n = yt.prefilters[r].call(l, o, c, l.opts)))
        return (
          v(n.stop) &&
            (ce._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)),
          n
        );
    return (
      ce.map(c, vt, l),
      v(l.opts.start) && l.opts.start.call(o, l),
      l
        .progress(l.opts.progress)
        .done(l.opts.done, l.opts.complete)
        .fail(l.opts.fail)
        .always(l.opts.always),
      ce.fx.timer(ce.extend(u, { elem: o, anim: l, queue: l.opts.queue })),
      l
    );
  }
  (ce.Animation = ce.extend(yt, {
    tweeners: {
      "*": [
        function (e, t) {
          var n = this.createTween(e, t);
          return te(n.elem, e, Y.exec(t), n), n;
        },
      ],
    },
    tweener: function (e, t) {
      v(e) ? ((t = e), (e = ["*"])) : (e = e.match(D));
      for (var n, r = 0, i = e.length; r < i; r++)
        (n = e[r]),
          (yt.tweeners[n] = yt.tweeners[n] || []),
          yt.tweeners[n].unshift(t);
    },
    prefilters: [
      function (e, t, n) {
        var r,
          i,
          o,
          a,
          s,
          u,
          l,
          c,
          f = "width" in t || "height" in t,
          p = this,
          d = {},
          h = e.style,
          g = e.nodeType && ee(e),
          v = _.get(e, "fxshow");
        for (r in (n.queue ||
          (null == (a = ce._queueHooks(e, "fx")).unqueued &&
            ((a.unqueued = 0),
            (s = a.empty.fire),
            (a.empty.fire = function () {
              a.unqueued || s();
            })),
          a.unqueued++,
          p.always(function () {
            p.always(function () {
              a.unqueued--, ce.queue(e, "fx").length || a.empty.fire();
            });
          })),
        t))
          if (((i = t[r]), ft.test(i))) {
            if (
              (delete t[r],
              (o = o || "toggle" === i),
              i === (g ? "hide" : "show"))
            ) {
              if ("show" !== i || !v || void 0 === v[r]) continue;
              g = !0;
            }
            d[r] = (v && v[r]) || ce.style(e, r);
          }
        if ((u = !ce.isEmptyObject(t)) || !ce.isEmptyObject(d))
          for (r in (f &&
            1 === e.nodeType &&
            ((n.overflow = [h.overflow, h.overflowX, h.overflowY]),
            null == (l = v && v.display) && (l = _.get(e, "display")),
            "none" === (c = ce.css(e, "display")) &&
              (l
                ? (c = l)
                : (re([e], !0),
                  (l = e.style.display || l),
                  (c = ce.css(e, "display")),
                  re([e]))),
            ("inline" === c || ("inline-block" === c && null != l)) &&
              "none" === ce.css(e, "float") &&
              (u ||
                (p.done(function () {
                  h.display = l;
                }),
                null == l && ((c = h.display), (l = "none" === c ? "" : c))),
              (h.display = "inline-block"))),
          n.overflow &&
            ((h.overflow = "hidden"),
            p.always(function () {
              (h.overflow = n.overflow[0]),
                (h.overflowX = n.overflow[1]),
                (h.overflowY = n.overflow[2]);
            })),
          (u = !1),
          d))
            u ||
              (v
                ? "hidden" in v && (g = v.hidden)
                : (v = _.access(e, "fxshow", { display: l })),
              o && (v.hidden = !g),
              g && re([e], !0),
              p.done(function () {
                for (r in (g || re([e]), _.remove(e, "fxshow"), d))
                  ce.style(e, r, d[r]);
              })),
              (u = vt(g ? v[r] : 0, r, p)),
              r in v ||
                ((v[r] = u.start), g && ((u.end = u.start), (u.start = 0)));
      },
    ],
    prefilter: function (e, t) {
      t ? yt.prefilters.unshift(e) : yt.prefilters.push(e);
    },
  })),
    (ce.speed = function (e, t, n) {
      var r =
        e && "object" == typeof e
          ? ce.extend({}, e)
          : {
              complete: n || (!n && t) || (v(e) && e),
              duration: e,
              easing: (n && t) || (t && !v(t) && t),
            };
      return (
        ce.fx.off
          ? (r.duration = 0)
          : "number" != typeof r.duration &&
            (r.duration in ce.fx.speeds
              ? (r.duration = ce.fx.speeds[r.duration])
              : (r.duration = ce.fx.speeds._default)),
        (null != r.queue && !0 !== r.queue) || (r.queue = "fx"),
        (r.old = r.complete),
        (r.complete = function () {
          v(r.old) && r.old.call(this), r.queue && ce.dequeue(this, r.queue);
        }),
        r
      );
    }),
    ce.fn.extend({
      fadeTo: function (e, t, n, r) {
        return this.filter(ee)
          .css("opacity", 0)
          .show()
          .end()
          .animate({ opacity: t }, e, n, r);
      },
      animate: function (t, e, n, r) {
        var i = ce.isEmptyObject(t),
          o = ce.speed(e, n, r),
          a = function () {
            var e = yt(this, ce.extend({}, t), o);
            (i || _.get(this, "finish")) && e.stop(!0);
          };
        return (
          (a.finish = a),
          i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
        );
      },
      stop: function (i, e, o) {
        var a = function (e) {
          var t = e.stop;
          delete e.stop, t(o);
        };
        return (
          "string" != typeof i && ((o = e), (e = i), (i = void 0)),
          e && this.queue(i || "fx", []),
          this.each(function () {
            var e = !0,
              t = null != i && i + "queueHooks",
              n = ce.timers,
              r = _.get(this);
            if (t) r[t] && r[t].stop && a(r[t]);
            else for (t in r) r[t] && r[t].stop && pt.test(t) && a(r[t]);
            for (t = n.length; t--; )
              n[t].elem !== this ||
                (null != i && n[t].queue !== i) ||
                (n[t].anim.stop(o), (e = !1), n.splice(t, 1));
            (!e && o) || ce.dequeue(this, i);
          })
        );
      },
      finish: function (a) {
        return (
          !1 !== a && (a = a || "fx"),
          this.each(function () {
            var e,
              t = _.get(this),
              n = t[a + "queue"],
              r = t[a + "queueHooks"],
              i = ce.timers,
              o = n ? n.length : 0;
            for (
              t.finish = !0,
                ce.queue(this, a, []),
                r && r.stop && r.stop.call(this, !0),
                e = i.length;
              e--;

            )
              i[e].elem === this &&
                i[e].queue === a &&
                (i[e].anim.stop(!0), i.splice(e, 1));
            for (e = 0; e < o; e++)
              n[e] && n[e].finish && n[e].finish.call(this);
            delete t.finish;
          })
        );
      },
    }),
    ce.each(["toggle", "show", "hide"], function (e, r) {
      var i = ce.fn[r];
      ce.fn[r] = function (e, t, n) {
        return null == e || "boolean" == typeof e
          ? i.apply(this, arguments)
          : this.animate(gt(r, !0), e, t, n);
      };
    }),
    ce.each(
      {
        slideDown: gt("show"),
        slideUp: gt("hide"),
        slideToggle: gt("toggle"),
        fadeIn: { opacity: "show" },
        fadeOut: { opacity: "hide" },
        fadeToggle: { opacity: "toggle" },
      },
      function (e, r) {
        ce.fn[e] = function (e, t, n) {
          return this.animate(r, e, t, n);
        };
      }
    ),
    (ce.timers = []),
    (ce.fx.tick = function () {
      var e,
        t = 0,
        n = ce.timers;
      for (st = Date.now(); t < n.length; t++)
        (e = n[t])() || n[t] !== e || n.splice(t--, 1);
      n.length || ce.fx.stop(), (st = void 0);
    }),
    (ce.fx.timer = function (e) {
      ce.timers.push(e), ce.fx.start();
    }),
    (ce.fx.interval = 13),
    (ce.fx.start = function () {
      ut || ((ut = !0), dt());
    }),
    (ce.fx.stop = function () {
      ut = null;
    }),
    (ce.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
    (ce.fn.delay = function (r, e) {
      return (
        (r = (ce.fx && ce.fx.speeds[r]) || r),
        (e = e || "fx"),
        this.queue(e, function (e, t) {
          var n = ie.setTimeout(e, r);
          t.stop = function () {
            ie.clearTimeout(n);
          };
        })
      );
    }),
    (lt = C.createElement("input")),
    (ct = C.createElement("select").appendChild(C.createElement("option"))),
    (lt.type = "checkbox"),
    (le.checkOn = "" !== lt.value),
    (le.optSelected = ct.selected),
    ((lt = C.createElement("input")).value = "t"),
    (lt.type = "radio"),
    (le.radioValue = "t" === lt.value);
  var mt,
    xt = ce.expr.attrHandle;
  ce.fn.extend({
    attr: function (e, t) {
      return M(this, ce.attr, e, t, 1 < arguments.length);
    },
    removeAttr: function (e) {
      return this.each(function () {
        ce.removeAttr(this, e);
      });
    },
  }),
    ce.extend({
      attr: function (e, t, n) {
        var r,
          i,
          o = e.nodeType;
        if (3 !== o && 8 !== o && 2 !== o)
          return "undefined" == typeof e.getAttribute
            ? ce.prop(e, t, n)
            : ((1 === o && ce.isXMLDoc(e)) ||
                (i =
                  ce.attrHooks[t.toLowerCase()] ||
                  (ce.expr.match.bool.test(t) ? mt : void 0)),
              void 0 !== n
                ? null === n
                  ? void ce.removeAttr(e, t)
                  : i && "set" in i && void 0 !== (r = i.set(e, n, t))
                  ? r
                  : (e.setAttribute(t, n + ""), n)
                : i && "get" in i && null !== (r = i.get(e, t))
                ? r
                : null == (r = ce.find.attr(e, t))
                ? void 0
                : r);
      },
      attrHooks: {
        type: {
          set: function (e, t) {
            if (!le.radioValue && "radio" === t && fe(e, "input")) {
              var n = e.value;
              return e.setAttribute("type", t), n && (e.value = n), t;
            }
          },
        },
      },
      removeAttr: function (e, t) {
        var n,
          r = 0,
          i = t && t.match(D);
        if (i && 1 === e.nodeType) while ((n = i[r++])) e.removeAttribute(n);
      },
    }),
    (mt = {
      set: function (e, t, n) {
        return !1 === t ? ce.removeAttr(e, n) : e.setAttribute(n, n), n;
      },
    }),
    ce.each(ce.expr.match.bool.source.match(/\w+/g), function (e, t) {
      var a = xt[t] || ce.find.attr;
      xt[t] = function (e, t, n) {
        var r,
          i,
          o = t.toLowerCase();
        return (
          n ||
            ((i = xt[o]),
            (xt[o] = r),
            (r = null != a(e, t, n) ? o : null),
            (xt[o] = i)),
          r
        );
      };
    });
  var bt = /^(?:input|select|textarea|button)$/i,
    wt = /^(?:a|area)$/i;
  function Tt(e) {
    return (e.match(D) || []).join(" ");
  }
  function Ct(e) {
    return (e.getAttribute && e.getAttribute("class")) || "";
  }
  function kt(e) {
    return Array.isArray(e) ? e : ("string" == typeof e && e.match(D)) || [];
  }
  ce.fn.extend({
    prop: function (e, t) {
      return M(this, ce.prop, e, t, 1 < arguments.length);
    },
    removeProp: function (e) {
      return this.each(function () {
        delete this[ce.propFix[e] || e];
      });
    },
  }),
    ce.extend({
      prop: function (e, t, n) {
        var r,
          i,
          o = e.nodeType;
        if (3 !== o && 8 !== o && 2 !== o)
          return (
            (1 === o && ce.isXMLDoc(e)) ||
              ((t = ce.propFix[t] || t), (i = ce.propHooks[t])),
            void 0 !== n
              ? i && "set" in i && void 0 !== (r = i.set(e, n, t))
                ? r
                : (e[t] = n)
              : i && "get" in i && null !== (r = i.get(e, t))
              ? r
              : e[t]
          );
      },
      propHooks: {
        tabIndex: {
          get: function (e) {
            var t = ce.find.attr(e, "tabindex");
            return t
              ? parseInt(t, 10)
              : bt.test(e.nodeName) || (wt.test(e.nodeName) && e.href)
              ? 0
              : -1;
          },
        },
      },
      propFix: { for: "htmlFor", class: "className" },
    }),
    le.optSelected ||
      (ce.propHooks.selected = {
        get: function (e) {
          var t = e.parentNode;
          return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function (e) {
          var t = e.parentNode;
          t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        },
      }),
    ce.each(
      [
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable",
      ],
      function () {
        ce.propFix[this.toLowerCase()] = this;
      }
    ),
    ce.fn.extend({
      addClass: function (t) {
        var e, n, r, i, o, a;
        return v(t)
          ? this.each(function (e) {
              ce(this).addClass(t.call(this, e, Ct(this)));
            })
          : (e = kt(t)).length
          ? this.each(function () {
              if (
                ((r = Ct(this)), (n = 1 === this.nodeType && " " + Tt(r) + " "))
              ) {
                for (o = 0; o < e.length; o++)
                  (i = e[o]), n.indexOf(" " + i + " ") < 0 && (n += i + " ");
                (a = Tt(n)), r !== a && this.setAttribute("class", a);
              }
            })
          : this;
      },
      removeClass: function (t) {
        var e, n, r, i, o, a;
        return v(t)
          ? this.each(function (e) {
              ce(this).removeClass(t.call(this, e, Ct(this)));
            })
          : arguments.length
          ? (e = kt(t)).length
            ? this.each(function () {
                if (
                  ((r = Ct(this)),
                  (n = 1 === this.nodeType && " " + Tt(r) + " "))
                ) {
                  for (o = 0; o < e.length; o++) {
                    i = e[o];
                    while (-1 < n.indexOf(" " + i + " "))
                      n = n.replace(" " + i + " ", " ");
                  }
                  (a = Tt(n)), r !== a && this.setAttribute("class", a);
                }
              })
            : this
          : this.attr("class", "");
      },
      toggleClass: function (t, n) {
        var e,
          r,
          i,
          o,
          a = typeof t,
          s = "string" === a || Array.isArray(t);
        return v(t)
          ? this.each(function (e) {
              ce(this).toggleClass(t.call(this, e, Ct(this), n), n);
            })
          : "boolean" == typeof n && s
          ? n
            ? this.addClass(t)
            : this.removeClass(t)
          : ((e = kt(t)),
            this.each(function () {
              if (s)
                for (o = ce(this), i = 0; i < e.length; i++)
                  (r = e[i]), o.hasClass(r) ? o.removeClass(r) : o.addClass(r);
              else
                (void 0 !== t && "boolean" !== a) ||
                  ((r = Ct(this)) && _.set(this, "__className__", r),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      r || !1 === t ? "" : _.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (e) {
        var t,
          n,
          r = 0;
        t = " " + e + " ";
        while ((n = this[r++]))
          if (1 === n.nodeType && -1 < (" " + Tt(Ct(n)) + " ").indexOf(t))
            return !0;
        return !1;
      },
    });
  var St = /\r/g;
  ce.fn.extend({
    val: function (n) {
      var r,
        e,
        i,
        t = this[0];
      return arguments.length
        ? ((i = v(n)),
          this.each(function (e) {
            var t;
            1 === this.nodeType &&
              (null == (t = i ? n.call(this, e, ce(this).val()) : n)
                ? (t = "")
                : "number" == typeof t
                ? (t += "")
                : Array.isArray(t) &&
                  (t = ce.map(t, function (e) {
                    return null == e ? "" : e + "";
                  })),
              ((r =
                ce.valHooks[this.type] ||
                ce.valHooks[this.nodeName.toLowerCase()]) &&
                "set" in r &&
                void 0 !== r.set(this, t, "value")) ||
                (this.value = t));
          }))
        : t
        ? (r = ce.valHooks[t.type] || ce.valHooks[t.nodeName.toLowerCase()]) &&
          "get" in r &&
          void 0 !== (e = r.get(t, "value"))
          ? e
          : "string" == typeof (e = t.value)
          ? e.replace(St, "")
          : null == e
          ? ""
          : e
        : void 0;
    },
  }),
    ce.extend({
      valHooks: {
        option: {
          get: function (e) {
            var t = ce.find.attr(e, "value");
            return null != t ? t : Tt(ce.text(e));
          },
        },
        select: {
          get: function (e) {
            var t,
              n,
              r,
              i = e.options,
              o = e.selectedIndex,
              a = "select-one" === e.type,
              s = a ? null : [],
              u = a ? o + 1 : i.length;
            for (r = o < 0 ? u : a ? o : 0; r < u; r++)
              if (
                ((n = i[r]).selected || r === o) &&
                !n.disabled &&
                (!n.parentNode.disabled || !fe(n.parentNode, "optgroup"))
              ) {
                if (((t = ce(n).val()), a)) return t;
                s.push(t);
              }
            return s;
          },
          set: function (e, t) {
            var n,
              r,
              i = e.options,
              o = ce.makeArray(t),
              a = i.length;
            while (a--)
              ((r = i[a]).selected =
                -1 < ce.inArray(ce.valHooks.option.get(r), o)) && (n = !0);
            return n || (e.selectedIndex = -1), o;
          },
        },
      },
    }),
    ce.each(["radio", "checkbox"], function () {
      (ce.valHooks[this] = {
        set: function (e, t) {
          if (Array.isArray(t))
            return (e.checked = -1 < ce.inArray(ce(e).val(), t));
        },
      }),
        le.checkOn ||
          (ce.valHooks[this].get = function (e) {
            return null === e.getAttribute("value") ? "on" : e.value;
          });
    });
  var Et = ie.location,
    jt = { guid: Date.now() },
    At = /\?/;
  ce.parseXML = function (e) {
    var t, n;
    if (!e || "string" != typeof e) return null;
    try {
      t = new ie.DOMParser().parseFromString(e, "text/xml");
    } catch (e) {}
    return (
      (n = t && t.getElementsByTagName("parsererror")[0]),
      (t && !n) ||
        ce.error(
          "Invalid XML: " +
            (n
              ? ce
                  .map(n.childNodes, function (e) {
                    return e.textContent;
                  })
                  .join("\n")
              : e)
        ),
      t
    );
  };
  var Dt = /^(?:focusinfocus|focusoutblur)$/,
    Nt = function (e) {
      e.stopPropagation();
    };
  ce.extend(ce.event, {
    trigger: function (e, t, n, r) {
      var i,
        o,
        a,
        s,
        u,
        l,
        c,
        f,
        p = [n || C],
        d = ue.call(e, "type") ? e.type : e,
        h = ue.call(e, "namespace") ? e.namespace.split(".") : [];
      if (
        ((o = f = a = n = n || C),
        3 !== n.nodeType &&
          8 !== n.nodeType &&
          !Dt.test(d + ce.event.triggered) &&
          (-1 < d.indexOf(".") && ((d = (h = d.split(".")).shift()), h.sort()),
          (u = d.indexOf(":") < 0 && "on" + d),
          ((e = e[ce.expando]
            ? e
            : new ce.Event(d, "object" == typeof e && e)).isTrigger = r
            ? 2
            : 3),
          (e.namespace = h.join(".")),
          (e.rnamespace = e.namespace
            ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)")
            : null),
          (e.result = void 0),
          e.target || (e.target = n),
          (t = null == t ? [e] : ce.makeArray(t, [e])),
          (c = ce.event.special[d] || {}),
          r || !c.trigger || !1 !== c.trigger.apply(n, t)))
      ) {
        if (!r && !c.noBubble && !y(n)) {
          for (
            s = c.delegateType || d, Dt.test(s + d) || (o = o.parentNode);
            o;
            o = o.parentNode
          )
            p.push(o), (a = o);
          a === (n.ownerDocument || C) &&
            p.push(a.defaultView || a.parentWindow || ie);
        }
        i = 0;
        while ((o = p[i++]) && !e.isPropagationStopped())
          (f = o),
            (e.type = 1 < i ? s : c.bindType || d),
            (l =
              (_.get(o, "events") || Object.create(null))[e.type] &&
              _.get(o, "handle")) && l.apply(o, t),
            (l = u && o[u]) &&
              l.apply &&
              $(o) &&
              ((e.result = l.apply(o, t)),
              !1 === e.result && e.preventDefault());
        return (
          (e.type = d),
          r ||
            e.isDefaultPrevented() ||
            (c._default && !1 !== c._default.apply(p.pop(), t)) ||
            !$(n) ||
            (u &&
              v(n[d]) &&
              !y(n) &&
              ((a = n[u]) && (n[u] = null),
              (ce.event.triggered = d),
              e.isPropagationStopped() && f.addEventListener(d, Nt),
              n[d](),
              e.isPropagationStopped() && f.removeEventListener(d, Nt),
              (ce.event.triggered = void 0),
              a && (n[u] = a))),
          e.result
        );
      }
    },
    simulate: function (e, t, n) {
      var r = ce.extend(new ce.Event(), n, { type: e, isSimulated: !0 });
      ce.event.trigger(r, null, t);
    },
  }),
    ce.fn.extend({
      trigger: function (e, t) {
        return this.each(function () {
          ce.event.trigger(e, t, this);
        });
      },
      triggerHandler: function (e, t) {
        var n = this[0];
        if (n) return ce.event.trigger(e, t, n, !0);
      },
    });
  var qt = /\[\]$/,
    Lt = /\r?\n/g,
    Ht = /^(?:submit|button|image|reset|file)$/i,
    Ot = /^(?:input|select|textarea|keygen)/i;
  function Pt(n, e, r, i) {
    var t;
    if (Array.isArray(e))
      ce.each(e, function (e, t) {
        r || qt.test(n)
          ? i(n, t)
          : Pt(
              n + "[" + ("object" == typeof t && null != t ? e : "") + "]",
              t,
              r,
              i
            );
      });
    else if (r || "object" !== x(e)) i(n, e);
    else for (t in e) Pt(n + "[" + t + "]", e[t], r, i);
  }
  (ce.param = function (e, t) {
    var n,
      r = [],
      i = function (e, t) {
        var n = v(t) ? t() : t;
        r[r.length] =
          encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
      };
    if (null == e) return "";
    if (Array.isArray(e) || (e.jquery && !ce.isPlainObject(e)))
      ce.each(e, function () {
        i(this.name, this.value);
      });
    else for (n in e) Pt(n, e[n], t, i);
    return r.join("&");
  }),
    ce.fn.extend({
      serialize: function () {
        return ce.param(this.serializeArray());
      },
      serializeArray: function () {
        return this.map(function () {
          var e = ce.prop(this, "elements");
          return e ? ce.makeArray(e) : this;
        })
          .filter(function () {
            var e = this.type;
            return (
              this.name &&
              !ce(this).is(":disabled") &&
              Ot.test(this.nodeName) &&
              !Ht.test(e) &&
              (this.checked || !we.test(e))
            );
          })
          .map(function (e, t) {
            var n = ce(this).val();
            return null == n
              ? null
              : Array.isArray(n)
              ? ce.map(n, function (e) {
                  return { name: t.name, value: e.replace(Lt, "\r\n") };
                })
              : { name: t.name, value: n.replace(Lt, "\r\n") };
          })
          .get();
      },
    });
  var Mt = /%20/g,
    Rt = /#.*$/,
    It = /([?&])_=[^&]*/,
    Wt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
    Ft = /^(?:GET|HEAD)$/,
    $t = /^\/\//,
    Bt = {},
    _t = {},
    zt = "*/".concat("*"),
    Xt = C.createElement("a");
  function Ut(o) {
    return function (e, t) {
      "string" != typeof e && ((t = e), (e = "*"));
      var n,
        r = 0,
        i = e.toLowerCase().match(D) || [];
      if (v(t))
        while ((n = i[r++]))
          "+" === n[0]
            ? ((n = n.slice(1) || "*"), (o[n] = o[n] || []).unshift(t))
            : (o[n] = o[n] || []).push(t);
    };
  }
  function Vt(t, i, o, a) {
    var s = {},
      u = t === _t;
    function l(e) {
      var r;
      return (
        (s[e] = !0),
        ce.each(t[e] || [], function (e, t) {
          var n = t(i, o, a);
          return "string" != typeof n || u || s[n]
            ? u
              ? !(r = n)
              : void 0
            : (i.dataTypes.unshift(n), l(n), !1);
        }),
        r
      );
    }
    return l(i.dataTypes[0]) || (!s["*"] && l("*"));
  }
  function Gt(e, t) {
    var n,
      r,
      i = ce.ajaxSettings.flatOptions || {};
    for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
    return r && ce.extend(!0, e, r), e;
  }
  (Xt.href = Et.href),
    ce.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: Et.href,
        type: "GET",
        isLocal:
          /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
            Et.protocol
          ),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": zt,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": ce.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (e, t) {
        return t ? Gt(Gt(e, ce.ajaxSettings), t) : Gt(ce.ajaxSettings, e);
      },
      ajaxPrefilter: Ut(Bt),
      ajaxTransport: Ut(_t),
      ajax: function (e, t) {
        "object" == typeof e && ((t = e), (e = void 0)), (t = t || {});
        var c,
          f,
          p,
          n,
          d,
          r,
          h,
          g,
          i,
          o,
          v = ce.ajaxSetup({}, t),
          y = v.context || v,
          m = v.context && (y.nodeType || y.jquery) ? ce(y) : ce.event,
          x = ce.Deferred(),
          b = ce.Callbacks("once memory"),
          w = v.statusCode || {},
          a = {},
          s = {},
          u = "canceled",
          T = {
            readyState: 0,
            getResponseHeader: function (e) {
              var t;
              if (h) {
                if (!n) {
                  n = {};
                  while ((t = Wt.exec(p)))
                    n[t[1].toLowerCase() + " "] = (
                      n[t[1].toLowerCase() + " "] || []
                    ).concat(t[2]);
                }
                t = n[e.toLowerCase() + " "];
              }
              return null == t ? null : t.join(", ");
            },
            getAllResponseHeaders: function () {
              return h ? p : null;
            },
            setRequestHeader: function (e, t) {
              return (
                null == h &&
                  ((e = s[e.toLowerCase()] = s[e.toLowerCase()] || e),
                  (a[e] = t)),
                this
              );
            },
            overrideMimeType: function (e) {
              return null == h && (v.mimeType = e), this;
            },
            statusCode: function (e) {
              var t;
              if (e)
                if (h) T.always(e[T.status]);
                else for (t in e) w[t] = [w[t], e[t]];
              return this;
            },
            abort: function (e) {
              var t = e || u;
              return c && c.abort(t), l(0, t), this;
            },
          };
        if (
          (x.promise(T),
          (v.url = ((e || v.url || Et.href) + "").replace(
            $t,
            Et.protocol + "//"
          )),
          (v.type = t.method || t.type || v.method || v.type),
          (v.dataTypes = (v.dataType || "*").toLowerCase().match(D) || [""]),
          null == v.crossDomain)
        ) {
          r = C.createElement("a");
          try {
            (r.href = v.url),
              (r.href = r.href),
              (v.crossDomain =
                Xt.protocol + "//" + Xt.host != r.protocol + "//" + r.host);
          } catch (e) {
            v.crossDomain = !0;
          }
        }
        if (
          (v.data &&
            v.processData &&
            "string" != typeof v.data &&
            (v.data = ce.param(v.data, v.traditional)),
          Vt(Bt, v, t, T),
          h)
        )
          return T;
        for (i in ((g = ce.event && v.global) &&
          0 == ce.active++ &&
          ce.event.trigger("ajaxStart"),
        (v.type = v.type.toUpperCase()),
        (v.hasContent = !Ft.test(v.type)),
        (f = v.url.replace(Rt, "")),
        v.hasContent
          ? v.data &&
            v.processData &&
            0 ===
              (v.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) &&
            (v.data = v.data.replace(Mt, "+"))
          : ((o = v.url.slice(f.length)),
            v.data &&
              (v.processData || "string" == typeof v.data) &&
              ((f += (At.test(f) ? "&" : "?") + v.data), delete v.data),
            !1 === v.cache &&
              ((f = f.replace(It, "$1")),
              (o = (At.test(f) ? "&" : "?") + "_=" + jt.guid++ + o)),
            (v.url = f + o)),
        v.ifModified &&
          (ce.lastModified[f] &&
            T.setRequestHeader("If-Modified-Since", ce.lastModified[f]),
          ce.etag[f] && T.setRequestHeader("If-None-Match", ce.etag[f])),
        ((v.data && v.hasContent && !1 !== v.contentType) || t.contentType) &&
          T.setRequestHeader("Content-Type", v.contentType),
        T.setRequestHeader(
          "Accept",
          v.dataTypes[0] && v.accepts[v.dataTypes[0]]
            ? v.accepts[v.dataTypes[0]] +
                ("*" !== v.dataTypes[0] ? ", " + zt + "; q=0.01" : "")
            : v.accepts["*"]
        ),
        v.headers))
          T.setRequestHeader(i, v.headers[i]);
        if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h))
          return T.abort();
        if (
          ((u = "abort"),
          b.add(v.complete),
          T.done(v.success),
          T.fail(v.error),
          (c = Vt(_t, v, t, T)))
        ) {
          if (((T.readyState = 1), g && m.trigger("ajaxSend", [T, v]), h))
            return T;
          v.async &&
            0 < v.timeout &&
            (d = ie.setTimeout(function () {
              T.abort("timeout");
            }, v.timeout));
          try {
            (h = !1), c.send(a, l);
          } catch (e) {
            if (h) throw e;
            l(-1, e);
          }
        } else l(-1, "No Transport");
        function l(e, t, n, r) {
          var i,
            o,
            a,
            s,
            u,
            l = t;
          h ||
            ((h = !0),
            d && ie.clearTimeout(d),
            (c = void 0),
            (p = r || ""),
            (T.readyState = 0 < e ? 4 : 0),
            (i = (200 <= e && e < 300) || 304 === e),
            n &&
              (s = (function (e, t, n) {
                var r,
                  i,
                  o,
                  a,
                  s = e.contents,
                  u = e.dataTypes;
                while ("*" === u[0])
                  u.shift(),
                    void 0 === r &&
                      (r = e.mimeType || t.getResponseHeader("Content-Type"));
                if (r)
                  for (i in s)
                    if (s[i] && s[i].test(r)) {
                      u.unshift(i);
                      break;
                    }
                if (u[0] in n) o = u[0];
                else {
                  for (i in n) {
                    if (!u[0] || e.converters[i + " " + u[0]]) {
                      o = i;
                      break;
                    }
                    a || (a = i);
                  }
                  o = o || a;
                }
                if (o) return o !== u[0] && u.unshift(o), n[o];
              })(v, T, n)),
            !i &&
              -1 < ce.inArray("script", v.dataTypes) &&
              ce.inArray("json", v.dataTypes) < 0 &&
              (v.converters["text script"] = function () {}),
            (s = (function (e, t, n, r) {
              var i,
                o,
                a,
                s,
                u,
                l = {},
                c = e.dataTypes.slice();
              if (c[1])
                for (a in e.converters) l[a.toLowerCase()] = e.converters[a];
              o = c.shift();
              while (o)
                if (
                  (e.responseFields[o] && (n[e.responseFields[o]] = t),
                  !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                  (u = o),
                  (o = c.shift()))
                )
                  if ("*" === o) o = u;
                  else if ("*" !== u && u !== o) {
                    if (!(a = l[u + " " + o] || l["* " + o]))
                      for (i in l)
                        if (
                          (s = i.split(" "))[1] === o &&
                          (a = l[u + " " + s[0]] || l["* " + s[0]])
                        ) {
                          !0 === a
                            ? (a = l[i])
                            : !0 !== l[i] && ((o = s[0]), c.unshift(s[1]));
                          break;
                        }
                    if (!0 !== a)
                      if (a && e["throws"]) t = a(t);
                      else
                        try {
                          t = a(t);
                        } catch (e) {
                          return {
                            state: "parsererror",
                            error: a
                              ? e
                              : "No conversion from " + u + " to " + o,
                          };
                        }
                  }
              return { state: "success", data: t };
            })(v, s, T, i)),
            i
              ? (v.ifModified &&
                  ((u = T.getResponseHeader("Last-Modified")) &&
                    (ce.lastModified[f] = u),
                  (u = T.getResponseHeader("etag")) && (ce.etag[f] = u)),
                204 === e || "HEAD" === v.type
                  ? (l = "nocontent")
                  : 304 === e
                  ? (l = "notmodified")
                  : ((l = s.state), (o = s.data), (i = !(a = s.error))))
              : ((a = l), (!e && l) || ((l = "error"), e < 0 && (e = 0))),
            (T.status = e),
            (T.statusText = (t || l) + ""),
            i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]),
            T.statusCode(w),
            (w = void 0),
            g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]),
            b.fireWith(y, [T, l]),
            g &&
              (m.trigger("ajaxComplete", [T, v]),
              --ce.active || ce.event.trigger("ajaxStop")));
        }
        return T;
      },
      getJSON: function (e, t, n) {
        return ce.get(e, t, n, "json");
      },
      getScript: function (e, t) {
        return ce.get(e, void 0, t, "script");
      },
    }),
    ce.each(["get", "post"], function (e, i) {
      ce[i] = function (e, t, n, r) {
        return (
          v(t) && ((r = r || n), (n = t), (t = void 0)),
          ce.ajax(
            ce.extend(
              { url: e, type: i, dataType: r, data: t, success: n },
              ce.isPlainObject(e) && e
            )
          )
        );
      };
    }),
    ce.ajaxPrefilter(function (e) {
      var t;
      for (t in e.headers)
        "content-type" === t.toLowerCase() &&
          (e.contentType = e.headers[t] || "");
    }),
    (ce._evalUrl = function (e, t, n) {
      return ce.ajax({
        url: e,
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        converters: { "text script": function () {} },
        dataFilter: function (e) {
          ce.globalEval(e, t, n);
        },
      });
    }),
    ce.fn.extend({
      wrapAll: function (e) {
        var t;
        return (
          this[0] &&
            (v(e) && (e = e.call(this[0])),
            (t = ce(e, this[0].ownerDocument).eq(0).clone(!0)),
            this[0].parentNode && t.insertBefore(this[0]),
            t
              .map(function () {
                var e = this;
                while (e.firstElementChild) e = e.firstElementChild;
                return e;
              })
              .append(this)),
          this
        );
      },
      wrapInner: function (n) {
        return v(n)
          ? this.each(function (e) {
              ce(this).wrapInner(n.call(this, e));
            })
          : this.each(function () {
              var e = ce(this),
                t = e.contents();
              t.length ? t.wrapAll(n) : e.append(n);
            });
      },
      wrap: function (t) {
        var n = v(t);
        return this.each(function (e) {
          ce(this).wrapAll(n ? t.call(this, e) : t);
        });
      },
      unwrap: function (e) {
        return (
          this.parent(e)
            .not("body")
            .each(function () {
              ce(this).replaceWith(this.childNodes);
            }),
          this
        );
      },
    }),
    (ce.expr.pseudos.hidden = function (e) {
      return !ce.expr.pseudos.visible(e);
    }),
    (ce.expr.pseudos.visible = function (e) {
      return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
    }),
    (ce.ajaxSettings.xhr = function () {
      try {
        return new ie.XMLHttpRequest();
      } catch (e) {}
    });
  var Yt = { 0: 200, 1223: 204 },
    Qt = ce.ajaxSettings.xhr();
  (le.cors = !!Qt && "withCredentials" in Qt),
    (le.ajax = Qt = !!Qt),
    ce.ajaxTransport(function (i) {
      var o, a;
      if (le.cors || (Qt && !i.crossDomain))
        return {
          send: function (e, t) {
            var n,
              r = i.xhr();
            if (
              (r.open(i.type, i.url, i.async, i.username, i.password),
              i.xhrFields)
            )
              for (n in i.xhrFields) r[n] = i.xhrFields[n];
            for (n in (i.mimeType &&
              r.overrideMimeType &&
              r.overrideMimeType(i.mimeType),
            i.crossDomain ||
              e["X-Requested-With"] ||
              (e["X-Requested-With"] = "XMLHttpRequest"),
            e))
              r.setRequestHeader(n, e[n]);
            (o = function (e) {
              return function () {
                o &&
                  ((o =
                    a =
                    r.onload =
                    r.onerror =
                    r.onabort =
                    r.ontimeout =
                    r.onreadystatechange =
                      null),
                  "abort" === e
                    ? r.abort()
                    : "error" === e
                    ? "number" != typeof r.status
                      ? t(0, "error")
                      : t(r.status, r.statusText)
                    : t(
                        Yt[r.status] || r.status,
                        r.statusText,
                        "text" !== (r.responseType || "text") ||
                          "string" != typeof r.responseText
                          ? { binary: r.response }
                          : { text: r.responseText },
                        r.getAllResponseHeaders()
                      ));
              };
            }),
              (r.onload = o()),
              (a = r.onerror = r.ontimeout = o("error")),
              void 0 !== r.onabort
                ? (r.onabort = a)
                : (r.onreadystatechange = function () {
                    4 === r.readyState &&
                      ie.setTimeout(function () {
                        o && a();
                      });
                  }),
              (o = o("abort"));
            try {
              r.send((i.hasContent && i.data) || null);
            } catch (e) {
              if (o) throw e;
            }
          },
          abort: function () {
            o && o();
          },
        };
    }),
    ce.ajaxPrefilter(function (e) {
      e.crossDomain && (e.contents.script = !1);
    }),
    ce.ajaxSetup({
      accepts: {
        script:
          "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
      },
      contents: { script: /\b(?:java|ecma)script\b/ },
      converters: {
        "text script": function (e) {
          return ce.globalEval(e), e;
        },
      },
    }),
    ce.ajaxPrefilter("script", function (e) {
      void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
    }),
    ce.ajaxTransport("script", function (n) {
      var r, i;
      if (n.crossDomain || n.scriptAttrs)
        return {
          send: function (e, t) {
            (r = ce("<script>")
              .attr(n.scriptAttrs || {})
              .prop({ charset: n.scriptCharset, src: n.url })
              .on(
                "load error",
                (i = function (e) {
                  r.remove(),
                    (i = null),
                    e && t("error" === e.type ? 404 : 200, e.type);
                })
              )),
              C.head.appendChild(r[0]);
          },
          abort: function () {
            i && i();
          },
        };
    });
  var Jt,
    Kt = [],
    Zt = /(=)\?(?=&|$)|\?\?/;
  ce.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function () {
      var e = Kt.pop() || ce.expando + "_" + jt.guid++;
      return (this[e] = !0), e;
    },
  }),
    ce.ajaxPrefilter("json jsonp", function (e, t, n) {
      var r,
        i,
        o,
        a =
          !1 !== e.jsonp &&
          (Zt.test(e.url)
            ? "url"
            : "string" == typeof e.data &&
              0 ===
                (e.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) &&
              Zt.test(e.data) &&
              "data");
      if (a || "jsonp" === e.dataTypes[0])
        return (
          (r = e.jsonpCallback =
            v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback),
          a
            ? (e[a] = e[a].replace(Zt, "$1" + r))
            : !1 !== e.jsonp &&
              (e.url += (At.test(e.url) ? "&" : "?") + e.jsonp + "=" + r),
          (e.converters["script json"] = function () {
            return o || ce.error(r + " was not called"), o[0];
          }),
          (e.dataTypes[0] = "json"),
          (i = ie[r]),
          (ie[r] = function () {
            o = arguments;
          }),
          n.always(function () {
            void 0 === i ? ce(ie).removeProp(r) : (ie[r] = i),
              e[r] && ((e.jsonpCallback = t.jsonpCallback), Kt.push(r)),
              o && v(i) && i(o[0]),
              (o = i = void 0);
          }),
          "script"
        );
    }),
    (le.createHTMLDocument =
      (((Jt = C.implementation.createHTMLDocument("").body).innerHTML =
        "<form></form><form></form>"),
      2 === Jt.childNodes.length)),
    (ce.parseHTML = function (e, t, n) {
      return "string" != typeof e
        ? []
        : ("boolean" == typeof t && ((n = t), (t = !1)),
          t ||
            (le.createHTMLDocument
              ? (((r = (t =
                  C.implementation.createHTMLDocument("")).createElement(
                  "base"
                )).href = C.location.href),
                t.head.appendChild(r))
              : (t = C)),
          (o = !n && []),
          (i = w.exec(e))
            ? [t.createElement(i[1])]
            : ((i = Ae([e], t, o)),
              o && o.length && ce(o).remove(),
              ce.merge([], i.childNodes)));
      var r, i, o;
    }),
    (ce.fn.load = function (e, t, n) {
      var r,
        i,
        o,
        a = this,
        s = e.indexOf(" ");
      return (
        -1 < s && ((r = Tt(e.slice(s))), (e = e.slice(0, s))),
        v(t)
          ? ((n = t), (t = void 0))
          : t && "object" == typeof t && (i = "POST"),
        0 < a.length &&
          ce
            .ajax({ url: e, type: i || "GET", dataType: "html", data: t })
            .done(function (e) {
              (o = arguments),
                a.html(r ? ce("<div>").append(ce.parseHTML(e)).find(r) : e);
            })
            .always(
              n &&
                function (e, t) {
                  a.each(function () {
                    n.apply(this, o || [e.responseText, t, e]);
                  });
                }
            ),
        this
      );
    }),
    (ce.expr.pseudos.animated = function (t) {
      return ce.grep(ce.timers, function (e) {
        return t === e.elem;
      }).length;
    }),
    (ce.offset = {
      setOffset: function (e, t, n) {
        var r,
          i,
          o,
          a,
          s,
          u,
          l = ce.css(e, "position"),
          c = ce(e),
          f = {};
        "static" === l && (e.style.position = "relative"),
          (s = c.offset()),
          (o = ce.css(e, "top")),
          (u = ce.css(e, "left")),
          ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto")
            ? ((a = (r = c.position()).top), (i = r.left))
            : ((a = parseFloat(o) || 0), (i = parseFloat(u) || 0)),
          v(t) && (t = t.call(e, n, ce.extend({}, s))),
          null != t.top && (f.top = t.top - s.top + a),
          null != t.left && (f.left = t.left - s.left + i),
          "using" in t ? t.using.call(e, f) : c.css(f);
      },
    }),
    ce.fn.extend({
      offset: function (t) {
        if (arguments.length)
          return void 0 === t
            ? this
            : this.each(function (e) {
                ce.offset.setOffset(this, t, e);
              });
        var e,
          n,
          r = this[0];
        return r
          ? r.getClientRects().length
            ? ((e = r.getBoundingClientRect()),
              (n = r.ownerDocument.defaultView),
              { top: e.top + n.pageYOffset, left: e.left + n.pageXOffset })
            : { top: 0, left: 0 }
          : void 0;
      },
      position: function () {
        if (this[0]) {
          var e,
            t,
            n,
            r = this[0],
            i = { top: 0, left: 0 };
          if ("fixed" === ce.css(r, "position")) t = r.getBoundingClientRect();
          else {
            (t = this.offset()),
              (n = r.ownerDocument),
              (e = r.offsetParent || n.documentElement);
            while (
              e &&
              (e === n.body || e === n.documentElement) &&
              "static" === ce.css(e, "position")
            )
              e = e.parentNode;
            e &&
              e !== r &&
              1 === e.nodeType &&
              (((i = ce(e).offset()).top += ce.css(e, "borderTopWidth", !0)),
              (i.left += ce.css(e, "borderLeftWidth", !0)));
          }
          return {
            top: t.top - i.top - ce.css(r, "marginTop", !0),
            left: t.left - i.left - ce.css(r, "marginLeft", !0),
          };
        }
      },
      offsetParent: function () {
        return this.map(function () {
          var e = this.offsetParent;
          while (e && "static" === ce.css(e, "position")) e = e.offsetParent;
          return e || J;
        });
      },
    }),
    ce.each(
      { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
      function (t, i) {
        var o = "pageYOffset" === i;
        ce.fn[t] = function (e) {
          return M(
            this,
            function (e, t, n) {
              var r;
              if (
                (y(e) ? (r = e) : 9 === e.nodeType && (r = e.defaultView),
                void 0 === n)
              )
                return r ? r[i] : e[t];
              r
                ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset)
                : (e[t] = n);
            },
            t,
            e,
            arguments.length
          );
        };
      }
    ),
    ce.each(["top", "left"], function (e, n) {
      ce.cssHooks[n] = Ye(le.pixelPosition, function (e, t) {
        if (t)
          return (t = Ge(e, n)), _e.test(t) ? ce(e).position()[n] + "px" : t;
      });
    }),
    ce.each({ Height: "height", Width: "width" }, function (a, s) {
      ce.each(
        { padding: "inner" + a, content: s, "": "outer" + a },
        function (r, o) {
          ce.fn[o] = function (e, t) {
            var n = arguments.length && (r || "boolean" != typeof e),
              i = r || (!0 === e || !0 === t ? "margin" : "border");
            return M(
              this,
              function (e, t, n) {
                var r;
                return y(e)
                  ? 0 === o.indexOf("outer")
                    ? e["inner" + a]
                    : e.document.documentElement["client" + a]
                  : 9 === e.nodeType
                  ? ((r = e.documentElement),
                    Math.max(
                      e.body["scroll" + a],
                      r["scroll" + a],
                      e.body["offset" + a],
                      r["offset" + a],
                      r["client" + a]
                    ))
                  : void 0 === n
                  ? ce.css(e, t, i)
                  : ce.style(e, t, n, i);
              },
              s,
              n ? e : void 0,
              n
            );
          };
        }
      );
    }),
    ce.each(
      [
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend",
      ],
      function (e, t) {
        ce.fn[t] = function (e) {
          return this.on(t, e);
        };
      }
    ),
    ce.fn.extend({
      bind: function (e, t, n) {
        return this.on(e, null, t, n);
      },
      unbind: function (e, t) {
        return this.off(e, null, t);
      },
      delegate: function (e, t, n, r) {
        return this.on(t, e, n, r);
      },
      undelegate: function (e, t, n) {
        return 1 === arguments.length
          ? this.off(e, "**")
          : this.off(t, e || "**", n);
      },
      hover: function (e, t) {
        return this.on("mouseenter", e).on("mouseleave", t || e);
      },
    }),
    ce.each(
      "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
        " "
      ),
      function (e, n) {
        ce.fn[n] = function (e, t) {
          return 0 < arguments.length
            ? this.on(n, null, e, t)
            : this.trigger(n);
        };
      }
    );
  var en = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
  (ce.proxy = function (e, t) {
    var n, r, i;
    if (("string" == typeof t && ((n = e[t]), (t = e), (e = n)), v(e)))
      return (
        (r = ae.call(arguments, 2)),
        ((i = function () {
          return e.apply(t || this, r.concat(ae.call(arguments)));
        }).guid = e.guid =
          e.guid || ce.guid++),
        i
      );
  }),
    (ce.holdReady = function (e) {
      e ? ce.readyWait++ : ce.ready(!0);
    }),
    (ce.isArray = Array.isArray),
    (ce.parseJSON = JSON.parse),
    (ce.nodeName = fe),
    (ce.isFunction = v),
    (ce.isWindow = y),
    (ce.camelCase = F),
    (ce.type = x),
    (ce.now = Date.now),
    (ce.isNumeric = function (e) {
      var t = ce.type(e);
      return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
    }),
    (ce.trim = function (e) {
      return null == e ? "" : (e + "").replace(en, "$1");
    }),
    "function" == typeof define &&
      define.amd &&
      define("jquery", [], function () {
        return ce;
      });
  var tn = ie.jQuery,
    nn = ie.$;
  return (
    (ce.noConflict = function (e) {
      return (
        ie.$ === ce && (ie.$ = nn),
        e && ie.jQuery === ce && (ie.jQuery = tn),
        ce
      );
    }),
    "undefined" == typeof e && (ie.jQuery = ie.$ = ce),
    ce
  );
});
/**
 * Swiper 11.0.5
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2023 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: November 22, 2023
 */

var Swiper = (function () {
  "use strict";

  /**
   * SSR Window 4.0.2
   * Better handling for window object in SSR environment
   * https://github.com/nolimits4web/ssr-window
   *
   * Copyright 2021, Vladimir Kharlampidi
   *
   * Licensed under MIT
   *
   * Released on: December 13, 2021
   */
  /* eslint-disable no-param-reassign */
  function isObject$1(obj) {
    return (
      obj !== null &&
      typeof obj === "object" &&
      "constructor" in obj &&
      obj.constructor === Object
    );
  }
  function extend$1(target, src) {
    if (target === void 0) {
      target = {};
    }
    if (src === void 0) {
      src = {};
    }
    Object.keys(src).forEach((key) => {
      if (typeof target[key] === "undefined") target[key] = src[key];
      else if (
        isObject$1(src[key]) &&
        isObject$1(target[key]) &&
        Object.keys(src[key]).length > 0
      ) {
        extend$1(target[key], src[key]);
      }
    });
  }
  const ssrDocument = {
    body: {},
    addEventListener() {},
    removeEventListener() {},
    activeElement: {
      blur() {},
      nodeName: "",
    },
    querySelector() {
      return null;
    },
    querySelectorAll() {
      return [];
    },
    getElementById() {
      return null;
    },
    createEvent() {
      return {
        initEvent() {},
      };
    },
    createElement() {
      return {
        children: [],
        childNodes: [],
        style: {},
        setAttribute() {},
        getElementsByTagName() {
          return [];
        },
      };
    },
    createElementNS() {
      return {};
    },
    importNode() {
      return null;
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
  };
  function getDocument() {
    const doc = typeof document !== "undefined" ? document : {};
    extend$1(doc, ssrDocument);
    return doc;
  }
  const ssrWindow = {
    document: ssrDocument,
    navigator: {
      userAgent: "",
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
    history: {
      replaceState() {},
      pushState() {},
      go() {},
      back() {},
    },
    CustomEvent: function CustomEvent() {
      return this;
    },
    addEventListener() {},
    removeEventListener() {},
    getComputedStyle() {
      return {
        getPropertyValue() {
          return "";
        },
      };
    },
    Image() {},
    Date() {},
    screen: {},
    setTimeout() {},
    clearTimeout() {},
    matchMedia() {
      return {};
    },
    requestAnimationFrame(callback) {
      if (typeof setTimeout === "undefined") {
        callback();
        return null;
      }
      return setTimeout(callback, 0);
    },
    cancelAnimationFrame(id) {
      if (typeof setTimeout === "undefined") {
        return;
      }
      clearTimeout(id);
    },
  };
  function getWindow() {
    const win = typeof window !== "undefined" ? window : {};
    extend$1(win, ssrWindow);
    return win;
  }

  function classesToTokens(classes) {
    if (classes === void 0) {
      classes = "";
    }
    return classes
      .trim()
      .split(" ")
      .filter((c) => !!c.trim());
  }

  function deleteProps(obj) {
    const object = obj;
    Object.keys(object).forEach((key) => {
      try {
        object[key] = null;
      } catch (e) {
        // no getter for object
      }
      try {
        delete object[key];
      } catch (e) {
        // something got wrong
      }
    });
  }
  function nextTick(callback, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    return setTimeout(callback, delay);
  }
  function now() {
    return Date.now();
  }
  function getComputedStyle$1(el) {
    const window = getWindow();
    let style;
    if (window.getComputedStyle) {
      style = window.getComputedStyle(el, null);
    }
    if (!style && el.currentStyle) {
      style = el.currentStyle;
    }
    if (!style) {
      style = el.style;
    }
    return style;
  }
  function getTranslate(el, axis) {
    if (axis === void 0) {
      axis = "x";
    }
    const window = getWindow();
    let matrix;
    let curTransform;
    let transformMatrix;
    const curStyle = getComputedStyle$1(el);
    if (window.WebKitCSSMatrix) {
      curTransform = curStyle.transform || curStyle.webkitTransform;
      if (curTransform.split(",").length > 6) {
        curTransform = curTransform
          .split(", ")
          .map((a) => a.replace(",", "."))
          .join(", ");
      }
      // Some old versions of Webkit choke when 'none' is passed; pass
      // empty string instead in this case
      transformMatrix = new window.WebKitCSSMatrix(
        curTransform === "none" ? "" : curTransform
      );
    } else {
      transformMatrix =
        curStyle.MozTransform ||
        curStyle.OTransform ||
        curStyle.MsTransform ||
        curStyle.msTransform ||
        curStyle.transform ||
        curStyle
          .getPropertyValue("transform")
          .replace("translate(", "matrix(1, 0, 0, 1,");
      matrix = transformMatrix.toString().split(",");
    }
    if (axis === "x") {
      // Latest Chrome and webkits Fix
      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;
      // Crazy IE10 Matrix
      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);
      // Normal Browsers
      else curTransform = parseFloat(matrix[4]);
    }
    if (axis === "y") {
      // Latest Chrome and webkits Fix
      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;
      // Crazy IE10 Matrix
      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);
      // Normal Browsers
      else curTransform = parseFloat(matrix[5]);
    }
    return curTransform || 0;
  }
  function isObject(o) {
    return (
      typeof o === "object" &&
      o !== null &&
      o.constructor &&
      Object.prototype.toString.call(o).slice(8, -1) === "Object"
    );
  }
  function isNode(node) {
    // eslint-disable-next-line
    if (
      typeof window !== "undefined" &&
      typeof window.HTMLElement !== "undefined"
    ) {
      return node instanceof HTMLElement;
    }
    return node && (node.nodeType === 1 || node.nodeType === 11);
  }
  function extend() {
    const to = Object(arguments.length <= 0 ? undefined : arguments[0]);
    const noExtend = ["__proto__", "constructor", "prototype"];
    for (let i = 1; i < arguments.length; i += 1) {
      const nextSource =
        i < 0 || arguments.length <= i ? undefined : arguments[i];
      if (
        nextSource !== undefined &&
        nextSource !== null &&
        !isNode(nextSource)
      ) {
        const keysArray = Object.keys(Object(nextSource)).filter(
          (key) => noExtend.indexOf(key) < 0
        );
        for (
          let nextIndex = 0, len = keysArray.length;
          nextIndex < len;
          nextIndex += 1
        ) {
          const nextKey = keysArray[nextIndex];
          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
          if (desc !== undefined && desc.enumerable) {
            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
              if (nextSource[nextKey].__swiper__) {
                to[nextKey] = nextSource[nextKey];
              } else {
                extend(to[nextKey], nextSource[nextKey]);
              }
            } else if (
              !isObject(to[nextKey]) &&
              isObject(nextSource[nextKey])
            ) {
              to[nextKey] = {};
              if (nextSource[nextKey].__swiper__) {
                to[nextKey] = nextSource[nextKey];
              } else {
                extend(to[nextKey], nextSource[nextKey]);
              }
            } else {
              to[nextKey] = nextSource[nextKey];
            }
          }
        }
      }
    }
    return to;
  }
  function setCSSProperty(el, varName, varValue) {
    el.style.setProperty(varName, varValue);
  }
  function animateCSSModeScroll(_ref) {
    let { swiper, targetPosition, side } = _ref;
    const window = getWindow();
    const startPosition = -swiper.translate;
    let startTime = null;
    let time;
    const duration = swiper.params.speed;
    swiper.wrapperEl.style.scrollSnapType = "none";
    window.cancelAnimationFrame(swiper.cssModeFrameID);
    const dir = targetPosition > startPosition ? "next" : "prev";
    const isOutOfBound = (current, target) => {
      return (
        (dir === "next" && current >= target) ||
        (dir === "prev" && current <= target)
      );
    };
    const animate = () => {
      time = new Date().getTime();
      if (startTime === null) {
        startTime = time;
      }
      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
      let currentPosition =
        startPosition + easeProgress * (targetPosition - startPosition);
      if (isOutOfBound(currentPosition, targetPosition)) {
        currentPosition = targetPosition;
      }
      swiper.wrapperEl.scrollTo({
        [side]: currentPosition,
      });
      if (isOutOfBound(currentPosition, targetPosition)) {
        swiper.wrapperEl.style.overflow = "hidden";
        swiper.wrapperEl.style.scrollSnapType = "";
        setTimeout(() => {
          swiper.wrapperEl.style.overflow = "";
          swiper.wrapperEl.scrollTo({
            [side]: currentPosition,
          });
        });
        window.cancelAnimationFrame(swiper.cssModeFrameID);
        return;
      }
      swiper.cssModeFrameID = window.requestAnimationFrame(animate);
    };
    animate();
  }
  function getSlideTransformEl(slideEl) {
    return (
      slideEl.querySelector(".swiper-slide-transform") ||
      (slideEl.shadowRoot &&
        slideEl.shadowRoot.querySelector(".swiper-slide-transform")) ||
      slideEl
    );
  }
  function elementChildren(element, selector) {
    if (selector === void 0) {
      selector = "";
    }
    return [...element.children].filter((el) => el.matches(selector));
  }
  function showWarning(text) {
    try {
      console.warn(text);
      return;
    } catch (err) {
      // err
    }
  }
  function createElement(tag, classes) {
    if (classes === void 0) {
      classes = [];
    }
    const el = document.createElement(tag);
    el.classList.add(
      ...(Array.isArray(classes) ? classes : classesToTokens(classes))
    );
    return el;
  }
  function elementOffset(el) {
    const window = getWindow();
    const document = getDocument();
    const box = el.getBoundingClientRect();
    const body = document.body;
    const clientTop = el.clientTop || body.clientTop || 0;
    const clientLeft = el.clientLeft || body.clientLeft || 0;
    const scrollTop = el === window ? window.scrollY : el.scrollTop;
    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;
    return {
      top: box.top + scrollTop - clientTop,
      left: box.left + scrollLeft - clientLeft,
    };
  }
  function elementPrevAll(el, selector) {
    const prevEls = [];
    while (el.previousElementSibling) {
      const prev = el.previousElementSibling; // eslint-disable-line
      if (selector) {
        if (prev.matches(selector)) prevEls.push(prev);
      } else prevEls.push(prev);
      el = prev;
    }
    return prevEls;
  }
  function elementNextAll(el, selector) {
    const nextEls = [];
    while (el.nextElementSibling) {
      const next = el.nextElementSibling; // eslint-disable-line
      if (selector) {
        if (next.matches(selector)) nextEls.push(next);
      } else nextEls.push(next);
      el = next;
    }
    return nextEls;
  }
  function elementStyle(el, prop) {
    const window = getWindow();
    return window.getComputedStyle(el, null).getPropertyValue(prop);
  }
  function elementIndex(el) {
    let child = el;
    let i;
    if (child) {
      i = 0;
      // eslint-disable-next-line
      while ((child = child.previousSibling) !== null) {
        if (child.nodeType === 1) i += 1;
      }
      return i;
    }
    return undefined;
  }
  function elementParents(el, selector) {
    const parents = []; // eslint-disable-line
    let parent = el.parentElement; // eslint-disable-line
    while (parent) {
      if (selector) {
        if (parent.matches(selector)) parents.push(parent);
      } else {
        parents.push(parent);
      }
      parent = parent.parentElement;
    }
    return parents;
  }
  function elementTransitionEnd(el, callback) {
    function fireCallBack(e) {
      if (e.target !== el) return;
      callback.call(el, e);
      el.removeEventListener("transitionend", fireCallBack);
    }
    if (callback) {
      el.addEventListener("transitionend", fireCallBack);
    }
  }
  function elementOuterSize(el, size, includeMargins) {
    const window = getWindow();
    if (includeMargins) {
      return (
        el[size === "width" ? "offsetWidth" : "offsetHeight"] +
        parseFloat(
          window
            .getComputedStyle(el, null)
            .getPropertyValue(size === "width" ? "margin-right" : "margin-top")
        ) +
        parseFloat(
          window
            .getComputedStyle(el, null)
            .getPropertyValue(
              size === "width" ? "margin-left" : "margin-bottom"
            )
        )
      );
    }
    return el.offsetWidth;
  }

  let support;
  function calcSupport() {
    const window = getWindow();
    const document = getDocument();
    return {
      smoothScroll:
        document.documentElement &&
        document.documentElement.style &&
        "scrollBehavior" in document.documentElement.style,
      touch: !!(
        "ontouchstart" in window ||
        (window.DocumentTouch && document instanceof window.DocumentTouch)
      ),
    };
  }
  function getSupport() {
    if (!support) {
      support = calcSupport();
    }
    return support;
  }

  let deviceCached;
  function calcDevice(_temp) {
    let { userAgent } = _temp === void 0 ? {} : _temp;
    const support = getSupport();
    const window = getWindow();
    const platform = window.navigator.platform;
    const ua = userAgent || window.navigator.userAgent;
    const device = {
      ios: false,
      android: false,
    };
    const screenWidth = window.screen.width;
    const screenHeight = window.screen.height;
    const android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line
    let ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    const ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    const iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
    const windows = platform === "Win32";
    let macos = platform === "MacIntel";

    // iPadOs 13 fix
    const iPadScreens = [
      "1024x1366",
      "1366x1024",
      "834x1194",
      "1194x834",
      "834x1112",
      "1112x834",
      "768x1024",
      "1024x768",
      "820x1180",
      "1180x820",
      "810x1080",
      "1080x810",
    ];
    if (
      !ipad &&
      macos &&
      support.touch &&
      iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0
    ) {
      ipad = ua.match(/(Version)\/([\d.]+)/);
      if (!ipad) ipad = [0, 1, "13_0_0"];
      macos = false;
    }

    // Android
    if (android && !windows) {
      device.os = "android";
      device.android = true;
    }
    if (ipad || iphone || ipod) {
      device.os = "ios";
      device.ios = true;
    }

    // Export object
    return device;
  }
  function getDevice(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }
    if (!deviceCached) {
      deviceCached = calcDevice(overrides);
    }
    return deviceCached;
  }

  let browser;
  function calcBrowser() {
    const window = getWindow();
    let needPerspectiveFix = false;
    function isSafari() {
      const ua = window.navigator.userAgent.toLowerCase();
      return (
        ua.indexOf("safari") >= 0 &&
        ua.indexOf("chrome") < 0 &&
        ua.indexOf("android") < 0
      );
    }
    if (isSafari()) {
      const ua = String(window.navigator.userAgent);
      if (ua.includes("Version/")) {
        const [major, minor] = ua
          .split("Version/")[1]
          .split(" ")[0]
          .split(".")
          .map((num) => Number(num));
        needPerspectiveFix = major < 16 || (major === 16 && minor < 2);
      }
    }
    return {
      isSafari: needPerspectiveFix || isSafari(),
      needPerspectiveFix,
      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
        window.navigator.userAgent
      ),
    };
  }
  function getBrowser() {
    if (!browser) {
      browser = calcBrowser();
    }
    return browser;
  }

  function Resize(_ref) {
    let { swiper, on, emit } = _ref;
    const window = getWindow();
    let observer = null;
    let animationFrame = null;
    const resizeHandler = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized) return;
      emit("beforeResize");
      emit("resize");
    };
    const createObserver = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized) return;
      observer = new ResizeObserver((entries) => {
        animationFrame = window.requestAnimationFrame(() => {
          const { width, height } = swiper;
          let newWidth = width;
          let newHeight = height;
          entries.forEach((_ref2) => {
            let { contentBoxSize, contentRect, target } = _ref2;
            if (target && target !== swiper.el) return;
            newWidth = contentRect
              ? contentRect.width
              : (contentBoxSize[0] || contentBoxSize).inlineSize;
            newHeight = contentRect
              ? contentRect.height
              : (contentBoxSize[0] || contentBoxSize).blockSize;
          });
          if (newWidth !== width || newHeight !== height) {
            resizeHandler();
          }
        });
      });
      observer.observe(swiper.el);
    };
    const removeObserver = () => {
      if (animationFrame) {
        window.cancelAnimationFrame(animationFrame);
      }
      if (observer && observer.unobserve && swiper.el) {
        observer.unobserve(swiper.el);
        observer = null;
      }
    };
    const orientationChangeHandler = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized) return;
      emit("orientationchange");
    };
    on("init", () => {
      if (
        swiper.params.resizeObserver &&
        typeof window.ResizeObserver !== "undefined"
      ) {
        createObserver();
        return;
      }
      window.addEventListener("resize", resizeHandler);
      window.addEventListener("orientationchange", orientationChangeHandler);
    });
    on("destroy", () => {
      removeObserver();
      window.removeEventListener("resize", resizeHandler);
      window.removeEventListener("orientationchange", orientationChangeHandler);
    });
  }

  function Observer(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const observers = [];
    const window = getWindow();
    const attach = function (target, options) {
      if (options === void 0) {
        options = {};
      }
      const ObserverFunc =
        window.MutationObserver || window.WebkitMutationObserver;
      const observer = new ObserverFunc((mutations) => {
        // The observerUpdate event should only be triggered
        // once despite the number of mutations.  Additional
        // triggers are redundant and are very costly
        if (swiper.__preventObserver__) return;
        if (mutations.length === 1) {
          emit("observerUpdate", mutations[0]);
          return;
        }
        const observerUpdate = function observerUpdate() {
          emit("observerUpdate", mutations[0]);
        };
        if (window.requestAnimationFrame) {
          window.requestAnimationFrame(observerUpdate);
        } else {
          window.setTimeout(observerUpdate, 0);
        }
      });
      observer.observe(target, {
        attributes:
          typeof options.attributes === "undefined" ? true : options.attributes,
        childList:
          typeof options.childList === "undefined" ? true : options.childList,
        characterData:
          typeof options.characterData === "undefined"
            ? true
            : options.characterData,
      });
      observers.push(observer);
    };
    const init = () => {
      if (!swiper.params.observer) return;
      if (swiper.params.observeParents) {
        const containerParents = elementParents(swiper.hostEl);
        for (let i = 0; i < containerParents.length; i += 1) {
          attach(containerParents[i]);
        }
      }
      // Observe container
      attach(swiper.hostEl, {
        childList: swiper.params.observeSlideChildren,
      });

      // Observe wrapper
      attach(swiper.wrapperEl, {
        attributes: false,
      });
    };
    const destroy = () => {
      observers.forEach((observer) => {
        observer.disconnect();
      });
      observers.splice(0, observers.length);
    };
    extendParams({
      observer: false,
      observeParents: false,
      observeSlideChildren: false,
    });
    on("init", init);
    on("destroy", destroy);
  }

  /* eslint-disable no-underscore-dangle */

  var eventsEmitter = {
    on(events, handler, priority) {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (typeof handler !== "function") return self;
      const method = priority ? "unshift" : "push";
      events.split(" ").forEach((event) => {
        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];
        self.eventsListeners[event][method](handler);
      });
      return self;
    },
    once(events, handler, priority) {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (typeof handler !== "function") return self;
      function onceHandler() {
        self.off(events, onceHandler);
        if (onceHandler.__emitterProxy) {
          delete onceHandler.__emitterProxy;
        }
        for (
          var _len = arguments.length, args = new Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          args[_key] = arguments[_key];
        }
        handler.apply(self, args);
      }
      onceHandler.__emitterProxy = handler;
      return self.on(events, onceHandler, priority);
    },
    onAny(handler, priority) {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (typeof handler !== "function") return self;
      const method = priority ? "unshift" : "push";
      if (self.eventsAnyListeners.indexOf(handler) < 0) {
        self.eventsAnyListeners[method](handler);
      }
      return self;
    },
    offAny(handler) {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (!self.eventsAnyListeners) return self;
      const index = self.eventsAnyListeners.indexOf(handler);
      if (index >= 0) {
        self.eventsAnyListeners.splice(index, 1);
      }
      return self;
    },
    off(events, handler) {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (!self.eventsListeners) return self;
      events.split(" ").forEach((event) => {
        if (typeof handler === "undefined") {
          self.eventsListeners[event] = [];
        } else if (self.eventsListeners[event]) {
          self.eventsListeners[event].forEach((eventHandler, index) => {
            if (
              eventHandler === handler ||
              (eventHandler.__emitterProxy &&
                eventHandler.__emitterProxy === handler)
            ) {
              self.eventsListeners[event].splice(index, 1);
            }
          });
        }
      });
      return self;
    },
    emit() {
      const self = this;
      if (!self.eventsListeners || self.destroyed) return self;
      if (!self.eventsListeners) return self;
      let events;
      let data;
      let context;
      for (
        var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
        _key2 < _len2;
        _key2++
      ) {
        args[_key2] = arguments[_key2];
      }
      if (typeof args[0] === "string" || Array.isArray(args[0])) {
        events = args[0];
        data = args.slice(1, args.length);
        context = self;
      } else {
        events = args[0].events;
        data = args[0].data;
        context = args[0].context || self;
      }
      data.unshift(context);
      const eventsArray = Array.isArray(events) ? events : events.split(" ");
      eventsArray.forEach((event) => {
        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {
          self.eventsAnyListeners.forEach((eventHandler) => {
            eventHandler.apply(context, [event, ...data]);
          });
        }
        if (self.eventsListeners && self.eventsListeners[event]) {
          self.eventsListeners[event].forEach((eventHandler) => {
            eventHandler.apply(context, data);
          });
        }
      });
      return self;
    },
  };

  function updateSize() {
    const swiper = this;
    let width;
    let height;
    const el = swiper.el;
    if (
      typeof swiper.params.width !== "undefined" &&
      swiper.params.width !== null
    ) {
      width = swiper.params.width;
    } else {
      width = el.clientWidth;
    }
    if (
      typeof swiper.params.height !== "undefined" &&
      swiper.params.height !== null
    ) {
      height = swiper.params.height;
    } else {
      height = el.clientHeight;
    }
    if (
      (width === 0 && swiper.isHorizontal()) ||
      (height === 0 && swiper.isVertical())
    ) {
      return;
    }

    // Subtract paddings
    width =
      width -
      parseInt(elementStyle(el, "padding-left") || 0, 10) -
      parseInt(elementStyle(el, "padding-right") || 0, 10);
    height =
      height -
      parseInt(elementStyle(el, "padding-top") || 0, 10) -
      parseInt(elementStyle(el, "padding-bottom") || 0, 10);
    if (Number.isNaN(width)) width = 0;
    if (Number.isNaN(height)) height = 0;
    Object.assign(swiper, {
      width,
      height,
      size: swiper.isHorizontal() ? width : height,
    });
  }

  function updateSlides() {
    const swiper = this;
    function getDirectionPropertyValue(node, label) {
      return parseFloat(
        node.getPropertyValue(swiper.getDirectionLabel(label)) || 0
      );
    }
    const params = swiper.params;
    const {
      wrapperEl,
      slidesEl,
      size: swiperSize,
      rtlTranslate: rtl,
      wrongRTL,
    } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    const previousSlidesLength = isVirtual
      ? swiper.virtual.slides.length
      : swiper.slides.length;
    const slides = elementChildren(
      slidesEl,
      `.${swiper.params.slideClass}, swiper-slide`
    );
    const slidesLength = isVirtual
      ? swiper.virtual.slides.length
      : slides.length;
    let snapGrid = [];
    const slidesGrid = [];
    const slidesSizesGrid = [];
    let offsetBefore = params.slidesOffsetBefore;
    if (typeof offsetBefore === "function") {
      offsetBefore = params.slidesOffsetBefore.call(swiper);
    }
    let offsetAfter = params.slidesOffsetAfter;
    if (typeof offsetAfter === "function") {
      offsetAfter = params.slidesOffsetAfter.call(swiper);
    }
    const previousSnapGridLength = swiper.snapGrid.length;
    const previousSlidesGridLength = swiper.slidesGrid.length;
    let spaceBetween = params.spaceBetween;
    let slidePosition = -offsetBefore;
    let prevSlideSize = 0;
    let index = 0;
    if (typeof swiperSize === "undefined") {
      return;
    }
    if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
      spaceBetween =
        (parseFloat(spaceBetween.replace("%", "")) / 100) * swiperSize;
    } else if (typeof spaceBetween === "string") {
      spaceBetween = parseFloat(spaceBetween);
    }
    swiper.virtualSize = -spaceBetween;

    // reset margins
    slides.forEach((slideEl) => {
      if (rtl) {
        slideEl.style.marginLeft = "";
      } else {
        slideEl.style.marginRight = "";
      }
      slideEl.style.marginBottom = "";
      slideEl.style.marginTop = "";
    });

    // reset cssMode offsets
    if (params.centeredSlides && params.cssMode) {
      setCSSProperty(wrapperEl, "--swiper-centered-offset-before", "");
      setCSSProperty(wrapperEl, "--swiper-centered-offset-after", "");
    }
    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;
    if (gridEnabled) {
      swiper.grid.initSlides(slides);
    } else if (swiper.grid) {
      swiper.grid.unsetSlides();
    }

    // Calc slides
    let slideSize;
    const shouldResetSlideSize =
      params.slidesPerView === "auto" &&
      params.breakpoints &&
      Object.keys(params.breakpoints).filter((key) => {
        return typeof params.breakpoints[key].slidesPerView !== "undefined";
      }).length > 0;
    for (let i = 0; i < slidesLength; i += 1) {
      slideSize = 0;
      let slide;
      if (slides[i]) slide = slides[i];
      if (gridEnabled) {
        swiper.grid.updateSlide(i, slide, slides);
      }
      if (slides[i] && elementStyle(slide, "display") === "none") continue; // eslint-disable-line

      if (params.slidesPerView === "auto") {
        if (shouldResetSlideSize) {
          slides[i].style[swiper.getDirectionLabel("width")] = ``;
        }
        const slideStyles = getComputedStyle(slide);
        const currentTransform = slide.style.transform;
        const currentWebKitTransform = slide.style.webkitTransform;
        if (currentTransform) {
          slide.style.transform = "none";
        }
        if (currentWebKitTransform) {
          slide.style.webkitTransform = "none";
        }
        if (params.roundLengths) {
          slideSize = swiper.isHorizontal()
            ? elementOuterSize(slide, "width", true)
            : elementOuterSize(slide, "height", true);
        } else {
          // eslint-disable-next-line
          const width = getDirectionPropertyValue(slideStyles, "width");
          const paddingLeft = getDirectionPropertyValue(
            slideStyles,
            "padding-left"
          );
          const paddingRight = getDirectionPropertyValue(
            slideStyles,
            "padding-right"
          );
          const marginLeft = getDirectionPropertyValue(
            slideStyles,
            "margin-left"
          );
          const marginRight = getDirectionPropertyValue(
            slideStyles,
            "margin-right"
          );
          const boxSizing = slideStyles.getPropertyValue("box-sizing");
          if (boxSizing && boxSizing === "border-box") {
            slideSize = width + marginLeft + marginRight;
          } else {
            const { clientWidth, offsetWidth } = slide;
            slideSize =
              width +
              paddingLeft +
              paddingRight +
              marginLeft +
              marginRight +
              (offsetWidth - clientWidth);
          }
        }
        if (currentTransform) {
          slide.style.transform = currentTransform;
        }
        if (currentWebKitTransform) {
          slide.style.webkitTransform = currentWebKitTransform;
        }
        if (params.roundLengths) slideSize = Math.floor(slideSize);
      } else {
        slideSize =
          (swiperSize - (params.slidesPerView - 1) * spaceBetween) /
          params.slidesPerView;
        if (params.roundLengths) slideSize = Math.floor(slideSize);
        if (slides[i]) {
          slides[i].style[swiper.getDirectionLabel("width")] = `${slideSize}px`;
        }
      }
      if (slides[i]) {
        slides[i].swiperSlideSize = slideSize;
      }
      slidesSizesGrid.push(slideSize);
      if (params.centeredSlides) {
        slidePosition =
          slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
        if (prevSlideSize === 0 && i !== 0)
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        if (i === 0)
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
        if (params.roundLengths) slidePosition = Math.floor(slidePosition);
        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
        slidesGrid.push(slidePosition);
      } else {
        if (params.roundLengths) slidePosition = Math.floor(slidePosition);
        if (
          (index - Math.min(swiper.params.slidesPerGroupSkip, index)) %
            swiper.params.slidesPerGroup ===
          0
        )
          snapGrid.push(slidePosition);
        slidesGrid.push(slidePosition);
        slidePosition = slidePosition + slideSize + spaceBetween;
      }
      swiper.virtualSize += slideSize + spaceBetween;
      prevSlideSize = slideSize;
      index += 1;
    }
    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
    if (
      rtl &&
      wrongRTL &&
      (params.effect === "slide" || params.effect === "coverflow")
    ) {
      wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;
    }
    if (params.setWrapperSize) {
      wrapperEl.style[swiper.getDirectionLabel("width")] = `${
        swiper.virtualSize + spaceBetween
      }px`;
    }
    if (gridEnabled) {
      swiper.grid.updateWrapperSize(slideSize, snapGrid);
    }

    // Remove last grid elements depending on width
    if (!params.centeredSlides) {
      const newSlidesGrid = [];
      for (let i = 0; i < snapGrid.length; i += 1) {
        let slidesGridItem = snapGrid[i];
        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);
        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {
          newSlidesGrid.push(slidesGridItem);
        }
      }
      snapGrid = newSlidesGrid;
      if (
        Math.floor(swiper.virtualSize - swiperSize) -
          Math.floor(snapGrid[snapGrid.length - 1]) >
        1
      ) {
        snapGrid.push(swiper.virtualSize - swiperSize);
      }
    }
    if (isVirtual && params.loop) {
      const size = slidesSizesGrid[0] + spaceBetween;
      if (params.slidesPerGroup > 1) {
        const groups = Math.ceil(
          (swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) /
            params.slidesPerGroup
        );
        const groupSize = size * params.slidesPerGroup;
        for (let i = 0; i < groups; i += 1) {
          snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);
        }
      }
      for (
        let i = 0;
        i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter;
        i += 1
      ) {
        if (params.slidesPerGroup === 1) {
          snapGrid.push(snapGrid[snapGrid.length - 1] + size);
        }
        slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);
        swiper.virtualSize += size;
      }
    }
    if (snapGrid.length === 0) snapGrid = [0];
    if (spaceBetween !== 0) {
      const key =
        swiper.isHorizontal() && rtl
          ? "marginLeft"
          : swiper.getDirectionLabel("marginRight");
      slides
        .filter((_, slideIndex) => {
          if (!params.cssMode || params.loop) return true;
          if (slideIndex === slides.length - 1) {
            return false;
          }
          return true;
        })
        .forEach((slideEl) => {
          slideEl.style[key] = `${spaceBetween}px`;
        });
    }
    if (params.centeredSlides && params.centeredSlidesBounds) {
      let allSlidesSize = 0;
      slidesSizesGrid.forEach((slideSizeValue) => {
        allSlidesSize += slideSizeValue + (spaceBetween || 0);
      });
      allSlidesSize -= spaceBetween;
      const maxSnap = allSlidesSize - swiperSize;
      snapGrid = snapGrid.map((snap) => {
        if (snap <= 0) return -offsetBefore;
        if (snap > maxSnap) return maxSnap + offsetAfter;
        return snap;
      });
    }
    if (params.centerInsufficientSlides) {
      let allSlidesSize = 0;
      slidesSizesGrid.forEach((slideSizeValue) => {
        allSlidesSize += slideSizeValue + (spaceBetween || 0);
      });
      allSlidesSize -= spaceBetween;
      if (allSlidesSize < swiperSize) {
        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;
        snapGrid.forEach((snap, snapIndex) => {
          snapGrid[snapIndex] = snap - allSlidesOffset;
        });
        slidesGrid.forEach((snap, snapIndex) => {
          slidesGrid[snapIndex] = snap + allSlidesOffset;
        });
      }
    }
    Object.assign(swiper, {
      slides,
      snapGrid,
      slidesGrid,
      slidesSizesGrid,
    });
    if (
      params.centeredSlides &&
      params.cssMode &&
      !params.centeredSlidesBounds
    ) {
      setCSSProperty(
        wrapperEl,
        "--swiper-centered-offset-before",
        `${-snapGrid[0]}px`
      );
      setCSSProperty(
        wrapperEl,
        "--swiper-centered-offset-after",
        `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`
      );
      const addToSnapGrid = -swiper.snapGrid[0];
      const addToSlidesGrid = -swiper.slidesGrid[0];
      swiper.snapGrid = swiper.snapGrid.map((v) => v + addToSnapGrid);
      swiper.slidesGrid = swiper.slidesGrid.map((v) => v + addToSlidesGrid);
    }
    if (slidesLength !== previousSlidesLength) {
      swiper.emit("slidesLengthChange");
    }
    if (snapGrid.length !== previousSnapGridLength) {
      if (swiper.params.watchOverflow) swiper.checkOverflow();
      swiper.emit("snapGridLengthChange");
    }
    if (slidesGrid.length !== previousSlidesGridLength) {
      swiper.emit("slidesGridLengthChange");
    }
    if (params.watchSlidesProgress) {
      swiper.updateSlidesOffset();
    }
    swiper.emit("slidesUpdated");
    if (
      !isVirtual &&
      !params.cssMode &&
      (params.effect === "slide" || params.effect === "fade")
    ) {
      const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;
      const hasClassBackfaceClassAdded =
        swiper.el.classList.contains(backFaceHiddenClass);
      if (slidesLength <= params.maxBackfaceHiddenSlides) {
        if (!hasClassBackfaceClassAdded)
          swiper.el.classList.add(backFaceHiddenClass);
      } else if (hasClassBackfaceClassAdded) {
        swiper.el.classList.remove(backFaceHiddenClass);
      }
    }
  }

  function updateAutoHeight(speed) {
    const swiper = this;
    const activeSlides = [];
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    let newHeight = 0;
    let i;
    if (typeof speed === "number") {
      swiper.setTransition(speed);
    } else if (speed === true) {
      swiper.setTransition(swiper.params.speed);
    }
    const getSlideByIndex = (index) => {
      if (isVirtual) {
        return swiper.slides[swiper.getSlideIndexByData(index)];
      }
      return swiper.slides[index];
    };
    // Find slides currently in view
    if (
      swiper.params.slidesPerView !== "auto" &&
      swiper.params.slidesPerView > 1
    ) {
      if (swiper.params.centeredSlides) {
        (swiper.visibleSlides || []).forEach((slide) => {
          activeSlides.push(slide);
        });
      } else {
        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
          const index = swiper.activeIndex + i;
          if (index > swiper.slides.length && !isVirtual) break;
          activeSlides.push(getSlideByIndex(index));
        }
      }
    } else {
      activeSlides.push(getSlideByIndex(swiper.activeIndex));
    }

    // Find new height from highest slide in view
    for (i = 0; i < activeSlides.length; i += 1) {
      if (typeof activeSlides[i] !== "undefined") {
        const height = activeSlides[i].offsetHeight;
        newHeight = height > newHeight ? height : newHeight;
      }
    }

    // Update Height
    if (newHeight || newHeight === 0)
      swiper.wrapperEl.style.height = `${newHeight}px`;
  }

  function updateSlidesOffset() {
    const swiper = this;
    const slides = swiper.slides;
    // eslint-disable-next-line
    const minusOffset = swiper.isElement
      ? swiper.isHorizontal()
        ? swiper.wrapperEl.offsetLeft
        : swiper.wrapperEl.offsetTop
      : 0;
    for (let i = 0; i < slides.length; i += 1) {
      slides[i].swiperSlideOffset =
        (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) -
        minusOffset -
        swiper.cssOverflowAdjustment();
    }
  }

  function updateSlidesProgress(translate) {
    if (translate === void 0) {
      translate = (this && this.translate) || 0;
    }
    const swiper = this;
    const params = swiper.params;
    const { slides, rtlTranslate: rtl, snapGrid } = swiper;
    if (slides.length === 0) return;
    if (typeof slides[0].swiperSlideOffset === "undefined")
      swiper.updateSlidesOffset();
    let offsetCenter = -translate;
    if (rtl) offsetCenter = translate;

    // Visible Slides
    slides.forEach((slideEl) => {
      slideEl.classList.remove(
        params.slideVisibleClass,
        params.slideFullyVisibleClass
      );
    });
    swiper.visibleSlidesIndexes = [];
    swiper.visibleSlides = [];
    let spaceBetween = params.spaceBetween;
    if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
      spaceBetween =
        (parseFloat(spaceBetween.replace("%", "")) / 100) * swiper.size;
    } else if (typeof spaceBetween === "string") {
      spaceBetween = parseFloat(spaceBetween);
    }
    for (let i = 0; i < slides.length; i += 1) {
      const slide = slides[i];
      let slideOffset = slide.swiperSlideOffset;
      if (params.cssMode && params.centeredSlides) {
        slideOffset -= slides[0].swiperSlideOffset;
      }
      const slideProgress =
        (offsetCenter +
          (params.centeredSlides ? swiper.minTranslate() : 0) -
          slideOffset) /
        (slide.swiperSlideSize + spaceBetween);
      const originalSlideProgress =
        (offsetCenter -
          snapGrid[0] +
          (params.centeredSlides ? swiper.minTranslate() : 0) -
          slideOffset) /
        (slide.swiperSlideSize + spaceBetween);
      const slideBefore = -(offsetCenter - slideOffset);
      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];
      const isFullyVisible =
        slideBefore >= 0 &&
        slideBefore <= swiper.size - swiper.slidesSizesGrid[i];
      const isVisible =
        (slideBefore >= 0 && slideBefore < swiper.size - 1) ||
        (slideAfter > 1 && slideAfter <= swiper.size) ||
        (slideBefore <= 0 && slideAfter >= swiper.size);
      if (isVisible) {
        swiper.visibleSlides.push(slide);
        swiper.visibleSlidesIndexes.push(i);
        slides[i].classList.add(params.slideVisibleClass);
      }
      if (isFullyVisible) {
        slides[i].classList.add(params.slideFullyVisibleClass);
      }
      slide.progress = rtl ? -slideProgress : slideProgress;
      slide.originalProgress = rtl
        ? -originalSlideProgress
        : originalSlideProgress;
    }
  }

  function updateProgress(translate) {
    const swiper = this;
    if (typeof translate === "undefined") {
      const multiplier = swiper.rtlTranslate ? -1 : 1;
      // eslint-disable-next-line
      translate =
        (swiper && swiper.translate && swiper.translate * multiplier) || 0;
    }
    const params = swiper.params;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    let { progress, isBeginning, isEnd, progressLoop } = swiper;
    const wasBeginning = isBeginning;
    const wasEnd = isEnd;
    if (translatesDiff === 0) {
      progress = 0;
      isBeginning = true;
      isEnd = true;
    } else {
      progress = (translate - swiper.minTranslate()) / translatesDiff;
      const isBeginningRounded =
        Math.abs(translate - swiper.minTranslate()) < 1;
      const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;
      isBeginning = isBeginningRounded || progress <= 0;
      isEnd = isEndRounded || progress >= 1;
      if (isBeginningRounded) progress = 0;
      if (isEndRounded) progress = 1;
    }
    if (params.loop) {
      const firstSlideIndex = swiper.getSlideIndexByData(0);
      const lastSlideIndex = swiper.getSlideIndexByData(
        swiper.slides.length - 1
      );
      const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];
      const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];
      const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];
      const translateAbs = Math.abs(translate);
      if (translateAbs >= firstSlideTranslate) {
        progressLoop = (translateAbs - firstSlideTranslate) / translateMax;
      } else {
        progressLoop =
          (translateAbs + translateMax - lastSlideTranslate) / translateMax;
      }
      if (progressLoop > 1) progressLoop -= 1;
    }
    Object.assign(swiper, {
      progress,
      progressLoop,
      isBeginning,
      isEnd,
    });
    if (
      params.watchSlidesProgress ||
      (params.centeredSlides && params.autoHeight)
    )
      swiper.updateSlidesProgress(translate);
    if (isBeginning && !wasBeginning) {
      swiper.emit("reachBeginning toEdge");
    }
    if (isEnd && !wasEnd) {
      swiper.emit("reachEnd toEdge");
    }
    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {
      swiper.emit("fromEdge");
    }
    swiper.emit("progress", progress);
  }

  function updateSlidesClasses() {
    const swiper = this;
    const { slides, params, slidesEl, activeIndex } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;
    const getFilteredSlide = (selector) => {
      return elementChildren(
        slidesEl,
        `.${params.slideClass}${selector}, swiper-slide${selector}`
      )[0];
    };
    slides.forEach((slideEl) => {
      slideEl.classList.remove(
        params.slideActiveClass,
        params.slideNextClass,
        params.slidePrevClass
      );
    });
    let activeSlide;
    let prevSlide;
    let nextSlide;
    if (isVirtual) {
      if (params.loop) {
        let slideIndex = activeIndex - swiper.virtual.slidesBefore;
        if (slideIndex < 0)
          slideIndex = swiper.virtual.slides.length + slideIndex;
        if (slideIndex >= swiper.virtual.slides.length)
          slideIndex -= swiper.virtual.slides.length;
        activeSlide = getFilteredSlide(
          `[data-swiper-slide-index="${slideIndex}"]`
        );
      } else {
        activeSlide = getFilteredSlide(
          `[data-swiper-slide-index="${activeIndex}"]`
        );
      }
    } else {
      if (gridEnabled) {
        activeSlide = slides.filter(
          (slideEl) => slideEl.column === activeIndex
        )[0];
        nextSlide = slides.filter(
          (slideEl) => slideEl.column === activeIndex + 1
        )[0];
        prevSlide = slides.filter(
          (slideEl) => slideEl.column === activeIndex - 1
        )[0];
      } else {
        activeSlide = slides[activeIndex];
      }
    }
    if (activeSlide) {
      // Active classes
      activeSlide.classList.add(params.slideActiveClass);
      if (gridEnabled) {
        if (nextSlide) {
          nextSlide.classList.add(params.slideNextClass);
        }
        if (prevSlide) {
          prevSlide.classList.add(params.slidePrevClass);
        }
      } else {
        // Next Slide
        nextSlide = elementNextAll(
          activeSlide,
          `.${params.slideClass}, swiper-slide`
        )[0];
        if (params.loop && !nextSlide) {
          nextSlide = slides[0];
        }
        if (nextSlide) {
          nextSlide.classList.add(params.slideNextClass);
        }

        // Prev Slide
        prevSlide = elementPrevAll(
          activeSlide,
          `.${params.slideClass}, swiper-slide`
        )[0];
        if (params.loop && !prevSlide === 0) {
          prevSlide = slides[slides.length - 1];
        }
        if (prevSlide) {
          prevSlide.classList.add(params.slidePrevClass);
        }
      }
    }
    swiper.emitSlidesClasses();
  }

  const processLazyPreloader = (swiper, imageEl) => {
    if (!swiper || swiper.destroyed || !swiper.params) return;
    const slideSelector = () =>
      swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;
    const slideEl = imageEl.closest(slideSelector());
    if (slideEl) {
      let lazyEl = slideEl.querySelector(
        `.${swiper.params.lazyPreloaderClass}`
      );
      if (!lazyEl && swiper.isElement) {
        if (slideEl.shadowRoot) {
          lazyEl = slideEl.shadowRoot.querySelector(
            `.${swiper.params.lazyPreloaderClass}`
          );
        } else {
          // init later
          requestAnimationFrame(() => {
            if (slideEl.shadowRoot) {
              lazyEl = slideEl.shadowRoot.querySelector(
                `.${swiper.params.lazyPreloaderClass}`
              );
              if (lazyEl) lazyEl.remove();
            }
          });
        }
      }
      if (lazyEl) lazyEl.remove();
    }
  };
  const unlazy = (swiper, index) => {
    if (!swiper.slides[index]) return;
    const imageEl = swiper.slides[index].querySelector('[loading="lazy"]');
    if (imageEl) imageEl.removeAttribute("loading");
  };
  const preload = (swiper) => {
    if (!swiper || swiper.destroyed || !swiper.params) return;
    let amount = swiper.params.lazyPreloadPrevNext;
    const len = swiper.slides.length;
    if (!len || !amount || amount < 0) return;
    amount = Math.min(amount, len);
    const slidesPerView =
      swiper.params.slidesPerView === "auto"
        ? swiper.slidesPerViewDynamic()
        : Math.ceil(swiper.params.slidesPerView);
    const activeIndex = swiper.activeIndex;
    if (swiper.params.grid && swiper.params.grid.rows > 1) {
      const activeColumn = activeIndex;
      const preloadColumns = [activeColumn - amount];
      preloadColumns.push(
        ...Array.from({
          length: amount,
        }).map((_, i) => {
          return activeColumn + slidesPerView + i;
        })
      );
      swiper.slides.forEach((slideEl, i) => {
        if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);
      });
      return;
    }
    const slideIndexLastInView = activeIndex + slidesPerView - 1;
    if (swiper.params.rewind || swiper.params.loop) {
      for (
        let i = activeIndex - amount;
        i <= slideIndexLastInView + amount;
        i += 1
      ) {
        const realIndex = ((i % len) + len) % len;
        if (realIndex < activeIndex || realIndex > slideIndexLastInView)
          unlazy(swiper, realIndex);
      }
    } else {
      for (
        let i = Math.max(activeIndex - amount, 0);
        i <= Math.min(slideIndexLastInView + amount, len - 1);
        i += 1
      ) {
        if (
          i !== activeIndex &&
          (i > slideIndexLastInView || i < activeIndex)
        ) {
          unlazy(swiper, i);
        }
      }
    }
  };

  function getActiveIndexByTranslate(swiper) {
    const { slidesGrid, params } = swiper;
    const translate = swiper.rtlTranslate
      ? swiper.translate
      : -swiper.translate;
    let activeIndex;
    for (let i = 0; i < slidesGrid.length; i += 1) {
      if (typeof slidesGrid[i + 1] !== "undefined") {
        if (
          translate >= slidesGrid[i] &&
          translate <
            slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2
        ) {
          activeIndex = i;
        } else if (
          translate >= slidesGrid[i] &&
          translate < slidesGrid[i + 1]
        ) {
          activeIndex = i + 1;
        }
      } else if (translate >= slidesGrid[i]) {
        activeIndex = i;
      }
    }
    // Normalize slideIndex
    if (params.normalizeSlideIndex) {
      if (activeIndex < 0 || typeof activeIndex === "undefined")
        activeIndex = 0;
    }
    return activeIndex;
  }
  function updateActiveIndex(newActiveIndex) {
    const swiper = this;
    const translate = swiper.rtlTranslate
      ? swiper.translate
      : -swiper.translate;
    const {
      snapGrid,
      params,
      activeIndex: previousIndex,
      realIndex: previousRealIndex,
      snapIndex: previousSnapIndex,
    } = swiper;
    let activeIndex = newActiveIndex;
    let snapIndex;
    const getVirtualRealIndex = (aIndex) => {
      let realIndex = aIndex - swiper.virtual.slidesBefore;
      if (realIndex < 0) {
        realIndex = swiper.virtual.slides.length + realIndex;
      }
      if (realIndex >= swiper.virtual.slides.length) {
        realIndex -= swiper.virtual.slides.length;
      }
      return realIndex;
    };
    if (typeof activeIndex === "undefined") {
      activeIndex = getActiveIndexByTranslate(swiper);
    }
    if (snapGrid.indexOf(translate) >= 0) {
      snapIndex = snapGrid.indexOf(translate);
    } else {
      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);
      snapIndex =
        skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
    }
    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
    if (activeIndex === previousIndex && !swiper.params.loop) {
      if (snapIndex !== previousSnapIndex) {
        swiper.snapIndex = snapIndex;
        swiper.emit("snapIndexChange");
      }
      return;
    }
    if (
      activeIndex === previousIndex &&
      swiper.params.loop &&
      swiper.virtual &&
      swiper.params.virtual.enabled
    ) {
      swiper.realIndex = getVirtualRealIndex(activeIndex);
      return;
    }
    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;

    // Get real index
    let realIndex;
    if (swiper.virtual && params.virtual.enabled && params.loop) {
      realIndex = getVirtualRealIndex(activeIndex);
    } else if (gridEnabled) {
      const firstSlideInColumn = swiper.slides.filter(
        (slideEl) => slideEl.column === activeIndex
      )[0];
      let activeSlideIndex = parseInt(
        firstSlideInColumn.getAttribute("data-swiper-slide-index"),
        10
      );
      if (Number.isNaN(activeSlideIndex)) {
        activeSlideIndex = Math.max(
          swiper.slides.indexOf(firstSlideInColumn),
          0
        );
      }
      realIndex = Math.floor(activeSlideIndex / params.grid.rows);
    } else if (swiper.slides[activeIndex]) {
      const slideIndex = swiper.slides[activeIndex].getAttribute(
        "data-swiper-slide-index"
      );
      if (slideIndex) {
        realIndex = parseInt(slideIndex, 10);
      } else {
        realIndex = activeIndex;
      }
    } else {
      realIndex = activeIndex;
    }
    Object.assign(swiper, {
      previousSnapIndex,
      snapIndex,
      previousRealIndex,
      realIndex,
      previousIndex,
      activeIndex,
    });
    if (swiper.initialized) {
      preload(swiper);
    }
    swiper.emit("activeIndexChange");
    swiper.emit("snapIndexChange");
    if (swiper.initialized || swiper.params.runCallbacksOnInit) {
      if (previousRealIndex !== realIndex) {
        swiper.emit("realIndexChange");
      }
      swiper.emit("slideChange");
    }
  }

  function updateClickedSlide(el, path) {
    const swiper = this;
    const params = swiper.params;
    let slide = el.closest(`.${params.slideClass}, swiper-slide`);
    if (
      !slide &&
      swiper.isElement &&
      path &&
      path.length > 1 &&
      path.includes(el)
    ) {
      [...path.slice(path.indexOf(el) + 1, path.length)].forEach((pathEl) => {
        if (
          !slide &&
          pathEl.matches &&
          pathEl.matches(`.${params.slideClass}, swiper-slide`)
        ) {
          slide = pathEl;
        }
      });
    }
    let slideFound = false;
    let slideIndex;
    if (slide) {
      for (let i = 0; i < swiper.slides.length; i += 1) {
        if (swiper.slides[i] === slide) {
          slideFound = true;
          slideIndex = i;
          break;
        }
      }
    }
    if (slide && slideFound) {
      swiper.clickedSlide = slide;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        swiper.clickedIndex = parseInt(
          slide.getAttribute("data-swiper-slide-index"),
          10
        );
      } else {
        swiper.clickedIndex = slideIndex;
      }
    } else {
      swiper.clickedSlide = undefined;
      swiper.clickedIndex = undefined;
      return;
    }
    if (
      params.slideToClickedSlide &&
      swiper.clickedIndex !== undefined &&
      swiper.clickedIndex !== swiper.activeIndex
    ) {
      swiper.slideToClickedSlide();
    }
  }

  var update = {
    updateSize,
    updateSlides,
    updateAutoHeight,
    updateSlidesOffset,
    updateSlidesProgress,
    updateProgress,
    updateSlidesClasses,
    updateActiveIndex,
    updateClickedSlide,
  };

  function getSwiperTranslate(axis) {
    if (axis === void 0) {
      axis = this.isHorizontal() ? "x" : "y";
    }
    const swiper = this;
    const { params, rtlTranslate: rtl, translate, wrapperEl } = swiper;
    if (params.virtualTranslate) {
      return rtl ? -translate : translate;
    }
    if (params.cssMode) {
      return translate;
    }
    let currentTranslate = getTranslate(wrapperEl, axis);
    currentTranslate += swiper.cssOverflowAdjustment();
    if (rtl) currentTranslate = -currentTranslate;
    return currentTranslate || 0;
  }

  function setTranslate(translate, byController) {
    const swiper = this;
    const { rtlTranslate: rtl, params, wrapperEl, progress } = swiper;
    let x = 0;
    let y = 0;
    const z = 0;
    if (swiper.isHorizontal()) {
      x = rtl ? -translate : translate;
    } else {
      y = translate;
    }
    if (params.roundLengths) {
      x = Math.floor(x);
      y = Math.floor(y);
    }
    swiper.previousTranslate = swiper.translate;
    swiper.translate = swiper.isHorizontal() ? x : y;
    if (params.cssMode) {
      wrapperEl[swiper.isHorizontal() ? "scrollLeft" : "scrollTop"] =
        swiper.isHorizontal() ? -x : -y;
    } else if (!params.virtualTranslate) {
      if (swiper.isHorizontal()) {
        x -= swiper.cssOverflowAdjustment();
      } else {
        y -= swiper.cssOverflowAdjustment();
      }
      wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;
    }

    // Check if we need to update progress
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (translate - swiper.minTranslate()) / translatesDiff;
    }
    if (newProgress !== progress) {
      swiper.updateProgress(translate);
    }
    swiper.emit("setTranslate", swiper.translate, byController);
  }

  function minTranslate() {
    return -this.snapGrid[0];
  }

  function maxTranslate() {
    return -this.snapGrid[this.snapGrid.length - 1];
  }

  function translateTo(
    translate,
    speed,
    runCallbacks,
    translateBounds,
    internal
  ) {
    if (translate === void 0) {
      translate = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (translateBounds === void 0) {
      translateBounds = true;
    }
    const swiper = this;
    const { params, wrapperEl } = swiper;
    if (swiper.animating && params.preventInteractionOnTransition) {
      return false;
    }
    const minTranslate = swiper.minTranslate();
    const maxTranslate = swiper.maxTranslate();
    let newTranslate;
    if (translateBounds && translate > minTranslate)
      newTranslate = minTranslate;
    else if (translateBounds && translate < maxTranslate)
      newTranslate = maxTranslate;
    else newTranslate = translate;

    // Update progress
    swiper.updateProgress(newTranslate);
    if (params.cssMode) {
      const isH = swiper.isHorizontal();
      if (speed === 0) {
        wrapperEl[isH ? "scrollLeft" : "scrollTop"] = -newTranslate;
      } else {
        if (!swiper.support.smoothScroll) {
          animateCSSModeScroll({
            swiper,
            targetPosition: -newTranslate,
            side: isH ? "left" : "top",
          });
          return true;
        }
        wrapperEl.scrollTo({
          [isH ? "left" : "top"]: -newTranslate,
          behavior: "smooth",
        });
      }
      return true;
    }
    if (speed === 0) {
      swiper.setTransition(0);
      swiper.setTranslate(newTranslate);
      if (runCallbacks) {
        swiper.emit("beforeTransitionStart", speed, internal);
        swiper.emit("transitionEnd");
      }
    } else {
      swiper.setTransition(speed);
      swiper.setTranslate(newTranslate);
      if (runCallbacks) {
        swiper.emit("beforeTransitionStart", speed, internal);
        swiper.emit("transitionStart");
      }
      if (!swiper.animating) {
        swiper.animating = true;
        if (!swiper.onTranslateToWrapperTransitionEnd) {
          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {
            if (!swiper || swiper.destroyed) return;
            if (e.target !== this) return;
            swiper.wrapperEl.removeEventListener(
              "transitionend",
              swiper.onTranslateToWrapperTransitionEnd
            );
            swiper.onTranslateToWrapperTransitionEnd = null;
            delete swiper.onTranslateToWrapperTransitionEnd;
            if (runCallbacks) {
              swiper.emit("transitionEnd");
            }
          };
        }
        swiper.wrapperEl.addEventListener(
          "transitionend",
          swiper.onTranslateToWrapperTransitionEnd
        );
      }
    }
    return true;
  }

  var translate = {
    getTranslate: getSwiperTranslate,
    setTranslate,
    minTranslate,
    maxTranslate,
    translateTo,
  };

  function setTransition(duration, byController) {
    const swiper = this;
    if (!swiper.params.cssMode) {
      swiper.wrapperEl.style.transitionDuration = `${duration}ms`;
      swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : "";
    }
    swiper.emit("setTransition", duration, byController);
  }

  function transitionEmit(_ref) {
    let { swiper, runCallbacks, direction, step } = _ref;
    const { activeIndex, previousIndex } = swiper;
    let dir = direction;
    if (!dir) {
      if (activeIndex > previousIndex) dir = "next";
      else if (activeIndex < previousIndex) dir = "prev";
      else dir = "reset";
    }
    swiper.emit(`transition${step}`);
    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === "reset") {
        swiper.emit(`slideResetTransition${step}`);
        return;
      }
      swiper.emit(`slideChangeTransition${step}`);
      if (dir === "next") {
        swiper.emit(`slideNextTransition${step}`);
      } else {
        swiper.emit(`slidePrevTransition${step}`);
      }
    }
  }

  function transitionStart(runCallbacks, direction) {
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const { params } = swiper;
    if (params.cssMode) return;
    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }
    transitionEmit({
      swiper,
      runCallbacks,
      direction,
      step: "Start",
    });
  }

  function transitionEnd(runCallbacks, direction) {
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const { params } = swiper;
    swiper.animating = false;
    if (params.cssMode) return;
    swiper.setTransition(0);
    transitionEmit({
      swiper,
      runCallbacks,
      direction,
      step: "End",
    });
  }

  var transition = {
    setTransition,
    transitionStart,
    transitionEnd,
  };

  function slideTo(index, speed, runCallbacks, internal, initial) {
    if (index === void 0) {
      index = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (typeof index === "string") {
      index = parseInt(index, 10);
    }
    const swiper = this;
    let slideIndex = index;
    if (slideIndex < 0) slideIndex = 0;
    const {
      params,
      snapGrid,
      slidesGrid,
      previousIndex,
      activeIndex,
      rtlTranslate: rtl,
      wrapperEl,
      enabled,
    } = swiper;
    if (
      (swiper.animating && params.preventInteractionOnTransition) ||
      (!enabled && !internal && !initial)
    ) {
      return false;
    }
    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
    let snapIndex =
      skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
    const translate = -snapGrid[snapIndex];
    // Normalize slideIndex
    if (params.normalizeSlideIndex) {
      for (let i = 0; i < slidesGrid.length; i += 1) {
        const normalizedTranslate = -Math.floor(translate * 100);
        const normalizedGrid = Math.floor(slidesGrid[i] * 100);
        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);
        if (typeof slidesGrid[i + 1] !== "undefined") {
          if (
            normalizedTranslate >= normalizedGrid &&
            normalizedTranslate <
              normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2
          ) {
            slideIndex = i;
          } else if (
            normalizedTranslate >= normalizedGrid &&
            normalizedTranslate < normalizedGridNext
          ) {
            slideIndex = i + 1;
          }
        } else if (normalizedTranslate >= normalizedGrid) {
          slideIndex = i;
        }
      }
    }
    // Directions locks
    if (swiper.initialized && slideIndex !== activeIndex) {
      if (
        !swiper.allowSlideNext &&
        (rtl
          ? translate > swiper.translate && translate > swiper.minTranslate()
          : translate < swiper.translate && translate < swiper.minTranslate())
      ) {
        return false;
      }
      if (
        !swiper.allowSlidePrev &&
        translate > swiper.translate &&
        translate > swiper.maxTranslate()
      ) {
        if ((activeIndex || 0) !== slideIndex) {
          return false;
        }
      }
    }
    if (slideIndex !== (previousIndex || 0) && runCallbacks) {
      swiper.emit("beforeSlideChangeStart");
    }

    // Update progress
    swiper.updateProgress(translate);
    let direction;
    if (slideIndex > activeIndex) direction = "next";
    else if (slideIndex < activeIndex) direction = "prev";
    else direction = "reset";

    // Update Index
    if (
      (rtl && -translate === swiper.translate) ||
      (!rtl && translate === swiper.translate)
    ) {
      swiper.updateActiveIndex(slideIndex);
      // Update Height
      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }
      swiper.updateSlidesClasses();
      if (params.effect !== "slide") {
        swiper.setTranslate(translate);
      }
      if (direction !== "reset") {
        swiper.transitionStart(runCallbacks, direction);
        swiper.transitionEnd(runCallbacks, direction);
      }
      return false;
    }
    if (params.cssMode) {
      const isH = swiper.isHorizontal();
      const t = rtl ? translate : -translate;
      if (speed === 0) {
        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        if (isVirtual) {
          swiper.wrapperEl.style.scrollSnapType = "none";
          swiper._immediateVirtual = true;
        }
        if (
          isVirtual &&
          !swiper._cssModeVirtualInitialSet &&
          swiper.params.initialSlide > 0
        ) {
          swiper._cssModeVirtualInitialSet = true;
          requestAnimationFrame(() => {
            wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t;
          });
        } else {
          wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t;
        }
        if (isVirtual) {
          requestAnimationFrame(() => {
            swiper.wrapperEl.style.scrollSnapType = "";
            swiper._immediateVirtual = false;
          });
        }
      } else {
        if (!swiper.support.smoothScroll) {
          animateCSSModeScroll({
            swiper,
            targetPosition: t,
            side: isH ? "left" : "top",
          });
          return true;
        }
        wrapperEl.scrollTo({
          [isH ? "left" : "top"]: t,
          behavior: "smooth",
        });
      }
      return true;
    }
    swiper.setTransition(speed);
    swiper.setTranslate(translate);
    swiper.updateActiveIndex(slideIndex);
    swiper.updateSlidesClasses();
    swiper.emit("beforeTransitionStart", speed, internal);
    swiper.transitionStart(runCallbacks, direction);
    if (speed === 0) {
      swiper.transitionEnd(runCallbacks, direction);
    } else if (!swiper.animating) {
      swiper.animating = true;
      if (!swiper.onSlideToWrapperTransitionEnd) {
        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
          if (!swiper || swiper.destroyed) return;
          if (e.target !== this) return;
          swiper.wrapperEl.removeEventListener(
            "transitionend",
            swiper.onSlideToWrapperTransitionEnd
          );
          swiper.onSlideToWrapperTransitionEnd = null;
          delete swiper.onSlideToWrapperTransitionEnd;
          swiper.transitionEnd(runCallbacks, direction);
        };
      }
      swiper.wrapperEl.addEventListener(
        "transitionend",
        swiper.onSlideToWrapperTransitionEnd
      );
    }
    return true;
  }

  function slideToLoop(index, speed, runCallbacks, internal) {
    if (index === void 0) {
      index = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (typeof index === "string") {
      const indexAsNumber = parseInt(index, 10);
      index = indexAsNumber;
    }
    const swiper = this;
    const gridEnabled =
      swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;
    let newIndex = index;
    if (swiper.params.loop) {
      if (swiper.virtual && swiper.params.virtual.enabled) {
        // eslint-disable-next-line
        newIndex = newIndex + swiper.virtual.slidesBefore;
      } else {
        let targetSlideIndex;
        if (gridEnabled) {
          const slideIndex = newIndex * swiper.params.grid.rows;
          targetSlideIndex = swiper.slides.filter(
            (slideEl) =>
              slideEl.getAttribute("data-swiper-slide-index") * 1 === slideIndex
          )[0].column;
        } else {
          targetSlideIndex = swiper.getSlideIndexByData(newIndex);
        }
        const cols = gridEnabled
          ? Math.ceil(swiper.slides.length / swiper.params.grid.rows)
          : swiper.slides.length;
        const { centeredSlides } = swiper.params;
        let slidesPerView = swiper.params.slidesPerView;
        if (slidesPerView === "auto") {
          slidesPerView = swiper.slidesPerViewDynamic();
        } else {
          slidesPerView = Math.ceil(
            parseFloat(swiper.params.slidesPerView, 10)
          );
          if (centeredSlides && slidesPerView % 2 === 0) {
            slidesPerView = slidesPerView + 1;
          }
        }
        let needLoopFix = cols - targetSlideIndex < slidesPerView;
        if (centeredSlides) {
          needLoopFix =
            needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);
        }
        if (needLoopFix) {
          const direction = centeredSlides
            ? targetSlideIndex < swiper.activeIndex
              ? "prev"
              : "next"
            : targetSlideIndex - swiper.activeIndex - 1 <
              swiper.params.slidesPerView
            ? "next"
            : "prev";
          swiper.loopFix({
            direction,
            slideTo: true,
            activeSlideIndex:
              direction === "next"
                ? targetSlideIndex + 1
                : targetSlideIndex - cols + 1,
            slideRealIndex: direction === "next" ? swiper.realIndex : undefined,
          });
        }
        if (gridEnabled) {
          const slideIndex = newIndex * swiper.params.grid.rows;
          newIndex = swiper.slides.filter(
            (slideEl) =>
              slideEl.getAttribute("data-swiper-slide-index") * 1 === slideIndex
          )[0].column;
        } else {
          newIndex = swiper.getSlideIndexByData(newIndex);
        }
      }
    }
    requestAnimationFrame(() => {
      swiper.slideTo(newIndex, speed, runCallbacks, internal);
    });
    return swiper;
  }

  /* eslint no-unused-vars: "off" */
  function slideNext(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const { enabled, params, animating } = swiper;
    if (!enabled) return swiper;
    let perGroup = params.slidesPerGroup;
    if (
      params.slidesPerView === "auto" &&
      params.slidesPerGroup === 1 &&
      params.slidesPerGroupAuto
    ) {
      perGroup = Math.max(swiper.slidesPerViewDynamic("current", true), 1);
    }
    const increment =
      swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    if (params.loop) {
      if (animating && !isVirtual && params.loopPreventsSliding) return false;
      swiper.loopFix({
        direction: "next",
      });
      // eslint-disable-next-line
      swiper._clientLeft = swiper.wrapperEl.clientLeft;
      if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {
        requestAnimationFrame(() => {
          swiper.slideTo(
            swiper.activeIndex + increment,
            speed,
            runCallbacks,
            internal
          );
        });
        return true;
      }
    }
    if (params.rewind && swiper.isEnd) {
      return swiper.slideTo(0, speed, runCallbacks, internal);
    }
    return swiper.slideTo(
      swiper.activeIndex + increment,
      speed,
      runCallbacks,
      internal
    );
  }

  /* eslint no-unused-vars: "off" */
  function slidePrev(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const { params, snapGrid, slidesGrid, rtlTranslate, enabled, animating } =
      swiper;
    if (!enabled) return swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    if (params.loop) {
      if (animating && !isVirtual && params.loopPreventsSliding) return false;
      swiper.loopFix({
        direction: "prev",
      });
      // eslint-disable-next-line
      swiper._clientLeft = swiper.wrapperEl.clientLeft;
    }
    const translate = rtlTranslate ? swiper.translate : -swiper.translate;
    function normalize(val) {
      if (val < 0) return -Math.floor(Math.abs(val));
      return Math.floor(val);
    }
    const normalizedTranslate = normalize(translate);
    const normalizedSnapGrid = snapGrid.map((val) => normalize(val));
    let prevSnap =
      snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
    if (typeof prevSnap === "undefined" && params.cssMode) {
      let prevSnapIndex;
      snapGrid.forEach((snap, snapIndex) => {
        if (normalizedTranslate >= snap) {
          // prevSnap = snap;
          prevSnapIndex = snapIndex;
        }
      });
      if (typeof prevSnapIndex !== "undefined") {
        prevSnap =
          snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];
      }
    }
    let prevIndex = 0;
    if (typeof prevSnap !== "undefined") {
      prevIndex = slidesGrid.indexOf(prevSnap);
      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;
      if (
        params.slidesPerView === "auto" &&
        params.slidesPerGroup === 1 &&
        params.slidesPerGroupAuto
      ) {
        prevIndex =
          prevIndex - swiper.slidesPerViewDynamic("previous", true) + 1;
        prevIndex = Math.max(prevIndex, 0);
      }
    }
    if (params.rewind && swiper.isBeginning) {
      const lastIndex =
        swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual
          ? swiper.virtual.slides.length - 1
          : swiper.slides.length - 1;
      return swiper.slideTo(lastIndex, speed, runCallbacks, internal);
    } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {
      requestAnimationFrame(() => {
        swiper.slideTo(prevIndex, speed, runCallbacks, internal);
      });
      return true;
    }
    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slideReset(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slideToClosest(speed, runCallbacks, internal, threshold) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (threshold === void 0) {
      threshold = 0.5;
    }
    const swiper = this;
    let index = swiper.activeIndex;
    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);
    const snapIndex =
      skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
    const translate = swiper.rtlTranslate
      ? swiper.translate
      : -swiper.translate;
    if (translate >= swiper.snapGrid[snapIndex]) {
      // The current translate is on or after the current snap index, so the choice
      // is between the current index and the one after it.
      const currentSnap = swiper.snapGrid[snapIndex];
      const nextSnap = swiper.snapGrid[snapIndex + 1];
      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {
        index += swiper.params.slidesPerGroup;
      }
    } else {
      // The current translate is before the current snap index, so the choice
      // is between the current index and the one before it.
      const prevSnap = swiper.snapGrid[snapIndex - 1];
      const currentSnap = swiper.snapGrid[snapIndex];
      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {
        index -= swiper.params.slidesPerGroup;
      }
    }
    index = Math.max(index, 0);
    index = Math.min(index, swiper.slidesGrid.length - 1);
    return swiper.slideTo(index, speed, runCallbacks, internal);
  }

  function slideToClickedSlide() {
    const swiper = this;
    const { params, slidesEl } = swiper;
    const slidesPerView =
      params.slidesPerView === "auto"
        ? swiper.slidesPerViewDynamic()
        : params.slidesPerView;
    let slideToIndex = swiper.clickedIndex;
    let realIndex;
    const slideSelector = swiper.isElement
      ? `swiper-slide`
      : `.${params.slideClass}`;
    if (params.loop) {
      if (swiper.animating) return;
      realIndex = parseInt(
        swiper.clickedSlide.getAttribute("data-swiper-slide-index"),
        10
      );
      if (params.centeredSlides) {
        if (
          slideToIndex < swiper.loopedSlides - slidesPerView / 2 ||
          slideToIndex >
            swiper.slides.length - swiper.loopedSlides + slidesPerView / 2
        ) {
          swiper.loopFix();
          slideToIndex = swiper.getSlideIndex(
            elementChildren(
              slidesEl,
              `${slideSelector}[data-swiper-slide-index="${realIndex}"]`
            )[0]
          );
          nextTick(() => {
            swiper.slideTo(slideToIndex);
          });
        } else {
          swiper.slideTo(slideToIndex);
        }
      } else if (slideToIndex > swiper.slides.length - slidesPerView) {
        swiper.loopFix();
        slideToIndex = swiper.getSlideIndex(
          elementChildren(
            slidesEl,
            `${slideSelector}[data-swiper-slide-index="${realIndex}"]`
          )[0]
        );
        nextTick(() => {
          swiper.slideTo(slideToIndex);
        });
      } else {
        swiper.slideTo(slideToIndex);
      }
    } else {
      swiper.slideTo(slideToIndex);
    }
  }

  var slide = {
    slideTo,
    slideToLoop,
    slideNext,
    slidePrev,
    slideReset,
    slideToClosest,
    slideToClickedSlide,
  };

  function loopCreate(slideRealIndex) {
    const swiper = this;
    const { params, slidesEl } = swiper;
    if (!params.loop || (swiper.virtual && swiper.params.virtual.enabled))
      return;
    const initSlides = () => {
      const slides = elementChildren(
        slidesEl,
        `.${params.slideClass}, swiper-slide`
      );
      slides.forEach((el, index) => {
        el.setAttribute("data-swiper-slide-index", index);
      });
    };
    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;
    const slidesPerGroup =
      params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);
    const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;
    const shouldFillGrid =
      gridEnabled && swiper.slides.length % params.grid.rows !== 0;
    const addBlankSlides = (amountOfSlides) => {
      for (let i = 0; i < amountOfSlides; i += 1) {
        const slideEl = swiper.isElement
          ? createElement("swiper-slide", [params.slideBlankClass])
          : createElement("div", [params.slideClass, params.slideBlankClass]);
        swiper.slidesEl.append(slideEl);
      }
    };
    if (shouldFillGroup) {
      if (params.loopAddBlankSlides) {
        const slidesToAdd =
          slidesPerGroup - (swiper.slides.length % slidesPerGroup);
        addBlankSlides(slidesToAdd);
        swiper.recalcSlides();
        swiper.updateSlides();
      } else {
        showWarning(
          "Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
        );
      }
      initSlides();
    } else if (shouldFillGrid) {
      if (params.loopAddBlankSlides) {
        const slidesToAdd =
          params.grid.rows - (swiper.slides.length % params.grid.rows);
        addBlankSlides(slidesToAdd);
        swiper.recalcSlides();
        swiper.updateSlides();
      } else {
        showWarning(
          "Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
        );
      }
      initSlides();
    } else {
      initSlides();
    }
    swiper.loopFix({
      slideRealIndex,
      direction: params.centeredSlides ? undefined : "next",
    });
  }

  function loopFix(_temp) {
    let {
      slideRealIndex,
      slideTo = true,
      direction,
      setTranslate,
      activeSlideIndex,
      byController,
      byMousewheel,
    } = _temp === void 0 ? {} : _temp;
    const swiper = this;
    if (!swiper.params.loop) return;
    swiper.emit("beforeLoopFix");
    const { slides, allowSlidePrev, allowSlideNext, slidesEl, params } = swiper;
    const { centeredSlides } = params;
    swiper.allowSlidePrev = true;
    swiper.allowSlideNext = true;
    if (swiper.virtual && params.virtual.enabled) {
      if (slideTo) {
        if (!params.centeredSlides && swiper.snapIndex === 0) {
          swiper.slideTo(swiper.virtual.slides.length, 0, false, true);
        } else if (
          params.centeredSlides &&
          swiper.snapIndex < params.slidesPerView
        ) {
          swiper.slideTo(
            swiper.virtual.slides.length + swiper.snapIndex,
            0,
            false,
            true
          );
        } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {
          swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);
        }
      }
      swiper.allowSlidePrev = allowSlidePrev;
      swiper.allowSlideNext = allowSlideNext;
      swiper.emit("loopFix");
      return;
    }
    let slidesPerView = params.slidesPerView;
    if (slidesPerView === "auto") {
      slidesPerView = swiper.slidesPerViewDynamic();
    } else {
      slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));
      if (centeredSlides && slidesPerView % 2 === 0) {
        slidesPerView = slidesPerView + 1;
      }
    }
    const slidesPerGroup = params.slidesPerGroupAuto
      ? slidesPerView
      : params.slidesPerGroup;
    let loopedSlides = slidesPerGroup;
    if (loopedSlides % slidesPerGroup !== 0) {
      loopedSlides += slidesPerGroup - (loopedSlides % slidesPerGroup);
    }
    loopedSlides += params.loopAdditionalSlides;
    swiper.loopedSlides = loopedSlides;
    const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;
    if (slides.length < slidesPerView + loopedSlides) {
      showWarning(
        "Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"
      );
    } else if (gridEnabled && params.grid.fill === "row") {
      showWarning(
        "Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`"
      );
    }
    const prependSlidesIndexes = [];
    const appendSlidesIndexes = [];
    let activeIndex = swiper.activeIndex;
    if (typeof activeSlideIndex === "undefined") {
      activeSlideIndex = swiper.getSlideIndex(
        slides.filter((el) => el.classList.contains(params.slideActiveClass))[0]
      );
    } else {
      activeIndex = activeSlideIndex;
    }
    const isNext = direction === "next" || !direction;
    const isPrev = direction === "prev" || !direction;
    let slidesPrepended = 0;
    let slidesAppended = 0;
    const cols = gridEnabled
      ? Math.ceil(slides.length / params.grid.rows)
      : slides.length;
    const activeColIndex = gridEnabled
      ? slides[activeSlideIndex].column
      : activeSlideIndex;
    const activeColIndexWithShift =
      activeColIndex +
      (centeredSlides && typeof setTranslate === "undefined"
        ? -slidesPerView / 2 + 0.5
        : 0);
    // prepend last slides before start
    if (activeColIndexWithShift < loopedSlides) {
      slidesPrepended = Math.max(
        loopedSlides - activeColIndexWithShift,
        slidesPerGroup
      );
      for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {
        const index = i - Math.floor(i / cols) * cols;
        if (gridEnabled) {
          const colIndexToPrepend = cols - index - 1;
          for (let i = slides.length - 1; i >= 0; i -= 1) {
            if (slides[i].column === colIndexToPrepend)
              prependSlidesIndexes.push(i);
          }
          // slides.forEach((slide, slideIndex) => {
          //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);
          // });
        } else {
          prependSlidesIndexes.push(cols - index - 1);
        }
      }
    } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {
      slidesAppended = Math.max(
        activeColIndexWithShift - (cols - loopedSlides * 2),
        slidesPerGroup
      );
      for (let i = 0; i < slidesAppended; i += 1) {
        const index = i - Math.floor(i / cols) * cols;
        if (gridEnabled) {
          slides.forEach((slide, slideIndex) => {
            if (slide.column === index) appendSlidesIndexes.push(slideIndex);
          });
        } else {
          appendSlidesIndexes.push(index);
        }
      }
    }
    swiper.__preventObserver__ = true;
    requestAnimationFrame(() => {
      swiper.__preventObserver__ = false;
    });
    if (isPrev) {
      prependSlidesIndexes.forEach((index) => {
        slides[index].swiperLoopMoveDOM = true;
        slidesEl.prepend(slides[index]);
        slides[index].swiperLoopMoveDOM = false;
      });
    }
    if (isNext) {
      appendSlidesIndexes.forEach((index) => {
        slides[index].swiperLoopMoveDOM = true;
        slidesEl.append(slides[index]);
        slides[index].swiperLoopMoveDOM = false;
      });
    }
    swiper.recalcSlides();
    if (params.slidesPerView === "auto") {
      swiper.updateSlides();
    } else if (
      gridEnabled &&
      ((prependSlidesIndexes.length > 0 && isPrev) ||
        (appendSlidesIndexes.length > 0 && isNext))
    ) {
      swiper.slides.forEach((slide, slideIndex) => {
        swiper.grid.updateSlide(slideIndex, slide, swiper.slides);
      });
    }
    if (params.watchSlidesProgress) {
      swiper.updateSlidesOffset();
    }
    if (slideTo) {
      if (prependSlidesIndexes.length > 0 && isPrev) {
        if (typeof slideRealIndex === "undefined") {
          const currentSlideTranslate = swiper.slidesGrid[activeIndex];
          const newSlideTranslate =
            swiper.slidesGrid[activeIndex + slidesPrepended];
          const diff = newSlideTranslate - currentSlideTranslate;
          if (byMousewheel) {
            swiper.setTranslate(swiper.translate - diff);
          } else {
            swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);
            if (setTranslate) {
              swiper.touchEventsData.startTranslate =
                swiper.touchEventsData.startTranslate - diff;
              swiper.touchEventsData.currentTranslate =
                swiper.touchEventsData.currentTranslate - diff;
            }
          }
        } else {
          if (setTranslate) {
            const shift = gridEnabled
              ? prependSlidesIndexes.length / params.grid.rows
              : prependSlidesIndexes.length;
            swiper.slideTo(swiper.activeIndex + shift, 0, false, true);
            swiper.touchEventsData.currentTranslate = swiper.translate;
          }
        }
      } else if (appendSlidesIndexes.length > 0 && isNext) {
        if (typeof slideRealIndex === "undefined") {
          const currentSlideTranslate = swiper.slidesGrid[activeIndex];
          const newSlideTranslate =
            swiper.slidesGrid[activeIndex - slidesAppended];
          const diff = newSlideTranslate - currentSlideTranslate;
          if (byMousewheel) {
            swiper.setTranslate(swiper.translate - diff);
          } else {
            swiper.slideTo(activeIndex - slidesAppended, 0, false, true);
            if (setTranslate) {
              swiper.touchEventsData.startTranslate =
                swiper.touchEventsData.startTranslate - diff;
              swiper.touchEventsData.currentTranslate =
                swiper.touchEventsData.currentTranslate - diff;
            }
          }
        } else {
          const shift = gridEnabled
            ? appendSlidesIndexes.length / params.grid.rows
            : appendSlidesIndexes.length;
          swiper.slideTo(swiper.activeIndex - shift, 0, false, true);
        }
      }
    }
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.controller && swiper.controller.control && !byController) {
      const loopParams = {
        slideRealIndex,
        direction,
        setTranslate,
        activeSlideIndex,
        byController: true,
      };
      if (Array.isArray(swiper.controller.control)) {
        swiper.controller.control.forEach((c) => {
          if (!c.destroyed && c.params.loop)
            c.loopFix({
              ...loopParams,
              slideTo:
                c.params.slidesPerView === params.slidesPerView
                  ? slideTo
                  : false,
            });
        });
      } else if (
        swiper.controller.control instanceof swiper.constructor &&
        swiper.controller.control.params.loop
      ) {
        swiper.controller.control.loopFix({
          ...loopParams,
          slideTo:
            swiper.controller.control.params.slidesPerView ===
            params.slidesPerView
              ? slideTo
              : false,
        });
      }
    }
    swiper.emit("loopFix");
  }

  function loopDestroy() {
    const swiper = this;
    const { params, slidesEl } = swiper;
    if (!params.loop || (swiper.virtual && swiper.params.virtual.enabled))
      return;
    swiper.recalcSlides();
    const newSlidesOrder = [];
    swiper.slides.forEach((slideEl) => {
      const index =
        typeof slideEl.swiperSlideIndex === "undefined"
          ? slideEl.getAttribute("data-swiper-slide-index") * 1
          : slideEl.swiperSlideIndex;
      newSlidesOrder[index] = slideEl;
    });
    swiper.slides.forEach((slideEl) => {
      slideEl.removeAttribute("data-swiper-slide-index");
    });
    newSlidesOrder.forEach((slideEl) => {
      slidesEl.append(slideEl);
    });
    swiper.recalcSlides();
    swiper.slideTo(swiper.realIndex, 0);
  }

  var loop = {
    loopCreate,
    loopFix,
    loopDestroy,
  };

  function setGrabCursor(moving) {
    const swiper = this;
    if (
      !swiper.params.simulateTouch ||
      (swiper.params.watchOverflow && swiper.isLocked) ||
      swiper.params.cssMode
    )
      return;
    const el =
      swiper.params.touchEventsTarget === "container"
        ? swiper.el
        : swiper.wrapperEl;
    if (swiper.isElement) {
      swiper.__preventObserver__ = true;
    }
    el.style.cursor = "move";
    el.style.cursor = moving ? "grabbing" : "grab";
    if (swiper.isElement) {
      requestAnimationFrame(() => {
        swiper.__preventObserver__ = false;
      });
    }
  }

  function unsetGrabCursor() {
    const swiper = this;
    if (
      (swiper.params.watchOverflow && swiper.isLocked) ||
      swiper.params.cssMode
    ) {
      return;
    }
    if (swiper.isElement) {
      swiper.__preventObserver__ = true;
    }
    swiper[
      swiper.params.touchEventsTarget === "container" ? "el" : "wrapperEl"
    ].style.cursor = "";
    if (swiper.isElement) {
      requestAnimationFrame(() => {
        swiper.__preventObserver__ = false;
      });
    }
  }

  var grabCursor = {
    setGrabCursor,
    unsetGrabCursor,
  };

  // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd
  function closestElement(selector, base) {
    if (base === void 0) {
      base = this;
    }
    function __closestFrom(el) {
      if (!el || el === getDocument() || el === getWindow()) return null;
      if (el.assignedSlot) el = el.assignedSlot;
      const found = el.closest(selector);
      if (!found && !el.getRootNode) {
        return null;
      }
      return found || __closestFrom(el.getRootNode().host);
    }
    return __closestFrom(base);
  }
  function preventEdgeSwipe(swiper, event, startX) {
    const window = getWindow();
    const { params } = swiper;
    const edgeSwipeDetection = params.edgeSwipeDetection;
    const edgeSwipeThreshold = params.edgeSwipeThreshold;
    if (
      edgeSwipeDetection &&
      (startX <= edgeSwipeThreshold ||
        startX >= window.innerWidth - edgeSwipeThreshold)
    ) {
      if (edgeSwipeDetection === "prevent") {
        event.preventDefault();
        return true;
      }
      return false;
    }
    return true;
  }
  function onTouchStart(event) {
    const swiper = this;
    const document = getDocument();
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    const data = swiper.touchEventsData;
    if (e.type === "pointerdown") {
      if (data.pointerId !== null && data.pointerId !== e.pointerId) {
        return;
      }
      data.pointerId = e.pointerId;
    } else if (e.type === "touchstart" && e.targetTouches.length === 1) {
      data.touchId = e.targetTouches[0].identifier;
    }
    if (e.type === "touchstart") {
      // don't proceed touch event
      preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);
      return;
    }
    const { params, touches, enabled } = swiper;
    if (!enabled) return;
    if (!params.simulateTouch && e.pointerType === "mouse") return;
    if (swiper.animating && params.preventInteractionOnTransition) {
      return;
    }
    if (!swiper.animating && params.cssMode && params.loop) {
      swiper.loopFix();
    }
    let targetEl = e.target;
    if (params.touchEventsTarget === "wrapper") {
      if (!swiper.wrapperEl.contains(targetEl)) return;
    }
    if ("which" in e && e.which === 3) return;
    if ("button" in e && e.button > 0) return;
    if (data.isTouched && data.isMoved) return;

    // change target el for shadow root component
    const swipingClassHasValue =
      !!params.noSwipingClass && params.noSwipingClass !== "";
    // eslint-disable-next-line
    const eventPath = e.composedPath ? e.composedPath() : e.path;
    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {
      targetEl = eventPath[0];
    }
    const noSwipingSelector = params.noSwipingSelector
      ? params.noSwipingSelector
      : `.${params.noSwipingClass}`;
    const isTargetShadow = !!(e.target && e.target.shadowRoot);

    // use closestElement for shadow root element to get the actual closest for nested shadow root element
    if (
      params.noSwiping &&
      (isTargetShadow
        ? closestElement(noSwipingSelector, targetEl)
        : targetEl.closest(noSwipingSelector))
    ) {
      swiper.allowClick = true;
      return;
    }
    if (params.swipeHandler) {
      if (!targetEl.closest(params.swipeHandler)) return;
    }
    touches.currentX = e.pageX;
    touches.currentY = e.pageY;
    const startX = touches.currentX;
    const startY = touches.currentY;

    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore

    if (!preventEdgeSwipe(swiper, e, startX)) {
      return;
    }
    Object.assign(data, {
      isTouched: true,
      isMoved: false,
      allowTouchCallbacks: true,
      isScrolling: undefined,
      startMoving: undefined,
    });
    touches.startX = startX;
    touches.startY = startY;
    data.touchStartTime = now();
    swiper.allowClick = true;
    swiper.updateSize();
    swiper.swipeDirection = undefined;
    if (params.threshold > 0) data.allowThresholdMove = false;
    let preventDefault = true;
    if (targetEl.matches(data.focusableElements)) {
      preventDefault = false;
      if (targetEl.nodeName === "SELECT") {
        data.isTouched = false;
      }
    }
    if (
      document.activeElement &&
      document.activeElement.matches(data.focusableElements) &&
      document.activeElement !== targetEl
    ) {
      document.activeElement.blur();
    }
    const shouldPreventDefault =
      preventDefault &&
      swiper.allowTouchMove &&
      params.touchStartPreventDefault;
    if (
      (params.touchStartForcePreventDefault || shouldPreventDefault) &&
      !targetEl.isContentEditable
    ) {
      e.preventDefault();
    }
    if (
      params.freeMode &&
      params.freeMode.enabled &&
      swiper.freeMode &&
      swiper.animating &&
      !params.cssMode
    ) {
      swiper.freeMode.onTouchStart();
    }
    swiper.emit("touchStart", e);
  }

  function onTouchMove(event) {
    const document = getDocument();
    const swiper = this;
    const data = swiper.touchEventsData;
    const { params, touches, rtlTranslate: rtl, enabled } = swiper;
    if (!enabled) return;
    if (!params.simulateTouch && event.pointerType === "mouse") return;
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    if (e.type === "pointermove") {
      if (data.touchId !== null) return; // return from pointer if we use touch
      const id = e.pointerId;
      if (id !== data.pointerId) return;
    }
    let targetTouch;
    if (e.type === "touchmove") {
      targetTouch = [...e.changedTouches].filter(
        (t) => t.identifier === data.touchId
      )[0];
      if (!targetTouch || targetTouch.identifier !== data.touchId) return;
    } else {
      targetTouch = e;
    }
    if (!data.isTouched) {
      if (data.startMoving && data.isScrolling) {
        swiper.emit("touchMoveOpposite", e);
      }
      return;
    }
    const pageX = targetTouch.pageX;
    const pageY = targetTouch.pageY;
    if (e.preventedByNestedSwiper) {
      touches.startX = pageX;
      touches.startY = pageY;
      return;
    }
    if (!swiper.allowTouchMove) {
      if (!e.target.matches(data.focusableElements)) {
        swiper.allowClick = false;
      }
      if (data.isTouched) {
        Object.assign(touches, {
          startX: pageX,
          startY: pageY,
          currentX: pageX,
          currentY: pageY,
        });
        data.touchStartTime = now();
      }
      return;
    }
    if (params.touchReleaseOnEdges && !params.loop) {
      if (swiper.isVertical()) {
        // Vertical
        if (
          (pageY < touches.startY &&
            swiper.translate <= swiper.maxTranslate()) ||
          (pageY > touches.startY && swiper.translate >= swiper.minTranslate())
        ) {
          data.isTouched = false;
          data.isMoved = false;
          return;
        }
      } else if (
        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||
        (pageX > touches.startX && swiper.translate >= swiper.minTranslate())
      ) {
        return;
      }
    }
    if (document.activeElement) {
      if (
        e.target === document.activeElement &&
        e.target.matches(data.focusableElements)
      ) {
        data.isMoved = true;
        swiper.allowClick = false;
        return;
      }
    }
    if (data.allowTouchCallbacks) {
      swiper.emit("touchMove", e);
    }
    touches.previousX = touches.currentX;
    touches.previousY = touches.currentY;
    touches.currentX = pageX;
    touches.currentY = pageY;
    const diffX = touches.currentX - touches.startX;
    const diffY = touches.currentY - touches.startY;
    if (
      swiper.params.threshold &&
      Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold
    )
      return;
    if (typeof data.isScrolling === "undefined") {
      let touchAngle;
      if (
        (swiper.isHorizontal() && touches.currentY === touches.startY) ||
        (swiper.isVertical() && touches.currentX === touches.startX)
      ) {
        data.isScrolling = false;
      } else {
        // eslint-disable-next-line
        if (diffX * diffX + diffY * diffY >= 25) {
          touchAngle =
            (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;
          data.isScrolling = swiper.isHorizontal()
            ? touchAngle > params.touchAngle
            : 90 - touchAngle > params.touchAngle;
        }
      }
    }
    if (data.isScrolling) {
      swiper.emit("touchMoveOpposite", e);
    }
    if (typeof data.startMoving === "undefined") {
      if (
        touches.currentX !== touches.startX ||
        touches.currentY !== touches.startY
      ) {
        data.startMoving = true;
      }
    }
    if (data.isScrolling) {
      data.isTouched = false;
      return;
    }
    if (!data.startMoving) {
      return;
    }
    swiper.allowClick = false;
    if (!params.cssMode && e.cancelable) {
      e.preventDefault();
    }
    if (params.touchMoveStopPropagation && !params.nested) {
      e.stopPropagation();
    }
    let diff = swiper.isHorizontal() ? diffX : diffY;
    let touchesDiff = swiper.isHorizontal()
      ? touches.currentX - touches.previousX
      : touches.currentY - touches.previousY;
    if (params.oneWayMovement) {
      diff = Math.abs(diff) * (rtl ? 1 : -1);
      touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);
    }
    touches.diff = diff;
    diff *= params.touchRatio;
    if (rtl) {
      diff = -diff;
      touchesDiff = -touchesDiff;
    }
    const prevTouchesDirection = swiper.touchesDirection;
    swiper.swipeDirection = diff > 0 ? "prev" : "next";
    swiper.touchesDirection = touchesDiff > 0 ? "prev" : "next";
    const isLoop = swiper.params.loop && !params.cssMode;
    const allowLoopFix =
      (swiper.touchesDirection === "next" && swiper.allowSlideNext) ||
      (swiper.touchesDirection === "prev" && swiper.allowSlidePrev);
    if (!data.isMoved) {
      if (isLoop && allowLoopFix) {
        swiper.loopFix({
          direction: swiper.swipeDirection,
        });
      }
      data.startTranslate = swiper.getTranslate();
      swiper.setTransition(0);
      if (swiper.animating) {
        const evt = new window.CustomEvent("transitionend", {
          bubbles: true,
          cancelable: true,
        });
        swiper.wrapperEl.dispatchEvent(evt);
      }
      data.allowMomentumBounce = false;
      // Grab Cursor
      if (
        params.grabCursor &&
        (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)
      ) {
        swiper.setGrabCursor(true);
      }
      swiper.emit("sliderFirstMove", e);
    }
    let loopFixed;
    new Date().getTime();
    if (
      data.isMoved &&
      data.allowThresholdMove &&
      prevTouchesDirection !== swiper.touchesDirection &&
      isLoop &&
      allowLoopFix &&
      Math.abs(diff) >= 1
    ) {
      Object.assign(touches, {
        startX: pageX,
        startY: pageY,
        currentX: pageX,
        currentY: pageY,
        startTranslate: data.currentTranslate,
      });
      data.loopSwapReset = true;
      data.startTranslate = data.currentTranslate;
      return;
    }
    swiper.emit("sliderMove", e);
    data.isMoved = true;
    data.currentTranslate = diff + data.startTranslate;
    let disableParentSwiper = true;
    let resistanceRatio = params.resistanceRatio;
    if (params.touchReleaseOnEdges) {
      resistanceRatio = 0;
    }
    if (diff > 0) {
      if (
        isLoop &&
        allowLoopFix &&
        !loopFixed &&
        data.allowThresholdMove &&
        data.currentTranslate >
          (params.centeredSlides
            ? swiper.minTranslate() -
              swiper.slidesSizesGrid[swiper.activeIndex + 1]
            : swiper.minTranslate())
      ) {
        swiper.loopFix({
          direction: "prev",
          setTranslate: true,
          activeSlideIndex: 0,
        });
      }
      if (data.currentTranslate > swiper.minTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) {
          data.currentTranslate =
            swiper.minTranslate() -
            1 +
            (-swiper.minTranslate() + data.startTranslate + diff) **
              resistanceRatio;
        }
      }
    } else if (diff < 0) {
      if (
        isLoop &&
        allowLoopFix &&
        !loopFixed &&
        data.allowThresholdMove &&
        data.currentTranslate <
          (params.centeredSlides
            ? swiper.maxTranslate() +
              swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1]
            : swiper.maxTranslate())
      ) {
        swiper.loopFix({
          direction: "next",
          setTranslate: true,
          activeSlideIndex:
            swiper.slides.length -
            (params.slidesPerView === "auto"
              ? swiper.slidesPerViewDynamic()
              : Math.ceil(parseFloat(params.slidesPerView, 10))),
        });
      }
      if (data.currentTranslate < swiper.maxTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) {
          data.currentTranslate =
            swiper.maxTranslate() +
            1 -
            (swiper.maxTranslate() - data.startTranslate - diff) **
              resistanceRatio;
        }
      }
    }
    if (disableParentSwiper) {
      e.preventedByNestedSwiper = true;
    }

    // Directions locks
    if (
      !swiper.allowSlideNext &&
      swiper.swipeDirection === "next" &&
      data.currentTranslate < data.startTranslate
    ) {
      data.currentTranslate = data.startTranslate;
    }
    if (
      !swiper.allowSlidePrev &&
      swiper.swipeDirection === "prev" &&
      data.currentTranslate > data.startTranslate
    ) {
      data.currentTranslate = data.startTranslate;
    }
    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {
      data.currentTranslate = data.startTranslate;
    }

    // Threshold
    if (params.threshold > 0) {
      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
        if (!data.allowThresholdMove) {
          data.allowThresholdMove = true;
          touches.startX = touches.currentX;
          touches.startY = touches.currentY;
          data.currentTranslate = data.startTranslate;
          touches.diff = swiper.isHorizontal()
            ? touches.currentX - touches.startX
            : touches.currentY - touches.startY;
          return;
        }
      } else {
        data.currentTranslate = data.startTranslate;
        return;
      }
    }
    if (!params.followFinger || params.cssMode) return;

    // Update active index in free mode
    if (
      (params.freeMode && params.freeMode.enabled && swiper.freeMode) ||
      params.watchSlidesProgress
    ) {
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {
      swiper.freeMode.onTouchMove();
    }
    // Update progress
    swiper.updateProgress(data.currentTranslate);
    // Update translate
    swiper.setTranslate(data.currentTranslate);
  }

  function onTouchEnd(event) {
    const swiper = this;
    const data = swiper.touchEventsData;
    let e = event;
    if (e.originalEvent) e = e.originalEvent;
    let targetTouch;
    const isTouchEvent = e.type === "touchend" || e.type === "touchcancel";
    if (!isTouchEvent) {
      if (data.touchId !== null) return; // return from pointer if we use touch
      if (e.pointerId !== data.pointerId) return;
      targetTouch = e;
    } else {
      targetTouch = [...e.changedTouches].filter(
        (t) => t.identifier === data.touchId
      )[0];
      if (!targetTouch || targetTouch.identifier !== data.touchId) return;
    }
    if (
      ["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(
        e.type
      )
    ) {
      const proceed =
        ["pointercancel", "contextmenu"].includes(e.type) &&
        (swiper.browser.isSafari || swiper.browser.isWebView);
      if (!proceed) {
        return;
      }
    }
    data.pointerId = null;
    data.touchId = null;
    const { params, touches, rtlTranslate: rtl, slidesGrid, enabled } = swiper;
    if (!enabled) return;
    if (!params.simulateTouch && e.pointerType === "mouse") return;
    if (data.allowTouchCallbacks) {
      swiper.emit("touchEnd", e);
    }
    data.allowTouchCallbacks = false;
    if (!data.isTouched) {
      if (data.isMoved && params.grabCursor) {
        swiper.setGrabCursor(false);
      }
      data.isMoved = false;
      data.startMoving = false;
      return;
    }

    // Return Grab Cursor
    if (
      params.grabCursor &&
      data.isMoved &&
      data.isTouched &&
      (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)
    ) {
      swiper.setGrabCursor(false);
    }

    // Time diff
    const touchEndTime = now();
    const timeDiff = touchEndTime - data.touchStartTime;

    // Tap, doubleTap, Click
    if (swiper.allowClick) {
      const pathTree = e.path || (e.composedPath && e.composedPath());
      swiper.updateClickedSlide(
        (pathTree && pathTree[0]) || e.target,
        pathTree
      );
      swiper.emit("tap click", e);
      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
        swiper.emit("doubleTap doubleClick", e);
      }
    }
    data.lastClickTime = now();
    nextTick(() => {
      if (!swiper.destroyed) swiper.allowClick = true;
    });
    if (
      !data.isTouched ||
      !data.isMoved ||
      !swiper.swipeDirection ||
      (touches.diff === 0 && !data.loopSwapReset) ||
      (data.currentTranslate === data.startTranslate && !data.loopSwapReset)
    ) {
      data.isTouched = false;
      data.isMoved = false;
      data.startMoving = false;
      return;
    }
    data.isTouched = false;
    data.isMoved = false;
    data.startMoving = false;
    let currentPos;
    if (params.followFinger) {
      currentPos = rtl ? swiper.translate : -swiper.translate;
    } else {
      currentPos = -data.currentTranslate;
    }
    if (params.cssMode) {
      return;
    }
    if (params.freeMode && params.freeMode.enabled) {
      swiper.freeMode.onTouchEnd({
        currentPos,
      });
      return;
    }

    // Find current slide
    const swipeToLast =
      currentPos >= -swiper.maxTranslate() && !swiper.params.loop;
    let stopIndex = 0;
    let groupSize = swiper.slidesSizesGrid[0];
    for (
      let i = 0;
      i < slidesGrid.length;
      i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup
    ) {
      const increment =
        i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
      if (typeof slidesGrid[i + increment] !== "undefined") {
        if (
          swipeToLast ||
          (currentPos >= slidesGrid[i] &&
            currentPos < slidesGrid[i + increment])
        ) {
          stopIndex = i;
          groupSize = slidesGrid[i + increment] - slidesGrid[i];
        }
      } else if (swipeToLast || currentPos >= slidesGrid[i]) {
        stopIndex = i;
        groupSize =
          slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
      }
    }
    let rewindFirstIndex = null;
    let rewindLastIndex = null;
    if (params.rewind) {
      if (swiper.isBeginning) {
        rewindLastIndex =
          params.virtual && params.virtual.enabled && swiper.virtual
            ? swiper.virtual.slides.length - 1
            : swiper.slides.length - 1;
      } else if (swiper.isEnd) {
        rewindFirstIndex = 0;
      }
    }
    // Find current slide size
    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
    const increment =
      stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
    if (timeDiff > params.longSwipesMs) {
      // Long touches
      if (!params.longSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      if (swiper.swipeDirection === "next") {
        if (ratio >= params.longSwipesRatio)
          swiper.slideTo(
            params.rewind && swiper.isEnd
              ? rewindFirstIndex
              : stopIndex + increment
          );
        else swiper.slideTo(stopIndex);
      }
      if (swiper.swipeDirection === "prev") {
        if (ratio > 1 - params.longSwipesRatio) {
          swiper.slideTo(stopIndex + increment);
        } else if (
          rewindLastIndex !== null &&
          ratio < 0 &&
          Math.abs(ratio) > params.longSwipesRatio
        ) {
          swiper.slideTo(rewindLastIndex);
        } else {
          swiper.slideTo(stopIndex);
        }
      }
    } else {
      // Short swipes
      if (!params.shortSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      const isNavButtonTarget =
        swiper.navigation &&
        (e.target === swiper.navigation.nextEl ||
          e.target === swiper.navigation.prevEl);
      if (!isNavButtonTarget) {
        if (swiper.swipeDirection === "next") {
          swiper.slideTo(
            rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment
          );
        }
        if (swiper.swipeDirection === "prev") {
          swiper.slideTo(
            rewindLastIndex !== null ? rewindLastIndex : stopIndex
          );
        }
      } else if (e.target === swiper.navigation.nextEl) {
        swiper.slideTo(stopIndex + increment);
      } else {
        swiper.slideTo(stopIndex);
      }
    }
  }

  function onResize() {
    const swiper = this;
    const { params, el } = swiper;
    if (el && el.offsetWidth === 0) return;

    // Breakpoints
    if (params.breakpoints) {
      swiper.setBreakpoint();
    }

    // Save locks
    const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;

    // Disable locks on resize
    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;
    swiper.updateSize();
    swiper.updateSlides();
    swiper.updateSlidesClasses();
    const isVirtualLoop = isVirtual && params.loop;
    if (
      (params.slidesPerView === "auto" || params.slidesPerView > 1) &&
      swiper.isEnd &&
      !swiper.isBeginning &&
      !swiper.params.centeredSlides &&
      !isVirtualLoop
    ) {
      swiper.slideTo(swiper.slides.length - 1, 0, false, true);
    } else {
      if (swiper.params.loop && !isVirtual) {
        swiper.slideToLoop(swiper.realIndex, 0, false, true);
      } else {
        swiper.slideTo(swiper.activeIndex, 0, false, true);
      }
    }
    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
      clearTimeout(swiper.autoplay.resizeTimeout);
      swiper.autoplay.resizeTimeout = setTimeout(() => {
        if (
          swiper.autoplay &&
          swiper.autoplay.running &&
          swiper.autoplay.paused
        ) {
          swiper.autoplay.resume();
        }
      }, 500);
    }
    // Return locks after resize
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
      swiper.checkOverflow();
    }
  }

  function onClick(e) {
    const swiper = this;
    if (!swiper.enabled) return;
    if (!swiper.allowClick) {
      if (swiper.params.preventClicks) e.preventDefault();
      if (swiper.params.preventClicksPropagation && swiper.animating) {
        e.stopPropagation();
        e.stopImmediatePropagation();
      }
    }
  }

  function onScroll() {
    const swiper = this;
    const { wrapperEl, rtlTranslate, enabled } = swiper;
    if (!enabled) return;
    swiper.previousTranslate = swiper.translate;
    if (swiper.isHorizontal()) {
      swiper.translate = -wrapperEl.scrollLeft;
    } else {
      swiper.translate = -wrapperEl.scrollTop;
    }
    // eslint-disable-next-line
    if (swiper.translate === 0) swiper.translate = 0;
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
    }
    if (newProgress !== swiper.progress) {
      swiper.updateProgress(
        rtlTranslate ? -swiper.translate : swiper.translate
      );
    }
    swiper.emit("setTranslate", swiper.translate, false);
  }

  function onLoad(e) {
    const swiper = this;
    processLazyPreloader(swiper, e.target);
    if (
      swiper.params.cssMode ||
      (swiper.params.slidesPerView !== "auto" && !swiper.params.autoHeight)
    ) {
      return;
    }
    swiper.update();
  }

  function onDocumentTouchStart() {
    const swiper = this;
    if (swiper.documentTouchHandlerProceeded) return;
    swiper.documentTouchHandlerProceeded = true;
    if (swiper.params.touchReleaseOnEdges) {
      swiper.el.style.touchAction = "auto";
    }
  }

  const events = (swiper, method) => {
    const document = getDocument();
    const { params, el, wrapperEl, device } = swiper;
    const capture = !!params.nested;
    const domMethod =
      method === "on" ? "addEventListener" : "removeEventListener";
    const swiperMethod = method;

    // Touch Events
    document[domMethod]("touchstart", swiper.onDocumentTouchStart, {
      passive: false,
      capture,
    });
    el[domMethod]("touchstart", swiper.onTouchStart, {
      passive: false,
    });
    el[domMethod]("pointerdown", swiper.onTouchStart, {
      passive: false,
    });
    document[domMethod]("touchmove", swiper.onTouchMove, {
      passive: false,
      capture,
    });
    document[domMethod]("pointermove", swiper.onTouchMove, {
      passive: false,
      capture,
    });
    document[domMethod]("touchend", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("pointerup", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("pointercancel", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("touchcancel", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("pointerout", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("pointerleave", swiper.onTouchEnd, {
      passive: true,
    });
    document[domMethod]("contextmenu", swiper.onTouchEnd, {
      passive: true,
    });

    // Prevent Links Clicks
    if (params.preventClicks || params.preventClicksPropagation) {
      el[domMethod]("click", swiper.onClick, true);
    }
    if (params.cssMode) {
      wrapperEl[domMethod]("scroll", swiper.onScroll);
    }

    // Resize handler
    if (params.updateOnWindowResize) {
      swiper[swiperMethod](
        device.ios || device.android
          ? "resize orientationchange observerUpdate"
          : "resize observerUpdate",
        onResize,
        true
      );
    } else {
      swiper[swiperMethod]("observerUpdate", onResize, true);
    }

    // Images loader
    el[domMethod]("load", swiper.onLoad, {
      capture: true,
    });
  };
  function attachEvents() {
    const swiper = this;
    const { params } = swiper;
    swiper.onTouchStart = onTouchStart.bind(swiper);
    swiper.onTouchMove = onTouchMove.bind(swiper);
    swiper.onTouchEnd = onTouchEnd.bind(swiper);
    swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);
    if (params.cssMode) {
      swiper.onScroll = onScroll.bind(swiper);
    }
    swiper.onClick = onClick.bind(swiper);
    swiper.onLoad = onLoad.bind(swiper);
    events(swiper, "on");
  }
  function detachEvents() {
    const swiper = this;
    events(swiper, "off");
  }
  var events$1 = {
    attachEvents,
    detachEvents,
  };

  const isGridEnabled = (swiper, params) => {
    return swiper.grid && params.grid && params.grid.rows > 1;
  };
  function setBreakpoint() {
    const swiper = this;
    const { realIndex, initialized, params, el } = swiper;
    const breakpoints = params.breakpoints;
    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0))
      return;

    // Get breakpoint for window width and update parameters
    const breakpoint = swiper.getBreakpoint(
      breakpoints,
      swiper.params.breakpointsBase,
      swiper.el
    );
    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;
    const breakpointOnlyParams =
      breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;
    const breakpointParams = breakpointOnlyParams || swiper.originalParams;
    const wasMultiRow = isGridEnabled(swiper, params);
    const isMultiRow = isGridEnabled(swiper, breakpointParams);
    const wasEnabled = params.enabled;
    if (wasMultiRow && !isMultiRow) {
      el.classList.remove(
        `${params.containerModifierClass}grid`,
        `${params.containerModifierClass}grid-column`
      );
      swiper.emitContainerClasses();
    } else if (!wasMultiRow && isMultiRow) {
      el.classList.add(`${params.containerModifierClass}grid`);
      if (
        (breakpointParams.grid.fill &&
          breakpointParams.grid.fill === "column") ||
        (!breakpointParams.grid.fill && params.grid.fill === "column")
      ) {
        el.classList.add(`${params.containerModifierClass}grid-column`);
      }
      swiper.emitContainerClasses();
    }

    // Toggle navigation, pagination, scrollbar
    ["navigation", "pagination", "scrollbar"].forEach((prop) => {
      if (typeof breakpointParams[prop] === "undefined") return;
      const wasModuleEnabled = params[prop] && params[prop].enabled;
      const isModuleEnabled =
        breakpointParams[prop] && breakpointParams[prop].enabled;
      if (wasModuleEnabled && !isModuleEnabled) {
        swiper[prop].disable();
      }
      if (!wasModuleEnabled && isModuleEnabled) {
        swiper[prop].enable();
      }
    });
    const directionChanged =
      breakpointParams.direction &&
      breakpointParams.direction !== params.direction;
    const needsReLoop =
      params.loop &&
      (breakpointParams.slidesPerView !== params.slidesPerView ||
        directionChanged);
    const wasLoop = params.loop;
    if (directionChanged && initialized) {
      swiper.changeDirection();
    }
    extend(swiper.params, breakpointParams);
    const isEnabled = swiper.params.enabled;
    const hasLoop = swiper.params.loop;
    Object.assign(swiper, {
      allowTouchMove: swiper.params.allowTouchMove,
      allowSlideNext: swiper.params.allowSlideNext,
      allowSlidePrev: swiper.params.allowSlidePrev,
    });
    if (wasEnabled && !isEnabled) {
      swiper.disable();
    } else if (!wasEnabled && isEnabled) {
      swiper.enable();
    }
    swiper.currentBreakpoint = breakpoint;
    swiper.emit("_beforeBreakpoint", breakpointParams);
    if (initialized) {
      if (needsReLoop) {
        swiper.loopDestroy();
        swiper.loopCreate(realIndex);
        swiper.updateSlides();
      } else if (!wasLoop && hasLoop) {
        swiper.loopCreate(realIndex);
        swiper.updateSlides();
      } else if (wasLoop && !hasLoop) {
        swiper.loopDestroy();
      }
    }
    swiper.emit("breakpoint", breakpointParams);
  }

  function getBreakpoint(breakpoints, base, containerEl) {
    if (base === void 0) {
      base = "window";
    }
    if (!breakpoints || (base === "container" && !containerEl))
      return undefined;
    let breakpoint = false;
    const window = getWindow();
    const currentHeight =
      base === "window" ? window.innerHeight : containerEl.clientHeight;
    const points = Object.keys(breakpoints).map((point) => {
      if (typeof point === "string" && point.indexOf("@") === 0) {
        const minRatio = parseFloat(point.substr(1));
        const value = currentHeight * minRatio;
        return {
          value,
          point,
        };
      }
      return {
        value: point,
        point,
      };
    });
    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));
    for (let i = 0; i < points.length; i += 1) {
      const { point, value } = points[i];
      if (base === "window") {
        if (window.matchMedia(`(min-width: ${value}px)`).matches) {
          breakpoint = point;
        }
      } else if (value <= containerEl.clientWidth) {
        breakpoint = point;
      }
    }
    return breakpoint || "max";
  }

  var breakpoints = {
    setBreakpoint,
    getBreakpoint,
  };

  function prepareClasses(entries, prefix) {
    const resultClasses = [];
    entries.forEach((item) => {
      if (typeof item === "object") {
        Object.keys(item).forEach((classNames) => {
          if (item[classNames]) {
            resultClasses.push(prefix + classNames);
          }
        });
      } else if (typeof item === "string") {
        resultClasses.push(prefix + item);
      }
    });
    return resultClasses;
  }
  function addClasses() {
    const swiper = this;
    const { classNames, params, rtl, el, device } = swiper;
    // prettier-ignore
    const suffixes = prepareClasses(['initialized', params.direction, {
        'free-mode': swiper.params.freeMode && params.freeMode.enabled
      }, {
        'autoheight': params.autoHeight
      }, {
        'rtl': rtl
      }, {
        'grid': params.grid && params.grid.rows > 1
      }, {
        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'
      }, {
        'android': device.android
      }, {
        'ios': device.ios
      }, {
        'css-mode': params.cssMode
      }, {
        'centered': params.cssMode && params.centeredSlides
      }, {
        'watch-progress': params.watchSlidesProgress
      }], params.containerModifierClass);
    classNames.push(...suffixes);
    el.classList.add(...classNames);
    swiper.emitContainerClasses();
  }

  function removeClasses() {
    const swiper = this;
    const { el, classNames } = swiper;
    el.classList.remove(...classNames);
    swiper.emitContainerClasses();
  }

  var classes = {
    addClasses,
    removeClasses,
  };

  function checkOverflow() {
    const swiper = this;
    const { isLocked: wasLocked, params } = swiper;
    const { slidesOffsetBefore } = params;
    if (slidesOffsetBefore) {
      const lastSlideIndex = swiper.slides.length - 1;
      const lastSlideRightEdge =
        swiper.slidesGrid[lastSlideIndex] +
        swiper.slidesSizesGrid[lastSlideIndex] +
        slidesOffsetBefore * 2;
      swiper.isLocked = swiper.size > lastSlideRightEdge;
    } else {
      swiper.isLocked = swiper.snapGrid.length === 1;
    }
    if (params.allowSlideNext === true) {
      swiper.allowSlideNext = !swiper.isLocked;
    }
    if (params.allowSlidePrev === true) {
      swiper.allowSlidePrev = !swiper.isLocked;
    }
    if (wasLocked && wasLocked !== swiper.isLocked) {
      swiper.isEnd = false;
    }
    if (wasLocked !== swiper.isLocked) {
      swiper.emit(swiper.isLocked ? "lock" : "unlock");
    }
  }
  var checkOverflow$1 = {
    checkOverflow,
  };

  var defaults = {
    init: true,
    direction: "horizontal",
    oneWayMovement: false,
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: false,
    updateOnWindowResize: true,
    resizeObserver: true,
    nested: false,
    createElements: false,
    eventsPrefix: "swiper",
    enabled: true,
    focusableElements: "input, select, option, textarea, button, video, label",
    // Overrides
    width: null,
    height: null,
    //
    preventInteractionOnTransition: false,
    // ssr
    userAgent: null,
    url: null,
    // To support iOS's swipe-to-go-back gesture (when being used in-app).
    edgeSwipeDetection: false,
    edgeSwipeThreshold: 20,
    // Autoheight
    autoHeight: false,
    // Set wrapper width
    setWrapperSize: false,
    // Virtual Translate
    virtualTranslate: false,
    // Effects
    effect: "slide",
    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'

    // Breakpoints
    breakpoints: undefined,
    breakpointsBase: "window",
    // Slides grid
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: false,
    centeredSlides: false,
    centeredSlidesBounds: false,
    slidesOffsetBefore: 0,
    // in px
    slidesOffsetAfter: 0,
    // in px
    normalizeSlideIndex: true,
    centerInsufficientSlides: false,
    // Disable swiper and hide navigation when container not overflow
    watchOverflow: true,
    // Round length
    roundLengths: false,
    // Touches
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: true,
    shortSwipes: true,
    longSwipes: true,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: true,
    allowTouchMove: true,
    threshold: 5,
    touchMoveStopPropagation: false,
    touchStartPreventDefault: true,
    touchStartForcePreventDefault: false,
    touchReleaseOnEdges: false,
    // Unique Navigation Elements
    uniqueNavElements: true,
    // Resistance
    resistance: true,
    resistanceRatio: 0.85,
    // Progress
    watchSlidesProgress: false,
    // Cursor
    grabCursor: false,
    // Clicks
    preventClicks: true,
    preventClicksPropagation: true,
    slideToClickedSlide: false,
    // loop
    loop: false,
    loopAddBlankSlides: true,
    loopAdditionalSlides: 0,
    loopPreventsSliding: true,
    // rewind
    rewind: false,
    // Swiping/no swiping
    allowSlidePrev: true,
    allowSlideNext: true,
    swipeHandler: null,
    // '.swipe-handler',
    noSwiping: true,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    // Passive Listeners
    passiveListeners: true,
    maxBackfaceHiddenSlides: 10,
    // NS
    containerModifierClass: "swiper-",
    // NEW
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-blank",
    slideActiveClass: "swiper-slide-active",
    slideVisibleClass: "swiper-slide-visible",
    slideFullyVisibleClass: "swiper-slide-fully-visible",
    slideNextClass: "swiper-slide-next",
    slidePrevClass: "swiper-slide-prev",
    wrapperClass: "swiper-wrapper",
    lazyPreloaderClass: "swiper-lazy-preloader",
    lazyPreloadPrevNext: 0,
    // Callbacks
    runCallbacksOnInit: true,
    // Internals
    _emitClasses: false,
  };

  function moduleExtendParams(params, allModulesParams) {
    return function extendParams(obj) {
      if (obj === void 0) {
        obj = {};
      }
      const moduleParamName = Object.keys(obj)[0];
      const moduleParams = obj[moduleParamName];
      if (typeof moduleParams !== "object" || moduleParams === null) {
        extend(allModulesParams, obj);
        return;
      }
      if (params[moduleParamName] === true) {
        params[moduleParamName] = {
          enabled: true,
        };
      }
      if (
        moduleParamName === "navigation" &&
        params[moduleParamName] &&
        params[moduleParamName].enabled &&
        !params[moduleParamName].prevEl &&
        !params[moduleParamName].nextEl
      ) {
        params[moduleParamName].auto = true;
      }
      if (
        ["pagination", "scrollbar"].indexOf(moduleParamName) >= 0 &&
        params[moduleParamName] &&
        params[moduleParamName].enabled &&
        !params[moduleParamName].el
      ) {
        params[moduleParamName].auto = true;
      }
      if (!(moduleParamName in params && "enabled" in moduleParams)) {
        extend(allModulesParams, obj);
        return;
      }
      if (
        typeof params[moduleParamName] === "object" &&
        !("enabled" in params[moduleParamName])
      ) {
        params[moduleParamName].enabled = true;
      }
      if (!params[moduleParamName])
        params[moduleParamName] = {
          enabled: false,
        };
      extend(allModulesParams, obj);
    };
  }

  /* eslint no-param-reassign: "off" */
  const prototypes = {
    eventsEmitter,
    update,
    translate,
    transition,
    slide,
    loop,
    grabCursor,
    events: events$1,
    breakpoints,
    checkOverflow: checkOverflow$1,
    classes,
  };
  const extendedDefaults = {};
  class Swiper {
    constructor() {
      let el;
      let params;
      for (
        var _len = arguments.length, args = new Array(_len), _key = 0;
        _key < _len;
        _key++
      ) {
        args[_key] = arguments[_key];
      }
      if (
        args.length === 1 &&
        args[0].constructor &&
        Object.prototype.toString.call(args[0]).slice(8, -1) === "Object"
      ) {
        params = args[0];
      } else {
        [el, params] = args;
      }
      if (!params) params = {};
      params = extend({}, params);
      if (el && !params.el) params.el = el;
      const document = getDocument();
      if (
        params.el &&
        typeof params.el === "string" &&
        document.querySelectorAll(params.el).length > 1
      ) {
        const swipers = [];
        document.querySelectorAll(params.el).forEach((containerEl) => {
          const newParams = extend({}, params, {
            el: containerEl,
          });
          swipers.push(new Swiper(newParams));
        });
        // eslint-disable-next-line no-constructor-return
        return swipers;
      }

      // Swiper Instance
      const swiper = this;
      swiper.__swiper__ = true;
      swiper.support = getSupport();
      swiper.device = getDevice({
        userAgent: params.userAgent,
      });
      swiper.browser = getBrowser();
      swiper.eventsListeners = {};
      swiper.eventsAnyListeners = [];
      swiper.modules = [...swiper.__modules__];
      if (params.modules && Array.isArray(params.modules)) {
        swiper.modules.push(...params.modules);
      }
      const allModulesParams = {};
      swiper.modules.forEach((mod) => {
        mod({
          params,
          swiper,
          extendParams: moduleExtendParams(params, allModulesParams),
          on: swiper.on.bind(swiper),
          once: swiper.once.bind(swiper),
          off: swiper.off.bind(swiper),
          emit: swiper.emit.bind(swiper),
        });
      });

      // Extend defaults with modules params
      const swiperParams = extend({}, defaults, allModulesParams);

      // Extend defaults with passed params
      swiper.params = extend({}, swiperParams, extendedDefaults, params);
      swiper.originalParams = extend({}, swiper.params);
      swiper.passedParams = extend({}, params);

      // add event listeners
      if (swiper.params && swiper.params.on) {
        Object.keys(swiper.params.on).forEach((eventName) => {
          swiper.on(eventName, swiper.params.on[eventName]);
        });
      }
      if (swiper.params && swiper.params.onAny) {
        swiper.onAny(swiper.params.onAny);
      }

      // Extend Swiper
      Object.assign(swiper, {
        enabled: swiper.params.enabled,
        el,
        // Classes
        classNames: [],
        // Slides
        slides: [],
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],
        // isDirection
        isHorizontal() {
          return swiper.params.direction === "horizontal";
        },
        isVertical() {
          return swiper.params.direction === "vertical";
        },
        // Indexes
        activeIndex: 0,
        realIndex: 0,
        //
        isBeginning: true,
        isEnd: false,
        // Props
        translate: 0,
        previousTranslate: 0,
        progress: 0,
        velocity: 0,
        animating: false,
        cssOverflowAdjustment() {
          // Returns 0 unless `translate` is > 2**23
          // Should be subtracted from css values to prevent overflow
          return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
        },
        // Locks
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev,
        // Touch Events
        touchEventsData: {
          isTouched: undefined,
          isMoved: undefined,
          allowTouchCallbacks: undefined,
          touchStartTime: undefined,
          isScrolling: undefined,
          currentTranslate: undefined,
          startTranslate: undefined,
          allowThresholdMove: undefined,
          // Form elements to match
          focusableElements: swiper.params.focusableElements,
          // Last click time
          lastClickTime: 0,
          clickTimeout: undefined,
          // Velocities
          velocities: [],
          allowMomentumBounce: undefined,
          startMoving: undefined,
          pointerId: null,
          touchId: null,
        },
        // Clicks
        allowClick: true,
        // Touches
        allowTouchMove: swiper.params.allowTouchMove,
        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0,
        },
        // Images
        imagesToLoad: [],
        imagesLoaded: 0,
      });
      swiper.emit("_swiper");

      // Init
      if (swiper.params.init) {
        swiper.init();
      }

      // Return app instance
      // eslint-disable-next-line no-constructor-return
      return swiper;
    }
    getDirectionLabel(property) {
      if (this.isHorizontal()) {
        return property;
      }
      // prettier-ignore
      return {
          'width': 'height',
          'margin-top': 'margin-left',
          'margin-bottom ': 'margin-right',
          'margin-left': 'margin-top',
          'margin-right': 'margin-bottom',
          'padding-left': 'padding-top',
          'padding-right': 'padding-bottom',
          'marginRight': 'marginBottom'
        }[property];
    }
    getSlideIndex(slideEl) {
      const { slidesEl, params } = this;
      const slides = elementChildren(
        slidesEl,
        `.${params.slideClass}, swiper-slide`
      );
      const firstSlideIndex = elementIndex(slides[0]);
      return elementIndex(slideEl) - firstSlideIndex;
    }
    getSlideIndexByData(index) {
      return this.getSlideIndex(
        this.slides.filter(
          (slideEl) =>
            slideEl.getAttribute("data-swiper-slide-index") * 1 === index
        )[0]
      );
    }
    recalcSlides() {
      const swiper = this;
      const { slidesEl, params } = swiper;
      swiper.slides = elementChildren(
        slidesEl,
        `.${params.slideClass}, swiper-slide`
      );
    }
    enable() {
      const swiper = this;
      if (swiper.enabled) return;
      swiper.enabled = true;
      if (swiper.params.grabCursor) {
        swiper.setGrabCursor();
      }
      swiper.emit("enable");
    }
    disable() {
      const swiper = this;
      if (!swiper.enabled) return;
      swiper.enabled = false;
      if (swiper.params.grabCursor) {
        swiper.unsetGrabCursor();
      }
      swiper.emit("disable");
    }
    setProgress(progress, speed) {
      const swiper = this;
      progress = Math.min(Math.max(progress, 0), 1);
      const min = swiper.minTranslate();
      const max = swiper.maxTranslate();
      const current = (max - min) * progress + min;
      swiper.translateTo(current, typeof speed === "undefined" ? 0 : speed);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    emitContainerClasses() {
      const swiper = this;
      if (!swiper.params._emitClasses || !swiper.el) return;
      const cls = swiper.el.className.split(" ").filter((className) => {
        return (
          className.indexOf("swiper") === 0 ||
          className.indexOf(swiper.params.containerModifierClass) === 0
        );
      });
      swiper.emit("_containerClasses", cls.join(" "));
    }
    getSlideClasses(slideEl) {
      const swiper = this;
      if (swiper.destroyed) return "";
      return slideEl.className
        .split(" ")
        .filter((className) => {
          return (
            className.indexOf("swiper-slide") === 0 ||
            className.indexOf(swiper.params.slideClass) === 0
          );
        })
        .join(" ");
    }
    emitSlidesClasses() {
      const swiper = this;
      if (!swiper.params._emitClasses || !swiper.el) return;
      const updates = [];
      swiper.slides.forEach((slideEl) => {
        const classNames = swiper.getSlideClasses(slideEl);
        updates.push({
          slideEl,
          classNames,
        });
        swiper.emit("_slideClass", slideEl, classNames);
      });
      swiper.emit("_slideClasses", updates);
    }
    slidesPerViewDynamic(view, exact) {
      if (view === void 0) {
        view = "current";
      }
      if (exact === void 0) {
        exact = false;
      }
      const swiper = this;
      const {
        params,
        slides,
        slidesGrid,
        slidesSizesGrid,
        size: swiperSize,
        activeIndex,
      } = swiper;
      let spv = 1;
      if (typeof params.slidesPerView === "number") return params.slidesPerView;
      if (params.centeredSlides) {
        let slideSize = slides[activeIndex]
          ? slides[activeIndex].swiperSlideSize
          : 0;
        let breakLoop;
        for (let i = activeIndex + 1; i < slides.length; i += 1) {
          if (slides[i] && !breakLoop) {
            slideSize += slides[i].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) breakLoop = true;
          }
        }
        for (let i = activeIndex - 1; i >= 0; i -= 1) {
          if (slides[i] && !breakLoop) {
            slideSize += slides[i].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) breakLoop = true;
          }
        }
      } else {
        // eslint-disable-next-line
        if (view === "current") {
          for (let i = activeIndex + 1; i < slides.length; i += 1) {
            const slideInView = exact
              ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] <
                swiperSize
              : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;
            if (slideInView) {
              spv += 1;
            }
          }
        } else {
          // previous
          for (let i = activeIndex - 1; i >= 0; i -= 1) {
            const slideInView =
              slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;
            if (slideInView) {
              spv += 1;
            }
          }
        }
      }
      return spv;
    }
    update() {
      const swiper = this;
      if (!swiper || swiper.destroyed) return;
      const { snapGrid, params } = swiper;
      // Breakpoints
      if (params.breakpoints) {
        swiper.setBreakpoint();
      }
      [...swiper.el.querySelectorAll('[loading="lazy"]')].forEach((imageEl) => {
        if (imageEl.complete) {
          processLazyPreloader(swiper, imageEl);
        }
      });
      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();
      function setTranslate() {
        const translateValue = swiper.rtlTranslate
          ? swiper.translate * -1
          : swiper.translate;
        const newTranslate = Math.min(
          Math.max(translateValue, swiper.maxTranslate()),
          swiper.minTranslate()
        );
        swiper.setTranslate(newTranslate);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }
      let translated;
      if (params.freeMode && params.freeMode.enabled && !params.cssMode) {
        setTranslate();
        if (params.autoHeight) {
          swiper.updateAutoHeight();
        }
      } else {
        if (
          (params.slidesPerView === "auto" || params.slidesPerView > 1) &&
          swiper.isEnd &&
          !params.centeredSlides
        ) {
          const slides =
            swiper.virtual && params.virtual.enabled
              ? swiper.virtual.slides
              : swiper.slides;
          translated = swiper.slideTo(slides.length - 1, 0, false, true);
        } else {
          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
        }
        if (!translated) {
          setTranslate();
        }
      }
      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }
      swiper.emit("update");
    }
    changeDirection(newDirection, needUpdate) {
      if (needUpdate === void 0) {
        needUpdate = true;
      }
      const swiper = this;
      const currentDirection = swiper.params.direction;
      if (!newDirection) {
        // eslint-disable-next-line
        newDirection =
          currentDirection === "horizontal" ? "vertical" : "horizontal";
      }
      if (
        newDirection === currentDirection ||
        (newDirection !== "horizontal" && newDirection !== "vertical")
      ) {
        return swiper;
      }
      swiper.el.classList.remove(
        `${swiper.params.containerModifierClass}${currentDirection}`
      );
      swiper.el.classList.add(
        `${swiper.params.containerModifierClass}${newDirection}`
      );
      swiper.emitContainerClasses();
      swiper.params.direction = newDirection;
      swiper.slides.forEach((slideEl) => {
        if (newDirection === "vertical") {
          slideEl.style.width = "";
        } else {
          slideEl.style.height = "";
        }
      });
      swiper.emit("changeDirection");
      if (needUpdate) swiper.update();
      return swiper;
    }
    changeLanguageDirection(direction) {
      const swiper = this;
      if (
        (swiper.rtl && direction === "rtl") ||
        (!swiper.rtl && direction === "ltr")
      )
        return;
      swiper.rtl = direction === "rtl";
      swiper.rtlTranslate =
        swiper.params.direction === "horizontal" && swiper.rtl;
      if (swiper.rtl) {
        swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);
        swiper.el.dir = "rtl";
      } else {
        swiper.el.classList.remove(
          `${swiper.params.containerModifierClass}rtl`
        );
        swiper.el.dir = "ltr";
      }
      swiper.update();
    }
    mount(element) {
      const swiper = this;
      if (swiper.mounted) return true;

      // Find el
      let el = element || swiper.params.el;
      if (typeof el === "string") {
        el = document.querySelector(el);
      }
      if (!el) {
        return false;
      }
      el.swiper = swiper;
      if (
        el.parentNode &&
        el.parentNode.host &&
        el.parentNode.host.nodeName === "SWIPER-CONTAINER"
      ) {
        swiper.isElement = true;
      }
      const getWrapperSelector = () => {
        return `.${(swiper.params.wrapperClass || "")
          .trim()
          .split(" ")
          .join(".")}`;
      };
      const getWrapper = () => {
        if (el && el.shadowRoot && el.shadowRoot.querySelector) {
          const res = el.shadowRoot.querySelector(getWrapperSelector());
          // Children needs to return slot items
          return res;
        }
        return elementChildren(el, getWrapperSelector())[0];
      };
      // Find Wrapper
      let wrapperEl = getWrapper();
      if (!wrapperEl && swiper.params.createElements) {
        wrapperEl = createElement("div", swiper.params.wrapperClass);
        el.append(wrapperEl);
        elementChildren(el, `.${swiper.params.slideClass}`).forEach(
          (slideEl) => {
            wrapperEl.append(slideEl);
          }
        );
      }
      Object.assign(swiper, {
        el,
        wrapperEl,
        slidesEl:
          swiper.isElement && !el.parentNode.host.slideSlots
            ? el.parentNode.host
            : wrapperEl,
        hostEl: swiper.isElement ? el.parentNode.host : el,
        mounted: true,
        // RTL
        rtl:
          el.dir.toLowerCase() === "rtl" ||
          elementStyle(el, "direction") === "rtl",
        rtlTranslate:
          swiper.params.direction === "horizontal" &&
          (el.dir.toLowerCase() === "rtl" ||
            elementStyle(el, "direction") === "rtl"),
        wrongRTL: elementStyle(wrapperEl, "display") === "-webkit-box",
      });
      return true;
    }
    init(el) {
      const swiper = this;
      if (swiper.initialized) return swiper;
      const mounted = swiper.mount(el);
      if (mounted === false) return swiper;
      swiper.emit("beforeInit");

      // Set breakpoint
      if (swiper.params.breakpoints) {
        swiper.setBreakpoint();
      }

      // Add Classes
      swiper.addClasses();

      // Update size
      swiper.updateSize();

      // Update slides
      swiper.updateSlides();
      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      }

      // Set Grab Cursor
      if (swiper.params.grabCursor && swiper.enabled) {
        swiper.setGrabCursor();
      }

      // Slide To Initial Slide
      if (
        swiper.params.loop &&
        swiper.virtual &&
        swiper.params.virtual.enabled
      ) {
        swiper.slideTo(
          swiper.params.initialSlide + swiper.virtual.slidesBefore,
          0,
          swiper.params.runCallbacksOnInit,
          false,
          true
        );
      } else {
        swiper.slideTo(
          swiper.params.initialSlide,
          0,
          swiper.params.runCallbacksOnInit,
          false,
          true
        );
      }

      // Create loop
      if (swiper.params.loop) {
        swiper.loopCreate();
      }

      // Attach events
      swiper.attachEvents();
      const lazyElements = [...swiper.el.querySelectorAll('[loading="lazy"]')];
      if (swiper.isElement) {
        lazyElements.push(
          ...swiper.hostEl.querySelectorAll('[loading="lazy"]')
        );
      }
      lazyElements.forEach((imageEl) => {
        if (imageEl.complete) {
          processLazyPreloader(swiper, imageEl);
        } else {
          imageEl.addEventListener("load", (e) => {
            processLazyPreloader(swiper, e.target);
          });
        }
      });
      preload(swiper);

      // Init Flag
      swiper.initialized = true;
      preload(swiper);

      // Emit
      swiper.emit("init");
      swiper.emit("afterInit");
      return swiper;
    }
    destroy(deleteInstance, cleanStyles) {
      if (deleteInstance === void 0) {
        deleteInstance = true;
      }
      if (cleanStyles === void 0) {
        cleanStyles = true;
      }
      const swiper = this;
      const { params, el, wrapperEl, slides } = swiper;
      if (typeof swiper.params === "undefined" || swiper.destroyed) {
        return null;
      }
      swiper.emit("beforeDestroy");

      // Init Flag
      swiper.initialized = false;

      // Detach events
      swiper.detachEvents();

      // Destroy loop
      if (params.loop) {
        swiper.loopDestroy();
      }

      // Cleanup styles
      if (cleanStyles) {
        swiper.removeClasses();
        el.removeAttribute("style");
        wrapperEl.removeAttribute("style");
        if (slides && slides.length) {
          slides.forEach((slideEl) => {
            slideEl.classList.remove(
              params.slideVisibleClass,
              params.slideFullyVisibleClass,
              params.slideActiveClass,
              params.slideNextClass,
              params.slidePrevClass
            );
            slideEl.removeAttribute("style");
            slideEl.removeAttribute("data-swiper-slide-index");
          });
        }
      }
      swiper.emit("destroy");

      // Detach emitter events
      Object.keys(swiper.eventsListeners).forEach((eventName) => {
        swiper.off(eventName);
      });
      if (deleteInstance !== false) {
        swiper.el.swiper = null;
        deleteProps(swiper);
      }
      swiper.destroyed = true;
      return null;
    }
    static extendDefaults(newDefaults) {
      extend(extendedDefaults, newDefaults);
    }
    static get extendedDefaults() {
      return extendedDefaults;
    }
    static get defaults() {
      return defaults;
    }
    static installModule(mod) {
      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];
      const modules = Swiper.prototype.__modules__;
      if (typeof mod === "function" && modules.indexOf(mod) < 0) {
        modules.push(mod);
      }
    }
    static use(module) {
      if (Array.isArray(module)) {
        module.forEach((m) => Swiper.installModule(m));
        return Swiper;
      }
      Swiper.installModule(module);
      return Swiper;
    }
  }
  Object.keys(prototypes).forEach((prototypeGroup) => {
    Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {
      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
    });
  });
  Swiper.use([Resize, Observer]);

  function Virtual(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    extendParams({
      virtual: {
        enabled: false,
        slides: [],
        cache: true,
        renderSlide: null,
        renderExternal: null,
        renderExternalUpdate: true,
        addSlidesBefore: 0,
        addSlidesAfter: 0,
      },
    });
    let cssModeTimeout;
    const document = getDocument();
    swiper.virtual = {
      cache: {},
      from: undefined,
      to: undefined,
      slides: [],
      offset: 0,
      slidesGrid: [],
    };
    const tempDOM = document.createElement("div");
    function renderSlide(slide, index) {
      const params = swiper.params.virtual;
      if (params.cache && swiper.virtual.cache[index]) {
        return swiper.virtual.cache[index];
      }
      // eslint-disable-next-line
      let slideEl;
      if (params.renderSlide) {
        slideEl = params.renderSlide.call(swiper, slide, index);
        if (typeof slideEl === "string") {
          tempDOM.innerHTML = slideEl;
          slideEl = tempDOM.children[0];
        }
      } else if (swiper.isElement) {
        slideEl = createElement("swiper-slide");
      } else {
        slideEl = createElement("div", swiper.params.slideClass);
      }
      slideEl.setAttribute("data-swiper-slide-index", index);
      if (!params.renderSlide) {
        slideEl.innerHTML = slide;
      }
      if (params.cache) {
        swiper.virtual.cache[index] = slideEl;
      }
      return slideEl;
    }
    function update(force) {
      const {
        slidesPerView,
        slidesPerGroup,
        centeredSlides,
        loop: isLoop,
      } = swiper.params;
      const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;
      const {
        from: previousFrom,
        to: previousTo,
        slides,
        slidesGrid: previousSlidesGrid,
        offset: previousOffset,
      } = swiper.virtual;
      if (!swiper.params.cssMode) {
        swiper.updateActiveIndex();
      }
      const activeIndex = swiper.activeIndex || 0;
      let offsetProp;
      if (swiper.rtlTranslate) offsetProp = "right";
      else offsetProp = swiper.isHorizontal() ? "left" : "top";
      let slidesAfter;
      let slidesBefore;
      if (centeredSlides) {
        slidesAfter =
          Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
        slidesBefore =
          Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
      } else {
        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;
        slidesBefore =
          (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;
      }
      let from = activeIndex - slidesBefore;
      let to = activeIndex + slidesAfter;
      if (!isLoop) {
        from = Math.max(from, 0);
        to = Math.min(to, slides.length - 1);
      }
      let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
      if (isLoop && activeIndex >= slidesBefore) {
        from -= slidesBefore;
        if (!centeredSlides) offset += swiper.slidesGrid[0];
      } else if (isLoop && activeIndex < slidesBefore) {
        from = -slidesBefore;
        if (centeredSlides) offset += swiper.slidesGrid[0];
      }
      Object.assign(swiper.virtual, {
        from,
        to,
        offset,
        slidesGrid: swiper.slidesGrid,
        slidesBefore,
        slidesAfter,
      });
      function onRendered() {
        swiper.updateSlides();
        swiper.updateProgress();
        swiper.updateSlidesClasses();
        emit("virtualUpdate");
      }
      if (previousFrom === from && previousTo === to && !force) {
        if (
          swiper.slidesGrid !== previousSlidesGrid &&
          offset !== previousOffset
        ) {
          swiper.slides.forEach((slideEl) => {
            slideEl.style[offsetProp] = `${
              offset - Math.abs(swiper.cssOverflowAdjustment())
            }px`;
          });
        }
        swiper.updateProgress();
        emit("virtualUpdate");
        return;
      }
      if (swiper.params.virtual.renderExternal) {
        swiper.params.virtual.renderExternal.call(swiper, {
          offset,
          from,
          to,
          slides: (function getSlides() {
            const slidesToRender = [];
            for (let i = from; i <= to; i += 1) {
              slidesToRender.push(slides[i]);
            }
            return slidesToRender;
          })(),
        });
        if (swiper.params.virtual.renderExternalUpdate) {
          onRendered();
        } else {
          emit("virtualUpdate");
        }
        return;
      }
      const prependIndexes = [];
      const appendIndexes = [];
      const getSlideIndex = (index) => {
        let slideIndex = index;
        if (index < 0) {
          slideIndex = slides.length + index;
        } else if (slideIndex >= slides.length) {
          // eslint-disable-next-line
          slideIndex = slideIndex - slides.length;
        }
        return slideIndex;
      };
      if (force) {
        swiper.slides
          .filter((el) =>
            el.matches(`.${swiper.params.slideClass}, swiper-slide`)
          )
          .forEach((slideEl) => {
            slideEl.remove();
          });
      } else {
        for (let i = previousFrom; i <= previousTo; i += 1) {
          if (i < from || i > to) {
            const slideIndex = getSlideIndex(i);
            swiper.slides
              .filter((el) =>
                el.matches(
                  `.${swiper.params.slideClass}[data-swiper-slide-index="${slideIndex}"], swiper-slide[data-swiper-slide-index="${slideIndex}"]`
                )
              )
              .forEach((slideEl) => {
                slideEl.remove();
              });
          }
        }
      }
      const loopFrom = isLoop ? -slides.length : 0;
      const loopTo = isLoop ? slides.length * 2 : slides.length;
      for (let i = loopFrom; i < loopTo; i += 1) {
        if (i >= from && i <= to) {
          const slideIndex = getSlideIndex(i);
          if (typeof previousTo === "undefined" || force) {
            appendIndexes.push(slideIndex);
          } else {
            if (i > previousTo) appendIndexes.push(slideIndex);
            if (i < previousFrom) prependIndexes.push(slideIndex);
          }
        }
      }
      appendIndexes.forEach((index) => {
        swiper.slidesEl.append(renderSlide(slides[index], index));
      });
      if (isLoop) {
        for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {
          const index = prependIndexes[i];
          swiper.slidesEl.prepend(renderSlide(slides[index], index));
        }
      } else {
        prependIndexes.sort((a, b) => b - a);
        prependIndexes.forEach((index) => {
          swiper.slidesEl.prepend(renderSlide(slides[index], index));
        });
      }
      elementChildren(swiper.slidesEl, ".swiper-slide, swiper-slide").forEach(
        (slideEl) => {
          slideEl.style[offsetProp] = `${
            offset - Math.abs(swiper.cssOverflowAdjustment())
          }px`;
        }
      );
      onRendered();
    }
    function appendSlide(slides) {
      if (typeof slides === "object" && "length" in slides) {
        for (let i = 0; i < slides.length; i += 1) {
          if (slides[i]) swiper.virtual.slides.push(slides[i]);
        }
      } else {
        swiper.virtual.slides.push(slides);
      }
      update(true);
    }
    function prependSlide(slides) {
      const activeIndex = swiper.activeIndex;
      let newActiveIndex = activeIndex + 1;
      let numberOfNewSlides = 1;
      if (Array.isArray(slides)) {
        for (let i = 0; i < slides.length; i += 1) {
          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);
        }
        newActiveIndex = activeIndex + slides.length;
        numberOfNewSlides = slides.length;
      } else {
        swiper.virtual.slides.unshift(slides);
      }
      if (swiper.params.virtual.cache) {
        const cache = swiper.virtual.cache;
        const newCache = {};
        Object.keys(cache).forEach((cachedIndex) => {
          const cachedEl = cache[cachedIndex];
          const cachedElIndex = cachedEl.getAttribute(
            "data-swiper-slide-index"
          );
          if (cachedElIndex) {
            cachedEl.setAttribute(
              "data-swiper-slide-index",
              parseInt(cachedElIndex, 10) + numberOfNewSlides
            );
          }
          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;
        });
        swiper.virtual.cache = newCache;
      }
      update(true);
      swiper.slideTo(newActiveIndex, 0);
    }
    function removeSlide(slidesIndexes) {
      if (typeof slidesIndexes === "undefined" || slidesIndexes === null)
        return;
      let activeIndex = swiper.activeIndex;
      if (Array.isArray(slidesIndexes)) {
        for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {
          if (swiper.params.virtual.cache) {
            delete swiper.virtual.cache[slidesIndexes[i]];
            // shift cache indexes
            Object.keys(swiper.virtual.cache).forEach((key) => {
              if (key > slidesIndexes) {
                swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];
                swiper.virtual.cache[key - 1].setAttribute(
                  "data-swiper-slide-index",
                  key - 1
                );
                delete swiper.virtual.cache[key];
              }
            });
          }
          swiper.virtual.slides.splice(slidesIndexes[i], 1);
          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;
          activeIndex = Math.max(activeIndex, 0);
        }
      } else {
        if (swiper.params.virtual.cache) {
          delete swiper.virtual.cache[slidesIndexes];
          // shift cache indexes
          Object.keys(swiper.virtual.cache).forEach((key) => {
            if (key > slidesIndexes) {
              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];
              swiper.virtual.cache[key - 1].setAttribute(
                "data-swiper-slide-index",
                key - 1
              );
              delete swiper.virtual.cache[key];
            }
          });
        }
        swiper.virtual.slides.splice(slidesIndexes, 1);
        if (slidesIndexes < activeIndex) activeIndex -= 1;
        activeIndex = Math.max(activeIndex, 0);
      }
      update(true);
      swiper.slideTo(activeIndex, 0);
    }
    function removeAllSlides() {
      swiper.virtual.slides = [];
      if (swiper.params.virtual.cache) {
        swiper.virtual.cache = {};
      }
      update(true);
      swiper.slideTo(0, 0);
    }
    on("beforeInit", () => {
      if (!swiper.params.virtual.enabled) return;
      let domSlidesAssigned;
      if (typeof swiper.passedParams.virtual.slides === "undefined") {
        const slides = [...swiper.slidesEl.children].filter((el) =>
          el.matches(`.${swiper.params.slideClass}, swiper-slide`)
        );
        if (slides && slides.length) {
          swiper.virtual.slides = [...slides];
          domSlidesAssigned = true;
          slides.forEach((slideEl, slideIndex) => {
            slideEl.setAttribute("data-swiper-slide-index", slideIndex);
            swiper.virtual.cache[slideIndex] = slideEl;
            slideEl.remove();
          });
        }
      }
      if (!domSlidesAssigned) {
        swiper.virtual.slides = swiper.params.virtual.slides;
      }
      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);
      swiper.params.watchSlidesProgress = true;
      swiper.originalParams.watchSlidesProgress = true;
      update();
    });
    on("setTranslate", () => {
      if (!swiper.params.virtual.enabled) return;
      if (swiper.params.cssMode && !swiper._immediateVirtual) {
        clearTimeout(cssModeTimeout);
        cssModeTimeout = setTimeout(() => {
          update();
        }, 100);
      } else {
        update();
      }
    });
    on("init update resize", () => {
      if (!swiper.params.virtual.enabled) return;
      if (swiper.params.cssMode) {
        setCSSProperty(
          swiper.wrapperEl,
          "--swiper-virtual-size",
          `${swiper.virtualSize}px`
        );
      }
    });
    Object.assign(swiper.virtual, {
      appendSlide,
      prependSlide,
      removeSlide,
      removeAllSlides,
      update,
    });
  }

  /* eslint-disable consistent-return */
  function Keyboard(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const document = getDocument();
    const window = getWindow();
    swiper.keyboard = {
      enabled: false,
    };
    extendParams({
      keyboard: {
        enabled: false,
        onlyInViewport: true,
        pageUpDown: true,
      },
    });
    function handle(event) {
      if (!swiper.enabled) return;
      const { rtlTranslate: rtl } = swiper;
      let e = event;
      if (e.originalEvent) e = e.originalEvent; // jquery fix
      const kc = e.keyCode || e.charCode;
      const pageUpDown = swiper.params.keyboard.pageUpDown;
      const isPageUp = pageUpDown && kc === 33;
      const isPageDown = pageUpDown && kc === 34;
      const isArrowLeft = kc === 37;
      const isArrowRight = kc === 39;
      const isArrowUp = kc === 38;
      const isArrowDown = kc === 40;
      // Directions locks
      if (
        !swiper.allowSlideNext &&
        ((swiper.isHorizontal() && isArrowRight) ||
          (swiper.isVertical() && isArrowDown) ||
          isPageDown)
      ) {
        return false;
      }
      if (
        !swiper.allowSlidePrev &&
        ((swiper.isHorizontal() && isArrowLeft) ||
          (swiper.isVertical() && isArrowUp) ||
          isPageUp)
      ) {
        return false;
      }
      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
        return undefined;
      }
      if (
        document.activeElement &&
        document.activeElement.nodeName &&
        (document.activeElement.nodeName.toLowerCase() === "input" ||
          document.activeElement.nodeName.toLowerCase() === "textarea")
      ) {
        return undefined;
      }
      if (
        swiper.params.keyboard.onlyInViewport &&
        (isPageUp ||
          isPageDown ||
          isArrowLeft ||
          isArrowRight ||
          isArrowUp ||
          isArrowDown)
      ) {
        let inView = false;
        // Check that swiper should be inside of visible area of window
        if (
          elementParents(
            swiper.el,
            `.${swiper.params.slideClass}, swiper-slide`
          ).length > 0 &&
          elementParents(swiper.el, `.${swiper.params.slideActiveClass}`)
            .length === 0
        ) {
          return undefined;
        }
        const el = swiper.el;
        const swiperWidth = el.clientWidth;
        const swiperHeight = el.clientHeight;
        const windowWidth = window.innerWidth;
        const windowHeight = window.innerHeight;
        const swiperOffset = elementOffset(el);
        if (rtl) swiperOffset.left -= el.scrollLeft;
        const swiperCoord = [
          [swiperOffset.left, swiperOffset.top],
          [swiperOffset.left + swiperWidth, swiperOffset.top],
          [swiperOffset.left, swiperOffset.top + swiperHeight],
          [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight],
        ];
        for (let i = 0; i < swiperCoord.length; i += 1) {
          const point = swiperCoord[i];
          if (
            point[0] >= 0 &&
            point[0] <= windowWidth &&
            point[1] >= 0 &&
            point[1] <= windowHeight
          ) {
            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line
            inView = true;
          }
        }
        if (!inView) return undefined;
      }
      if (swiper.isHorizontal()) {
        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {
          if (e.preventDefault) e.preventDefault();
          else e.returnValue = false;
        }
        if (
          ((isPageDown || isArrowRight) && !rtl) ||
          ((isPageUp || isArrowLeft) && rtl)
        )
          swiper.slideNext();
        if (
          ((isPageUp || isArrowLeft) && !rtl) ||
          ((isPageDown || isArrowRight) && rtl)
        )
          swiper.slidePrev();
      } else {
        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {
          if (e.preventDefault) e.preventDefault();
          else e.returnValue = false;
        }
        if (isPageDown || isArrowDown) swiper.slideNext();
        if (isPageUp || isArrowUp) swiper.slidePrev();
      }
      emit("keyPress", kc);
      return undefined;
    }
    function enable() {
      if (swiper.keyboard.enabled) return;
      document.addEventListener("keydown", handle);
      swiper.keyboard.enabled = true;
    }
    function disable() {
      if (!swiper.keyboard.enabled) return;
      document.removeEventListener("keydown", handle);
      swiper.keyboard.enabled = false;
    }
    on("init", () => {
      if (swiper.params.keyboard.enabled) {
        enable();
      }
    });
    on("destroy", () => {
      if (swiper.keyboard.enabled) {
        disable();
      }
    });
    Object.assign(swiper.keyboard, {
      enable,
      disable,
    });
  }

  /* eslint-disable consistent-return */
  function Mousewheel(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const window = getWindow();
    extendParams({
      mousewheel: {
        enabled: false,
        releaseOnEdges: false,
        invert: false,
        forceToAxis: false,
        sensitivity: 1,
        eventsTarget: "container",
        thresholdDelta: null,
        thresholdTime: null,
        noMousewheelClass: "swiper-no-mousewheel",
      },
    });
    swiper.mousewheel = {
      enabled: false,
    };
    let timeout;
    let lastScrollTime = now();
    let lastEventBeforeSnap;
    const recentWheelEvents = [];
    function normalize(e) {
      // Reasonable defaults
      const PIXEL_STEP = 10;
      const LINE_HEIGHT = 40;
      const PAGE_HEIGHT = 800;
      let sX = 0;
      let sY = 0; // spinX, spinY
      let pX = 0;
      let pY = 0; // pixelX, pixelY

      // Legacy
      if ("detail" in e) {
        sY = e.detail;
      }
      if ("wheelDelta" in e) {
        sY = -e.wheelDelta / 120;
      }
      if ("wheelDeltaY" in e) {
        sY = -e.wheelDeltaY / 120;
      }
      if ("wheelDeltaX" in e) {
        sX = -e.wheelDeltaX / 120;
      }

      // side scrolling on FF with DOMMouseScroll
      if ("axis" in e && e.axis === e.HORIZONTAL_AXIS) {
        sX = sY;
        sY = 0;
      }
      pX = sX * PIXEL_STEP;
      pY = sY * PIXEL_STEP;
      if ("deltaY" in e) {
        pY = e.deltaY;
      }
      if ("deltaX" in e) {
        pX = e.deltaX;
      }
      if (e.shiftKey && !pX) {
        // if user scrolls with shift he wants horizontal scroll
        pX = pY;
        pY = 0;
      }
      if ((pX || pY) && e.deltaMode) {
        if (e.deltaMode === 1) {
          // delta in LINE units
          pX *= LINE_HEIGHT;
          pY *= LINE_HEIGHT;
        } else {
          // delta in PAGE units
          pX *= PAGE_HEIGHT;
          pY *= PAGE_HEIGHT;
        }
      }

      // Fall-back if spin cannot be determined
      if (pX && !sX) {
        sX = pX < 1 ? -1 : 1;
      }
      if (pY && !sY) {
        sY = pY < 1 ? -1 : 1;
      }
      return {
        spinX: sX,
        spinY: sY,
        pixelX: pX,
        pixelY: pY,
      };
    }
    function handleMouseEnter() {
      if (!swiper.enabled) return;
      swiper.mouseEntered = true;
    }
    function handleMouseLeave() {
      if (!swiper.enabled) return;
      swiper.mouseEntered = false;
    }
    function animateSlider(newEvent) {
      if (
        swiper.params.mousewheel.thresholdDelta &&
        newEvent.delta < swiper.params.mousewheel.thresholdDelta
      ) {
        // Prevent if delta of wheel scroll delta is below configured threshold
        return false;
      }
      if (
        swiper.params.mousewheel.thresholdTime &&
        now() - lastScrollTime < swiper.params.mousewheel.thresholdTime
      ) {
        // Prevent if time between scrolls is below configured threshold
        return false;
      }

      // If the movement is NOT big enough and
      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):
      //   Don't go any further (avoid insignificant scroll movement).
      if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {
        // Return false as a default
        return true;
      }
      // If user is scrolling towards the end:
      //   If the slider hasn't hit the latest slide or
      //   if the slider is a loop and
      //   if the slider isn't moving right now:
      //     Go to next slide and
      //     emit a scroll event.
      // Else (the user is scrolling towards the beginning) and
      // if the slider hasn't hit the first slide or
      // if the slider is a loop and
      // if the slider isn't moving right now:
      //   Go to prev slide and
      //   emit a scroll event.
      if (newEvent.direction < 0) {
        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
          swiper.slideNext();
          emit("scroll", newEvent.raw);
        }
      } else if (
        (!swiper.isBeginning || swiper.params.loop) &&
        !swiper.animating
      ) {
        swiper.slidePrev();
        emit("scroll", newEvent.raw);
      }
      // If you got here is because an animation has been triggered so store the current time
      lastScrollTime = new window.Date().getTime();
      // Return false as a default
      return false;
    }
    function releaseScroll(newEvent) {
      const params = swiper.params.mousewheel;
      if (newEvent.direction < 0) {
        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {
          // Return true to animate scroll on edges
          return true;
        }
      } else if (
        swiper.isBeginning &&
        !swiper.params.loop &&
        params.releaseOnEdges
      ) {
        // Return true to animate scroll on edges
        return true;
      }
      return false;
    }
    function handle(event) {
      let e = event;
      let disableParentSwiper = true;
      if (!swiper.enabled) return;

      // Ignore event if the target or its parents have the swiper-no-mousewheel class
      if (
        event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)
      )
        return;
      const params = swiper.params.mousewheel;
      if (swiper.params.cssMode) {
        e.preventDefault();
      }
      let targetEl = swiper.el;
      if (swiper.params.mousewheel.eventsTarget !== "container") {
        targetEl = document.querySelector(
          swiper.params.mousewheel.eventsTarget
        );
      }
      const targetElContainsTarget = targetEl && targetEl.contains(e.target);
      if (
        !swiper.mouseEntered &&
        !targetElContainsTarget &&
        !params.releaseOnEdges
      )
        return true;
      if (e.originalEvent) e = e.originalEvent; // jquery fix
      let delta = 0;
      const rtlFactor = swiper.rtlTranslate ? -1 : 1;
      const data = normalize(e);
      if (params.forceToAxis) {
        if (swiper.isHorizontal()) {
          if (Math.abs(data.pixelX) > Math.abs(data.pixelY))
            delta = -data.pixelX * rtlFactor;
          else return true;
        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX))
          delta = -data.pixelY;
        else return true;
      } else {
        delta =
          Math.abs(data.pixelX) > Math.abs(data.pixelY)
            ? -data.pixelX * rtlFactor
            : -data.pixelY;
      }
      if (delta === 0) return true;
      if (params.invert) delta = -delta;

      // Get the scroll positions
      let positions = swiper.getTranslate() + delta * params.sensitivity;
      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();
      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();

      // When loop is true:
      //     the disableParentSwiper will be true.
      // When loop is false:
      //     if the scroll positions is not on edge,
      //     then the disableParentSwiper will be true.
      //     if the scroll on edge positions,
      //     then the disableParentSwiper will be false.
      disableParentSwiper = swiper.params.loop
        ? true
        : !(
            positions === swiper.minTranslate() ||
            positions === swiper.maxTranslate()
          );
      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();
      if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {
        // Register the new event in a variable which stores the relevant data
        const newEvent = {
          time: now(),
          delta: Math.abs(delta),
          direction: Math.sign(delta),
          raw: event,
        };

        // Keep the most recent events
        if (recentWheelEvents.length >= 2) {
          recentWheelEvents.shift(); // only store the last N events
        }

        const prevEvent = recentWheelEvents.length
          ? recentWheelEvents[recentWheelEvents.length - 1]
          : undefined;
        recentWheelEvents.push(newEvent);

        // If there is at least one previous recorded event:
        //   If direction has changed or
        //   if the scroll is quicker than the previous one:
        //     Animate the slider.
        // Else (this is the first time the wheel is moved):
        //     Animate the slider.
        if (prevEvent) {
          if (
            newEvent.direction !== prevEvent.direction ||
            newEvent.delta > prevEvent.delta ||
            newEvent.time > prevEvent.time + 150
          ) {
            animateSlider(newEvent);
          }
        } else {
          animateSlider(newEvent);
        }

        // If it's time to release the scroll:
        //   Return now so you don't hit the preventDefault.
        if (releaseScroll(newEvent)) {
          return true;
        }
      } else {
        // Freemode or scrollContainer:

        // If we recently snapped after a momentum scroll, then ignore wheel events
        // to give time for the deceleration to finish. Stop ignoring after 500 msecs
        // or if it's a new scroll (larger delta or inverse sign as last event before
        // an end-of-momentum snap).
        const newEvent = {
          time: now(),
          delta: Math.abs(delta),
          direction: Math.sign(delta),
        };
        const ignoreWheelEvents =
          lastEventBeforeSnap &&
          newEvent.time < lastEventBeforeSnap.time + 500 &&
          newEvent.delta <= lastEventBeforeSnap.delta &&
          newEvent.direction === lastEventBeforeSnap.direction;
        if (!ignoreWheelEvents) {
          lastEventBeforeSnap = undefined;
          let position = swiper.getTranslate() + delta * params.sensitivity;
          const wasBeginning = swiper.isBeginning;
          const wasEnd = swiper.isEnd;
          if (position >= swiper.minTranslate())
            position = swiper.minTranslate();
          if (position <= swiper.maxTranslate())
            position = swiper.maxTranslate();
          swiper.setTransition(0);
          swiper.setTranslate(position);
          swiper.updateProgress();
          swiper.updateActiveIndex();
          swiper.updateSlidesClasses();
          if (
            (!wasBeginning && swiper.isBeginning) ||
            (!wasEnd && swiper.isEnd)
          ) {
            swiper.updateSlidesClasses();
          }
          if (swiper.params.loop) {
            swiper.loopFix({
              direction: newEvent.direction < 0 ? "next" : "prev",
              byMousewheel: true,
            });
          }
          if (swiper.params.freeMode.sticky) {
            // When wheel scrolling starts with sticky (aka snap) enabled, then detect
            // the end of a momentum scroll by storing recent (N=15?) wheel events.
            // 1. do all N events have decreasing or same (absolute value) delta?
            // 2. did all N events arrive in the last M (M=500?) msecs?
            // 3. does the earliest event have an (absolute value) delta that's
            //    at least P (P=1?) larger than the most recent event's delta?
            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?
            // If 1-4 are "yes" then we're near the end of a momentum scroll deceleration.
            // Snap immediately and ignore remaining wheel events in this scroll.
            // See comment above for "remaining wheel events in this scroll" determination.
            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.
            clearTimeout(timeout);
            timeout = undefined;
            if (recentWheelEvents.length >= 15) {
              recentWheelEvents.shift(); // only store the last N events
            }

            const prevEvent = recentWheelEvents.length
              ? recentWheelEvents[recentWheelEvents.length - 1]
              : undefined;
            const firstEvent = recentWheelEvents[0];
            recentWheelEvents.push(newEvent);
            if (
              prevEvent &&
              (newEvent.delta > prevEvent.delta ||
                newEvent.direction !== prevEvent.direction)
            ) {
              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.
              recentWheelEvents.splice(0);
            } else if (
              recentWheelEvents.length >= 15 &&
              newEvent.time - firstEvent.time < 500 &&
              firstEvent.delta - newEvent.delta >= 1 &&
              newEvent.delta <= 6
            ) {
              // We're at the end of the deceleration of a momentum scroll, so there's no need
              // to wait for more events. Snap ASAP on the next tick.
              // Also, because there's some remaining momentum we'll bias the snap in the
              // direction of the ongoing scroll because it's better UX for the scroll to snap
              // in the same direction as the scroll instead of reversing to snap.  Therefore,
              // if it's already scrolled more than 20% in the current direction, keep going.
              const snapToThreshold = delta > 0 ? 0.8 : 0.2;
              lastEventBeforeSnap = newEvent;
              recentWheelEvents.splice(0);
              timeout = nextTick(() => {
                swiper.slideToClosest(
                  swiper.params.speed,
                  true,
                  undefined,
                  snapToThreshold
                );
              }, 0); // no delay; move on next tick
            }

            if (!timeout) {
              // if we get here, then we haven't detected the end of a momentum scroll, so
              // we'll consider a scroll "complete" when there haven't been any wheel events
              // for 500ms.
              timeout = nextTick(() => {
                const snapToThreshold = 0.5;
                lastEventBeforeSnap = newEvent;
                recentWheelEvents.splice(0);
                swiper.slideToClosest(
                  swiper.params.speed,
                  true,
                  undefined,
                  snapToThreshold
                );
              }, 500);
            }
          }

          // Emit event
          if (!ignoreWheelEvents) emit("scroll", e);

          // Stop autoplay
          if (
            swiper.params.autoplay &&
            swiper.params.autoplayDisableOnInteraction
          )
            swiper.autoplay.stop();
          // Return page scroll on edge positions
          if (
            params.releaseOnEdges &&
            (position === swiper.minTranslate() ||
              position === swiper.maxTranslate())
          ) {
            return true;
          }
        }
      }
      if (e.preventDefault) e.preventDefault();
      else e.returnValue = false;
      return false;
    }
    function events(method) {
      let targetEl = swiper.el;
      if (swiper.params.mousewheel.eventsTarget !== "container") {
        targetEl = document.querySelector(
          swiper.params.mousewheel.eventsTarget
        );
      }
      targetEl[method]("mouseenter", handleMouseEnter);
      targetEl[method]("mouseleave", handleMouseLeave);
      targetEl[method]("wheel", handle);
    }
    function enable() {
      if (swiper.params.cssMode) {
        swiper.wrapperEl.removeEventListener("wheel", handle);
        return true;
      }
      if (swiper.mousewheel.enabled) return false;
      events("addEventListener");
      swiper.mousewheel.enabled = true;
      return true;
    }
    function disable() {
      if (swiper.params.cssMode) {
        swiper.wrapperEl.addEventListener(event, handle);
        return true;
      }
      if (!swiper.mousewheel.enabled) return false;
      events("removeEventListener");
      swiper.mousewheel.enabled = false;
      return true;
    }
    on("init", () => {
      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {
        disable();
      }
      if (swiper.params.mousewheel.enabled) enable();
    });
    on("destroy", () => {
      if (swiper.params.cssMode) {
        enable();
      }
      if (swiper.mousewheel.enabled) disable();
    });
    Object.assign(swiper.mousewheel, {
      enable,
      disable,
    });
  }

  function createElementIfNotDefined(
    swiper,
    originalParams,
    params,
    checkProps
  ) {
    if (swiper.params.createElements) {
      Object.keys(checkProps).forEach((key) => {
        if (!params[key] && params.auto === true) {
          let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];
          if (!element) {
            element = createElement("div", checkProps[key]);
            element.className = checkProps[key];
            swiper.el.append(element);
          }
          params[key] = element;
          originalParams[key] = element;
        }
      });
    }
    return params;
  }

  function Navigation(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    extendParams({
      navigation: {
        nextEl: null,
        prevEl: null,
        hideOnClick: false,
        disabledClass: "swiper-button-disabled",
        hiddenClass: "swiper-button-hidden",
        lockClass: "swiper-button-lock",
        navigationDisabledClass: "swiper-navigation-disabled",
      },
    });
    swiper.navigation = {
      nextEl: null,
      prevEl: null,
    };
    const makeElementsArray = (el) =>
      (Array.isArray(el) ? el : [el]).filter((e) => !!e);
    function getEl(el) {
      let res;
      if (el && typeof el === "string" && swiper.isElement) {
        res = swiper.el.querySelector(el);
        if (res) return res;
      }
      if (el) {
        if (typeof el === "string") res = [...document.querySelectorAll(el)];
        if (
          swiper.params.uniqueNavElements &&
          typeof el === "string" &&
          res.length > 1 &&
          swiper.el.querySelectorAll(el).length === 1
        ) {
          res = swiper.el.querySelector(el);
        }
      }
      if (el && !res) return el;
      // if (Array.isArray(res) && res.length === 1) res = res[0];
      return res;
    }
    function toggleEl(el, disabled) {
      const params = swiper.params.navigation;
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        if (subEl) {
          subEl.classList[disabled ? "add" : "remove"](
            ...params.disabledClass.split(" ")
          );
          if (subEl.tagName === "BUTTON") subEl.disabled = disabled;
          if (swiper.params.watchOverflow && swiper.enabled) {
            subEl.classList[swiper.isLocked ? "add" : "remove"](
              params.lockClass
            );
          }
        }
      });
    }
    function update() {
      // Update Navigation Buttons
      const { nextEl, prevEl } = swiper.navigation;
      if (swiper.params.loop) {
        toggleEl(prevEl, false);
        toggleEl(nextEl, false);
        return;
      }
      toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);
      toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);
    }
    function onPrevClick(e) {
      e.preventDefault();
      if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind)
        return;
      swiper.slidePrev();
      emit("navigationPrev");
    }
    function onNextClick(e) {
      e.preventDefault();
      if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;
      swiper.slideNext();
      emit("navigationNext");
    }
    function init() {
      const params = swiper.params.navigation;
      swiper.params.navigation = createElementIfNotDefined(
        swiper,
        swiper.originalParams.navigation,
        swiper.params.navigation,
        {
          nextEl: "swiper-button-next",
          prevEl: "swiper-button-prev",
        }
      );
      if (!(params.nextEl || params.prevEl)) return;
      let nextEl = getEl(params.nextEl);
      let prevEl = getEl(params.prevEl);
      Object.assign(swiper.navigation, {
        nextEl,
        prevEl,
      });
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const initButton = (el, dir) => {
        if (el) {
          el.addEventListener(
            "click",
            dir === "next" ? onNextClick : onPrevClick
          );
        }
        if (!swiper.enabled && el) {
          el.classList.add(...params.lockClass.split(" "));
        }
      };
      nextEl.forEach((el) => initButton(el, "next"));
      prevEl.forEach((el) => initButton(el, "prev"));
    }
    function destroy() {
      let { nextEl, prevEl } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const destroyButton = (el, dir) => {
        el.removeEventListener(
          "click",
          dir === "next" ? onNextClick : onPrevClick
        );
        el.classList.remove(
          ...swiper.params.navigation.disabledClass.split(" ")
        );
      };
      nextEl.forEach((el) => destroyButton(el, "next"));
      prevEl.forEach((el) => destroyButton(el, "prev"));
    }
    on("init", () => {
      if (swiper.params.navigation.enabled === false) {
        // eslint-disable-next-line
        disable();
      } else {
        init();
        update();
      }
    });
    on("toEdge fromEdge lock unlock", () => {
      update();
    });
    on("destroy", () => {
      destroy();
    });
    on("enable disable", () => {
      let { nextEl, prevEl } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      if (swiper.enabled) {
        update();
        return;
      }
      [...nextEl, ...prevEl]
        .filter((el) => !!el)
        .forEach((el) => el.classList.add(swiper.params.navigation.lockClass));
    });
    on("click", (_s, e) => {
      let { nextEl, prevEl } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const targetEl = e.target;
      if (
        swiper.params.navigation.hideOnClick &&
        !prevEl.includes(targetEl) &&
        !nextEl.includes(targetEl)
      ) {
        if (
          swiper.pagination &&
          swiper.params.pagination &&
          swiper.params.pagination.clickable &&
          (swiper.pagination.el === targetEl ||
            swiper.pagination.el.contains(targetEl))
        )
          return;
        let isHidden;
        if (nextEl.length) {
          isHidden = nextEl[0].classList.contains(
            swiper.params.navigation.hiddenClass
          );
        } else if (prevEl.length) {
          isHidden = prevEl[0].classList.contains(
            swiper.params.navigation.hiddenClass
          );
        }
        if (isHidden === true) {
          emit("navigationShow");
        } else {
          emit("navigationHide");
        }
        [...nextEl, ...prevEl]
          .filter((el) => !!el)
          .forEach((el) =>
            el.classList.toggle(swiper.params.navigation.hiddenClass)
          );
      }
    });
    const enable = () => {
      swiper.el.classList.remove(
        ...swiper.params.navigation.navigationDisabledClass.split(" ")
      );
      init();
      update();
    };
    const disable = () => {
      swiper.el.classList.add(
        ...swiper.params.navigation.navigationDisabledClass.split(" ")
      );
      destroy();
    };
    Object.assign(swiper.navigation, {
      enable,
      disable,
      update,
      init,
      destroy,
    });
  }

  function classesToSelector(classes) {
    if (classes === void 0) {
      classes = "";
    }
    return `.${classes
      .trim()
      .replace(/([\.:!+\/])/g, "\\$1") // eslint-disable-line
      .replace(/ /g, ".")}`;
  }

  function Pagination(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const pfx = "swiper-pagination";
    extendParams({
      pagination: {
        el: null,
        bulletElement: "span",
        clickable: false,
        hideOnClick: false,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: false,
        type: "bullets",
        // 'bullets' or 'progressbar' or 'fraction' or 'custom'
        dynamicBullets: false,
        dynamicMainBullets: 1,
        formatFractionCurrent: (number) => number,
        formatFractionTotal: (number) => number,
        bulletClass: `${pfx}-bullet`,
        bulletActiveClass: `${pfx}-bullet-active`,
        modifierClass: `${pfx}-`,
        currentClass: `${pfx}-current`,
        totalClass: `${pfx}-total`,
        hiddenClass: `${pfx}-hidden`,
        progressbarFillClass: `${pfx}-progressbar-fill`,
        progressbarOppositeClass: `${pfx}-progressbar-opposite`,
        clickableClass: `${pfx}-clickable`,
        lockClass: `${pfx}-lock`,
        horizontalClass: `${pfx}-horizontal`,
        verticalClass: `${pfx}-vertical`,
        paginationDisabledClass: `${pfx}-disabled`,
      },
    });
    swiper.pagination = {
      el: null,
      bullets: [],
    };
    let bulletSize;
    let dynamicBulletIndex = 0;
    const makeElementsArray = (el) =>
      (Array.isArray(el) ? el : [el]).filter((e) => !!e);
    function isPaginationDisabled() {
      return (
        !swiper.params.pagination.el ||
        !swiper.pagination.el ||
        (Array.isArray(swiper.pagination.el) &&
          swiper.pagination.el.length === 0)
      );
    }
    function setSideBullets(bulletEl, position) {
      const { bulletActiveClass } = swiper.params.pagination;
      if (!bulletEl) return;
      bulletEl =
        bulletEl[`${position === "prev" ? "previous" : "next"}ElementSibling`];
      if (bulletEl) {
        bulletEl.classList.add(`${bulletActiveClass}-${position}`);
        bulletEl =
          bulletEl[
            `${position === "prev" ? "previous" : "next"}ElementSibling`
          ];
        if (bulletEl) {
          bulletEl.classList.add(
            `${bulletActiveClass}-${position}-${position}`
          );
        }
      }
    }
    function onBulletClick(e) {
      const bulletEl = e.target.closest(
        classesToSelector(swiper.params.pagination.bulletClass)
      );
      if (!bulletEl) {
        return;
      }
      e.preventDefault();
      const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;
      if (swiper.params.loop) {
        if (swiper.realIndex === index) return;
        swiper.slideToLoop(index);
      } else {
        swiper.slideTo(index);
      }
    }
    function update() {
      // Render || Update Pagination bullets/items
      const rtl = swiper.rtl;
      const params = swiper.params.pagination;
      if (isPaginationDisabled()) return;
      let el = swiper.pagination.el;
      el = makeElementsArray(el);
      // Current/Total
      let current;
      let previousIndex;
      const slidesLength =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.virtual.slides.length
          : swiper.slides.length;
      const total = swiper.params.loop
        ? Math.ceil(slidesLength / swiper.params.slidesPerGroup)
        : swiper.snapGrid.length;
      if (swiper.params.loop) {
        previousIndex = swiper.previousRealIndex || 0;
        current =
          swiper.params.slidesPerGroup > 1
            ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup)
            : swiper.realIndex;
      } else if (typeof swiper.snapIndex !== "undefined") {
        current = swiper.snapIndex;
        previousIndex = swiper.previousSnapIndex;
      } else {
        previousIndex = swiper.previousIndex || 0;
        current = swiper.activeIndex || 0;
      }
      // Types
      if (
        params.type === "bullets" &&
        swiper.pagination.bullets &&
        swiper.pagination.bullets.length > 0
      ) {
        const bullets = swiper.pagination.bullets;
        let firstIndex;
        let lastIndex;
        let midIndex;
        if (params.dynamicBullets) {
          bulletSize = elementOuterSize(
            bullets[0],
            swiper.isHorizontal() ? "width" : "height",
            true
          );
          el.forEach((subEl) => {
            subEl.style[swiper.isHorizontal() ? "width" : "height"] = `${
              bulletSize * (params.dynamicMainBullets + 4)
            }px`;
          });
          if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {
            dynamicBulletIndex += current - (previousIndex || 0);
            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {
              dynamicBulletIndex = params.dynamicMainBullets - 1;
            } else if (dynamicBulletIndex < 0) {
              dynamicBulletIndex = 0;
            }
          }
          firstIndex = Math.max(current - dynamicBulletIndex, 0);
          lastIndex =
            firstIndex +
            (Math.min(bullets.length, params.dynamicMainBullets) - 1);
          midIndex = (lastIndex + firstIndex) / 2;
        }
        bullets.forEach((bulletEl) => {
          const classesToRemove = [
            ...["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map(
              (suffix) => `${params.bulletActiveClass}${suffix}`
            ),
          ]
            .map((s) =>
              typeof s === "string" && s.includes(" ") ? s.split(" ") : s
            )
            .flat();
          bulletEl.classList.remove(...classesToRemove);
        });
        if (el.length > 1) {
          bullets.forEach((bullet) => {
            const bulletIndex = elementIndex(bullet);
            if (bulletIndex === current) {
              bullet.classList.add(...params.bulletActiveClass.split(" "));
            } else if (swiper.isElement) {
              bullet.setAttribute("part", "bullet");
            }
            if (params.dynamicBullets) {
              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                bullet.classList.add(
                  ...`${params.bulletActiveClass}-main`.split(" ")
                );
              }
              if (bulletIndex === firstIndex) {
                setSideBullets(bullet, "prev");
              }
              if (bulletIndex === lastIndex) {
                setSideBullets(bullet, "next");
              }
            }
          });
        } else {
          const bullet = bullets[current];
          if (bullet) {
            bullet.classList.add(...params.bulletActiveClass.split(" "));
          }
          if (swiper.isElement) {
            bullets.forEach((bulletEl, bulletIndex) => {
              bulletEl.setAttribute(
                "part",
                bulletIndex === current ? "bullet-active" : "bullet"
              );
            });
          }
          if (params.dynamicBullets) {
            const firstDisplayedBullet = bullets[firstIndex];
            const lastDisplayedBullet = bullets[lastIndex];
            for (let i = firstIndex; i <= lastIndex; i += 1) {
              if (bullets[i]) {
                bullets[i].classList.add(
                  ...`${params.bulletActiveClass}-main`.split(" ")
                );
              }
            }
            setSideBullets(firstDisplayedBullet, "prev");
            setSideBullets(lastDisplayedBullet, "next");
          }
        }
        if (params.dynamicBullets) {
          const dynamicBulletsLength = Math.min(
            bullets.length,
            params.dynamicMainBullets + 4
          );
          const bulletsOffset =
            (bulletSize * dynamicBulletsLength - bulletSize) / 2 -
            midIndex * bulletSize;
          const offsetProp = rtl ? "right" : "left";
          bullets.forEach((bullet) => {
            bullet.style[
              swiper.isHorizontal() ? offsetProp : "top"
            ] = `${bulletsOffset}px`;
          });
        }
      }
      el.forEach((subEl, subElIndex) => {
        if (params.type === "fraction") {
          subEl
            .querySelectorAll(classesToSelector(params.currentClass))
            .forEach((fractionEl) => {
              fractionEl.textContent = params.formatFractionCurrent(
                current + 1
              );
            });
          subEl
            .querySelectorAll(classesToSelector(params.totalClass))
            .forEach((totalEl) => {
              totalEl.textContent = params.formatFractionTotal(total);
            });
        }
        if (params.type === "progressbar") {
          let progressbarDirection;
          if (params.progressbarOpposite) {
            progressbarDirection = swiper.isHorizontal()
              ? "vertical"
              : "horizontal";
          } else {
            progressbarDirection = swiper.isHorizontal()
              ? "horizontal"
              : "vertical";
          }
          const scale = (current + 1) / total;
          let scaleX = 1;
          let scaleY = 1;
          if (progressbarDirection === "horizontal") {
            scaleX = scale;
          } else {
            scaleY = scale;
          }
          subEl
            .querySelectorAll(classesToSelector(params.progressbarFillClass))
            .forEach((progressEl) => {
              progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;
              progressEl.style.transitionDuration = `${swiper.params.speed}ms`;
            });
        }
        if (params.type === "custom" && params.renderCustom) {
          subEl.innerHTML = params.renderCustom(swiper, current + 1, total);
          if (subElIndex === 0) emit("paginationRender", subEl);
        } else {
          if (subElIndex === 0) emit("paginationRender", subEl);
          emit("paginationUpdate", subEl);
        }
        if (swiper.params.watchOverflow && swiper.enabled) {
          subEl.classList[swiper.isLocked ? "add" : "remove"](params.lockClass);
        }
      });
    }
    function render() {
      // Render Container
      const params = swiper.params.pagination;
      if (isPaginationDisabled()) return;
      const slidesLength =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.virtual.slides.length
          : swiper.grid && swiper.params.grid.rows > 1
          ? swiper.slides.length / Math.ceil(swiper.params.grid.rows)
          : swiper.slides.length;
      let el = swiper.pagination.el;
      el = makeElementsArray(el);
      let paginationHTML = "";
      if (params.type === "bullets") {
        let numberOfBullets = swiper.params.loop
          ? Math.ceil(slidesLength / swiper.params.slidesPerGroup)
          : swiper.snapGrid.length;
        if (
          swiper.params.freeMode &&
          swiper.params.freeMode.enabled &&
          numberOfBullets > slidesLength
        ) {
          numberOfBullets = slidesLength;
        }
        for (let i = 0; i < numberOfBullets; i += 1) {
          if (params.renderBullet) {
            paginationHTML += params.renderBullet.call(
              swiper,
              i,
              params.bulletClass
            );
          } else {
            // prettier-ignore
            paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part="bullet"' : ''} class="${params.bulletClass}"></${params.bulletElement}>`;
          }
        }
      }
      if (params.type === "fraction") {
        if (params.renderFraction) {
          paginationHTML = params.renderFraction.call(
            swiper,
            params.currentClass,
            params.totalClass
          );
        } else {
          paginationHTML =
            `<span class="${params.currentClass}"></span>` +
            " / " +
            `<span class="${params.totalClass}"></span>`;
        }
      }
      if (params.type === "progressbar") {
        if (params.renderProgressbar) {
          paginationHTML = params.renderProgressbar.call(
            swiper,
            params.progressbarFillClass
          );
        } else {
          paginationHTML = `<span class="${params.progressbarFillClass}"></span>`;
        }
      }
      swiper.pagination.bullets = [];
      el.forEach((subEl) => {
        if (params.type !== "custom") {
          subEl.innerHTML = paginationHTML || "";
        }
        if (params.type === "bullets") {
          swiper.pagination.bullets.push(
            ...subEl.querySelectorAll(classesToSelector(params.bulletClass))
          );
        }
      });
      if (params.type !== "custom") {
        emit("paginationRender", el[0]);
      }
    }
    function init() {
      swiper.params.pagination = createElementIfNotDefined(
        swiper,
        swiper.originalParams.pagination,
        swiper.params.pagination,
        {
          el: "swiper-pagination",
        }
      );
      const params = swiper.params.pagination;
      if (!params.el) return;
      let el;
      if (typeof params.el === "string" && swiper.isElement) {
        el = swiper.el.querySelector(params.el);
      }
      if (!el && typeof params.el === "string") {
        el = [...document.querySelectorAll(params.el)];
      }
      if (!el) {
        el = params.el;
      }
      if (!el || el.length === 0) return;
      if (
        swiper.params.uniqueNavElements &&
        typeof params.el === "string" &&
        Array.isArray(el) &&
        el.length > 1
      ) {
        el = [...swiper.el.querySelectorAll(params.el)];
        // check if it belongs to another nested Swiper
        if (el.length > 1) {
          el = el.filter((subEl) => {
            if (elementParents(subEl, ".swiper")[0] !== swiper.el) return false;
            return true;
          })[0];
        }
      }
      if (Array.isArray(el) && el.length === 1) el = el[0];
      Object.assign(swiper.pagination, {
        el,
      });
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        if (params.type === "bullets" && params.clickable) {
          subEl.classList.add(...(params.clickableClass || "").split(" "));
        }
        subEl.classList.add(params.modifierClass + params.type);
        subEl.classList.add(
          swiper.isHorizontal() ? params.horizontalClass : params.verticalClass
        );
        if (params.type === "bullets" && params.dynamicBullets) {
          subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);
          dynamicBulletIndex = 0;
          if (params.dynamicMainBullets < 1) {
            params.dynamicMainBullets = 1;
          }
        }
        if (params.type === "progressbar" && params.progressbarOpposite) {
          subEl.classList.add(params.progressbarOppositeClass);
        }
        if (params.clickable) {
          subEl.addEventListener("click", onBulletClick);
        }
        if (!swiper.enabled) {
          subEl.classList.add(params.lockClass);
        }
      });
    }
    function destroy() {
      const params = swiper.params.pagination;
      if (isPaginationDisabled()) return;
      let el = swiper.pagination.el;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) => {
          subEl.classList.remove(params.hiddenClass);
          subEl.classList.remove(params.modifierClass + params.type);
          subEl.classList.remove(
            swiper.isHorizontal()
              ? params.horizontalClass
              : params.verticalClass
          );
          if (params.clickable) {
            subEl.classList.remove(...(params.clickableClass || "").split(" "));
            subEl.removeEventListener("click", onBulletClick);
          }
        });
      }
      if (swiper.pagination.bullets)
        swiper.pagination.bullets.forEach((subEl) =>
          subEl.classList.remove(...params.bulletActiveClass.split(" "))
        );
    }
    on("changeDirection", () => {
      if (!swiper.pagination || !swiper.pagination.el) return;
      const params = swiper.params.pagination;
      let { el } = swiper.pagination;
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.classList.remove(params.horizontalClass, params.verticalClass);
        subEl.classList.add(
          swiper.isHorizontal() ? params.horizontalClass : params.verticalClass
        );
      });
    });
    on("init", () => {
      if (swiper.params.pagination.enabled === false) {
        // eslint-disable-next-line
        disable();
      } else {
        init();
        render();
        update();
      }
    });
    on("activeIndexChange", () => {
      if (typeof swiper.snapIndex === "undefined") {
        update();
      }
    });
    on("snapIndexChange", () => {
      update();
    });
    on("snapGridLengthChange", () => {
      render();
      update();
    });
    on("destroy", () => {
      destroy();
    });
    on("enable disable", () => {
      let { el } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) =>
          subEl.classList[swiper.enabled ? "remove" : "add"](
            swiper.params.pagination.lockClass
          )
        );
      }
    });
    on("lock unlock", () => {
      update();
    });
    on("click", (_s, e) => {
      const targetEl = e.target;
      const el = makeElementsArray(swiper.pagination.el);
      if (
        swiper.params.pagination.el &&
        swiper.params.pagination.hideOnClick &&
        el &&
        el.length > 0 &&
        !targetEl.classList.contains(swiper.params.pagination.bulletClass)
      ) {
        if (
          swiper.navigation &&
          ((swiper.navigation.nextEl &&
            targetEl === swiper.navigation.nextEl) ||
            (swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl))
        )
          return;
        const isHidden = el[0].classList.contains(
          swiper.params.pagination.hiddenClass
        );
        if (isHidden === true) {
          emit("paginationShow");
        } else {
          emit("paginationHide");
        }
        el.forEach((subEl) =>
          subEl.classList.toggle(swiper.params.pagination.hiddenClass)
        );
      }
    });
    const enable = () => {
      swiper.el.classList.remove(
        swiper.params.pagination.paginationDisabledClass
      );
      let { el } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) =>
          subEl.classList.remove(
            swiper.params.pagination.paginationDisabledClass
          )
        );
      }
      init();
      render();
      update();
    };
    const disable = () => {
      swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);
      let { el } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) =>
          subEl.classList.add(swiper.params.pagination.paginationDisabledClass)
        );
      }
      destroy();
    };
    Object.assign(swiper.pagination, {
      enable,
      disable,
      render,
      update,
      init,
      destroy,
    });
  }

  function Scrollbar(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const document = getDocument();
    let isTouched = false;
    let timeout = null;
    let dragTimeout = null;
    let dragStartPos;
    let dragSize;
    let trackSize;
    let divider;
    extendParams({
      scrollbar: {
        el: null,
        dragSize: "auto",
        hide: false,
        draggable: false,
        snapOnRelease: true,
        lockClass: "swiper-scrollbar-lock",
        dragClass: "swiper-scrollbar-drag",
        scrollbarDisabledClass: "swiper-scrollbar-disabled",
        horizontalClass: `swiper-scrollbar-horizontal`,
        verticalClass: `swiper-scrollbar-vertical`,
      },
    });
    swiper.scrollbar = {
      el: null,
      dragEl: null,
    };
    function setTranslate() {
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
      const { scrollbar, rtlTranslate: rtl } = swiper;
      const { dragEl, el } = scrollbar;
      const params = swiper.params.scrollbar;
      const progress = swiper.params.loop
        ? swiper.progressLoop
        : swiper.progress;
      let newSize = dragSize;
      let newPos = (trackSize - dragSize) * progress;
      if (rtl) {
        newPos = -newPos;
        if (newPos > 0) {
          newSize = dragSize - newPos;
          newPos = 0;
        } else if (-newPos + dragSize > trackSize) {
          newSize = trackSize + newPos;
        }
      } else if (newPos < 0) {
        newSize = dragSize + newPos;
        newPos = 0;
      } else if (newPos + dragSize > trackSize) {
        newSize = trackSize - newPos;
      }
      if (swiper.isHorizontal()) {
        dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;
        dragEl.style.width = `${newSize}px`;
      } else {
        dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;
        dragEl.style.height = `${newSize}px`;
      }
      if (params.hide) {
        clearTimeout(timeout);
        el.style.opacity = 1;
        timeout = setTimeout(() => {
          el.style.opacity = 0;
          el.style.transitionDuration = "400ms";
        }, 1000);
      }
    }
    function setTransition(duration) {
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
      swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;
    }
    function updateSize() {
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
      const { scrollbar } = swiper;
      const { dragEl, el } = scrollbar;
      dragEl.style.width = "";
      dragEl.style.height = "";
      trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;
      divider =
        swiper.size /
        (swiper.virtualSize +
          swiper.params.slidesOffsetBefore -
          (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));
      if (swiper.params.scrollbar.dragSize === "auto") {
        dragSize = trackSize * divider;
      } else {
        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
      }
      if (swiper.isHorizontal()) {
        dragEl.style.width = `${dragSize}px`;
      } else {
        dragEl.style.height = `${dragSize}px`;
      }
      if (divider >= 1) {
        el.style.display = "none";
      } else {
        el.style.display = "";
      }
      if (swiper.params.scrollbar.hide) {
        el.style.opacity = 0;
      }
      if (swiper.params.watchOverflow && swiper.enabled) {
        scrollbar.el.classList[swiper.isLocked ? "add" : "remove"](
          swiper.params.scrollbar.lockClass
        );
      }
    }
    function getPointerPosition(e) {
      return swiper.isHorizontal() ? e.clientX : e.clientY;
    }
    function setDragPosition(e) {
      const { scrollbar, rtlTranslate: rtl } = swiper;
      const { el } = scrollbar;
      let positionRatio;
      positionRatio =
        (getPointerPosition(e) -
          elementOffset(el)[swiper.isHorizontal() ? "left" : "top"] -
          (dragStartPos !== null ? dragStartPos : dragSize / 2)) /
        (trackSize - dragSize);
      positionRatio = Math.max(Math.min(positionRatio, 1), 0);
      if (rtl) {
        positionRatio = 1 - positionRatio;
      }
      const position =
        swiper.minTranslate() +
        (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
      swiper.updateProgress(position);
      swiper.setTranslate(position);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    function onDragStart(e) {
      const params = swiper.params.scrollbar;
      const { scrollbar, wrapperEl } = swiper;
      const { el, dragEl } = scrollbar;
      isTouched = true;
      dragStartPos =
        e.target === dragEl
          ? getPointerPosition(e) -
            e.target.getBoundingClientRect()[
              swiper.isHorizontal() ? "left" : "top"
            ]
          : null;
      e.preventDefault();
      e.stopPropagation();
      wrapperEl.style.transitionDuration = "100ms";
      dragEl.style.transitionDuration = "100ms";
      setDragPosition(e);
      clearTimeout(dragTimeout);
      el.style.transitionDuration = "0ms";
      if (params.hide) {
        el.style.opacity = 1;
      }
      if (swiper.params.cssMode) {
        swiper.wrapperEl.style["scroll-snap-type"] = "none";
      }
      emit("scrollbarDragStart", e);
    }
    function onDragMove(e) {
      const { scrollbar, wrapperEl } = swiper;
      const { el, dragEl } = scrollbar;
      if (!isTouched) return;
      if (e.preventDefault) e.preventDefault();
      else e.returnValue = false;
      setDragPosition(e);
      wrapperEl.style.transitionDuration = "0ms";
      el.style.transitionDuration = "0ms";
      dragEl.style.transitionDuration = "0ms";
      emit("scrollbarDragMove", e);
    }
    function onDragEnd(e) {
      const params = swiper.params.scrollbar;
      const { scrollbar, wrapperEl } = swiper;
      const { el } = scrollbar;
      if (!isTouched) return;
      isTouched = false;
      if (swiper.params.cssMode) {
        swiper.wrapperEl.style["scroll-snap-type"] = "";
        wrapperEl.style.transitionDuration = "";
      }
      if (params.hide) {
        clearTimeout(dragTimeout);
        dragTimeout = nextTick(() => {
          el.style.opacity = 0;
          el.style.transitionDuration = "400ms";
        }, 1000);
      }
      emit("scrollbarDragEnd", e);
      if (params.snapOnRelease) {
        swiper.slideToClosest();
      }
    }
    function events(method) {
      const { scrollbar, params } = swiper;
      const el = scrollbar.el;
      if (!el) return;
      const target = el;
      const activeListener = params.passiveListeners
        ? {
            passive: false,
            capture: false,
          }
        : false;
      const passiveListener = params.passiveListeners
        ? {
            passive: true,
            capture: false,
          }
        : false;
      if (!target) return;
      const eventMethod =
        method === "on" ? "addEventListener" : "removeEventListener";
      target[eventMethod]("pointerdown", onDragStart, activeListener);
      document[eventMethod]("pointermove", onDragMove, activeListener);
      document[eventMethod]("pointerup", onDragEnd, passiveListener);
    }
    function enableDraggable() {
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
      events("on");
    }
    function disableDraggable() {
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
      events("off");
    }
    function init() {
      const { scrollbar, el: swiperEl } = swiper;
      swiper.params.scrollbar = createElementIfNotDefined(
        swiper,
        swiper.originalParams.scrollbar,
        swiper.params.scrollbar,
        {
          el: "swiper-scrollbar",
        }
      );
      const params = swiper.params.scrollbar;
      if (!params.el) return;
      let el;
      if (typeof params.el === "string" && swiper.isElement) {
        el = swiper.el.querySelector(params.el);
      }
      if (!el && typeof params.el === "string") {
        el = document.querySelectorAll(params.el);
        if (!el.length) return;
      } else if (!el) {
        el = params.el;
      }
      if (
        swiper.params.uniqueNavElements &&
        typeof params.el === "string" &&
        el.length > 1 &&
        swiperEl.querySelectorAll(params.el).length === 1
      ) {
        el = swiperEl.querySelector(params.el);
      }
      if (el.length > 0) el = el[0];
      el.classList.add(
        swiper.isHorizontal() ? params.horizontalClass : params.verticalClass
      );
      let dragEl;
      if (el) {
        dragEl = el.querySelector(
          classesToSelector(swiper.params.scrollbar.dragClass)
        );
        if (!dragEl) {
          dragEl = createElement("div", swiper.params.scrollbar.dragClass);
          el.append(dragEl);
        }
      }
      Object.assign(scrollbar, {
        el,
        dragEl,
      });
      if (params.draggable) {
        enableDraggable();
      }
      if (el) {
        el.classList[swiper.enabled ? "remove" : "add"](
          ...classesToTokens(swiper.params.scrollbar.lockClass)
        );
      }
    }
    function destroy() {
      const params = swiper.params.scrollbar;
      const el = swiper.scrollbar.el;
      if (el) {
        el.classList.remove(
          ...classesToTokens(
            swiper.isHorizontal()
              ? params.horizontalClass
              : params.verticalClass
          )
        );
      }
      disableDraggable();
    }
    on("init", () => {
      if (swiper.params.scrollbar.enabled === false) {
        // eslint-disable-next-line
        disable();
      } else {
        init();
        updateSize();
        setTranslate();
      }
    });
    on("update resize observerUpdate lock unlock", () => {
      updateSize();
    });
    on("setTranslate", () => {
      setTranslate();
    });
    on("setTransition", (_s, duration) => {
      setTransition(duration);
    });
    on("enable disable", () => {
      const { el } = swiper.scrollbar;
      if (el) {
        el.classList[swiper.enabled ? "remove" : "add"](
          ...classesToTokens(swiper.params.scrollbar.lockClass)
        );
      }
    });
    on("destroy", () => {
      destroy();
    });
    const enable = () => {
      swiper.el.classList.remove(
        ...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass)
      );
      if (swiper.scrollbar.el) {
        swiper.scrollbar.el.classList.remove(
          ...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass)
        );
      }
      init();
      updateSize();
      setTranslate();
    };
    const disable = () => {
      swiper.el.classList.add(
        ...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass)
      );
      if (swiper.scrollbar.el) {
        swiper.scrollbar.el.classList.add(
          ...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass)
        );
      }
      destroy();
    };
    Object.assign(swiper.scrollbar, {
      enable,
      disable,
      updateSize,
      setTranslate,
      init,
      destroy,
    });
  }

  function Parallax(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      parallax: {
        enabled: false,
      },
    });
    const elementsSelector =
      "[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]";
    const setTransform = (el, progress) => {
      const { rtl } = swiper;
      const rtlFactor = rtl ? -1 : 1;
      const p = el.getAttribute("data-swiper-parallax") || "0";
      let x = el.getAttribute("data-swiper-parallax-x");
      let y = el.getAttribute("data-swiper-parallax-y");
      const scale = el.getAttribute("data-swiper-parallax-scale");
      const opacity = el.getAttribute("data-swiper-parallax-opacity");
      const rotate = el.getAttribute("data-swiper-parallax-rotate");
      if (x || y) {
        x = x || "0";
        y = y || "0";
      } else if (swiper.isHorizontal()) {
        x = p;
        y = "0";
      } else {
        y = p;
        x = "0";
      }
      if (x.indexOf("%") >= 0) {
        x = `${parseInt(x, 10) * progress * rtlFactor}%`;
      } else {
        x = `${x * progress * rtlFactor}px`;
      }
      if (y.indexOf("%") >= 0) {
        y = `${parseInt(y, 10) * progress}%`;
      } else {
        y = `${y * progress}px`;
      }
      if (typeof opacity !== "undefined" && opacity !== null) {
        const currentOpacity =
          opacity - (opacity - 1) * (1 - Math.abs(progress));
        el.style.opacity = currentOpacity;
      }
      let transform = `translate3d(${x}, ${y}, 0px)`;
      if (typeof scale !== "undefined" && scale !== null) {
        const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
        transform += ` scale(${currentScale})`;
      }
      if (rotate && typeof rotate !== "undefined" && rotate !== null) {
        const currentRotate = rotate * progress * -1;
        transform += ` rotate(${currentRotate}deg)`;
      }
      el.style.transform = transform;
    };
    const setTranslate = () => {
      const { el, slides, progress, snapGrid, isElement } = swiper;
      const elements = elementChildren(el, elementsSelector);
      if (swiper.isElement) {
        elements.push(...elementChildren(swiper.hostEl, elementsSelector));
      }
      elements.forEach((subEl) => {
        setTransform(subEl, progress);
      });
      slides.forEach((slideEl, slideIndex) => {
        let slideProgress = slideEl.progress;
        if (
          swiper.params.slidesPerGroup > 1 &&
          swiper.params.slidesPerView !== "auto"
        ) {
          slideProgress +=
            Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
        }
        slideProgress = Math.min(Math.max(slideProgress, -1), 1);
        slideEl
          .querySelectorAll(
            `${elementsSelector}, [data-swiper-parallax-rotate]`
          )
          .forEach((subEl) => {
            setTransform(subEl, slideProgress);
          });
      });
    };
    const setTransition = function (duration) {
      if (duration === void 0) {
        duration = swiper.params.speed;
      }
      const { el, hostEl } = swiper;
      const elements = [...el.querySelectorAll(elementsSelector)];
      if (swiper.isElement) {
        elements.push(...hostEl.querySelectorAll(elementsSelector));
      }
      elements.forEach((parallaxEl) => {
        let parallaxDuration =
          parseInt(
            parallaxEl.getAttribute("data-swiper-parallax-duration"),
            10
          ) || duration;
        if (duration === 0) parallaxDuration = 0;
        parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;
      });
    };
    on("beforeInit", () => {
      if (!swiper.params.parallax.enabled) return;
      swiper.params.watchSlidesProgress = true;
      swiper.originalParams.watchSlidesProgress = true;
    });
    on("init", () => {
      if (!swiper.params.parallax.enabled) return;
      setTranslate();
    });
    on("setTranslate", () => {
      if (!swiper.params.parallax.enabled) return;
      setTranslate();
    });
    on("setTransition", (_swiper, duration) => {
      if (!swiper.params.parallax.enabled) return;
      setTransition(duration);
    });
  }

  function Zoom(_ref) {
    let { swiper, extendParams, on, emit } = _ref;
    const window = getWindow();
    extendParams({
      zoom: {
        enabled: false,
        maxRatio: 3,
        minRatio: 1,
        toggle: true,
        containerClass: "swiper-zoom-container",
        zoomedSlideClass: "swiper-slide-zoomed",
      },
    });
    swiper.zoom = {
      enabled: false,
    };
    let currentScale = 1;
    let isScaling = false;
    let fakeGestureTouched;
    let fakeGestureMoved;
    const evCache = [];
    const gesture = {
      originX: 0,
      originY: 0,
      slideEl: undefined,
      slideWidth: undefined,
      slideHeight: undefined,
      imageEl: undefined,
      imageWrapEl: undefined,
      maxRatio: 3,
    };
    const image = {
      isTouched: undefined,
      isMoved: undefined,
      currentX: undefined,
      currentY: undefined,
      minX: undefined,
      minY: undefined,
      maxX: undefined,
      maxY: undefined,
      width: undefined,
      height: undefined,
      startX: undefined,
      startY: undefined,
      touchesStart: {},
      touchesCurrent: {},
    };
    const velocity = {
      x: undefined,
      y: undefined,
      prevPositionX: undefined,
      prevPositionY: undefined,
      prevTime: undefined,
    };
    let scale = 1;
    Object.defineProperty(swiper.zoom, "scale", {
      get() {
        return scale;
      },
      set(value) {
        if (scale !== value) {
          const imageEl = gesture.imageEl;
          const slideEl = gesture.slideEl;
          emit("zoomChange", value, imageEl, slideEl);
        }
        scale = value;
      },
    });
    function getDistanceBetweenTouches() {
      if (evCache.length < 2) return 1;
      const x1 = evCache[0].pageX;
      const y1 = evCache[0].pageY;
      const x2 = evCache[1].pageX;
      const y2 = evCache[1].pageY;
      const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
      return distance;
    }
    function getScaleOrigin() {
      if (evCache.length < 2)
        return {
          x: null,
          y: null,
        };
      const box = gesture.imageEl.getBoundingClientRect();
      return [
        (evCache[0].pageX +
          (evCache[1].pageX - evCache[0].pageX) / 2 -
          box.x -
          window.scrollX) /
          currentScale,
        (evCache[0].pageY +
          (evCache[1].pageY - evCache[0].pageY) / 2 -
          box.y -
          window.scrollY) /
          currentScale,
      ];
    }
    function getSlideSelector() {
      return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;
    }
    function eventWithinSlide(e) {
      const slideSelector = getSlideSelector();
      if (e.target.matches(slideSelector)) return true;
      if (
        swiper.slides.filter((slideEl) => slideEl.contains(e.target)).length > 0
      )
        return true;
      return false;
    }
    function eventWithinZoomContainer(e) {
      const selector = `.${swiper.params.zoom.containerClass}`;
      if (e.target.matches(selector)) return true;
      if (
        [...swiper.hostEl.querySelectorAll(selector)].filter((containerEl) =>
          containerEl.contains(e.target)
        ).length > 0
      )
        return true;
      return false;
    }

    // Events
    function onGestureStart(e) {
      if (e.pointerType === "mouse") {
        evCache.splice(0, evCache.length);
      }
      if (!eventWithinSlide(e)) return;
      const params = swiper.params.zoom;
      fakeGestureTouched = false;
      fakeGestureMoved = false;
      evCache.push(e);
      if (evCache.length < 2) {
        return;
      }
      fakeGestureTouched = true;
      gesture.scaleStart = getDistanceBetweenTouches();
      if (!gesture.slideEl) {
        gesture.slideEl = e.target.closest(
          `.${swiper.params.slideClass}, swiper-slide`
        );
        if (!gesture.slideEl)
          gesture.slideEl = swiper.slides[swiper.activeIndex];
        let imageEl = gesture.slideEl.querySelector(
          `.${params.containerClass}`
        );
        if (imageEl) {
          imageEl = imageEl.querySelectorAll(
            "picture, img, svg, canvas, .swiper-zoom-target"
          )[0];
        }
        gesture.imageEl = imageEl;
        if (imageEl) {
          gesture.imageWrapEl = elementParents(
            gesture.imageEl,
            `.${params.containerClass}`
          )[0];
        } else {
          gesture.imageWrapEl = undefined;
        }
        if (!gesture.imageWrapEl) {
          gesture.imageEl = undefined;
          return;
        }
        gesture.maxRatio =
          gesture.imageWrapEl.getAttribute("data-swiper-zoom") ||
          params.maxRatio;
      }
      if (gesture.imageEl) {
        const [originX, originY] = getScaleOrigin();
        gesture.originX = originX;
        gesture.originY = originY;
        gesture.imageEl.style.transitionDuration = "0ms";
      }
      isScaling = true;
    }
    function onGestureChange(e) {
      if (!eventWithinSlide(e)) return;
      const params = swiper.params.zoom;
      const zoom = swiper.zoom;
      const pointerIndex = evCache.findIndex(
        (cachedEv) => cachedEv.pointerId === e.pointerId
      );
      if (pointerIndex >= 0) evCache[pointerIndex] = e;
      if (evCache.length < 2) {
        return;
      }
      fakeGestureMoved = true;
      gesture.scaleMove = getDistanceBetweenTouches();
      if (!gesture.imageEl) {
        return;
      }
      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * currentScale;
      if (zoom.scale > gesture.maxRatio) {
        zoom.scale =
          gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;
      }
      if (zoom.scale < params.minRatio) {
        zoom.scale =
          params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;
      }
      gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;
    }
    function onGestureEnd(e) {
      if (!eventWithinSlide(e)) return;
      if (e.pointerType === "mouse" && e.type === "pointerout") return;
      const params = swiper.params.zoom;
      const zoom = swiper.zoom;
      const pointerIndex = evCache.findIndex(
        (cachedEv) => cachedEv.pointerId === e.pointerId
      );
      if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);
      if (!fakeGestureTouched || !fakeGestureMoved) {
        return;
      }
      fakeGestureTouched = false;
      fakeGestureMoved = false;
      if (!gesture.imageEl) return;
      zoom.scale = Math.max(
        Math.min(zoom.scale, gesture.maxRatio),
        params.minRatio
      );
      gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;
      gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;
      currentScale = zoom.scale;
      isScaling = false;
      if (zoom.scale > 1 && gesture.slideEl) {
        gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);
      } else if (zoom.scale <= 1 && gesture.slideEl) {
        gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);
      }
      if (zoom.scale === 1) {
        gesture.originX = 0;
        gesture.originY = 0;
        gesture.slideEl = undefined;
      }
    }
    function onTouchStart(e) {
      const device = swiper.device;
      if (!gesture.imageEl) return;
      if (image.isTouched) return;
      if (device.android && e.cancelable) e.preventDefault();
      image.isTouched = true;
      const event = evCache.length > 0 ? evCache[0] : e;
      image.touchesStart.x = event.pageX;
      image.touchesStart.y = event.pageY;
    }
    function onTouchMove(e) {
      if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;
      const zoom = swiper.zoom;
      if (!gesture.imageEl) return;
      if (!image.isTouched || !gesture.slideEl) return;
      if (!image.isMoved) {
        image.width = gesture.imageEl.offsetWidth;
        image.height = gesture.imageEl.offsetHeight;
        image.startX = getTranslate(gesture.imageWrapEl, "x") || 0;
        image.startY = getTranslate(gesture.imageWrapEl, "y") || 0;
        gesture.slideWidth = gesture.slideEl.offsetWidth;
        gesture.slideHeight = gesture.slideEl.offsetHeight;
        gesture.imageWrapEl.style.transitionDuration = "0ms";
      }
      // Define if we need image drag
      const scaledWidth = image.width * zoom.scale;
      const scaledHeight = image.height * zoom.scale;
      if (
        scaledWidth < gesture.slideWidth &&
        scaledHeight < gesture.slideHeight
      )
        return;
      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
      image.maxX = -image.minX;
      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
      image.maxY = -image.minY;
      image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;
      image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;
      const touchesDiff = Math.max(
        Math.abs(image.touchesCurrent.x - image.touchesStart.x),
        Math.abs(image.touchesCurrent.y - image.touchesStart.y)
      );
      if (touchesDiff > 5) {
        swiper.allowClick = false;
      }
      if (!image.isMoved && !isScaling) {
        if (
          swiper.isHorizontal() &&
          ((Math.floor(image.minX) === Math.floor(image.startX) &&
            image.touchesCurrent.x < image.touchesStart.x) ||
            (Math.floor(image.maxX) === Math.floor(image.startX) &&
              image.touchesCurrent.x > image.touchesStart.x))
        ) {
          image.isTouched = false;
          return;
        }
        if (
          !swiper.isHorizontal() &&
          ((Math.floor(image.minY) === Math.floor(image.startY) &&
            image.touchesCurrent.y < image.touchesStart.y) ||
            (Math.floor(image.maxY) === Math.floor(image.startY) &&
              image.touchesCurrent.y > image.touchesStart.y))
        ) {
          image.isTouched = false;
          return;
        }
      }
      if (e.cancelable) {
        e.preventDefault();
      }
      e.stopPropagation();
      image.isMoved = true;
      const scaleRatio =
        (zoom.scale - currentScale) /
        (gesture.maxRatio - swiper.params.zoom.minRatio);
      const { originX, originY } = gesture;
      image.currentX =
        image.touchesCurrent.x -
        image.touchesStart.x +
        image.startX +
        scaleRatio * (image.width - originX * 2);
      image.currentY =
        image.touchesCurrent.y -
        image.touchesStart.y +
        image.startY +
        scaleRatio * (image.height - originY * 2);
      if (image.currentX < image.minX) {
        image.currentX =
          image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;
      }
      if (image.currentX > image.maxX) {
        image.currentX =
          image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;
      }
      if (image.currentY < image.minY) {
        image.currentY =
          image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;
      }
      if (image.currentY > image.maxY) {
        image.currentY =
          image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;
      }

      // Velocity
      if (!velocity.prevPositionX)
        velocity.prevPositionX = image.touchesCurrent.x;
      if (!velocity.prevPositionY)
        velocity.prevPositionY = image.touchesCurrent.y;
      if (!velocity.prevTime) velocity.prevTime = Date.now();
      velocity.x =
        (image.touchesCurrent.x - velocity.prevPositionX) /
        (Date.now() - velocity.prevTime) /
        2;
      velocity.y =
        (image.touchesCurrent.y - velocity.prevPositionY) /
        (Date.now() - velocity.prevTime) /
        2;
      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)
        velocity.x = 0;
      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)
        velocity.y = 0;
      velocity.prevPositionX = image.touchesCurrent.x;
      velocity.prevPositionY = image.touchesCurrent.y;
      velocity.prevTime = Date.now();
      gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;
    }
    function onTouchEnd() {
      const zoom = swiper.zoom;
      if (!gesture.imageEl) return;
      if (!image.isTouched || !image.isMoved) {
        image.isTouched = false;
        image.isMoved = false;
        return;
      }
      image.isTouched = false;
      image.isMoved = false;
      let momentumDurationX = 300;
      let momentumDurationY = 300;
      const momentumDistanceX = velocity.x * momentumDurationX;
      const newPositionX = image.currentX + momentumDistanceX;
      const momentumDistanceY = velocity.y * momentumDurationY;
      const newPositionY = image.currentY + momentumDistanceY;

      // Fix duration
      if (velocity.x !== 0)
        momentumDurationX = Math.abs(
          (newPositionX - image.currentX) / velocity.x
        );
      if (velocity.y !== 0)
        momentumDurationY = Math.abs(
          (newPositionY - image.currentY) / velocity.y
        );
      const momentumDuration = Math.max(momentumDurationX, momentumDurationY);
      image.currentX = newPositionX;
      image.currentY = newPositionY;
      // Define if we need image drag
      const scaledWidth = image.width * zoom.scale;
      const scaledHeight = image.height * zoom.scale;
      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
      image.maxX = -image.minX;
      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
      image.maxY = -image.minY;
      image.currentX = Math.max(
        Math.min(image.currentX, image.maxX),
        image.minX
      );
      image.currentY = Math.max(
        Math.min(image.currentY, image.maxY),
        image.minY
      );
      gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;
      gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;
    }
    function onTransitionEnd() {
      const zoom = swiper.zoom;
      if (
        gesture.slideEl &&
        swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)
      ) {
        if (gesture.imageEl) {
          gesture.imageEl.style.transform = "translate3d(0,0,0) scale(1)";
        }
        if (gesture.imageWrapEl) {
          gesture.imageWrapEl.style.transform = "translate3d(0,0,0)";
        }
        gesture.slideEl.classList.remove(
          `${swiper.params.zoom.zoomedSlideClass}`
        );
        zoom.scale = 1;
        currentScale = 1;
        gesture.slideEl = undefined;
        gesture.imageEl = undefined;
        gesture.imageWrapEl = undefined;
        gesture.originX = 0;
        gesture.originY = 0;
      }
    }
    function zoomIn(e) {
      const zoom = swiper.zoom;
      const params = swiper.params.zoom;
      if (!gesture.slideEl) {
        if (e && e.target) {
          gesture.slideEl = e.target.closest(
            `.${swiper.params.slideClass}, swiper-slide`
          );
        }
        if (!gesture.slideEl) {
          if (
            swiper.params.virtual &&
            swiper.params.virtual.enabled &&
            swiper.virtual
          ) {
            gesture.slideEl = elementChildren(
              swiper.slidesEl,
              `.${swiper.params.slideActiveClass}`
            )[0];
          } else {
            gesture.slideEl = swiper.slides[swiper.activeIndex];
          }
        }
        let imageEl = gesture.slideEl.querySelector(
          `.${params.containerClass}`
        );
        if (imageEl) {
          imageEl = imageEl.querySelectorAll(
            "picture, img, svg, canvas, .swiper-zoom-target"
          )[0];
        }
        gesture.imageEl = imageEl;
        if (imageEl) {
          gesture.imageWrapEl = elementParents(
            gesture.imageEl,
            `.${params.containerClass}`
          )[0];
        } else {
          gesture.imageWrapEl = undefined;
        }
      }
      if (!gesture.imageEl || !gesture.imageWrapEl) return;
      if (swiper.params.cssMode) {
        swiper.wrapperEl.style.overflow = "hidden";
        swiper.wrapperEl.style.touchAction = "none";
      }
      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);
      let touchX;
      let touchY;
      let offsetX;
      let offsetY;
      let diffX;
      let diffY;
      let translateX;
      let translateY;
      let imageWidth;
      let imageHeight;
      let scaledWidth;
      let scaledHeight;
      let translateMinX;
      let translateMinY;
      let translateMaxX;
      let translateMaxY;
      let slideWidth;
      let slideHeight;
      if (typeof image.touchesStart.x === "undefined" && e) {
        touchX = e.pageX;
        touchY = e.pageY;
      } else {
        touchX = image.touchesStart.x;
        touchY = image.touchesStart.y;
      }
      const forceZoomRatio = typeof e === "number" ? e : null;
      if (currentScale === 1 && forceZoomRatio) {
        touchX = undefined;
        touchY = undefined;
      }
      zoom.scale =
        forceZoomRatio ||
        gesture.imageWrapEl.getAttribute("data-swiper-zoom") ||
        params.maxRatio;
      currentScale =
        forceZoomRatio ||
        gesture.imageWrapEl.getAttribute("data-swiper-zoom") ||
        params.maxRatio;
      if (e && !(currentScale === 1 && forceZoomRatio)) {
        slideWidth = gesture.slideEl.offsetWidth;
        slideHeight = gesture.slideEl.offsetHeight;
        offsetX = elementOffset(gesture.slideEl).left + window.scrollX;
        offsetY = elementOffset(gesture.slideEl).top + window.scrollY;
        diffX = offsetX + slideWidth / 2 - touchX;
        diffY = offsetY + slideHeight / 2 - touchY;
        imageWidth = gesture.imageEl.offsetWidth;
        imageHeight = gesture.imageEl.offsetHeight;
        scaledWidth = imageWidth * zoom.scale;
        scaledHeight = imageHeight * zoom.scale;
        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
        translateMaxX = -translateMinX;
        translateMaxY = -translateMinY;
        translateX = diffX * zoom.scale;
        translateY = diffY * zoom.scale;
        if (translateX < translateMinX) {
          translateX = translateMinX;
        }
        if (translateX > translateMaxX) {
          translateX = translateMaxX;
        }
        if (translateY < translateMinY) {
          translateY = translateMinY;
        }
        if (translateY > translateMaxY) {
          translateY = translateMaxY;
        }
      } else {
        translateX = 0;
        translateY = 0;
      }
      if (forceZoomRatio && zoom.scale === 1) {
        gesture.originX = 0;
        gesture.originY = 0;
      }
      gesture.imageWrapEl.style.transitionDuration = "300ms";
      gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;
      gesture.imageEl.style.transitionDuration = "300ms";
      gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;
    }
    function zoomOut() {
      const zoom = swiper.zoom;
      const params = swiper.params.zoom;
      if (!gesture.slideEl) {
        if (
          swiper.params.virtual &&
          swiper.params.virtual.enabled &&
          swiper.virtual
        ) {
          gesture.slideEl = elementChildren(
            swiper.slidesEl,
            `.${swiper.params.slideActiveClass}`
          )[0];
        } else {
          gesture.slideEl = swiper.slides[swiper.activeIndex];
        }
        let imageEl = gesture.slideEl.querySelector(
          `.${params.containerClass}`
        );
        if (imageEl) {
          imageEl = imageEl.querySelectorAll(
            "picture, img, svg, canvas, .swiper-zoom-target"
          )[0];
        }
        gesture.imageEl = imageEl;
        if (imageEl) {
          gesture.imageWrapEl = elementParents(
            gesture.imageEl,
            `.${params.containerClass}`
          )[0];
        } else {
          gesture.imageWrapEl = undefined;
        }
      }
      if (!gesture.imageEl || !gesture.imageWrapEl) return;
      if (swiper.params.cssMode) {
        swiper.wrapperEl.style.overflow = "";
        swiper.wrapperEl.style.touchAction = "";
      }
      zoom.scale = 1;
      currentScale = 1;
      gesture.imageWrapEl.style.transitionDuration = "300ms";
      gesture.imageWrapEl.style.transform = "translate3d(0,0,0)";
      gesture.imageEl.style.transitionDuration = "300ms";
      gesture.imageEl.style.transform = "translate3d(0,0,0) scale(1)";
      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);
      gesture.slideEl = undefined;
      gesture.originX = 0;
      gesture.originY = 0;
    }

    // Toggle Zoom
    function zoomToggle(e) {
      const zoom = swiper.zoom;
      if (zoom.scale && zoom.scale !== 1) {
        // Zoom Out
        zoomOut();
      } else {
        // Zoom In
        zoomIn(e);
      }
    }
    function getListeners() {
      const passiveListener = swiper.params.passiveListeners
        ? {
            passive: true,
            capture: false,
          }
        : false;
      const activeListenerWithCapture = swiper.params.passiveListeners
        ? {
            passive: false,
            capture: true,
          }
        : true;
      return {
        passiveListener,
        activeListenerWithCapture,
      };
    }

    // Attach/Detach Events
    function enable() {
      const zoom = swiper.zoom;
      if (zoom.enabled) return;
      zoom.enabled = true;
      const { passiveListener, activeListenerWithCapture } = getListeners();

      // Scale image
      swiper.wrapperEl.addEventListener(
        "pointerdown",
        onGestureStart,
        passiveListener
      );
      swiper.wrapperEl.addEventListener(
        "pointermove",
        onGestureChange,
        activeListenerWithCapture
      );
      ["pointerup", "pointercancel", "pointerout"].forEach((eventName) => {
        swiper.wrapperEl.addEventListener(
          eventName,
          onGestureEnd,
          passiveListener
        );
      });

      // Move image
      swiper.wrapperEl.addEventListener(
        "pointermove",
        onTouchMove,
        activeListenerWithCapture
      );
    }
    function disable() {
      const zoom = swiper.zoom;
      if (!zoom.enabled) return;
      zoom.enabled = false;
      const { passiveListener, activeListenerWithCapture } = getListeners();

      // Scale image
      swiper.wrapperEl.removeEventListener(
        "pointerdown",
        onGestureStart,
        passiveListener
      );
      swiper.wrapperEl.removeEventListener(
        "pointermove",
        onGestureChange,
        activeListenerWithCapture
      );
      ["pointerup", "pointercancel", "pointerout"].forEach((eventName) => {
        swiper.wrapperEl.removeEventListener(
          eventName,
          onGestureEnd,
          passiveListener
        );
      });

      // Move image
      swiper.wrapperEl.removeEventListener(
        "pointermove",
        onTouchMove,
        activeListenerWithCapture
      );
    }
    on("init", () => {
      if (swiper.params.zoom.enabled) {
        enable();
      }
    });
    on("destroy", () => {
      disable();
    });
    on("touchStart", (_s, e) => {
      if (!swiper.zoom.enabled) return;
      onTouchStart(e);
    });
    on("touchEnd", (_s, e) => {
      if (!swiper.zoom.enabled) return;
      onTouchEnd();
    });
    on("doubleTap", (_s, e) => {
      if (
        !swiper.animating &&
        swiper.params.zoom.enabled &&
        swiper.zoom.enabled &&
        swiper.params.zoom.toggle
      ) {
        zoomToggle(e);
      }
    });
    on("transitionEnd", () => {
      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
        onTransitionEnd();
      }
    });
    on("slideChange", () => {
      if (
        swiper.zoom.enabled &&
        swiper.params.zoom.enabled &&
        swiper.params.cssMode
      ) {
        onTransitionEnd();
      }
    });
    Object.assign(swiper.zoom, {
      enable,
      disable,
      in: zoomIn,
      out: zoomOut,
      toggle: zoomToggle,
    });
  }

  /* eslint no-bitwise: ["error", { "allow": [">>"] }] */
  function Controller(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      controller: {
        control: undefined,
        inverse: false,
        by: "slide", // or 'container'
      },
    });

    swiper.controller = {
      control: undefined,
    };
    function LinearSpline(x, y) {
      const binarySearch = (function search() {
        let maxIndex;
        let minIndex;
        let guess;
        return (array, val) => {
          minIndex = -1;
          maxIndex = array.length;
          while (maxIndex - minIndex > 1) {
            guess = (maxIndex + minIndex) >> 1;
            if (array[guess] <= val) {
              minIndex = guess;
            } else {
              maxIndex = guess;
            }
          }
          return maxIndex;
        };
      })();
      this.x = x;
      this.y = y;
      this.lastIndex = x.length - 1;
      // Given an x value (x2), return the expected y2 value:
      // (x1,y1) is the known point before given value,
      // (x3,y3) is the known point after given value.
      let i1;
      let i3;
      this.interpolate = function interpolate(x2) {
        if (!x2) return 0;

        // Get the indexes of x1 and x3 (the array indexes before and after given x2):
        i3 = binarySearch(this.x, x2);
        i1 = i3 - 1;

        // We have our indexes i1 & i3, so we can calculate already:
        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
        return (
          ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) /
            (this.x[i3] - this.x[i1]) +
          this.y[i1]
        );
      };
      return this;
    }
    function getInterpolateFunction(c) {
      swiper.controller.spline = swiper.params.loop
        ? new LinearSpline(swiper.slidesGrid, c.slidesGrid)
        : new LinearSpline(swiper.snapGrid, c.snapGrid);
    }
    function setTranslate(_t, byController) {
      const controlled = swiper.controller.control;
      let multiplier;
      let controlledTranslate;
      const Swiper = swiper.constructor;
      function setControlledTranslate(c) {
        if (c.destroyed) return;

        // this will create an Interpolate function based on the snapGrids
        // x is the Grid of the scrolled scroller and y will be the controlled scroller
        // it makes sense to create this only once and recall it for the interpolation
        // the function does a lot of value caching for performance
        const translate = swiper.rtlTranslate
          ? -swiper.translate
          : swiper.translate;
        if (swiper.params.controller.by === "slide") {
          getInterpolateFunction(c);
          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
          // but it did not work out
          controlledTranslate = -swiper.controller.spline.interpolate(
            -translate
          );
        }
        if (
          !controlledTranslate ||
          swiper.params.controller.by === "container"
        ) {
          multiplier =
            (c.maxTranslate() - c.minTranslate()) /
            (swiper.maxTranslate() - swiper.minTranslate());
          if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {
            multiplier = 1;
          }
          controlledTranslate =
            (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
        }
        if (swiper.params.controller.inverse) {
          controlledTranslate = c.maxTranslate() - controlledTranslate;
        }
        c.updateProgress(controlledTranslate);
        c.setTranslate(controlledTranslate, swiper);
        c.updateActiveIndex();
        c.updateSlidesClasses();
      }
      if (Array.isArray(controlled)) {
        for (let i = 0; i < controlled.length; i += 1) {
          if (
            controlled[i] !== byController &&
            controlled[i] instanceof Swiper
          ) {
            setControlledTranslate(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTranslate(controlled);
      }
    }
    function setTransition(duration, byController) {
      const Swiper = swiper.constructor;
      const controlled = swiper.controller.control;
      let i;
      function setControlledTransition(c) {
        if (c.destroyed) return;
        c.setTransition(duration, swiper);
        if (duration !== 0) {
          c.transitionStart();
          if (c.params.autoHeight) {
            nextTick(() => {
              c.updateAutoHeight();
            });
          }
          elementTransitionEnd(c.wrapperEl, () => {
            if (!controlled) return;
            c.transitionEnd();
          });
        }
      }
      if (Array.isArray(controlled)) {
        for (i = 0; i < controlled.length; i += 1) {
          if (
            controlled[i] !== byController &&
            controlled[i] instanceof Swiper
          ) {
            setControlledTransition(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTransition(controlled);
      }
    }
    function removeSpline() {
      if (!swiper.controller.control) return;
      if (swiper.controller.spline) {
        swiper.controller.spline = undefined;
        delete swiper.controller.spline;
      }
    }
    on("beforeInit", () => {
      if (
        typeof window !== "undefined" &&
        // eslint-disable-line
        (typeof swiper.params.controller.control === "string" ||
          swiper.params.controller.control instanceof HTMLElement)
      ) {
        const controlElement = document.querySelector(
          swiper.params.controller.control
        );
        if (controlElement && controlElement.swiper) {
          swiper.controller.control = controlElement.swiper;
        } else if (controlElement) {
          const onControllerSwiper = (e) => {
            swiper.controller.control = e.detail[0];
            swiper.update();
            controlElement.removeEventListener("init", onControllerSwiper);
          };
          controlElement.addEventListener("init", onControllerSwiper);
        }
        return;
      }
      swiper.controller.control = swiper.params.controller.control;
    });
    on("update", () => {
      removeSpline();
    });
    on("resize", () => {
      removeSpline();
    });
    on("observerUpdate", () => {
      removeSpline();
    });
    on("setTranslate", (_s, translate, byController) => {
      if (!swiper.controller.control || swiper.controller.control.destroyed)
        return;
      swiper.controller.setTranslate(translate, byController);
    });
    on("setTransition", (_s, duration, byController) => {
      if (!swiper.controller.control || swiper.controller.control.destroyed)
        return;
      swiper.controller.setTransition(duration, byController);
    });
    Object.assign(swiper.controller, {
      setTranslate,
      setTransition,
    });
  }

  function A11y(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      a11y: {
        enabled: true,
        notificationClass: "swiper-notification",
        prevSlideMessage: "Previous slide",
        nextSlideMessage: "Next slide",
        firstSlideMessage: "This is the first slide",
        lastSlideMessage: "This is the last slide",
        paginationBulletMessage: "Go to slide {{index}}",
        slideLabelMessage: "{{index}} / {{slidesLength}}",
        containerMessage: null,
        containerRoleDescriptionMessage: null,
        itemRoleDescriptionMessage: null,
        slideRole: "group",
        id: null,
      },
    });
    swiper.a11y = {
      clicked: false,
    };
    let liveRegion = null;
    function notify(message) {
      const notification = liveRegion;
      if (notification.length === 0) return;
      notification.innerHTML = "";
      notification.innerHTML = message;
    }
    const makeElementsArray = (el) =>
      (Array.isArray(el) ? el : [el]).filter((e) => !!e);
    function getRandomNumber(size) {
      if (size === void 0) {
        size = 16;
      }
      const randomChar = () => Math.round(16 * Math.random()).toString(16);
      return "x".repeat(size).replace(/x/g, randomChar);
    }
    function makeElFocusable(el) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("tabIndex", "0");
      });
    }
    function makeElNotFocusable(el) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("tabIndex", "-1");
      });
    }
    function addElRole(el, role) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("role", role);
      });
    }
    function addElRoleDescription(el, description) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-roledescription", description);
      });
    }
    function addElControls(el, controls) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-controls", controls);
      });
    }
    function addElLabel(el, label) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-label", label);
      });
    }
    function addElId(el, id) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("id", id);
      });
    }
    function addElLive(el, live) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-live", live);
      });
    }
    function disableEl(el) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-disabled", true);
      });
    }
    function enableEl(el) {
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.setAttribute("aria-disabled", false);
      });
    }
    function onEnterOrSpaceKey(e) {
      if (e.keyCode !== 13 && e.keyCode !== 32) return;
      const params = swiper.params.a11y;
      const targetEl = e.target;
      if (
        swiper.pagination &&
        swiper.pagination.el &&
        (targetEl === swiper.pagination.el ||
          swiper.pagination.el.contains(e.target))
      ) {
        if (
          !e.target.matches(
            classesToSelector(swiper.params.pagination.bulletClass)
          )
        )
          return;
      }
      if (
        swiper.navigation &&
        swiper.navigation.nextEl &&
        targetEl === swiper.navigation.nextEl
      ) {
        if (!(swiper.isEnd && !swiper.params.loop)) {
          swiper.slideNext();
        }
        if (swiper.isEnd) {
          notify(params.lastSlideMessage);
        } else {
          notify(params.nextSlideMessage);
        }
      }
      if (
        swiper.navigation &&
        swiper.navigation.prevEl &&
        targetEl === swiper.navigation.prevEl
      ) {
        if (!(swiper.isBeginning && !swiper.params.loop)) {
          swiper.slidePrev();
        }
        if (swiper.isBeginning) {
          notify(params.firstSlideMessage);
        } else {
          notify(params.prevSlideMessage);
        }
      }
      if (
        swiper.pagination &&
        targetEl.matches(
          classesToSelector(swiper.params.pagination.bulletClass)
        )
      ) {
        targetEl.click();
      }
    }
    function updateNavigation() {
      if (swiper.params.loop || swiper.params.rewind || !swiper.navigation)
        return;
      const { nextEl, prevEl } = swiper.navigation;
      if (prevEl) {
        if (swiper.isBeginning) {
          disableEl(prevEl);
          makeElNotFocusable(prevEl);
        } else {
          enableEl(prevEl);
          makeElFocusable(prevEl);
        }
      }
      if (nextEl) {
        if (swiper.isEnd) {
          disableEl(nextEl);
          makeElNotFocusable(nextEl);
        } else {
          enableEl(nextEl);
          makeElFocusable(nextEl);
        }
      }
    }
    function hasPagination() {
      return (
        swiper.pagination &&
        swiper.pagination.bullets &&
        swiper.pagination.bullets.length
      );
    }
    function hasClickablePagination() {
      return hasPagination() && swiper.params.pagination.clickable;
    }
    function updatePagination() {
      const params = swiper.params.a11y;
      if (!hasPagination()) return;
      swiper.pagination.bullets.forEach((bulletEl) => {
        if (swiper.params.pagination.clickable) {
          makeElFocusable(bulletEl);
          if (!swiper.params.pagination.renderBullet) {
            addElRole(bulletEl, "button");
            addElLabel(
              bulletEl,
              params.paginationBulletMessage.replace(
                /\{\{index\}\}/,
                elementIndex(bulletEl) + 1
              )
            );
          }
        }
        if (
          bulletEl.matches(
            classesToSelector(swiper.params.pagination.bulletActiveClass)
          )
        ) {
          bulletEl.setAttribute("aria-current", "true");
        } else {
          bulletEl.removeAttribute("aria-current");
        }
      });
    }
    const initNavEl = (el, wrapperId, message) => {
      makeElFocusable(el);
      if (el.tagName !== "BUTTON") {
        addElRole(el, "button");
        el.addEventListener("keydown", onEnterOrSpaceKey);
      }
      addElLabel(el, message);
      addElControls(el, wrapperId);
    };
    const handlePointerDown = () => {
      swiper.a11y.clicked = true;
    };
    const handlePointerUp = () => {
      requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          if (!swiper.destroyed) {
            swiper.a11y.clicked = false;
          }
        });
      });
    };
    const handleFocus = (e) => {
      if (swiper.a11y.clicked) return;
      const slideEl = e.target.closest(
        `.${swiper.params.slideClass}, swiper-slide`
      );
      if (!slideEl || !swiper.slides.includes(slideEl)) return;
      const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;
      const isVisible =
        swiper.params.watchSlidesProgress &&
        swiper.visibleSlides &&
        swiper.visibleSlides.includes(slideEl);
      if (isActive || isVisible) return;
      if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;
      if (swiper.isHorizontal()) {
        swiper.el.scrollLeft = 0;
      } else {
        swiper.el.scrollTop = 0;
      }
      swiper.slideTo(swiper.slides.indexOf(slideEl), 0);
    };
    const initSlides = () => {
      const params = swiper.params.a11y;
      if (params.itemRoleDescriptionMessage) {
        addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);
      }
      if (params.slideRole) {
        addElRole(swiper.slides, params.slideRole);
      }
      const slidesLength = swiper.slides.length;
      if (params.slideLabelMessage) {
        swiper.slides.forEach((slideEl, index) => {
          const slideIndex = swiper.params.loop
            ? parseInt(slideEl.getAttribute("data-swiper-slide-index"), 10)
            : index;
          const ariaLabelMessage = params.slideLabelMessage
            .replace(/\{\{index\}\}/, slideIndex + 1)
            .replace(/\{\{slidesLength\}\}/, slidesLength);
          addElLabel(slideEl, ariaLabelMessage);
        });
      }
    };
    const init = () => {
      const params = swiper.params.a11y;
      swiper.el.append(liveRegion);

      // Container
      const containerEl = swiper.el;
      if (params.containerRoleDescriptionMessage) {
        addElRoleDescription(
          containerEl,
          params.containerRoleDescriptionMessage
        );
      }
      if (params.containerMessage) {
        addElLabel(containerEl, params.containerMessage);
      }

      // Wrapper
      const wrapperEl = swiper.wrapperEl;
      const wrapperId =
        params.id ||
        wrapperEl.getAttribute("id") ||
        `swiper-wrapper-${getRandomNumber(16)}`;
      const live =
        swiper.params.autoplay && swiper.params.autoplay.enabled
          ? "off"
          : "polite";
      addElId(wrapperEl, wrapperId);
      addElLive(wrapperEl, live);

      // Slide
      initSlides();

      // Navigation
      let { nextEl, prevEl } = swiper.navigation ? swiper.navigation : {};
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      if (nextEl) {
        nextEl.forEach((el) =>
          initNavEl(el, wrapperId, params.nextSlideMessage)
        );
      }
      if (prevEl) {
        prevEl.forEach((el) =>
          initNavEl(el, wrapperId, params.prevSlideMessage)
        );
      }

      // Pagination
      if (hasClickablePagination()) {
        const paginationEl = makeElementsArray(swiper.pagination.el);
        paginationEl.forEach((el) => {
          el.addEventListener("keydown", onEnterOrSpaceKey);
        });
      }

      // Tab focus
      swiper.el.addEventListener("focus", handleFocus, true);
      swiper.el.addEventListener("pointerdown", handlePointerDown, true);
      swiper.el.addEventListener("pointerup", handlePointerUp, true);
    };
    function destroy() {
      if (liveRegion) liveRegion.remove();
      let { nextEl, prevEl } = swiper.navigation ? swiper.navigation : {};
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      if (nextEl) {
        nextEl.forEach((el) =>
          el.removeEventListener("keydown", onEnterOrSpaceKey)
        );
      }
      if (prevEl) {
        prevEl.forEach((el) =>
          el.removeEventListener("keydown", onEnterOrSpaceKey)
        );
      }

      // Pagination
      if (hasClickablePagination()) {
        const paginationEl = makeElementsArray(swiper.pagination.el);
        paginationEl.forEach((el) => {
          el.removeEventListener("keydown", onEnterOrSpaceKey);
        });
      }

      // Tab focus
      swiper.el.removeEventListener("focus", handleFocus, true);
      swiper.el.removeEventListener("pointerdown", handlePointerDown, true);
      swiper.el.removeEventListener("pointerup", handlePointerUp, true);
    }
    on("beforeInit", () => {
      liveRegion = createElement("span", swiper.params.a11y.notificationClass);
      liveRegion.setAttribute("aria-live", "assertive");
      liveRegion.setAttribute("aria-atomic", "true");
    });
    on("afterInit", () => {
      if (!swiper.params.a11y.enabled) return;
      init();
    });
    on("slidesLengthChange snapGridLengthChange slidesGridLengthChange", () => {
      if (!swiper.params.a11y.enabled) return;
      initSlides();
    });
    on("fromEdge toEdge afterInit lock unlock", () => {
      if (!swiper.params.a11y.enabled) return;
      updateNavigation();
    });
    on("paginationUpdate", () => {
      if (!swiper.params.a11y.enabled) return;
      updatePagination();
    });
    on("destroy", () => {
      if (!swiper.params.a11y.enabled) return;
      destroy();
    });
  }

  function History(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      history: {
        enabled: false,
        root: "",
        replaceState: false,
        key: "slides",
        keepQuery: false,
      },
    });
    let initialized = false;
    let paths = {};
    const slugify = (text) => {
      return text
        .toString()
        .replace(/\s+/g, "-")
        .replace(/[^\w-]+/g, "")
        .replace(/--+/g, "-")
        .replace(/^-+/, "")
        .replace(/-+$/, "");
    };
    const getPathValues = (urlOverride) => {
      const window = getWindow();
      let location;
      if (urlOverride) {
        location = new URL(urlOverride);
      } else {
        location = window.location;
      }
      const pathArray = location.pathname
        .slice(1)
        .split("/")
        .filter((part) => part !== "");
      const total = pathArray.length;
      const key = pathArray[total - 2];
      const value = pathArray[total - 1];
      return {
        key,
        value,
      };
    };
    const setHistory = (key, index) => {
      const window = getWindow();
      if (!initialized || !swiper.params.history.enabled) return;
      let location;
      if (swiper.params.url) {
        location = new URL(swiper.params.url);
      } else {
        location = window.location;
      }
      const slide = swiper.slides[index];
      let value = slugify(slide.getAttribute("data-history"));
      if (swiper.params.history.root.length > 0) {
        let root = swiper.params.history.root;
        if (root[root.length - 1] === "/")
          root = root.slice(0, root.length - 1);
        value = `${root}/${key ? `${key}/` : ""}${value}`;
      } else if (!location.pathname.includes(key)) {
        value = `${key ? `${key}/` : ""}${value}`;
      }
      if (swiper.params.history.keepQuery) {
        value += location.search;
      }
      const currentState = window.history.state;
      if (currentState && currentState.value === value) {
        return;
      }
      if (swiper.params.history.replaceState) {
        window.history.replaceState(
          {
            value,
          },
          null,
          value
        );
      } else {
        window.history.pushState(
          {
            value,
          },
          null,
          value
        );
      }
    };
    const scrollToSlide = (speed, value, runCallbacks) => {
      if (value) {
        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {
          const slide = swiper.slides[i];
          const slideHistory = slugify(slide.getAttribute("data-history"));
          if (slideHistory === value) {
            const index = swiper.getSlideIndex(slide);
            swiper.slideTo(index, speed, runCallbacks);
          }
        }
      } else {
        swiper.slideTo(0, speed, runCallbacks);
      }
    };
    const setHistoryPopState = () => {
      paths = getPathValues(swiper.params.url);
      scrollToSlide(swiper.params.speed, paths.value, false);
    };
    const init = () => {
      const window = getWindow();
      if (!swiper.params.history) return;
      if (!window.history || !window.history.pushState) {
        swiper.params.history.enabled = false;
        swiper.params.hashNavigation.enabled = true;
        return;
      }
      initialized = true;
      paths = getPathValues(swiper.params.url);
      if (!paths.key && !paths.value) {
        if (!swiper.params.history.replaceState) {
          window.addEventListener("popstate", setHistoryPopState);
        }
        return;
      }
      scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);
      if (!swiper.params.history.replaceState) {
        window.addEventListener("popstate", setHistoryPopState);
      }
    };
    const destroy = () => {
      const window = getWindow();
      if (!swiper.params.history.replaceState) {
        window.removeEventListener("popstate", setHistoryPopState);
      }
    };
    on("init", () => {
      if (swiper.params.history.enabled) {
        init();
      }
    });
    on("destroy", () => {
      if (swiper.params.history.enabled) {
        destroy();
      }
    });
    on("transitionEnd _freeModeNoMomentumRelease", () => {
      if (initialized) {
        setHistory(swiper.params.history.key, swiper.activeIndex);
      }
    });
    on("slideChange", () => {
      if (initialized && swiper.params.cssMode) {
        setHistory(swiper.params.history.key, swiper.activeIndex);
      }
    });
  }

  function HashNavigation(_ref) {
    let { swiper, extendParams, emit, on } = _ref;
    let initialized = false;
    const document = getDocument();
    const window = getWindow();
    extendParams({
      hashNavigation: {
        enabled: false,
        replaceState: false,
        watchState: false,
        getSlideIndex(_s, hash) {
          if (swiper.virtual && swiper.params.virtual.enabled) {
            const slideWithHash = swiper.slides.filter(
              (slideEl) => slideEl.getAttribute("data-hash") === hash
            )[0];
            if (!slideWithHash) return 0;
            const index = parseInt(
              slideWithHash.getAttribute("data-swiper-slide-index"),
              10
            );
            return index;
          }
          return swiper.getSlideIndex(
            elementChildren(
              swiper.slidesEl,
              `.${swiper.params.slideClass}[data-hash="${hash}"], swiper-slide[data-hash="${hash}"]`
            )[0]
          );
        },
      },
    });
    const onHashChange = () => {
      emit("hashChange");
      const newHash = document.location.hash.replace("#", "");
      const activeSlideEl =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.slidesEl.querySelector(
              `[data-swiper-slide-index="${swiper.activeIndex}"]`
            )
          : swiper.slides[swiper.activeIndex];
      const activeSlideHash = activeSlideEl
        ? activeSlideEl.getAttribute("data-hash")
        : "";
      if (newHash !== activeSlideHash) {
        const newIndex = swiper.params.hashNavigation.getSlideIndex(
          swiper,
          newHash
        );
        if (typeof newIndex === "undefined" || Number.isNaN(newIndex)) return;
        swiper.slideTo(newIndex);
      }
    };
    const setHash = () => {
      if (!initialized || !swiper.params.hashNavigation.enabled) return;
      const activeSlideEl =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.slidesEl.querySelector(
              `[data-swiper-slide-index="${swiper.activeIndex}"]`
            )
          : swiper.slides[swiper.activeIndex];
      const activeSlideHash = activeSlideEl
        ? activeSlideEl.getAttribute("data-hash") ||
          activeSlideEl.getAttribute("data-history")
        : "";
      if (
        swiper.params.hashNavigation.replaceState &&
        window.history &&
        window.history.replaceState
      ) {
        window.history.replaceState(null, null, `#${activeSlideHash}` || "");
        emit("hashSet");
      } else {
        document.location.hash = activeSlideHash || "";
        emit("hashSet");
      }
    };
    const init = () => {
      if (
        !swiper.params.hashNavigation.enabled ||
        (swiper.params.history && swiper.params.history.enabled)
      )
        return;
      initialized = true;
      const hash = document.location.hash.replace("#", "");
      if (hash) {
        const speed = 0;
        const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);
        swiper.slideTo(
          index || 0,
          speed,
          swiper.params.runCallbacksOnInit,
          true
        );
      }
      if (swiper.params.hashNavigation.watchState) {
        window.addEventListener("hashchange", onHashChange);
      }
    };
    const destroy = () => {
      if (swiper.params.hashNavigation.watchState) {
        window.removeEventListener("hashchange", onHashChange);
      }
    };
    on("init", () => {
      if (swiper.params.hashNavigation.enabled) {
        init();
      }
    });
    on("destroy", () => {
      if (swiper.params.hashNavigation.enabled) {
        destroy();
      }
    });
    on("transitionEnd _freeModeNoMomentumRelease", () => {
      if (initialized) {
        setHash();
      }
    });
    on("slideChange", () => {
      if (initialized && swiper.params.cssMode) {
        setHash();
      }
    });
  }

  /* eslint no-underscore-dangle: "off" */
  /* eslint no-use-before-define: "off" */
  function Autoplay(_ref) {
    let { swiper, extendParams, on, emit, params } = _ref;
    swiper.autoplay = {
      running: false,
      paused: false,
      timeLeft: 0,
    };
    extendParams({
      autoplay: {
        enabled: false,
        delay: 3000,
        waitForTransition: true,
        disableOnInteraction: false,
        stopOnLastSlide: false,
        reverseDirection: false,
        pauseOnMouseEnter: false,
      },
    });
    let timeout;
    let raf;
    let autoplayDelayTotal =
      params && params.autoplay ? params.autoplay.delay : 3000;
    let autoplayDelayCurrent =
      params && params.autoplay ? params.autoplay.delay : 3000;
    let autoplayTimeLeft;
    let autoplayStartTime = new Date().getTime();
    let wasPaused;
    let isTouched;
    let pausedByTouch;
    let touchStartTimeout;
    let slideChanged;
    let pausedByInteraction;
    let pausedByPointerEnter;
    function onTransitionEnd(e) {
      if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;
      if (e.target !== swiper.wrapperEl) return;
      swiper.wrapperEl.removeEventListener("transitionend", onTransitionEnd);
      if (pausedByPointerEnter) {
        return;
      }
      resume();
    }
    const calcTimeLeft = () => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      if (swiper.autoplay.paused) {
        wasPaused = true;
      } else if (wasPaused) {
        autoplayDelayCurrent = autoplayTimeLeft;
        wasPaused = false;
      }
      const timeLeft = swiper.autoplay.paused
        ? autoplayTimeLeft
        : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();
      swiper.autoplay.timeLeft = timeLeft;
      emit("autoplayTimeLeft", timeLeft, timeLeft / autoplayDelayTotal);
      raf = requestAnimationFrame(() => {
        calcTimeLeft();
      });
    };
    const getSlideDelay = () => {
      let activeSlideEl;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        activeSlideEl = swiper.slides.filter((slideEl) =>
          slideEl.classList.contains("swiper-slide-active")
        )[0];
      } else {
        activeSlideEl = swiper.slides[swiper.activeIndex];
      }
      if (!activeSlideEl) return undefined;
      const currentSlideDelay = parseInt(
        activeSlideEl.getAttribute("data-swiper-autoplay"),
        10
      );
      return currentSlideDelay;
    };
    const run = (delayForce) => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      cancelAnimationFrame(raf);
      calcTimeLeft();
      let delay =
        typeof delayForce === "undefined"
          ? swiper.params.autoplay.delay
          : delayForce;
      autoplayDelayTotal = swiper.params.autoplay.delay;
      autoplayDelayCurrent = swiper.params.autoplay.delay;
      const currentSlideDelay = getSlideDelay();
      if (
        !Number.isNaN(currentSlideDelay) &&
        currentSlideDelay > 0 &&
        typeof delayForce === "undefined"
      ) {
        delay = currentSlideDelay;
        autoplayDelayTotal = currentSlideDelay;
        autoplayDelayCurrent = currentSlideDelay;
      }
      autoplayTimeLeft = delay;
      const speed = swiper.params.speed;
      const proceed = () => {
        if (!swiper || swiper.destroyed) return;
        if (swiper.params.autoplay.reverseDirection) {
          if (
            !swiper.isBeginning ||
            swiper.params.loop ||
            swiper.params.rewind
          ) {
            swiper.slidePrev(speed, true, true);
            emit("autoplay");
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(swiper.slides.length - 1, speed, true, true);
            emit("autoplay");
          }
        } else {
          if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {
            swiper.slideNext(speed, true, true);
            emit("autoplay");
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(0, speed, true, true);
            emit("autoplay");
          }
        }
        if (swiper.params.cssMode) {
          autoplayStartTime = new Date().getTime();
          requestAnimationFrame(() => {
            run();
          });
        }
      };
      if (delay > 0) {
        clearTimeout(timeout);
        timeout = setTimeout(() => {
          proceed();
        }, delay);
      } else {
        requestAnimationFrame(() => {
          proceed();
        });
      }

      // eslint-disable-next-line
      return delay;
    };
    const start = () => {
      autoplayStartTime = new Date().getTime();
      swiper.autoplay.running = true;
      run();
      emit("autoplayStart");
    };
    const stop = () => {
      swiper.autoplay.running = false;
      clearTimeout(timeout);
      cancelAnimationFrame(raf);
      emit("autoplayStop");
    };
    const pause = (internal, reset) => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      clearTimeout(timeout);
      if (!internal) {
        pausedByInteraction = true;
      }
      const proceed = () => {
        emit("autoplayPause");
        if (swiper.params.autoplay.waitForTransition) {
          swiper.wrapperEl.addEventListener("transitionend", onTransitionEnd);
        } else {
          resume();
        }
      };
      swiper.autoplay.paused = true;
      if (reset) {
        if (slideChanged) {
          autoplayTimeLeft = swiper.params.autoplay.delay;
        }
        slideChanged = false;
        proceed();
        return;
      }
      const delay = autoplayTimeLeft || swiper.params.autoplay.delay;
      autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);
      if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;
      if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;
      proceed();
    };
    const resume = () => {
      if (
        (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) ||
        swiper.destroyed ||
        !swiper.autoplay.running
      )
        return;
      autoplayStartTime = new Date().getTime();
      if (pausedByInteraction) {
        pausedByInteraction = false;
        run(autoplayTimeLeft);
      } else {
        run();
      }
      swiper.autoplay.paused = false;
      emit("autoplayResume");
    };
    const onVisibilityChange = () => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      const document = getDocument();
      if (document.visibilityState === "hidden") {
        pausedByInteraction = true;
        pause(true);
      }
      if (document.visibilityState === "visible") {
        resume();
      }
    };
    const onPointerEnter = (e) => {
      if (e.pointerType !== "mouse") return;
      pausedByInteraction = true;
      pausedByPointerEnter = true;
      if (swiper.animating || swiper.autoplay.paused) return;
      pause(true);
    };
    const onPointerLeave = (e) => {
      if (e.pointerType !== "mouse") return;
      pausedByPointerEnter = false;
      if (swiper.autoplay.paused) {
        resume();
      }
    };
    const attachMouseEvents = () => {
      if (swiper.params.autoplay.pauseOnMouseEnter) {
        swiper.el.addEventListener("pointerenter", onPointerEnter);
        swiper.el.addEventListener("pointerleave", onPointerLeave);
      }
    };
    const detachMouseEvents = () => {
      swiper.el.removeEventListener("pointerenter", onPointerEnter);
      swiper.el.removeEventListener("pointerleave", onPointerLeave);
    };
    const attachDocumentEvents = () => {
      const document = getDocument();
      document.addEventListener("visibilitychange", onVisibilityChange);
    };
    const detachDocumentEvents = () => {
      const document = getDocument();
      document.removeEventListener("visibilitychange", onVisibilityChange);
    };
    on("init", () => {
      if (swiper.params.autoplay.enabled) {
        attachMouseEvents();
        attachDocumentEvents();
        start();
      }
    });
    on("destroy", () => {
      detachMouseEvents();
      detachDocumentEvents();
      if (swiper.autoplay.running) {
        stop();
      }
    });
    on("_freeModeStaticRelease", () => {
      if (pausedByTouch || pausedByInteraction) {
        resume();
      }
    });
    on("_freeModeNoMomentumRelease", () => {
      if (!swiper.params.autoplay.disableOnInteraction) {
        pause(true, true);
      } else {
        stop();
      }
    });
    on("beforeTransitionStart", (_s, speed, internal) => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      if (internal || !swiper.params.autoplay.disableOnInteraction) {
        pause(true, true);
      } else {
        stop();
      }
    });
    on("sliderFirstMove", () => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      if (swiper.params.autoplay.disableOnInteraction) {
        stop();
        return;
      }
      isTouched = true;
      pausedByTouch = false;
      pausedByInteraction = false;
      touchStartTimeout = setTimeout(() => {
        pausedByInteraction = true;
        pausedByTouch = true;
        pause(true);
      }, 200);
    });
    on("touchEnd", () => {
      if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;
      clearTimeout(touchStartTimeout);
      clearTimeout(timeout);
      if (swiper.params.autoplay.disableOnInteraction) {
        pausedByTouch = false;
        isTouched = false;
        return;
      }
      if (pausedByTouch && swiper.params.cssMode) resume();
      pausedByTouch = false;
      isTouched = false;
    });
    on("slideChange", () => {
      if (swiper.destroyed || !swiper.autoplay.running) return;
      slideChanged = true;
    });
    Object.assign(swiper.autoplay, {
      start,
      stop,
      pause,
      resume,
    });
  }

  function Thumb(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      thumbs: {
        swiper: null,
        multipleActiveThumbs: true,
        autoScrollOffset: 0,
        slideThumbActiveClass: "swiper-slide-thumb-active",
        thumbsContainerClass: "swiper-thumbs",
      },
    });
    let initialized = false;
    let swiperCreated = false;
    swiper.thumbs = {
      swiper: null,
    };
    function onThumbClick() {
      const thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper || thumbsSwiper.destroyed) return;
      const clickedIndex = thumbsSwiper.clickedIndex;
      const clickedSlide = thumbsSwiper.clickedSlide;
      if (
        clickedSlide &&
        clickedSlide.classList.contains(
          swiper.params.thumbs.slideThumbActiveClass
        )
      )
        return;
      if (typeof clickedIndex === "undefined" || clickedIndex === null) return;
      let slideToIndex;
      if (thumbsSwiper.params.loop) {
        slideToIndex = parseInt(
          thumbsSwiper.clickedSlide.getAttribute("data-swiper-slide-index"),
          10
        );
      } else {
        slideToIndex = clickedIndex;
      }
      if (swiper.params.loop) {
        swiper.slideToLoop(slideToIndex);
      } else {
        swiper.slideTo(slideToIndex);
      }
    }
    function init() {
      const { thumbs: thumbsParams } = swiper.params;
      if (initialized) return false;
      initialized = true;
      const SwiperClass = swiper.constructor;
      if (thumbsParams.swiper instanceof SwiperClass) {
        swiper.thumbs.swiper = thumbsParams.swiper;
        Object.assign(swiper.thumbs.swiper.originalParams, {
          watchSlidesProgress: true,
          slideToClickedSlide: false,
        });
        Object.assign(swiper.thumbs.swiper.params, {
          watchSlidesProgress: true,
          slideToClickedSlide: false,
        });
        swiper.thumbs.swiper.update();
      } else if (isObject(thumbsParams.swiper)) {
        const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);
        Object.assign(thumbsSwiperParams, {
          watchSlidesProgress: true,
          slideToClickedSlide: false,
        });
        swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);
        swiperCreated = true;
      }
      swiper.thumbs.swiper.el.classList.add(
        swiper.params.thumbs.thumbsContainerClass
      );
      swiper.thumbs.swiper.on("tap", onThumbClick);
      return true;
    }
    function update(initial) {
      const thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper || thumbsSwiper.destroyed) return;
      const slidesPerView =
        thumbsSwiper.params.slidesPerView === "auto"
          ? thumbsSwiper.slidesPerViewDynamic()
          : thumbsSwiper.params.slidesPerView;

      // Activate thumbs
      let thumbsToActivate = 1;
      const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;
      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {
        thumbsToActivate = swiper.params.slidesPerView;
      }
      if (!swiper.params.thumbs.multipleActiveThumbs) {
        thumbsToActivate = 1;
      }
      thumbsToActivate = Math.floor(thumbsToActivate);
      thumbsSwiper.slides.forEach((slideEl) =>
        slideEl.classList.remove(thumbActiveClass)
      );
      if (
        thumbsSwiper.params.loop ||
        (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)
      ) {
        for (let i = 0; i < thumbsToActivate; i += 1) {
          elementChildren(
            thumbsSwiper.slidesEl,
            `[data-swiper-slide-index="${swiper.realIndex + i}"]`
          ).forEach((slideEl) => {
            slideEl.classList.add(thumbActiveClass);
          });
        }
      } else {
        for (let i = 0; i < thumbsToActivate; i += 1) {
          if (thumbsSwiper.slides[swiper.realIndex + i]) {
            thumbsSwiper.slides[swiper.realIndex + i].classList.add(
              thumbActiveClass
            );
          }
        }
      }
      const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;
      const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;
      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
        const currentThumbsIndex = thumbsSwiper.activeIndex;
        let newThumbsIndex;
        let direction;
        if (thumbsSwiper.params.loop) {
          const newThumbsSlide = thumbsSwiper.slides.filter(
            (slideEl) =>
              slideEl.getAttribute("data-swiper-slide-index") ===
              `${swiper.realIndex}`
          )[0];
          newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);
          direction =
            swiper.activeIndex > swiper.previousIndex ? "next" : "prev";
        } else {
          newThumbsIndex = swiper.realIndex;
          direction = newThumbsIndex > swiper.previousIndex ? "next" : "prev";
        }
        if (useOffset) {
          newThumbsIndex +=
            direction === "next" ? autoScrollOffset : -1 * autoScrollOffset;
        }
        if (
          thumbsSwiper.visibleSlidesIndexes &&
          thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0
        ) {
          if (thumbsSwiper.params.centeredSlides) {
            if (newThumbsIndex > currentThumbsIndex) {
              newThumbsIndex =
                newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
            } else {
              newThumbsIndex =
                newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
            }
          } else if (
            newThumbsIndex > currentThumbsIndex &&
            thumbsSwiper.params.slidesPerGroup === 1
          );
          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
        }
      }
    }
    on("beforeInit", () => {
      const { thumbs } = swiper.params;
      if (!thumbs || !thumbs.swiper) return;
      if (
        typeof thumbs.swiper === "string" ||
        thumbs.swiper instanceof HTMLElement
      ) {
        const document = getDocument();
        const getThumbsElementAndInit = () => {
          const thumbsElement =
            typeof thumbs.swiper === "string"
              ? document.querySelector(thumbs.swiper)
              : thumbs.swiper;
          if (thumbsElement && thumbsElement.swiper) {
            thumbs.swiper = thumbsElement.swiper;
            init();
            update(true);
          } else if (thumbsElement) {
            const onThumbsSwiper = (e) => {
              thumbs.swiper = e.detail[0];
              thumbsElement.removeEventListener("init", onThumbsSwiper);
              init();
              update(true);
              thumbs.swiper.update();
              swiper.update();
            };
            thumbsElement.addEventListener("init", onThumbsSwiper);
          }
          return thumbsElement;
        };
        const watchForThumbsToAppear = () => {
          if (swiper.destroyed) return;
          const thumbsElement = getThumbsElementAndInit();
          if (!thumbsElement) {
            requestAnimationFrame(watchForThumbsToAppear);
          }
        };
        requestAnimationFrame(watchForThumbsToAppear);
      } else {
        init();
        update(true);
      }
    });
    on("slideChange update resize observerUpdate", () => {
      update();
    });
    on("setTransition", (_s, duration) => {
      const thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper || thumbsSwiper.destroyed) return;
      thumbsSwiper.setTransition(duration);
    });
    on("beforeDestroy", () => {
      const thumbsSwiper = swiper.thumbs.swiper;
      if (!thumbsSwiper || thumbsSwiper.destroyed) return;
      if (swiperCreated) {
        thumbsSwiper.destroy();
      }
    });
    Object.assign(swiper.thumbs, {
      init,
      update,
    });
  }

  function freeMode(_ref) {
    let { swiper, extendParams, emit, once } = _ref;
    extendParams({
      freeMode: {
        enabled: false,
        momentum: true,
        momentumRatio: 1,
        momentumBounce: true,
        momentumBounceRatio: 1,
        momentumVelocityRatio: 1,
        sticky: false,
        minimumVelocity: 0.02,
      },
    });
    function onTouchStart() {
      if (swiper.params.cssMode) return;
      const translate = swiper.getTranslate();
      swiper.setTranslate(translate);
      swiper.setTransition(0);
      swiper.touchEventsData.velocities.length = 0;
      swiper.freeMode.onTouchEnd({
        currentPos: swiper.rtl ? swiper.translate : -swiper.translate,
      });
    }
    function onTouchMove() {
      if (swiper.params.cssMode) return;
      const { touchEventsData: data, touches } = swiper;
      // Velocity
      if (data.velocities.length === 0) {
        data.velocities.push({
          position: touches[swiper.isHorizontal() ? "startX" : "startY"],
          time: data.touchStartTime,
        });
      }
      data.velocities.push({
        position: touches[swiper.isHorizontal() ? "currentX" : "currentY"],
        time: now(),
      });
    }
    function onTouchEnd(_ref2) {
      let { currentPos } = _ref2;
      if (swiper.params.cssMode) return;
      const {
        params,
        wrapperEl,
        rtlTranslate: rtl,
        snapGrid,
        touchEventsData: data,
      } = swiper;
      // Time diff
      const touchEndTime = now();
      const timeDiff = touchEndTime - data.touchStartTime;
      if (currentPos < -swiper.minTranslate()) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      if (currentPos > -swiper.maxTranslate()) {
        if (swiper.slides.length < snapGrid.length) {
          swiper.slideTo(snapGrid.length - 1);
        } else {
          swiper.slideTo(swiper.slides.length - 1);
        }
        return;
      }
      if (params.freeMode.momentum) {
        if (data.velocities.length > 1) {
          const lastMoveEvent = data.velocities.pop();
          const velocityEvent = data.velocities.pop();
          const distance = lastMoveEvent.position - velocityEvent.position;
          const time = lastMoveEvent.time - velocityEvent.time;
          swiper.velocity = distance / time;
          swiper.velocity /= 2;
          if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {
            swiper.velocity = 0;
          }
          // this implies that the user stopped moving a finger then released.
          // There would be no events with distance zero, so the last event is stale.
          if (time > 150 || now() - lastMoveEvent.time > 300) {
            swiper.velocity = 0;
          }
        } else {
          swiper.velocity = 0;
        }
        swiper.velocity *= params.freeMode.momentumVelocityRatio;
        data.velocities.length = 0;
        let momentumDuration = 1000 * params.freeMode.momentumRatio;
        const momentumDistance = swiper.velocity * momentumDuration;
        let newPosition = swiper.translate + momentumDistance;
        if (rtl) newPosition = -newPosition;
        let doBounce = false;
        let afterBouncePosition;
        const bounceAmount =
          Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;
        let needsLoopFix;
        if (newPosition < swiper.maxTranslate()) {
          if (params.freeMode.momentumBounce) {
            if (newPosition + swiper.maxTranslate() < -bounceAmount) {
              newPosition = swiper.maxTranslate() - bounceAmount;
            }
            afterBouncePosition = swiper.maxTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.maxTranslate();
          }
          if (params.loop && params.centeredSlides) needsLoopFix = true;
        } else if (newPosition > swiper.minTranslate()) {
          if (params.freeMode.momentumBounce) {
            if (newPosition - swiper.minTranslate() > bounceAmount) {
              newPosition = swiper.minTranslate() + bounceAmount;
            }
            afterBouncePosition = swiper.minTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.minTranslate();
          }
          if (params.loop && params.centeredSlides) needsLoopFix = true;
        } else if (params.freeMode.sticky) {
          let nextSlide;
          for (let j = 0; j < snapGrid.length; j += 1) {
            if (snapGrid[j] > -newPosition) {
              nextSlide = j;
              break;
            }
          }
          if (
            Math.abs(snapGrid[nextSlide] - newPosition) <
              Math.abs(snapGrid[nextSlide - 1] - newPosition) ||
            swiper.swipeDirection === "next"
          ) {
            newPosition = snapGrid[nextSlide];
          } else {
            newPosition = snapGrid[nextSlide - 1];
          }
          newPosition = -newPosition;
        }
        if (needsLoopFix) {
          once("transitionEnd", () => {
            swiper.loopFix();
          });
        }
        // Fix duration
        if (swiper.velocity !== 0) {
          if (rtl) {
            momentumDuration = Math.abs(
              (-newPosition - swiper.translate) / swiper.velocity
            );
          } else {
            momentumDuration = Math.abs(
              (newPosition - swiper.translate) / swiper.velocity
            );
          }
          if (params.freeMode.sticky) {
            // If freeMode.sticky is active and the user ends a swipe with a slow-velocity
            // event, then durations can be 20+ seconds to slide one (or zero!) slides.
            // It's easy to see this when simulating touch with mouse events. To fix this,
            // limit single-slide swipes to the default slide duration. This also has the
            // nice side effect of matching slide speed if the user stopped moving before
            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.
            // For faster swipes, also apply limits (albeit higher ones).
            const moveDistance = Math.abs(
              (rtl ? -newPosition : newPosition) - swiper.translate
            );
            const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];
            if (moveDistance < currentSlideSize) {
              momentumDuration = params.speed;
            } else if (moveDistance < 2 * currentSlideSize) {
              momentumDuration = params.speed * 1.5;
            } else {
              momentumDuration = params.speed * 2.5;
            }
          }
        } else if (params.freeMode.sticky) {
          swiper.slideToClosest();
          return;
        }
        if (params.freeMode.momentumBounce && doBounce) {
          swiper.updateProgress(afterBouncePosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);
          swiper.animating = true;
          elementTransitionEnd(wrapperEl, () => {
            if (!swiper || swiper.destroyed || !data.allowMomentumBounce)
              return;
            emit("momentumBounce");
            swiper.setTransition(params.speed);
            setTimeout(() => {
              swiper.setTranslate(afterBouncePosition);
              elementTransitionEnd(wrapperEl, () => {
                if (!swiper || swiper.destroyed) return;
                swiper.transitionEnd();
              });
            }, 0);
          });
        } else if (swiper.velocity) {
          emit("_freeModeNoMomentumRelease");
          swiper.updateProgress(newPosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);
          if (!swiper.animating) {
            swiper.animating = true;
            elementTransitionEnd(wrapperEl, () => {
              if (!swiper || swiper.destroyed) return;
              swiper.transitionEnd();
            });
          }
        } else {
          swiper.updateProgress(newPosition);
        }
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      } else if (params.freeMode.sticky) {
        swiper.slideToClosest();
        return;
      } else if (params.freeMode) {
        emit("_freeModeNoMomentumRelease");
      }
      if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {
        emit("_freeModeStaticRelease");
        swiper.updateProgress();
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }
    }
    Object.assign(swiper, {
      freeMode: {
        onTouchStart,
        onTouchMove,
        onTouchEnd,
      },
    });
  }

  function Grid(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      grid: {
        rows: 1,
        fill: "column",
      },
    });
    let slidesNumberEvenToRows;
    let slidesPerRow;
    let numFullColumns;
    let wasMultiRow;
    const getSpaceBetween = () => {
      let spaceBetween = swiper.params.spaceBetween;
      if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
        spaceBetween =
          (parseFloat(spaceBetween.replace("%", "")) / 100) * swiper.size;
      } else if (typeof spaceBetween === "string") {
        spaceBetween = parseFloat(spaceBetween);
      }
      return spaceBetween;
    };
    const initSlides = (slides) => {
      const { slidesPerView } = swiper.params;
      const { rows, fill } = swiper.params.grid;
      const slidesLength =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.virtual.slides.length
          : slides.length;
      numFullColumns = Math.floor(slidesLength / rows);
      if (Math.floor(slidesLength / rows) === slidesLength / rows) {
        slidesNumberEvenToRows = slidesLength;
      } else {
        slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;
      }
      if (slidesPerView !== "auto" && fill === "row") {
        slidesNumberEvenToRows = Math.max(
          slidesNumberEvenToRows,
          slidesPerView * rows
        );
      }
      slidesPerRow = slidesNumberEvenToRows / rows;
    };
    const unsetSlides = () => {
      if (swiper.slides) {
        swiper.slides.forEach((slide) => {
          if (slide.swiperSlideGridSet) {
            slide.style.height = "";
            slide.style[swiper.getDirectionLabel("margin-top")] = "";
          }
        });
      }
    };
    const updateSlide = (i, slide, slides) => {
      const { slidesPerGroup } = swiper.params;
      const spaceBetween = getSpaceBetween();
      const { rows, fill } = swiper.params.grid;
      const slidesLength =
        swiper.virtual && swiper.params.virtual.enabled
          ? swiper.virtual.slides.length
          : slides.length;
      // Set slides order
      let newSlideOrderIndex;
      let column;
      let row;
      if (fill === "row" && slidesPerGroup > 1) {
        const groupIndex = Math.floor(i / (slidesPerGroup * rows));
        const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;
        const columnsInGroup =
          groupIndex === 0
            ? slidesPerGroup
            : Math.min(
                Math.ceil(
                  (slidesLength - groupIndex * rows * slidesPerGroup) / rows
                ),
                slidesPerGroup
              );
        row = Math.floor(slideIndexInGroup / columnsInGroup);
        column =
          slideIndexInGroup -
          row * columnsInGroup +
          groupIndex * slidesPerGroup;
        newSlideOrderIndex = column + (row * slidesNumberEvenToRows) / rows;
        slide.style.order = newSlideOrderIndex;
      } else if (fill === "column") {
        column = Math.floor(i / rows);
        row = i - column * rows;
        if (
          column > numFullColumns ||
          (column === numFullColumns && row === rows - 1)
        ) {
          row += 1;
          if (row >= rows) {
            row = 0;
            column += 1;
          }
        }
      } else {
        row = Math.floor(i / slidesPerRow);
        column = i - row * slidesPerRow;
      }
      slide.row = row;
      slide.column = column;
      slide.style.height = `calc((100% - ${
        (rows - 1) * spaceBetween
      }px) / ${rows})`;
      slide.style[swiper.getDirectionLabel("margin-top")] =
        row !== 0 ? spaceBetween && `${spaceBetween}px` : "";
      slide.swiperSlideGridSet = true;
    };
    const updateWrapperSize = (slideSize, snapGrid) => {
      const { centeredSlides, roundLengths } = swiper.params;
      const spaceBetween = getSpaceBetween();
      const { rows } = swiper.params.grid;
      swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;
      swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;
      if (!swiper.params.cssMode) {
        swiper.wrapperEl.style[swiper.getDirectionLabel("width")] = `${
          swiper.virtualSize + spaceBetween
        }px`;
      }
      if (centeredSlides) {
        const newSlidesGrid = [];
        for (let i = 0; i < snapGrid.length; i += 1) {
          let slidesGridItem = snapGrid[i];
          if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);
          if (snapGrid[i] < swiper.virtualSize + snapGrid[0])
            newSlidesGrid.push(slidesGridItem);
        }
        snapGrid.splice(0, snapGrid.length);
        snapGrid.push(...newSlidesGrid);
      }
    };
    const onInit = () => {
      wasMultiRow = swiper.params.grid && swiper.params.grid.rows > 1;
    };
    const onUpdate = () => {
      const { params, el } = swiper;
      const isMultiRow = params.grid && params.grid.rows > 1;
      if (wasMultiRow && !isMultiRow) {
        el.classList.remove(
          `${params.containerModifierClass}grid`,
          `${params.containerModifierClass}grid-column`
        );
        numFullColumns = 1;
        swiper.emitContainerClasses();
      } else if (!wasMultiRow && isMultiRow) {
        el.classList.add(`${params.containerModifierClass}grid`);
        if (params.grid.fill === "column") {
          el.classList.add(`${params.containerModifierClass}grid-column`);
        }
        swiper.emitContainerClasses();
      }
      wasMultiRow = isMultiRow;
    };
    on("init", onInit);
    on("update", onUpdate);
    swiper.grid = {
      initSlides,
      unsetSlides,
      updateSlide,
      updateWrapperSize,
    };
  }

  function appendSlide(slides) {
    const swiper = this;
    const { params, slidesEl } = swiper;
    if (params.loop) {
      swiper.loopDestroy();
    }
    const appendElement = (slideEl) => {
      if (typeof slideEl === "string") {
        const tempDOM = document.createElement("div");
        tempDOM.innerHTML = slideEl;
        slidesEl.append(tempDOM.children[0]);
        tempDOM.innerHTML = "";
      } else {
        slidesEl.append(slideEl);
      }
    };
    if (typeof slides === "object" && "length" in slides) {
      for (let i = 0; i < slides.length; i += 1) {
        if (slides[i]) appendElement(slides[i]);
      }
    } else {
      appendElement(slides);
    }
    swiper.recalcSlides();
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!params.observer || swiper.isElement) {
      swiper.update();
    }
  }

  function prependSlide(slides) {
    const swiper = this;
    const { params, activeIndex, slidesEl } = swiper;
    if (params.loop) {
      swiper.loopDestroy();
    }
    let newActiveIndex = activeIndex + 1;
    const prependElement = (slideEl) => {
      if (typeof slideEl === "string") {
        const tempDOM = document.createElement("div");
        tempDOM.innerHTML = slideEl;
        slidesEl.prepend(tempDOM.children[0]);
        tempDOM.innerHTML = "";
      } else {
        slidesEl.prepend(slideEl);
      }
    };
    if (typeof slides === "object" && "length" in slides) {
      for (let i = 0; i < slides.length; i += 1) {
        if (slides[i]) prependElement(slides[i]);
      }
      newActiveIndex = activeIndex + slides.length;
    } else {
      prependElement(slides);
    }
    swiper.recalcSlides();
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!params.observer || swiper.isElement) {
      swiper.update();
    }
    swiper.slideTo(newActiveIndex, 0, false);
  }

  function addSlide(index, slides) {
    const swiper = this;
    const { params, activeIndex, slidesEl } = swiper;
    let activeIndexBuffer = activeIndex;
    if (params.loop) {
      activeIndexBuffer -= swiper.loopedSlides;
      swiper.loopDestroy();
      swiper.recalcSlides();
    }
    const baseLength = swiper.slides.length;
    if (index <= 0) {
      swiper.prependSlide(slides);
      return;
    }
    if (index >= baseLength) {
      swiper.appendSlide(slides);
      return;
    }
    let newActiveIndex =
      activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
    const slidesBuffer = [];
    for (let i = baseLength - 1; i >= index; i -= 1) {
      const currentSlide = swiper.slides[i];
      currentSlide.remove();
      slidesBuffer.unshift(currentSlide);
    }
    if (typeof slides === "object" && "length" in slides) {
      for (let i = 0; i < slides.length; i += 1) {
        if (slides[i]) slidesEl.append(slides[i]);
      }
      newActiveIndex =
        activeIndexBuffer > index
          ? activeIndexBuffer + slides.length
          : activeIndexBuffer;
    } else {
      slidesEl.append(slides);
    }
    for (let i = 0; i < slidesBuffer.length; i += 1) {
      slidesEl.append(slidesBuffer[i]);
    }
    swiper.recalcSlides();
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!params.observer || swiper.isElement) {
      swiper.update();
    }
    if (params.loop) {
      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    } else {
      swiper.slideTo(newActiveIndex, 0, false);
    }
  }

  function removeSlide(slidesIndexes) {
    const swiper = this;
    const { params, activeIndex } = swiper;
    let activeIndexBuffer = activeIndex;
    if (params.loop) {
      activeIndexBuffer -= swiper.loopedSlides;
      swiper.loopDestroy();
    }
    let newActiveIndex = activeIndexBuffer;
    let indexToRemove;
    if (typeof slidesIndexes === "object" && "length" in slidesIndexes) {
      for (let i = 0; i < slidesIndexes.length; i += 1) {
        indexToRemove = slidesIndexes[i];
        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();
        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
      }
      newActiveIndex = Math.max(newActiveIndex, 0);
    } else {
      indexToRemove = slidesIndexes;
      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();
      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
      newActiveIndex = Math.max(newActiveIndex, 0);
    }
    swiper.recalcSlides();
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!params.observer || swiper.isElement) {
      swiper.update();
    }
    if (params.loop) {
      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    } else {
      swiper.slideTo(newActiveIndex, 0, false);
    }
  }

  function removeAllSlides() {
    const swiper = this;
    const slidesIndexes = [];
    for (let i = 0; i < swiper.slides.length; i += 1) {
      slidesIndexes.push(i);
    }
    swiper.removeSlide(slidesIndexes);
  }

  function Manipulation(_ref) {
    let { swiper } = _ref;
    Object.assign(swiper, {
      appendSlide: appendSlide.bind(swiper),
      prependSlide: prependSlide.bind(swiper),
      addSlide: addSlide.bind(swiper),
      removeSlide: removeSlide.bind(swiper),
      removeAllSlides: removeAllSlides.bind(swiper),
    });
  }

  function effectInit(params) {
    const {
      effect,
      swiper,
      on,
      setTranslate,
      setTransition,
      overwriteParams,
      perspective,
      recreateShadows,
      getEffectParams,
    } = params;
    on("beforeInit", () => {
      if (swiper.params.effect !== effect) return;
      swiper.classNames.push(
        `${swiper.params.containerModifierClass}${effect}`
      );
      if (perspective && perspective()) {
        swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);
      }
      const overwriteParamsResult = overwriteParams ? overwriteParams() : {};
      Object.assign(swiper.params, overwriteParamsResult);
      Object.assign(swiper.originalParams, overwriteParamsResult);
    });
    on("setTranslate", () => {
      if (swiper.params.effect !== effect) return;
      setTranslate();
    });
    on("setTransition", (_s, duration) => {
      if (swiper.params.effect !== effect) return;
      setTransition(duration);
    });
    on("transitionEnd", () => {
      if (swiper.params.effect !== effect) return;
      if (recreateShadows) {
        if (!getEffectParams || !getEffectParams().slideShadows) return;
        // remove shadows
        swiper.slides.forEach((slideEl) => {
          slideEl
            .querySelectorAll(
              ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
            )
            .forEach((shadowEl) => shadowEl.remove());
        });
        // create new one
        recreateShadows();
      }
    });
    let requireUpdateOnVirtual;
    on("virtualUpdate", () => {
      if (swiper.params.effect !== effect) return;
      if (!swiper.slides.length) {
        requireUpdateOnVirtual = true;
      }
      requestAnimationFrame(() => {
        if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {
          setTranslate();
          requireUpdateOnVirtual = false;
        }
      });
    });
  }

  function effectTarget(effectParams, slideEl) {
    const transformEl = getSlideTransformEl(slideEl);
    if (transformEl !== slideEl) {
      transformEl.style.backfaceVisibility = "hidden";
      transformEl.style["-webkit-backface-visibility"] = "hidden";
    }
    return transformEl;
  }

  function effectVirtualTransitionEnd(_ref) {
    let { swiper, duration, transformElements, allSlides } = _ref;
    const { activeIndex } = swiper;
    const getSlide = (el) => {
      if (!el.parentElement) {
        // assume shadow root
        const slide = swiper.slides.filter(
          (slideEl) =>
            slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode
        )[0];
        return slide;
      }
      return el.parentElement;
    };
    if (swiper.params.virtualTranslate && duration !== 0) {
      let eventTriggered = false;
      let transitionEndTarget;
      if (allSlides) {
        transitionEndTarget = transformElements;
      } else {
        transitionEndTarget = transformElements.filter((transformEl) => {
          const el = transformEl.classList.contains("swiper-slide-transform")
            ? getSlide(transformEl)
            : transformEl;
          return swiper.getSlideIndex(el) === activeIndex;
        });
      }
      transitionEndTarget.forEach((el) => {
        elementTransitionEnd(el, () => {
          if (eventTriggered) return;
          if (!swiper || swiper.destroyed) return;
          eventTriggered = true;
          swiper.animating = false;
          const evt = new window.CustomEvent("transitionend", {
            bubbles: true,
            cancelable: true,
          });
          swiper.wrapperEl.dispatchEvent(evt);
        });
      });
    }
  }

  function EffectFade(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      fadeEffect: {
        crossFade: false,
      },
    });
    const setTranslate = () => {
      const { slides } = swiper;
      const params = swiper.params.fadeEffect;
      for (let i = 0; i < slides.length; i += 1) {
        const slideEl = swiper.slides[i];
        const offset = slideEl.swiperSlideOffset;
        let tx = -offset;
        if (!swiper.params.virtualTranslate) tx -= swiper.translate;
        let ty = 0;
        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
        }
        const slideOpacity = swiper.params.fadeEffect.crossFade
          ? Math.max(1 - Math.abs(slideEl.progress), 0)
          : 1 + Math.min(Math.max(slideEl.progress, -1), 0);
        const targetEl = effectTarget(params, slideEl);
        targetEl.style.opacity = slideOpacity;
        targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;
      }
    };
    const setTransition = (duration) => {
      const transformElements = swiper.slides.map((slideEl) =>
        getSlideTransformEl(slideEl)
      );
      transformElements.forEach((el) => {
        el.style.transitionDuration = `${duration}ms`;
      });
      effectVirtualTransitionEnd({
        swiper,
        duration,
        transformElements,
        allSlides: true,
      });
    };
    effectInit({
      effect: "fade",
      swiper,
      on,
      setTranslate,
      setTransition,
      overwriteParams: () => ({
        slidesPerView: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        spaceBetween: 0,
        virtualTranslate: !swiper.params.cssMode,
      }),
    });
  }

  function EffectCube(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      cubeEffect: {
        slideShadows: true,
        shadow: true,
        shadowOffset: 20,
        shadowScale: 0.94,
      },
    });
    const createSlideShadows = (slideEl, progress, isHorizontal) => {
      let shadowBefore = isHorizontal
        ? slideEl.querySelector(".swiper-slide-shadow-left")
        : slideEl.querySelector(".swiper-slide-shadow-top");
      let shadowAfter = isHorizontal
        ? slideEl.querySelector(".swiper-slide-shadow-right")
        : slideEl.querySelector(".swiper-slide-shadow-bottom");
      if (!shadowBefore) {
        shadowBefore = createElement(
          "div",
          `swiper-slide-shadow-cube swiper-slide-shadow-${
            isHorizontal ? "left" : "top"
          }`.split(" ")
        );
        slideEl.append(shadowBefore);
      }
      if (!shadowAfter) {
        shadowAfter = createElement(
          "div",
          `swiper-slide-shadow-cube swiper-slide-shadow-${
            isHorizontal ? "right" : "bottom"
          }`.split(" ")
        );
        slideEl.append(shadowAfter);
      }
      if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);
      if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);
    };
    const recreateShadows = () => {
      // create new ones
      const isHorizontal = swiper.isHorizontal();
      swiper.slides.forEach((slideEl) => {
        const progress = Math.max(Math.min(slideEl.progress, 1), -1);
        createSlideShadows(slideEl, progress, isHorizontal);
      });
    };
    const setTranslate = () => {
      const {
        el,
        wrapperEl,
        slides,
        width: swiperWidth,
        height: swiperHeight,
        rtlTranslate: rtl,
        size: swiperSize,
        browser,
      } = swiper;
      const params = swiper.params.cubeEffect;
      const isHorizontal = swiper.isHorizontal();
      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
      let wrapperRotate = 0;
      let cubeShadowEl;
      if (params.shadow) {
        if (isHorizontal) {
          cubeShadowEl = swiper.wrapperEl.querySelector(".swiper-cube-shadow");
          if (!cubeShadowEl) {
            cubeShadowEl = createElement("div", "swiper-cube-shadow");
            swiper.wrapperEl.append(cubeShadowEl);
          }
          cubeShadowEl.style.height = `${swiperWidth}px`;
        } else {
          cubeShadowEl = el.querySelector(".swiper-cube-shadow");
          if (!cubeShadowEl) {
            cubeShadowEl = createElement("div", "swiper-cube-shadow");
            el.append(cubeShadowEl);
          }
        }
      }
      for (let i = 0; i < slides.length; i += 1) {
        const slideEl = slides[i];
        let slideIndex = i;
        if (isVirtual) {
          slideIndex = parseInt(
            slideEl.getAttribute("data-swiper-slide-index"),
            10
          );
        }
        let slideAngle = slideIndex * 90;
        let round = Math.floor(slideAngle / 360);
        if (rtl) {
          slideAngle = -slideAngle;
          round = Math.floor(-slideAngle / 360);
        }
        const progress = Math.max(Math.min(slideEl.progress, 1), -1);
        let tx = 0;
        let ty = 0;
        let tz = 0;
        if (slideIndex % 4 === 0) {
          tx = -round * 4 * swiperSize;
          tz = 0;
        } else if ((slideIndex - 1) % 4 === 0) {
          tx = 0;
          tz = -round * 4 * swiperSize;
        } else if ((slideIndex - 2) % 4 === 0) {
          tx = swiperSize + round * 4 * swiperSize;
          tz = swiperSize;
        } else if ((slideIndex - 3) % 4 === 0) {
          tx = -swiperSize;
          tz = 3 * swiperSize + swiperSize * 4 * round;
        }
        if (rtl) {
          tx = -tx;
        }
        if (!isHorizontal) {
          ty = tx;
          tx = 0;
        }
        const transform = `rotateX(${
          isHorizontal ? 0 : -slideAngle
        }deg) rotateY(${
          isHorizontal ? slideAngle : 0
        }deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;
        if (progress <= 1 && progress > -1) {
          wrapperRotate = slideIndex * 90 + progress * 90;
          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;
          if (
            swiper.browser &&
            swiper.browser.isSafari &&
            (Math.abs(wrapperRotate) / 90) % 2 === 1
          ) {
            wrapperRotate += 0.001;
          }
        }
        slideEl.style.transform = transform;
        if (params.slideShadows) {
          createSlideShadows(slideEl, progress, isHorizontal);
        }
      }
      wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;
      wrapperEl.style["-webkit-transform-origin"] = `50% 50% -${
        swiperSize / 2
      }px`;
      if (params.shadow) {
        if (isHorizontal) {
          cubeShadowEl.style.transform = `translate3d(0px, ${
            swiperWidth / 2 + params.shadowOffset
          }px, ${-swiperWidth / 2}px) rotateX(89.99deg) rotateZ(0deg) scale(${
            params.shadowScale
          })`;
        } else {
          const shadowAngle =
            Math.abs(wrapperRotate) -
            Math.floor(Math.abs(wrapperRotate) / 90) * 90;
          const multiplier =
            1.5 -
            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2 +
              Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2);
          const scale1 = params.shadowScale;
          const scale2 = params.shadowScale / multiplier;
          const offset = params.shadowOffset;
          cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${
            swiperHeight / 2 + offset
          }px, ${-swiperHeight / 2 / scale2}px) rotateX(-89.99deg)`;
        }
      }
      const zFactor =
        (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix
          ? -swiperSize / 2
          : 0;
      wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${
        swiper.isHorizontal() ? 0 : wrapperRotate
      }deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;
      wrapperEl.style.setProperty("--swiper-cube-translate-z", `${zFactor}px`);
    };
    const setTransition = (duration) => {
      const { el, slides } = swiper;
      slides.forEach((slideEl) => {
        slideEl.style.transitionDuration = `${duration}ms`;
        slideEl
          .querySelectorAll(
            ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
          )
          .forEach((subEl) => {
            subEl.style.transitionDuration = `${duration}ms`;
          });
      });
      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
        const shadowEl = el.querySelector(".swiper-cube-shadow");
        if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;
      }
    };
    effectInit({
      effect: "cube",
      swiper,
      on,
      setTranslate,
      setTransition,
      recreateShadows,
      getEffectParams: () => swiper.params.cubeEffect,
      perspective: () => true,
      overwriteParams: () => ({
        slidesPerView: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        resistanceRatio: 0,
        spaceBetween: 0,
        centeredSlides: false,
        virtualTranslate: true,
      }),
    });
  }

  function createShadow(suffix, slideEl, side) {
    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ""}${
      suffix ? ` swiper-slide-shadow-${suffix}` : ""
    }`;
    const shadowContainer = getSlideTransformEl(slideEl);
    let shadowEl = shadowContainer.querySelector(
      `.${shadowClass.split(" ").join(".")}`
    );
    if (!shadowEl) {
      shadowEl = createElement("div", shadowClass.split(" "));
      shadowContainer.append(shadowEl);
    }
    return shadowEl;
  }

  function EffectFlip(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      flipEffect: {
        slideShadows: true,
        limitRotation: true,
      },
    });
    const createSlideShadows = (slideEl, progress) => {
      let shadowBefore = swiper.isHorizontal()
        ? slideEl.querySelector(".swiper-slide-shadow-left")
        : slideEl.querySelector(".swiper-slide-shadow-top");
      let shadowAfter = swiper.isHorizontal()
        ? slideEl.querySelector(".swiper-slide-shadow-right")
        : slideEl.querySelector(".swiper-slide-shadow-bottom");
      if (!shadowBefore) {
        shadowBefore = createShadow(
          "flip",
          slideEl,
          swiper.isHorizontal() ? "left" : "top"
        );
      }
      if (!shadowAfter) {
        shadowAfter = createShadow(
          "flip",
          slideEl,
          swiper.isHorizontal() ? "right" : "bottom"
        );
      }
      if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);
      if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);
    };
    const recreateShadows = () => {
      // Set shadows
      swiper.params.flipEffect;
      swiper.slides.forEach((slideEl) => {
        let progress = slideEl.progress;
        if (swiper.params.flipEffect.limitRotation) {
          progress = Math.max(Math.min(slideEl.progress, 1), -1);
        }
        createSlideShadows(slideEl, progress);
      });
    };
    const setTranslate = () => {
      const { slides, rtlTranslate: rtl } = swiper;
      const params = swiper.params.flipEffect;
      for (let i = 0; i < slides.length; i += 1) {
        const slideEl = slides[i];
        let progress = slideEl.progress;
        if (swiper.params.flipEffect.limitRotation) {
          progress = Math.max(Math.min(slideEl.progress, 1), -1);
        }
        const offset = slideEl.swiperSlideOffset;
        const rotate = -180 * progress;
        let rotateY = rotate;
        let rotateX = 0;
        let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;
        let ty = 0;
        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
          rotateX = -rotateY;
          rotateY = 0;
        } else if (rtl) {
          rotateY = -rotateY;
        }
        if (swiper.browser && swiper.browser.isSafari) {
          if ((Math.abs(rotateY) / 90) % 2 === 1) {
            rotateY += 0.001;
          }
          if ((Math.abs(rotateX) / 90) % 2 === 1) {
            rotateX += 0.001;
          }
        }
        slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;
        if (params.slideShadows) {
          createSlideShadows(slideEl, progress);
        }
        const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
        const targetEl = effectTarget(params, slideEl);
        targetEl.style.transform = transform;
      }
    };
    const setTransition = (duration) => {
      const transformElements = swiper.slides.map((slideEl) =>
        getSlideTransformEl(slideEl)
      );
      transformElements.forEach((el) => {
        el.style.transitionDuration = `${duration}ms`;
        el.querySelectorAll(
          ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
        ).forEach((shadowEl) => {
          shadowEl.style.transitionDuration = `${duration}ms`;
        });
      });
      effectVirtualTransitionEnd({
        swiper,
        duration,
        transformElements,
      });
    };
    effectInit({
      effect: "flip",
      swiper,
      on,
      setTranslate,
      setTransition,
      recreateShadows,
      getEffectParams: () => swiper.params.flipEffect,
      perspective: () => true,
      overwriteParams: () => ({
        slidesPerView: 1,
        slidesPerGroup: 1,
        watchSlidesProgress: true,
        spaceBetween: 0,
        virtualTranslate: !swiper.params.cssMode,
      }),
    });
  }

  function EffectCoverflow(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      coverflowEffect: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        scale: 1,
        modifier: 1,
        slideShadows: true,
      },
    });
    const setTranslate = () => {
      const {
        width: swiperWidth,
        height: swiperHeight,
        slides,
        slidesSizesGrid,
      } = swiper;
      const params = swiper.params.coverflowEffect;
      const isHorizontal = swiper.isHorizontal();
      const transform = swiper.translate;
      const center = isHorizontal
        ? -transform + swiperWidth / 2
        : -transform + swiperHeight / 2;
      const rotate = isHorizontal ? params.rotate : -params.rotate;
      const translate = params.depth;
      // Each slide offset from center
      for (let i = 0, length = slides.length; i < length; i += 1) {
        const slideEl = slides[i];
        const slideSize = slidesSizesGrid[i];
        const slideOffset = slideEl.swiperSlideOffset;
        const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;
        const offsetMultiplier =
          typeof params.modifier === "function"
            ? params.modifier(centerOffset)
            : centerOffset * params.modifier;
        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;
        // var rotateZ = 0
        let translateZ = -translate * Math.abs(offsetMultiplier);
        let stretch = params.stretch;
        // Allow percentage to make a relative stretch for responsive sliders
        if (typeof stretch === "string" && stretch.indexOf("%") !== -1) {
          stretch = (parseFloat(params.stretch) / 100) * slideSize;
        }
        let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;
        let translateX = isHorizontal ? stretch * offsetMultiplier : 0;
        let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);

        // Fix for ultra small values
        if (Math.abs(translateX) < 0.001) translateX = 0;
        if (Math.abs(translateY) < 0.001) translateY = 0;
        if (Math.abs(translateZ) < 0.001) translateZ = 0;
        if (Math.abs(rotateY) < 0.001) rotateY = 0;
        if (Math.abs(rotateX) < 0.001) rotateX = 0;
        if (Math.abs(scale) < 0.001) scale = 0;
        if (swiper.browser && swiper.browser.isSafari) {
          if ((Math.abs(rotateY) / 90) % 2 === 1) {
            rotateY += 0.001;
          }
          if ((Math.abs(rotateX) / 90) % 2 === 1) {
            rotateX += 0.001;
          }
        }
        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;
        const targetEl = effectTarget(params, slideEl);
        targetEl.style.transform = slideTransform;
        slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
        if (params.slideShadows) {
          // Set shadows
          let shadowBeforeEl = isHorizontal
            ? slideEl.querySelector(".swiper-slide-shadow-left")
            : slideEl.querySelector(".swiper-slide-shadow-top");
          let shadowAfterEl = isHorizontal
            ? slideEl.querySelector(".swiper-slide-shadow-right")
            : slideEl.querySelector(".swiper-slide-shadow-bottom");
          if (!shadowBeforeEl) {
            shadowBeforeEl = createShadow(
              "coverflow",
              slideEl,
              isHorizontal ? "left" : "top"
            );
          }
          if (!shadowAfterEl) {
            shadowAfterEl = createShadow(
              "coverflow",
              slideEl,
              isHorizontal ? "right" : "bottom"
            );
          }
          if (shadowBeforeEl)
            shadowBeforeEl.style.opacity =
              offsetMultiplier > 0 ? offsetMultiplier : 0;
          if (shadowAfterEl)
            shadowAfterEl.style.opacity =
              -offsetMultiplier > 0 ? -offsetMultiplier : 0;
        }
      }
    };
    const setTransition = (duration) => {
      const transformElements = swiper.slides.map((slideEl) =>
        getSlideTransformEl(slideEl)
      );
      transformElements.forEach((el) => {
        el.style.transitionDuration = `${duration}ms`;
        el.querySelectorAll(
          ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
        ).forEach((shadowEl) => {
          shadowEl.style.transitionDuration = `${duration}ms`;
        });
      });
    };
    effectInit({
      effect: "coverflow",
      swiper,
      on,
      setTranslate,
      setTransition,
      perspective: () => true,
      overwriteParams: () => ({
        watchSlidesProgress: true,
      }),
    });
  }

  function EffectCreative(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      creativeEffect: {
        limitProgress: 1,
        shadowPerProgress: false,
        progressMultiplier: 1,
        perspective: true,
        prev: {
          translate: [0, 0, 0],
          rotate: [0, 0, 0],
          opacity: 1,
          scale: 1,
        },
        next: {
          translate: [0, 0, 0],
          rotate: [0, 0, 0],
          opacity: 1,
          scale: 1,
        },
      },
    });
    const getTranslateValue = (value) => {
      if (typeof value === "string") return value;
      return `${value}px`;
    };
    const setTranslate = () => {
      const { slides, wrapperEl, slidesSizesGrid } = swiper;
      const params = swiper.params.creativeEffect;
      const { progressMultiplier: multiplier } = params;
      const isCenteredSlides = swiper.params.centeredSlides;
      if (isCenteredSlides) {
        const margin =
          slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;
        wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;
      }
      for (let i = 0; i < slides.length; i += 1) {
        const slideEl = slides[i];
        const slideProgress = slideEl.progress;
        const progress = Math.min(
          Math.max(slideEl.progress, -params.limitProgress),
          params.limitProgress
        );
        let originalProgress = progress;
        if (!isCenteredSlides) {
          originalProgress = Math.min(
            Math.max(slideEl.originalProgress, -params.limitProgress),
            params.limitProgress
          );
        }
        const offset = slideEl.swiperSlideOffset;
        const t = [
          swiper.params.cssMode ? -offset - swiper.translate : -offset,
          0,
          0,
        ];
        const r = [0, 0, 0];
        let custom = false;
        if (!swiper.isHorizontal()) {
          t[1] = t[0];
          t[0] = 0;
        }
        let data = {
          translate: [0, 0, 0],
          rotate: [0, 0, 0],
          scale: 1,
          opacity: 1,
        };
        if (progress < 0) {
          data = params.next;
          custom = true;
        } else if (progress > 0) {
          data = params.prev;
          custom = true;
        }
        // set translate
        t.forEach((value, index) => {
          t[index] = `calc(${value}px + (${getTranslateValue(
            data.translate[index]
          )} * ${Math.abs(progress * multiplier)}))`;
        });
        // set rotates
        r.forEach((value, index) => {
          let val = data.rotate[index] * Math.abs(progress * multiplier);
          if (
            swiper.browser &&
            swiper.browser.isSafari &&
            (Math.abs(val) / 90) % 2 === 1
          ) {
            val += 0.001;
          }
          r[index] = val;
        });
        slideEl.style.zIndex =
          -Math.abs(Math.round(slideProgress)) + slides.length;
        const translateString = t.join(", ");
        const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;
        const scaleString =
          originalProgress < 0
            ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})`
            : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;
        const opacityString =
          originalProgress < 0
            ? 1 + (1 - data.opacity) * originalProgress * multiplier
            : 1 - (1 - data.opacity) * originalProgress * multiplier;
        const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;

        // Set shadows
        if ((custom && data.shadow) || !custom) {
          let shadowEl = slideEl.querySelector(".swiper-slide-shadow");
          if (!shadowEl && data.shadow) {
            shadowEl = createShadow("creative", slideEl);
          }
          if (shadowEl) {
            const shadowOpacity = params.shadowPerProgress
              ? progress * (1 / params.limitProgress)
              : progress;
            shadowEl.style.opacity = Math.min(
              Math.max(Math.abs(shadowOpacity), 0),
              1
            );
          }
        }
        const targetEl = effectTarget(params, slideEl);
        targetEl.style.transform = transform;
        targetEl.style.opacity = opacityString;
        if (data.origin) {
          targetEl.style.transformOrigin = data.origin;
        }
      }
    };
    const setTransition = (duration) => {
      const transformElements = swiper.slides.map((slideEl) =>
        getSlideTransformEl(slideEl)
      );
      transformElements.forEach((el) => {
        el.style.transitionDuration = `${duration}ms`;
        el.querySelectorAll(".swiper-slide-shadow").forEach((shadowEl) => {
          shadowEl.style.transitionDuration = `${duration}ms`;
        });
      });
      effectVirtualTransitionEnd({
        swiper,
        duration,
        transformElements,
        allSlides: true,
      });
    };
    effectInit({
      effect: "creative",
      swiper,
      on,
      setTranslate,
      setTransition,
      perspective: () => swiper.params.creativeEffect.perspective,
      overwriteParams: () => ({
        watchSlidesProgress: true,
        virtualTranslate: !swiper.params.cssMode,
      }),
    });
  }

  function EffectCards(_ref) {
    let { swiper, extendParams, on } = _ref;
    extendParams({
      cardsEffect: {
        slideShadows: true,
        rotate: true,
        perSlideRotate: 2,
        perSlideOffset: 8,
      },
    });
    const setTranslate = () => {
      const { slides, activeIndex, rtlTranslate: rtl } = swiper;
      const params = swiper.params.cardsEffect;
      const { startTranslate, isTouched } = swiper.touchEventsData;
      const currentTranslate = rtl ? -swiper.translate : swiper.translate;
      for (let i = 0; i < slides.length; i += 1) {
        const slideEl = slides[i];
        const slideProgress = slideEl.progress;
        const progress = Math.min(Math.max(slideProgress, -4), 4);
        let offset = slideEl.swiperSlideOffset;
        if (swiper.params.centeredSlides && !swiper.params.cssMode) {
          swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;
        }
        if (swiper.params.centeredSlides && swiper.params.cssMode) {
          offset -= slides[0].swiperSlideOffset;
        }
        let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;
        let tY = 0;
        const tZ = -100 * Math.abs(progress);
        let scale = 1;
        let rotate = -params.perSlideRotate * progress;
        let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;
        const slideIndex =
          swiper.virtual && swiper.params.virtual.enabled
            ? swiper.virtual.from + i
            : i;
        const isSwipeToNext =
          (slideIndex === activeIndex || slideIndex === activeIndex - 1) &&
          progress > 0 &&
          progress < 1 &&
          (isTouched || swiper.params.cssMode) &&
          currentTranslate < startTranslate;
        const isSwipeToPrev =
          (slideIndex === activeIndex || slideIndex === activeIndex + 1) &&
          progress < 0 &&
          progress > -1 &&
          (isTouched || swiper.params.cssMode) &&
          currentTranslate > startTranslate;
        if (isSwipeToNext || isSwipeToPrev) {
          const subProgress =
            (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;
          rotate += -28 * progress * subProgress;
          scale += -0.5 * subProgress;
          tXAdd += 96 * subProgress;
          tY = `${-25 * subProgress * Math.abs(progress)}%`;
        }
        if (progress < 0) {
          // next
          tX = `calc(${tX}px ${rtl ? "-" : "+"} (${
            tXAdd * Math.abs(progress)
          }%))`;
        } else if (progress > 0) {
          // prev
          tX = `calc(${tX}px ${rtl ? "-" : "+"} (-${
            tXAdd * Math.abs(progress)
          }%))`;
        } else {
          tX = `${tX}px`;
        }
        if (!swiper.isHorizontal()) {
          const prevY = tY;
          tY = tX;
          tX = prevY;
        }
        const scaleString =
          progress < 0
            ? `${1 + (1 - scale) * progress}`
            : `${1 - (1 - scale) * progress}`;

        /* eslint-disable */
        const transform = `
          translate3d(${tX}, ${tY}, ${tZ}px)
          rotateZ(${params.rotate ? (rtl ? -rotate : rotate) : 0}deg)
          scale(${scaleString})
        `;
        /* eslint-enable */

        if (params.slideShadows) {
          // Set shadows
          let shadowEl = slideEl.querySelector(".swiper-slide-shadow");
          if (!shadowEl) {
            shadowEl = createShadow("cards", slideEl);
          }
          if (shadowEl)
            shadowEl.style.opacity = Math.min(
              Math.max((Math.abs(progress) - 0.5) / 0.5, 0),
              1
            );
        }
        slideEl.style.zIndex =
          -Math.abs(Math.round(slideProgress)) + slides.length;
        const targetEl = effectTarget(params, slideEl);
        targetEl.style.transform = transform;
      }
    };
    const setTransition = (duration) => {
      const transformElements = swiper.slides.map((slideEl) =>
        getSlideTransformEl(slideEl)
      );
      transformElements.forEach((el) => {
        el.style.transitionDuration = `${duration}ms`;
        el.querySelectorAll(".swiper-slide-shadow").forEach((shadowEl) => {
          shadowEl.style.transitionDuration = `${duration}ms`;
        });
      });
      effectVirtualTransitionEnd({
        swiper,
        duration,
        transformElements,
      });
    };
    effectInit({
      effect: "cards",
      swiper,
      on,
      setTranslate,
      setTransition,
      perspective: () => true,
      overwriteParams: () => ({
        watchSlidesProgress: true,
        virtualTranslate: !swiper.params.cssMode,
      }),
    });
  }

  /**
   * Swiper 11.0.5
   * Most modern mobile touch slider and framework with hardware accelerated transitions
   * https://swiperjs.com
   *
   * Copyright 2014-2023 Vladimir Kharlampidi
   *
   * Released under the MIT License
   *
   * Released on: November 22, 2023
   */

  // Swiper Class
  const modules = [
    Virtual,
    Keyboard,
    Mousewheel,
    Navigation,
    Pagination,
    Scrollbar,
    Parallax,
    Zoom,
    Controller,
    A11y,
    History,
    HashNavigation,
    Autoplay,
    Thumb,
    freeMode,
    Grid,
    Manipulation,
    EffectFade,
    EffectCube,
    EffectFlip,
    EffectCoverflow,
    EffectCreative,
    EffectCards,
  ];
  Swiper.use(modules);

  return Swiper;
})();

/*! jQuery UI - v1.13.2 - 2022-07-14
 * http://jqueryui.com
 * Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-patch.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */

!(function (t) {
  "use strict";
  "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery);
})(function (V) {
  "use strict";
  V.ui = V.ui || {};
  V.ui.version = "1.13.2";
  var n,
    i = 0,
    a = Array.prototype.hasOwnProperty,
    r = Array.prototype.slice;
  (V.cleanData =
    ((n = V.cleanData),
    function (t) {
      for (var e, i, s = 0; null != (i = t[s]); s++)
        (e = V._data(i, "events")) && e.remove && V(i).triggerHandler("remove");
      n(t);
    })),
    (V.widget = function (t, i, e) {
      var s,
        n,
        o,
        a = {},
        r = t.split(".")[0],
        l = r + "-" + (t = t.split(".")[1]);
      return (
        e || ((e = i), (i = V.Widget)),
        Array.isArray(e) && (e = V.extend.apply(null, [{}].concat(e))),
        (V.expr.pseudos[l.toLowerCase()] = function (t) {
          return !!V.data(t, l);
        }),
        (V[r] = V[r] || {}),
        (s = V[r][t]),
        (n = V[r][t] =
          function (t, e) {
            if (!this || !this._createWidget) return new n(t, e);
            arguments.length && this._createWidget(t, e);
          }),
        V.extend(n, s, {
          version: e.version,
          _proto: V.extend({}, e),
          _childConstructors: [],
        }),
        ((o = new i()).options = V.widget.extend({}, o.options)),
        V.each(e, function (e, s) {
          function n() {
            return i.prototype[e].apply(this, arguments);
          }
          function o(t) {
            return i.prototype[e].apply(this, t);
          }
          a[e] =
            "function" == typeof s
              ? function () {
                  var t,
                    e = this._super,
                    i = this._superApply;
                  return (
                    (this._super = n),
                    (this._superApply = o),
                    (t = s.apply(this, arguments)),
                    (this._super = e),
                    (this._superApply = i),
                    t
                  );
                }
              : s;
        }),
        (n.prototype = V.widget.extend(
          o,
          { widgetEventPrefix: (s && o.widgetEventPrefix) || t },
          a,
          { constructor: n, namespace: r, widgetName: t, widgetFullName: l }
        )),
        s
          ? (V.each(s._childConstructors, function (t, e) {
              var i = e.prototype;
              V.widget(i.namespace + "." + i.widgetName, n, e._proto);
            }),
            delete s._childConstructors)
          : i._childConstructors.push(n),
        V.widget.bridge(t, n),
        n
      );
    }),
    (V.widget.extend = function (t) {
      for (var e, i, s = r.call(arguments, 1), n = 0, o = s.length; n < o; n++)
        for (e in s[n])
          (i = s[n][e]),
            a.call(s[n], e) &&
              void 0 !== i &&
              (V.isPlainObject(i)
                ? (t[e] = V.isPlainObject(t[e])
                    ? V.widget.extend({}, t[e], i)
                    : V.widget.extend({}, i))
                : (t[e] = i));
      return t;
    }),
    (V.widget.bridge = function (o, e) {
      var a = e.prototype.widgetFullName || o;
      V.fn[o] = function (i) {
        var t = "string" == typeof i,
          s = r.call(arguments, 1),
          n = this;
        return (
          t
            ? this.length || "instance" !== i
              ? this.each(function () {
                  var t,
                    e = V.data(this, a);
                  return "instance" === i
                    ? ((n = e), !1)
                    : e
                    ? "function" != typeof e[i] || "_" === i.charAt(0)
                      ? V.error(
                          "no such method '" +
                            i +
                            "' for " +
                            o +
                            " widget instance"
                        )
                      : (t = e[i].apply(e, s)) !== e && void 0 !== t
                      ? ((n = t && t.jquery ? n.pushStack(t.get()) : t), !1)
                      : void 0
                    : V.error(
                        "cannot call methods on " +
                          o +
                          " prior to initialization; attempted to call method '" +
                          i +
                          "'"
                      );
                })
              : (n = void 0)
            : (s.length && (i = V.widget.extend.apply(null, [i].concat(s))),
              this.each(function () {
                var t = V.data(this, a);
                t
                  ? (t.option(i || {}), t._init && t._init())
                  : V.data(this, a, new e(i, this));
              })),
          n
        );
      };
    }),
    (V.Widget = function () {}),
    (V.Widget._childConstructors = []),
    (V.Widget.prototype = {
      widgetName: "widget",
      widgetEventPrefix: "",
      defaultElement: "<div>",
      options: { classes: {}, disabled: !1, create: null },
      _createWidget: function (t, e) {
        (e = V(e || this.defaultElement || this)[0]),
          (this.element = V(e)),
          (this.uuid = i++),
          (this.eventNamespace = "." + this.widgetName + this.uuid),
          (this.bindings = V()),
          (this.hoverable = V()),
          (this.focusable = V()),
          (this.classesElementLookup = {}),
          e !== this &&
            (V.data(e, this.widgetFullName, this),
            this._on(!0, this.element, {
              remove: function (t) {
                t.target === e && this.destroy();
              },
            }),
            (this.document = V(e.style ? e.ownerDocument : e.document || e)),
            (this.window = V(
              this.document[0].defaultView || this.document[0].parentWindow
            ))),
          (this.options = V.widget.extend(
            {},
            this.options,
            this._getCreateOptions(),
            t
          )),
          this._create(),
          this.options.disabled &&
            this._setOptionDisabled(this.options.disabled),
          this._trigger("create", null, this._getCreateEventData()),
          this._init();
      },
      _getCreateOptions: function () {
        return {};
      },
      _getCreateEventData: V.noop,
      _create: V.noop,
      _init: V.noop,
      destroy: function () {
        var i = this;
        this._destroy(),
          V.each(this.classesElementLookup, function (t, e) {
            i._removeClass(e, t);
          }),
          this.element.off(this.eventNamespace).removeData(this.widgetFullName),
          this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
          this.bindings.off(this.eventNamespace);
      },
      _destroy: V.noop,
      widget: function () {
        return this.element;
      },
      option: function (t, e) {
        var i,
          s,
          n,
          o = t;
        if (0 === arguments.length) return V.widget.extend({}, this.options);
        if ("string" == typeof t)
          if (((o = {}), (t = (i = t.split(".")).shift()), i.length)) {
            for (
              s = o[t] = V.widget.extend({}, this.options[t]), n = 0;
              n < i.length - 1;
              n++
            )
              (s[i[n]] = s[i[n]] || {}), (s = s[i[n]]);
            if (((t = i.pop()), 1 === arguments.length))
              return void 0 === s[t] ? null : s[t];
            s[t] = e;
          } else {
            if (1 === arguments.length)
              return void 0 === this.options[t] ? null : this.options[t];
            o[t] = e;
          }
        return this._setOptions(o), this;
      },
      _setOptions: function (t) {
        for (var e in t) this._setOption(e, t[e]);
        return this;
      },
      _setOption: function (t, e) {
        return (
          "classes" === t && this._setOptionClasses(e),
          (this.options[t] = e),
          "disabled" === t && this._setOptionDisabled(e),
          this
        );
      },
      _setOptionClasses: function (t) {
        var e, i, s;
        for (e in t)
          (s = this.classesElementLookup[e]),
            t[e] !== this.options.classes[e] &&
              s &&
              s.length &&
              ((i = V(s.get())),
              this._removeClass(s, e),
              i.addClass(
                this._classes({ element: i, keys: e, classes: t, add: !0 })
              ));
      },
      _setOptionDisabled: function (t) {
        this._toggleClass(
          this.widget(),
          this.widgetFullName + "-disabled",
          null,
          !!t
        ),
          t &&
            (this._removeClass(this.hoverable, null, "ui-state-hover"),
            this._removeClass(this.focusable, null, "ui-state-focus"));
      },
      enable: function () {
        return this._setOptions({ disabled: !1 });
      },
      disable: function () {
        return this._setOptions({ disabled: !0 });
      },
      _classes: function (n) {
        var o = [],
          a = this;
        function t(t, e) {
          for (var i, s = 0; s < t.length; s++)
            (i = a.classesElementLookup[t[s]] || V()),
              (i = n.add
                ? ((function () {
                    var i = [];
                    n.element.each(function (t, e) {
                      V.map(a.classesElementLookup, function (t) {
                        return t;
                      }).some(function (t) {
                        return t.is(e);
                      }) || i.push(e);
                    }),
                      a._on(V(i), { remove: "_untrackClassesElement" });
                  })(),
                  V(V.uniqueSort(i.get().concat(n.element.get()))))
                : V(i.not(n.element).get())),
              (a.classesElementLookup[t[s]] = i),
              o.push(t[s]),
              e && n.classes[t[s]] && o.push(n.classes[t[s]]);
        }
        return (
          (n = V.extend(
            { element: this.element, classes: this.options.classes || {} },
            n
          )).keys && t(n.keys.match(/\S+/g) || [], !0),
          n.extra && t(n.extra.match(/\S+/g) || []),
          o.join(" ")
        );
      },
      _untrackClassesElement: function (i) {
        var s = this;
        V.each(s.classesElementLookup, function (t, e) {
          -1 !== V.inArray(i.target, e) &&
            (s.classesElementLookup[t] = V(e.not(i.target).get()));
        }),
          this._off(V(i.target));
      },
      _removeClass: function (t, e, i) {
        return this._toggleClass(t, e, i, !1);
      },
      _addClass: function (t, e, i) {
        return this._toggleClass(t, e, i, !0);
      },
      _toggleClass: function (t, e, i, s) {
        var n = "string" == typeof t || null === t,
          i = {
            extra: n ? e : i,
            keys: n ? t : e,
            element: n ? this.element : t,
            add: (s = "boolean" == typeof s ? s : i),
          };
        return i.element.toggleClass(this._classes(i), s), this;
      },
      _on: function (n, o, t) {
        var a,
          r = this;
        "boolean" != typeof n && ((t = o), (o = n), (n = !1)),
          t
            ? ((o = a = V(o)), (this.bindings = this.bindings.add(o)))
            : ((t = o), (o = this.element), (a = this.widget())),
          V.each(t, function (t, e) {
            function i() {
              if (
                n ||
                (!0 !== r.options.disabled &&
                  !V(this).hasClass("ui-state-disabled"))
              )
                return ("string" == typeof e ? r[e] : e).apply(r, arguments);
            }
            "string" != typeof e &&
              (i.guid = e.guid = e.guid || i.guid || V.guid++);
            var s = t.match(/^([\w:-]*)\s*(.*)$/),
              t = s[1] + r.eventNamespace,
              s = s[2];
            s ? a.on(t, s, i) : o.on(t, i);
          });
      },
      _off: function (t, e) {
        (e =
          (e || "").split(" ").join(this.eventNamespace + " ") +
          this.eventNamespace),
          t.off(e),
          (this.bindings = V(this.bindings.not(t).get())),
          (this.focusable = V(this.focusable.not(t).get())),
          (this.hoverable = V(this.hoverable.not(t).get()));
      },
      _delay: function (t, e) {
        var i = this;
        return setTimeout(function () {
          return ("string" == typeof t ? i[t] : t).apply(i, arguments);
        }, e || 0);
      },
      _hoverable: function (t) {
        (this.hoverable = this.hoverable.add(t)),
          this._on(t, {
            mouseenter: function (t) {
              this._addClass(V(t.currentTarget), null, "ui-state-hover");
            },
            mouseleave: function (t) {
              this._removeClass(V(t.currentTarget), null, "ui-state-hover");
            },
          });
      },
      _focusable: function (t) {
        (this.focusable = this.focusable.add(t)),
          this._on(t, {
            focusin: function (t) {
              this._addClass(V(t.currentTarget), null, "ui-state-focus");
            },
            focusout: function (t) {
              this._removeClass(V(t.currentTarget), null, "ui-state-focus");
            },
          });
      },
      _trigger: function (t, e, i) {
        var s,
          n,
          o = this.options[t];
        if (
          ((i = i || {}),
          ((e = V.Event(e)).type = (
            t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
          ).toLowerCase()),
          (e.target = this.element[0]),
          (n = e.originalEvent))
        )
          for (s in n) s in e || (e[s] = n[s]);
        return (
          this.element.trigger(e, i),
          !(
            ("function" == typeof o &&
              !1 === o.apply(this.element[0], [e].concat(i))) ||
            e.isDefaultPrevented()
          )
        );
      },
    }),
    V.each({ show: "fadeIn", hide: "fadeOut" }, function (o, a) {
      V.Widget.prototype["_" + o] = function (e, t, i) {
        var s,
          n = (t = "string" == typeof t ? { effect: t } : t)
            ? (!0 !== t && "number" != typeof t && t.effect) || a
            : o;
        "number" == typeof (t = t || {})
          ? (t = { duration: t })
          : !0 === t && (t = {}),
          (s = !V.isEmptyObject(t)),
          (t.complete = i),
          t.delay && e.delay(t.delay),
          s && V.effects && V.effects.effect[n]
            ? e[o](t)
            : n !== o && e[n]
            ? e[n](t.duration, t.easing, i)
            : e.queue(function (t) {
                V(this)[o](), i && i.call(e[0]), t();
              });
      };
    });
  var s, x, k, o, l, h, c, u, C;
  V.widget;
  function D(t, e, i) {
    return [
      parseFloat(t[0]) * (u.test(t[0]) ? e / 100 : 1),
      parseFloat(t[1]) * (u.test(t[1]) ? i / 100 : 1),
    ];
  }
  function I(t, e) {
    return parseInt(V.css(t, e), 10) || 0;
  }
  function T(t) {
    return null != t && t === t.window;
  }
  (x = Math.max),
    (k = Math.abs),
    (o = /left|center|right/),
    (l = /top|center|bottom/),
    (h = /[\+\-]\d+(\.[\d]+)?%?/),
    (c = /^\w+/),
    (u = /%$/),
    (C = V.fn.position),
    (V.position = {
      scrollbarWidth: function () {
        if (void 0 !== s) return s;
        var t,
          e = V(
            "<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>"
          ),
          i = e.children()[0];
        return (
          V("body").append(e),
          (t = i.offsetWidth),
          e.css("overflow", "scroll"),
          t === (i = i.offsetWidth) && (i = e[0].clientWidth),
          e.remove(),
          (s = t - i)
        );
      },
      getScrollInfo: function (t) {
        var e = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
          i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
          e =
            "scroll" === e ||
            ("auto" === e && t.width < t.element[0].scrollWidth);
        return {
          width:
            "scroll" === i ||
            ("auto" === i && t.height < t.element[0].scrollHeight)
              ? V.position.scrollbarWidth()
              : 0,
          height: e ? V.position.scrollbarWidth() : 0,
        };
      },
      getWithinInfo: function (t) {
        var e = V(t || window),
          i = T(e[0]),
          s = !!e[0] && 9 === e[0].nodeType;
        return {
          element: e,
          isWindow: i,
          isDocument: s,
          offset: !i && !s ? V(t).offset() : { left: 0, top: 0 },
          scrollLeft: e.scrollLeft(),
          scrollTop: e.scrollTop(),
          width: e.outerWidth(),
          height: e.outerHeight(),
        };
      },
    }),
    (V.fn.position = function (u) {
      if (!u || !u.of) return C.apply(this, arguments);
      var d,
        p,
        f,
        g,
        m,
        t,
        _ =
          "string" == typeof (u = V.extend({}, u)).of
            ? V(document).find(u.of)
            : V(u.of),
        v = V.position.getWithinInfo(u.within),
        b = V.position.getScrollInfo(v),
        y = (u.collision || "flip").split(" "),
        w = {},
        e =
          9 === (t = (e = _)[0]).nodeType
            ? {
                width: e.width(),
                height: e.height(),
                offset: { top: 0, left: 0 },
              }
            : T(t)
            ? {
                width: e.width(),
                height: e.height(),
                offset: { top: e.scrollTop(), left: e.scrollLeft() },
              }
            : t.preventDefault
            ? { width: 0, height: 0, offset: { top: t.pageY, left: t.pageX } }
            : {
                width: e.outerWidth(),
                height: e.outerHeight(),
                offset: e.offset(),
              };
      return (
        _[0].preventDefault && (u.at = "left top"),
        (p = e.width),
        (f = e.height),
        (m = V.extend({}, (g = e.offset))),
        V.each(["my", "at"], function () {
          var t,
            e,
            i = (u[this] || "").split(" ");
          ((i =
            1 === i.length
              ? o.test(i[0])
                ? i.concat(["center"])
                : l.test(i[0])
                ? ["center"].concat(i)
                : ["center", "center"]
              : i)[0] = o.test(i[0]) ? i[0] : "center"),
            (i[1] = l.test(i[1]) ? i[1] : "center"),
            (t = h.exec(i[0])),
            (e = h.exec(i[1])),
            (w[this] = [t ? t[0] : 0, e ? e[0] : 0]),
            (u[this] = [c.exec(i[0])[0], c.exec(i[1])[0]]);
        }),
        1 === y.length && (y[1] = y[0]),
        "right" === u.at[0]
          ? (m.left += p)
          : "center" === u.at[0] && (m.left += p / 2),
        "bottom" === u.at[1]
          ? (m.top += f)
          : "center" === u.at[1] && (m.top += f / 2),
        (d = D(w.at, p, f)),
        (m.left += d[0]),
        (m.top += d[1]),
        this.each(function () {
          var i,
            t,
            a = V(this),
            r = a.outerWidth(),
            l = a.outerHeight(),
            e = I(this, "marginLeft"),
            s = I(this, "marginTop"),
            n = r + e + I(this, "marginRight") + b.width,
            o = l + s + I(this, "marginBottom") + b.height,
            h = V.extend({}, m),
            c = D(w.my, a.outerWidth(), a.outerHeight());
          "right" === u.my[0]
            ? (h.left -= r)
            : "center" === u.my[0] && (h.left -= r / 2),
            "bottom" === u.my[1]
              ? (h.top -= l)
              : "center" === u.my[1] && (h.top -= l / 2),
            (h.left += c[0]),
            (h.top += c[1]),
            (i = { marginLeft: e, marginTop: s }),
            V.each(["left", "top"], function (t, e) {
              V.ui.position[y[t]] &&
                V.ui.position[y[t]][e](h, {
                  targetWidth: p,
                  targetHeight: f,
                  elemWidth: r,
                  elemHeight: l,
                  collisionPosition: i,
                  collisionWidth: n,
                  collisionHeight: o,
                  offset: [d[0] + c[0], d[1] + c[1]],
                  my: u.my,
                  at: u.at,
                  within: v,
                  elem: a,
                });
            }),
            u.using &&
              (t = function (t) {
                var e = g.left - h.left,
                  i = e + p - r,
                  s = g.top - h.top,
                  n = s + f - l,
                  o = {
                    target: {
                      element: _,
                      left: g.left,
                      top: g.top,
                      width: p,
                      height: f,
                    },
                    element: {
                      element: a,
                      left: h.left,
                      top: h.top,
                      width: r,
                      height: l,
                    },
                    horizontal: i < 0 ? "left" : 0 < e ? "right" : "center",
                    vertical: n < 0 ? "top" : 0 < s ? "bottom" : "middle",
                  };
                p < r && k(e + i) < p && (o.horizontal = "center"),
                  f < l && k(s + n) < f && (o.vertical = "middle"),
                  x(k(e), k(i)) > x(k(s), k(n))
                    ? (o.important = "horizontal")
                    : (o.important = "vertical"),
                  u.using.call(this, t, o);
              }),
            a.offset(V.extend(h, { using: t }));
        })
      );
    }),
    (V.ui.position = {
      fit: {
        left: function (t, e) {
          var i = e.within,
            s = i.isWindow ? i.scrollLeft : i.offset.left,
            n = i.width,
            o = t.left - e.collisionPosition.marginLeft,
            a = s - o,
            r = o + e.collisionWidth - n - s;
          e.collisionWidth > n
            ? 0 < a && r <= 0
              ? ((i = t.left + a + e.collisionWidth - n - s), (t.left += a - i))
              : (t.left =
                  !(0 < r && a <= 0) && r < a ? s + n - e.collisionWidth : s)
            : 0 < a
            ? (t.left += a)
            : 0 < r
            ? (t.left -= r)
            : (t.left = x(t.left - o, t.left));
        },
        top: function (t, e) {
          var i = e.within,
            s = i.isWindow ? i.scrollTop : i.offset.top,
            n = e.within.height,
            o = t.top - e.collisionPosition.marginTop,
            a = s - o,
            r = o + e.collisionHeight - n - s;
          e.collisionHeight > n
            ? 0 < a && r <= 0
              ? ((i = t.top + a + e.collisionHeight - n - s), (t.top += a - i))
              : (t.top =
                  !(0 < r && a <= 0) && r < a ? s + n - e.collisionHeight : s)
            : 0 < a
            ? (t.top += a)
            : 0 < r
            ? (t.top -= r)
            : (t.top = x(t.top - o, t.top));
        },
      },
      flip: {
        left: function (t, e) {
          var i = e.within,
            s = i.offset.left + i.scrollLeft,
            n = i.width,
            o = i.isWindow ? i.scrollLeft : i.offset.left,
            a = t.left - e.collisionPosition.marginLeft,
            r = a - o,
            l = a + e.collisionWidth - n - o,
            h =
              "left" === e.my[0]
                ? -e.elemWidth
                : "right" === e.my[0]
                ? e.elemWidth
                : 0,
            i =
              "left" === e.at[0]
                ? e.targetWidth
                : "right" === e.at[0]
                ? -e.targetWidth
                : 0,
            a = -2 * e.offset[0];
          r < 0
            ? ((s = t.left + h + i + a + e.collisionWidth - n - s) < 0 ||
                s < k(r)) &&
              (t.left += h + i + a)
            : 0 < l &&
              (0 <
                (o = t.left - e.collisionPosition.marginLeft + h + i + a - o) ||
                k(o) < l) &&
              (t.left += h + i + a);
        },
        top: function (t, e) {
          var i = e.within,
            s = i.offset.top + i.scrollTop,
            n = i.height,
            o = i.isWindow ? i.scrollTop : i.offset.top,
            a = t.top - e.collisionPosition.marginTop,
            r = a - o,
            l = a + e.collisionHeight - n - o,
            h =
              "top" === e.my[1]
                ? -e.elemHeight
                : "bottom" === e.my[1]
                ? e.elemHeight
                : 0,
            i =
              "top" === e.at[1]
                ? e.targetHeight
                : "bottom" === e.at[1]
                ? -e.targetHeight
                : 0,
            a = -2 * e.offset[1];
          r < 0
            ? ((s = t.top + h + i + a + e.collisionHeight - n - s) < 0 ||
                s < k(r)) &&
              (t.top += h + i + a)
            : 0 < l &&
              (0 <
                (o = t.top - e.collisionPosition.marginTop + h + i + a - o) ||
                k(o) < l) &&
              (t.top += h + i + a);
        },
      },
      flipfit: {
        left: function () {
          V.ui.position.flip.left.apply(this, arguments),
            V.ui.position.fit.left.apply(this, arguments);
        },
        top: function () {
          V.ui.position.flip.top.apply(this, arguments),
            V.ui.position.fit.top.apply(this, arguments);
        },
      },
    });
  V.ui.position,
    V.extend(V.expr.pseudos, {
      data: V.expr.createPseudo
        ? V.expr.createPseudo(function (e) {
            return function (t) {
              return !!V.data(t, e);
            };
          })
        : function (t, e, i) {
            return !!V.data(t, i[3]);
          },
    }),
    V.fn.extend({
      disableSelection:
        ((t =
          "onselectstart" in document.createElement("div")
            ? "selectstart"
            : "mousedown"),
        function () {
          return this.on(t + ".ui-disableSelection", function (t) {
            t.preventDefault();
          });
        }),
      enableSelection: function () {
        return this.off(".ui-disableSelection");
      },
    });
  var t,
    d = V,
    p = {},
    e = p.toString,
    f = /^([\-+])=\s*(\d+\.?\d*)/,
    g = [
      {
        re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (t) {
          return [t[1], t[2], t[3], t[4]];
        },
      },
      {
        re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (t) {
          return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]];
        },
      },
      {
        re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,
        parse: function (t) {
          return [
            parseInt(t[1], 16),
            parseInt(t[2], 16),
            parseInt(t[3], 16),
            t[4] ? (parseInt(t[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,
        parse: function (t) {
          return [
            parseInt(t[1] + t[1], 16),
            parseInt(t[2] + t[2], 16),
            parseInt(t[3] + t[3], 16),
            t[4] ? (parseInt(t[4] + t[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        space: "hsla",
        parse: function (t) {
          return [t[1], t[2] / 100, t[3] / 100, t[4]];
        },
      },
    ],
    m = (d.Color = function (t, e, i, s) {
      return new d.Color.fn.parse(t, e, i, s);
    }),
    _ = {
      rgba: {
        props: {
          red: { idx: 0, type: "byte" },
          green: { idx: 1, type: "byte" },
          blue: { idx: 2, type: "byte" },
        },
      },
      hsla: {
        props: {
          hue: { idx: 0, type: "degrees" },
          saturation: { idx: 1, type: "percent" },
          lightness: { idx: 2, type: "percent" },
        },
      },
    },
    v = {
      byte: { floor: !0, max: 255 },
      percent: { max: 1 },
      degrees: { mod: 360, floor: !0 },
    },
    b = (m.support = {}),
    y = d("<p>")[0],
    w = d.each;
  function P(t) {
    return null == t
      ? t + ""
      : "object" == typeof t
      ? p[e.call(t)] || "object"
      : typeof t;
  }
  function M(t, e, i) {
    var s = v[e.type] || {};
    return null == t
      ? i || !e.def
        ? null
        : e.def
      : ((t = s.floor ? ~~t : parseFloat(t)),
        isNaN(t)
          ? e.def
          : s.mod
          ? (t + s.mod) % s.mod
          : Math.min(s.max, Math.max(0, t)));
  }
  function S(s) {
    var n = m(),
      o = (n._rgba = []);
    return (
      (s = s.toLowerCase()),
      w(g, function (t, e) {
        var i = e.re.exec(s),
          i = i && e.parse(i),
          e = e.space || "rgba";
        if (i)
          return (
            (i = n[e](i)),
            (n[_[e].cache] = i[_[e].cache]),
            (o = n._rgba = i._rgba),
            !1
          );
      }),
      o.length
        ? ("0,0,0,0" === o.join() && d.extend(o, B.transparent), n)
        : B[s]
    );
  }
  function H(t, e, i) {
    return 6 * (i = (i + 1) % 1) < 1
      ? t + (e - t) * i * 6
      : 2 * i < 1
      ? e
      : 3 * i < 2
      ? t + (e - t) * (2 / 3 - i) * 6
      : t;
  }
  (y.style.cssText = "background-color:rgba(1,1,1,.5)"),
    (b.rgba = -1 < y.style.backgroundColor.indexOf("rgba")),
    w(_, function (t, e) {
      (e.cache = "_" + t),
        (e.props.alpha = { idx: 3, type: "percent", def: 1 });
    }),
    d.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " "
      ),
      function (t, e) {
        p["[object " + e + "]"] = e.toLowerCase();
      }
    ),
    ((m.fn = d.extend(m.prototype, {
      parse: function (n, t, e, i) {
        if (void 0 === n) return (this._rgba = [null, null, null, null]), this;
        (n.jquery || n.nodeType) && ((n = d(n).css(t)), (t = void 0));
        var o = this,
          s = P(n),
          a = (this._rgba = []);
        return (
          void 0 !== t && ((n = [n, t, e, i]), (s = "array")),
          "string" === s
            ? this.parse(S(n) || B._default)
            : "array" === s
            ? (w(_.rgba.props, function (t, e) {
                a[e.idx] = M(n[e.idx], e);
              }),
              this)
            : "object" === s
            ? (w(
                _,
                n instanceof m
                  ? function (t, e) {
                      n[e.cache] && (o[e.cache] = n[e.cache].slice());
                    }
                  : function (t, i) {
                      var s = i.cache;
                      w(i.props, function (t, e) {
                        if (!o[s] && i.to) {
                          if ("alpha" === t || null == n[t]) return;
                          o[s] = i.to(o._rgba);
                        }
                        o[s][e.idx] = M(n[t], e, !0);
                      }),
                        o[s] &&
                          d.inArray(null, o[s].slice(0, 3)) < 0 &&
                          (null == o[s][3] && (o[s][3] = 1),
                          i.from && (o._rgba = i.from(o[s])));
                    }
              ),
              this)
            : void 0
        );
      },
      is: function (t) {
        var n = m(t),
          o = !0,
          a = this;
        return (
          w(_, function (t, e) {
            var i,
              s = n[e.cache];
            return (
              s &&
                ((i = a[e.cache] || (e.to && e.to(a._rgba)) || []),
                w(e.props, function (t, e) {
                  if (null != s[e.idx]) return (o = s[e.idx] === i[e.idx]);
                })),
              o
            );
          }),
          o
        );
      },
      _space: function () {
        var i = [],
          s = this;
        return (
          w(_, function (t, e) {
            s[e.cache] && i.push(t);
          }),
          i.pop()
        );
      },
      transition: function (t, a) {
        var e = (h = m(t))._space(),
          i = _[e],
          t = 0 === this.alpha() ? m("transparent") : this,
          r = t[i.cache] || i.to(t._rgba),
          l = r.slice(),
          h = h[i.cache];
        return (
          w(i.props, function (t, e) {
            var i = e.idx,
              s = r[i],
              n = h[i],
              o = v[e.type] || {};
            null !== n &&
              (null === s
                ? (l[i] = n)
                : (o.mod &&
                    (n - s > o.mod / 2
                      ? (s += o.mod)
                      : s - n > o.mod / 2 && (s -= o.mod)),
                  (l[i] = M((n - s) * a + s, e))));
          }),
          this[e](l)
        );
      },
      blend: function (t) {
        if (1 === this._rgba[3]) return this;
        var e = this._rgba.slice(),
          i = e.pop(),
          s = m(t)._rgba;
        return m(
          d.map(e, function (t, e) {
            return (1 - i) * s[e] + i * t;
          })
        );
      },
      toRgbaString: function () {
        var t = "rgba(",
          e = d.map(this._rgba, function (t, e) {
            return null != t ? t : 2 < e ? 1 : 0;
          });
        return 1 === e[3] && (e.pop(), (t = "rgb(")), t + e.join() + ")";
      },
      toHslaString: function () {
        var t = "hsla(",
          e = d.map(this.hsla(), function (t, e) {
            return (
              null == t && (t = 2 < e ? 1 : 0),
              (t = e && e < 3 ? Math.round(100 * t) + "%" : t)
            );
          });
        return 1 === e[3] && (e.pop(), (t = "hsl(")), t + e.join() + ")";
      },
      toHexString: function (t) {
        var e = this._rgba.slice(),
          i = e.pop();
        return (
          t && e.push(~~(255 * i)),
          "#" +
            d
              .map(e, function (t) {
                return 1 === (t = (t || 0).toString(16)).length ? "0" + t : t;
              })
              .join("")
        );
      },
      toString: function () {
        return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
      },
    })).parse.prototype = m.fn),
    (_.hsla.to = function (t) {
      if (null == t[0] || null == t[1] || null == t[2])
        return [null, null, null, t[3]];
      var e = t[0] / 255,
        i = t[1] / 255,
        s = t[2] / 255,
        n = t[3],
        o = Math.max(e, i, s),
        a = Math.min(e, i, s),
        r = o - a,
        l = o + a,
        t = 0.5 * l,
        i =
          a === o
            ? 0
            : e === o
            ? (60 * (i - s)) / r + 360
            : i === o
            ? (60 * (s - e)) / r + 120
            : (60 * (e - i)) / r + 240,
        l = 0 == r ? 0 : t <= 0.5 ? r / l : r / (2 - l);
      return [Math.round(i) % 360, l, t, null == n ? 1 : n];
    }),
    (_.hsla.from = function (t) {
      if (null == t[0] || null == t[1] || null == t[2])
        return [null, null, null, t[3]];
      var e = t[0] / 360,
        i = t[1],
        s = t[2],
        t = t[3],
        i = s <= 0.5 ? s * (1 + i) : s + i - s * i,
        s = 2 * s - i;
      return [
        Math.round(255 * H(s, i, e + 1 / 3)),
        Math.round(255 * H(s, i, e)),
        Math.round(255 * H(s, i, e - 1 / 3)),
        t,
      ];
    }),
    w(_, function (l, t) {
      var e = t.props,
        o = t.cache,
        a = t.to,
        r = t.from;
      (m.fn[l] = function (t) {
        if ((a && !this[o] && (this[o] = a(this._rgba)), void 0 === t))
          return this[o].slice();
        var i = P(t),
          s = "array" === i || "object" === i ? t : arguments,
          n = this[o].slice();
        return (
          w(e, function (t, e) {
            t = s["object" === i ? t : e.idx];
            null == t && (t = n[e.idx]), (n[e.idx] = M(t, e));
          }),
          r ? (((t = m(r(n)))[o] = n), t) : m(n)
        );
      }),
        w(e, function (a, r) {
          m.fn[a] ||
            (m.fn[a] = function (t) {
              var e,
                i = P(t),
                s = "alpha" === a ? (this._hsla ? "hsla" : "rgba") : l,
                n = this[s](),
                o = n[r.idx];
              return "undefined" === i
                ? o
                : ("function" === i && (i = P((t = t.call(this, o)))),
                  null == t && r.empty
                    ? this
                    : ("string" === i &&
                        (e = f.exec(t)) &&
                        (t = o + parseFloat(e[2]) * ("+" === e[1] ? 1 : -1)),
                      (n[r.idx] = t),
                      this[s](n)));
            });
        });
    }),
    (m.hook = function (t) {
      t = t.split(" ");
      w(t, function (t, o) {
        (d.cssHooks[o] = {
          set: function (t, e) {
            var i,
              s,
              n = "";
            if ("transparent" !== e && ("string" !== P(e) || (i = S(e)))) {
              if (((e = m(i || e)), !b.rgba && 1 !== e._rgba[3])) {
                for (
                  s = "backgroundColor" === o ? t.parentNode : t;
                  ("" === n || "transparent" === n) && s && s.style;

                )
                  try {
                    (n = d.css(s, "backgroundColor")), (s = s.parentNode);
                  } catch (t) {}
                e = e.blend(n && "transparent" !== n ? n : "_default");
              }
              e = e.toRgbaString();
            }
            try {
              t.style[o] = e;
            } catch (t) {}
          },
        }),
          (d.fx.step[o] = function (t) {
            t.colorInit ||
              ((t.start = m(t.elem, o)),
              (t.end = m(t.end)),
              (t.colorInit = !0)),
              d.cssHooks[o].set(t.elem, t.start.transition(t.end, t.pos));
          });
      });
    })(
      "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"
    ),
    (d.cssHooks.borderColor = {
      expand: function (i) {
        var s = {};
        return (
          w(["Top", "Right", "Bottom", "Left"], function (t, e) {
            s["border" + e + "Color"] = i;
          }),
          s
        );
      },
    });
  var z,
    A,
    O,
    N,
    E,
    W,
    F,
    L,
    R,
    Y,
    B = (d.Color.names = {
      aqua: "#00ffff",
      black: "#000000",
      blue: "#0000ff",
      fuchsia: "#ff00ff",
      gray: "#808080",
      green: "#008000",
      lime: "#00ff00",
      maroon: "#800000",
      navy: "#000080",
      olive: "#808000",
      purple: "#800080",
      red: "#ff0000",
      silver: "#c0c0c0",
      teal: "#008080",
      white: "#ffffff",
      yellow: "#ffff00",
      transparent: [null, null, null, 0],
      _default: "#ffffff",
    }),
    j = "ui-effects-",
    q = "ui-effects-style",
    K = "ui-effects-animated";
  function U(t) {
    var e,
      i,
      s = t.ownerDocument.defaultView
        ? t.ownerDocument.defaultView.getComputedStyle(t, null)
        : t.currentStyle,
      n = {};
    if (s && s.length && s[0] && s[s[0]])
      for (i = s.length; i--; )
        "string" == typeof s[(e = s[i])] &&
          (n[
            e.replace(/-([\da-z])/gi, function (t, e) {
              return e.toUpperCase();
            })
          ] = s[e]);
    else for (e in s) "string" == typeof s[e] && (n[e] = s[e]);
    return n;
  }
  function X(t, e, i, s) {
    return (
      (t = { effect: (t = V.isPlainObject(t) ? (e = t).effect : t) }),
      "function" == typeof (e = null == e ? {} : e) &&
        ((s = e), (i = null), (e = {})),
      ("number" != typeof e && !V.fx.speeds[e]) || ((s = i), (i = e), (e = {})),
      "function" == typeof i && ((s = i), (i = null)),
      e && V.extend(t, e),
      (i = i || e.duration),
      (t.duration = V.fx.off
        ? 0
        : "number" == typeof i
        ? i
        : i in V.fx.speeds
        ? V.fx.speeds[i]
        : V.fx.speeds._default),
      (t.complete = s || e.complete),
      t
    );
  }
  function $(t) {
    return (
      !t ||
      "number" == typeof t ||
      V.fx.speeds[t] ||
      ("string" == typeof t && !V.effects.effect[t]) ||
      "function" == typeof t ||
      ("object" == typeof t && !t.effect)
    );
  }
  function G(t, e) {
    var i = e.outerWidth(),
      e = e.outerHeight(),
      t =
        /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(
          t
        ) || ["", 0, i, e, 0];
    return {
      top: parseFloat(t[1]) || 0,
      right: "auto" === t[2] ? i : parseFloat(t[2]),
      bottom: "auto" === t[3] ? e : parseFloat(t[3]),
      left: parseFloat(t[4]) || 0,
    };
  }
  (V.effects = { effect: {} }),
    (N = ["add", "remove", "toggle"]),
    (E = {
      border: 1,
      borderBottom: 1,
      borderColor: 1,
      borderLeft: 1,
      borderRight: 1,
      borderTop: 1,
      borderWidth: 1,
      margin: 1,
      padding: 1,
    }),
    V.each(
      [
        "borderLeftStyle",
        "borderRightStyle",
        "borderBottomStyle",
        "borderTopStyle",
      ],
      function (t, e) {
        V.fx.step[e] = function (t) {
          (("none" !== t.end && !t.setAttr) || (1 === t.pos && !t.setAttr)) &&
            (d.style(t.elem, e, t.end), (t.setAttr = !0));
        };
      }
    ),
    V.fn.addBack ||
      (V.fn.addBack = function (t) {
        return this.add(
          null == t ? this.prevObject : this.prevObject.filter(t)
        );
      }),
    (V.effects.animateClass = function (n, t, e, i) {
      var o = V.speed(t, e, i);
      return this.queue(function () {
        var i = V(this),
          t = i.attr("class") || "",
          e = (e = o.children ? i.find("*").addBack() : i).map(function () {
            return { el: V(this), start: U(this) };
          }),
          s = function () {
            V.each(N, function (t, e) {
              n[e] && i[e + "Class"](n[e]);
            });
          };
        s(),
          (e = e.map(function () {
            return (
              (this.end = U(this.el[0])),
              (this.diff = (function (t, e) {
                var i,
                  s,
                  n = {};
                for (i in e)
                  (s = e[i]),
                    t[i] !== s &&
                      (E[i] ||
                        (!V.fx.step[i] && isNaN(parseFloat(s))) ||
                        (n[i] = s));
                return n;
              })(this.start, this.end)),
              this
            );
          })),
          i.attr("class", t),
          (e = e.map(function () {
            var t = this,
              e = V.Deferred(),
              i = V.extend({}, o, {
                queue: !1,
                complete: function () {
                  e.resolve(t);
                },
              });
            return this.el.animate(this.diff, i), e.promise();
          })),
          V.when.apply(V, e.get()).done(function () {
            s(),
              V.each(arguments, function () {
                var e = this.el;
                V.each(this.diff, function (t) {
                  e.css(t, "");
                });
              }),
              o.complete.call(i[0]);
          });
      });
    }),
    V.fn.extend({
      addClass:
        ((O = V.fn.addClass),
        function (t, e, i, s) {
          return e
            ? V.effects.animateClass.call(this, { add: t }, e, i, s)
            : O.apply(this, arguments);
        }),
      removeClass:
        ((A = V.fn.removeClass),
        function (t, e, i, s) {
          return 1 < arguments.length
            ? V.effects.animateClass.call(this, { remove: t }, e, i, s)
            : A.apply(this, arguments);
        }),
      toggleClass:
        ((z = V.fn.toggleClass),
        function (t, e, i, s, n) {
          return "boolean" == typeof e || void 0 === e
            ? i
              ? V.effects.animateClass.call(
                  this,
                  e ? { add: t } : { remove: t },
                  i,
                  s,
                  n
                )
              : z.apply(this, arguments)
            : V.effects.animateClass.call(this, { toggle: t }, e, i, s);
        }),
      switchClass: function (t, e, i, s, n) {
        return V.effects.animateClass.call(
          this,
          { add: e, remove: t },
          i,
          s,
          n
        );
      },
    }),
    V.expr &&
      V.expr.pseudos &&
      V.expr.pseudos.animated &&
      (V.expr.pseudos.animated =
        ((W = V.expr.pseudos.animated),
        function (t) {
          return !!V(t).data(K) || W(t);
        })),
    !1 !== V.uiBackCompat &&
      V.extend(V.effects, {
        save: function (t, e) {
          for (var i = 0, s = e.length; i < s; i++)
            null !== e[i] && t.data(j + e[i], t[0].style[e[i]]);
        },
        restore: function (t, e) {
          for (var i, s = 0, n = e.length; s < n; s++)
            null !== e[s] && ((i = t.data(j + e[s])), t.css(e[s], i));
        },
        setMode: function (t, e) {
          return (e = "toggle" === e ? (t.is(":hidden") ? "show" : "hide") : e);
        },
        createWrapper: function (i) {
          if (i.parent().is(".ui-effects-wrapper")) return i.parent();
          var s = {
              width: i.outerWidth(!0),
              height: i.outerHeight(!0),
              float: i.css("float"),
            },
            t = V("<div></div>").addClass("ui-effects-wrapper").css({
              fontSize: "100%",
              background: "transparent",
              border: "none",
              margin: 0,
              padding: 0,
            }),
            e = { width: i.width(), height: i.height() },
            n = document.activeElement;
          try {
            n.id;
          } catch (t) {
            n = document.body;
          }
          return (
            i.wrap(t),
            (i[0] !== n && !V.contains(i[0], n)) || V(n).trigger("focus"),
            (t = i.parent()),
            "static" === i.css("position")
              ? (t.css({ position: "relative" }),
                i.css({ position: "relative" }))
              : (V.extend(s, {
                  position: i.css("position"),
                  zIndex: i.css("z-index"),
                }),
                V.each(["top", "left", "bottom", "right"], function (t, e) {
                  (s[e] = i.css(e)),
                    isNaN(parseInt(s[e], 10)) && (s[e] = "auto");
                }),
                i.css({
                  position: "relative",
                  top: 0,
                  left: 0,
                  right: "auto",
                  bottom: "auto",
                })),
            i.css(e),
            t.css(s).show()
          );
        },
        removeWrapper: function (t) {
          var e = document.activeElement;
          return (
            t.parent().is(".ui-effects-wrapper") &&
              (t.parent().replaceWith(t),
              (t[0] !== e && !V.contains(t[0], e)) || V(e).trigger("focus")),
            t
          );
        },
      }),
    V.extend(V.effects, {
      version: "1.13.2",
      define: function (t, e, i) {
        return (
          i || ((i = e), (e = "effect")),
          (V.effects.effect[t] = i),
          (V.effects.effect[t].mode = e),
          i
        );
      },
      scaledDimensions: function (t, e, i) {
        if (0 === e)
          return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
        var s = "horizontal" !== i ? (e || 100) / 100 : 1,
          e = "vertical" !== i ? (e || 100) / 100 : 1;
        return {
          height: t.height() * e,
          width: t.width() * s,
          outerHeight: t.outerHeight() * e,
          outerWidth: t.outerWidth() * s,
        };
      },
      clipToBox: function (t) {
        return {
          width: t.clip.right - t.clip.left,
          height: t.clip.bottom - t.clip.top,
          left: t.clip.left,
          top: t.clip.top,
        };
      },
      unshift: function (t, e, i) {
        var s = t.queue();
        1 < e && s.splice.apply(s, [1, 0].concat(s.splice(e, i))), t.dequeue();
      },
      saveStyle: function (t) {
        t.data(q, t[0].style.cssText);
      },
      restoreStyle: function (t) {
        (t[0].style.cssText = t.data(q) || ""), t.removeData(q);
      },
      mode: function (t, e) {
        t = t.is(":hidden");
        return (
          "toggle" === e && (e = t ? "show" : "hide"),
          (e = (t ? "hide" === e : "show" === e) ? "none" : e)
        );
      },
      getBaseline: function (t, e) {
        var i, s;
        switch (t[0]) {
          case "top":
            i = 0;
            break;
          case "middle":
            i = 0.5;
            break;
          case "bottom":
            i = 1;
            break;
          default:
            i = t[0] / e.height;
        }
        switch (t[1]) {
          case "left":
            s = 0;
            break;
          case "center":
            s = 0.5;
            break;
          case "right":
            s = 1;
            break;
          default:
            s = t[1] / e.width;
        }
        return { x: s, y: i };
      },
      createPlaceholder: function (t) {
        var e,
          i = t.css("position"),
          s = t.position();
        return (
          t
            .css({
              marginTop: t.css("marginTop"),
              marginBottom: t.css("marginBottom"),
              marginLeft: t.css("marginLeft"),
              marginRight: t.css("marginRight"),
            })
            .outerWidth(t.outerWidth())
            .outerHeight(t.outerHeight()),
          /^(static|relative)/.test(i) &&
            ((i = "absolute"),
            (e = V("<" + t[0].nodeName + ">")
              .insertAfter(t)
              .css({
                display: /^(inline|ruby)/.test(t.css("display"))
                  ? "inline-block"
                  : "block",
                visibility: "hidden",
                marginTop: t.css("marginTop"),
                marginBottom: t.css("marginBottom"),
                marginLeft: t.css("marginLeft"),
                marginRight: t.css("marginRight"),
                float: t.css("float"),
              })
              .outerWidth(t.outerWidth())
              .outerHeight(t.outerHeight())
              .addClass("ui-effects-placeholder")),
            t.data(j + "placeholder", e)),
          t.css({ position: i, left: s.left, top: s.top }),
          e
        );
      },
      removePlaceholder: function (t) {
        var e = j + "placeholder",
          i = t.data(e);
        i && (i.remove(), t.removeData(e));
      },
      cleanUp: function (t) {
        V.effects.restoreStyle(t), V.effects.removePlaceholder(t);
      },
      setTransition: function (s, t, n, o) {
        return (
          (o = o || {}),
          V.each(t, function (t, e) {
            var i = s.cssUnit(e);
            0 < i[0] && (o[e] = i[0] * n + i[1]);
          }),
          o
        );
      },
    }),
    V.fn.extend({
      effect: function () {
        function t(t) {
          var e = V(this),
            i = V.effects.mode(e, r) || o;
          e.data(K, !0),
            l.push(i),
            o && ("show" === i || (i === o && "hide" === i)) && e.show(),
            (o && "none" === i) || V.effects.saveStyle(e),
            "function" == typeof t && t();
        }
        var s = X.apply(this, arguments),
          n = V.effects.effect[s.effect],
          o = n.mode,
          e = s.queue,
          i = e || "fx",
          a = s.complete,
          r = s.mode,
          l = [];
        return V.fx.off || !n
          ? r
            ? this[r](s.duration, a)
            : this.each(function () {
                a && a.call(this);
              })
          : !1 === e
          ? this.each(t).each(h)
          : this.queue(i, t).queue(i, h);
        function h(t) {
          var e = V(this);
          function i() {
            "function" == typeof a && a.call(e[0]),
              "function" == typeof t && t();
          }
          (s.mode = l.shift()),
            !1 === V.uiBackCompat || o
              ? "none" === s.mode
                ? (e[r](), i())
                : n.call(e[0], s, function () {
                    e.removeData(K),
                      V.effects.cleanUp(e),
                      "hide" === s.mode && e.hide(),
                      i();
                  })
              : (e.is(":hidden") ? "hide" === r : "show" === r)
              ? (e[r](), i())
              : n.call(e[0], s, i);
        }
      },
      show:
        ((R = V.fn.show),
        function (t) {
          if ($(t)) return R.apply(this, arguments);
          t = X.apply(this, arguments);
          return (t.mode = "show"), this.effect.call(this, t);
        }),
      hide:
        ((L = V.fn.hide),
        function (t) {
          if ($(t)) return L.apply(this, arguments);
          t = X.apply(this, arguments);
          return (t.mode = "hide"), this.effect.call(this, t);
        }),
      toggle:
        ((F = V.fn.toggle),
        function (t) {
          if ($(t) || "boolean" == typeof t) return F.apply(this, arguments);
          t = X.apply(this, arguments);
          return (t.mode = "toggle"), this.effect.call(this, t);
        }),
      cssUnit: function (t) {
        var i = this.css(t),
          s = [];
        return (
          V.each(["em", "px", "%", "pt"], function (t, e) {
            0 < i.indexOf(e) && (s = [parseFloat(i), e]);
          }),
          s
        );
      },
      cssClip: function (t) {
        return t
          ? this.css(
              "clip",
              "rect(" +
                t.top +
                "px " +
                t.right +
                "px " +
                t.bottom +
                "px " +
                t.left +
                "px)"
            )
          : G(this.css("clip"), this);
      },
      transfer: function (t, e) {
        var i = V(this),
          s = V(t.to),
          n = "fixed" === s.css("position"),
          o = V("body"),
          a = n ? o.scrollTop() : 0,
          r = n ? o.scrollLeft() : 0,
          o = s.offset(),
          o = {
            top: o.top - a,
            left: o.left - r,
            height: s.innerHeight(),
            width: s.innerWidth(),
          },
          s = i.offset(),
          l = V("<div class='ui-effects-transfer'></div>");
        l.appendTo("body")
          .addClass(t.className)
          .css({
            top: s.top - a,
            left: s.left - r,
            height: i.innerHeight(),
            width: i.innerWidth(),
            position: n ? "fixed" : "absolute",
          })
          .animate(o, t.duration, t.easing, function () {
            l.remove(), "function" == typeof e && e();
          });
      },
    }),
    (V.fx.step.clip = function (t) {
      t.clipInit ||
        ((t.start = V(t.elem).cssClip()),
        "string" == typeof t.end && (t.end = G(t.end, t.elem)),
        (t.clipInit = !0)),
        V(t.elem).cssClip({
          top: t.pos * (t.end.top - t.start.top) + t.start.top,
          right: t.pos * (t.end.right - t.start.right) + t.start.right,
          bottom: t.pos * (t.end.bottom - t.start.bottom) + t.start.bottom,
          left: t.pos * (t.end.left - t.start.left) + t.start.left,
        });
    }),
    (Y = {}),
    V.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, t) {
      Y[t] = function (t) {
        return Math.pow(t, e + 2);
      };
    }),
    V.extend(Y, {
      Sine: function (t) {
        return 1 - Math.cos((t * Math.PI) / 2);
      },
      Circ: function (t) {
        return 1 - Math.sqrt(1 - t * t);
      },
      Elastic: function (t) {
        return 0 === t || 1 === t
          ? t
          : -Math.pow(2, 8 * (t - 1)) *
              Math.sin(((80 * (t - 1) - 7.5) * Math.PI) / 15);
      },
      Back: function (t) {
        return t * t * (3 * t - 2);
      },
      Bounce: function (t) {
        for (var e, i = 4; t < ((e = Math.pow(2, --i)) - 1) / 11; );
        return (
          1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2)
        );
      },
    }),
    V.each(Y, function (t, e) {
      (V.easing["easeIn" + t] = e),
        (V.easing["easeOut" + t] = function (t) {
          return 1 - e(1 - t);
        }),
        (V.easing["easeInOut" + t] = function (t) {
          return t < 0.5 ? e(2 * t) / 2 : 1 - e(-2 * t + 2) / 2;
        });
    });
  (y = V.effects),
    V.effects.define("blind", "hide", function (t, e) {
      var i = {
          up: ["bottom", "top"],
          vertical: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          horizontal: ["right", "left"],
          right: ["left", "right"],
        },
        s = V(this),
        n = t.direction || "up",
        o = s.cssClip(),
        a = { clip: V.extend({}, o) },
        r = V.effects.createPlaceholder(s);
      (a.clip[i[n][0]] = a.clip[i[n][1]]),
        "show" === t.mode &&
          (s.cssClip(a.clip), r && r.css(V.effects.clipToBox(a)), (a.clip = o)),
        r && r.animate(V.effects.clipToBox(a), t.duration, t.easing),
        s.animate(a, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    V.effects.define("bounce", function (t, e) {
      var i,
        s,
        n = V(this),
        o = t.mode,
        a = "hide" === o,
        r = "show" === o,
        l = t.direction || "up",
        h = t.distance,
        c = t.times || 5,
        o = 2 * c + (r || a ? 1 : 0),
        u = t.duration / o,
        d = t.easing,
        p = "up" === l || "down" === l ? "top" : "left",
        f = "up" === l || "left" === l,
        g = 0,
        t = n.queue().length;
      for (
        V.effects.createPlaceholder(n),
          l = n.css(p),
          h = h || n["top" == p ? "outerHeight" : "outerWidth"]() / 3,
          r &&
            (((s = { opacity: 1 })[p] = l),
            n
              .css("opacity", 0)
              .css(p, f ? 2 * -h : 2 * h)
              .animate(s, u, d)),
          a && (h /= Math.pow(2, c - 1)),
          (s = {})[p] = l;
        g < c;
        g++
      )
        ((i = {})[p] = (f ? "-=" : "+=") + h),
          n.animate(i, u, d).animate(s, u, d),
          (h = a ? 2 * h : h / 2);
      a &&
        (((i = { opacity: 0 })[p] = (f ? "-=" : "+=") + h), n.animate(i, u, d)),
        n.queue(e),
        V.effects.unshift(n, t, 1 + o);
    }),
    V.effects.define("clip", "hide", function (t, e) {
      var i = {},
        s = V(this),
        n = t.direction || "vertical",
        o = "both" === n,
        a = o || "horizontal" === n,
        o = o || "vertical" === n,
        n = s.cssClip();
      (i.clip = {
        top: o ? (n.bottom - n.top) / 2 : n.top,
        right: a ? (n.right - n.left) / 2 : n.right,
        bottom: o ? (n.bottom - n.top) / 2 : n.bottom,
        left: a ? (n.right - n.left) / 2 : n.left,
      }),
        V.effects.createPlaceholder(s),
        "show" === t.mode && (s.cssClip(i.clip), (i.clip = n)),
        s.animate(i, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    V.effects.define("drop", "hide", function (t, e) {
      var i = V(this),
        s = "show" === t.mode,
        n = t.direction || "left",
        o = "up" === n || "down" === n ? "top" : "left",
        a = "up" === n || "left" === n ? "-=" : "+=",
        r = "+=" == a ? "-=" : "+=",
        l = { opacity: 0 };
      V.effects.createPlaceholder(i),
        (n =
          t.distance || i["top" == o ? "outerHeight" : "outerWidth"](!0) / 2),
        (l[o] = a + n),
        s && (i.css(l), (l[o] = r + n), (l.opacity = 1)),
        i.animate(l, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    V.effects.define("explode", "hide", function (t, e) {
      var i,
        s,
        n,
        o,
        a,
        r,
        l = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
        h = l,
        c = V(this),
        u = "show" === t.mode,
        d = c.show().css("visibility", "hidden").offset(),
        p = Math.ceil(c.outerWidth() / h),
        f = Math.ceil(c.outerHeight() / l),
        g = [];
      function m() {
        g.push(this),
          g.length === l * h &&
            (c.css({ visibility: "visible" }), V(g).remove(), e());
      }
      for (i = 0; i < l; i++)
        for (o = d.top + i * f, r = i - (l - 1) / 2, s = 0; s < h; s++)
          (n = d.left + s * p),
            (a = s - (h - 1) / 2),
            c
              .clone()
              .appendTo("body")
              .wrap("<div></div>")
              .css({
                position: "absolute",
                visibility: "visible",
                left: -s * p,
                top: -i * f,
              })
              .parent()
              .addClass("ui-effects-explode")
              .css({
                position: "absolute",
                overflow: "hidden",
                width: p,
                height: f,
                left: n + (u ? a * p : 0),
                top: o + (u ? r * f : 0),
                opacity: u ? 0 : 1,
              })
              .animate(
                {
                  left: n + (u ? 0 : a * p),
                  top: o + (u ? 0 : r * f),
                  opacity: u ? 1 : 0,
                },
                t.duration || 500,
                t.easing,
                m
              );
    }),
    V.effects.define("fade", "toggle", function (t, e) {
      var i = "show" === t.mode;
      V(this)
        .css("opacity", i ? 0 : 1)
        .animate(
          { opacity: i ? 1 : 0 },
          { queue: !1, duration: t.duration, easing: t.easing, complete: e }
        );
    }),
    V.effects.define("fold", "hide", function (e, t) {
      var i = V(this),
        s = e.mode,
        n = "show" === s,
        o = "hide" === s,
        a = e.size || 15,
        r = /([0-9]+)%/.exec(a),
        l = !!e.horizFirst ? ["right", "bottom"] : ["bottom", "right"],
        h = e.duration / 2,
        c = V.effects.createPlaceholder(i),
        u = i.cssClip(),
        d = { clip: V.extend({}, u) },
        p = { clip: V.extend({}, u) },
        f = [u[l[0]], u[l[1]]],
        s = i.queue().length;
      r && (a = (parseInt(r[1], 10) / 100) * f[o ? 0 : 1]),
        (d.clip[l[0]] = a),
        (p.clip[l[0]] = a),
        (p.clip[l[1]] = 0),
        n &&
          (i.cssClip(p.clip), c && c.css(V.effects.clipToBox(p)), (p.clip = u)),
        i
          .queue(function (t) {
            c &&
              c
                .animate(V.effects.clipToBox(d), h, e.easing)
                .animate(V.effects.clipToBox(p), h, e.easing),
              t();
          })
          .animate(d, h, e.easing)
          .animate(p, h, e.easing)
          .queue(t),
        V.effects.unshift(i, s, 4);
    }),
    V.effects.define("highlight", "show", function (t, e) {
      var i = V(this),
        s = { backgroundColor: i.css("backgroundColor") };
      "hide" === t.mode && (s.opacity = 0),
        V.effects.saveStyle(i),
        i
          .css({
            backgroundImage: "none",
            backgroundColor: t.color || "#ffff99",
          })
          .animate(s, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: e,
          });
    }),
    V.effects.define("size", function (s, e) {
      var n,
        i = V(this),
        t = ["fontSize"],
        o = [
          "borderTopWidth",
          "borderBottomWidth",
          "paddingTop",
          "paddingBottom",
        ],
        a = [
          "borderLeftWidth",
          "borderRightWidth",
          "paddingLeft",
          "paddingRight",
        ],
        r = s.mode,
        l = "effect" !== r,
        h = s.scale || "both",
        c = s.origin || ["middle", "center"],
        u = i.css("position"),
        d = i.position(),
        p = V.effects.scaledDimensions(i),
        f = s.from || p,
        g = s.to || V.effects.scaledDimensions(i, 0);
      V.effects.createPlaceholder(i),
        "show" === r && ((r = f), (f = g), (g = r)),
        (n = {
          from: { y: f.height / p.height, x: f.width / p.width },
          to: { y: g.height / p.height, x: g.width / p.width },
        }),
        ("box" !== h && "both" !== h) ||
          (n.from.y !== n.to.y &&
            ((f = V.effects.setTransition(i, o, n.from.y, f)),
            (g = V.effects.setTransition(i, o, n.to.y, g))),
          n.from.x !== n.to.x &&
            ((f = V.effects.setTransition(i, a, n.from.x, f)),
            (g = V.effects.setTransition(i, a, n.to.x, g)))),
        ("content" !== h && "both" !== h) ||
          (n.from.y !== n.to.y &&
            ((f = V.effects.setTransition(i, t, n.from.y, f)),
            (g = V.effects.setTransition(i, t, n.to.y, g)))),
        c &&
          ((c = V.effects.getBaseline(c, p)),
          (f.top = (p.outerHeight - f.outerHeight) * c.y + d.top),
          (f.left = (p.outerWidth - f.outerWidth) * c.x + d.left),
          (g.top = (p.outerHeight - g.outerHeight) * c.y + d.top),
          (g.left = (p.outerWidth - g.outerWidth) * c.x + d.left)),
        delete f.outerHeight,
        delete f.outerWidth,
        i.css(f),
        ("content" !== h && "both" !== h) ||
          ((o = o.concat(["marginTop", "marginBottom"]).concat(t)),
          (a = a.concat(["marginLeft", "marginRight"])),
          i.find("*[width]").each(function () {
            var t = V(this),
              e = V.effects.scaledDimensions(t),
              i = {
                height: e.height * n.from.y,
                width: e.width * n.from.x,
                outerHeight: e.outerHeight * n.from.y,
                outerWidth: e.outerWidth * n.from.x,
              },
              e = {
                height: e.height * n.to.y,
                width: e.width * n.to.x,
                outerHeight: e.height * n.to.y,
                outerWidth: e.width * n.to.x,
              };
            n.from.y !== n.to.y &&
              ((i = V.effects.setTransition(t, o, n.from.y, i)),
              (e = V.effects.setTransition(t, o, n.to.y, e))),
              n.from.x !== n.to.x &&
                ((i = V.effects.setTransition(t, a, n.from.x, i)),
                (e = V.effects.setTransition(t, a, n.to.x, e))),
              l && V.effects.saveStyle(t),
              t.css(i),
              t.animate(e, s.duration, s.easing, function () {
                l && V.effects.restoreStyle(t);
              });
          })),
        i.animate(g, {
          queue: !1,
          duration: s.duration,
          easing: s.easing,
          complete: function () {
            var t = i.offset();
            0 === g.opacity && i.css("opacity", f.opacity),
              l ||
                (i.css("position", "static" === u ? "relative" : u).offset(t),
                V.effects.saveStyle(i)),
              e();
          },
        });
    }),
    V.effects.define("scale", function (t, e) {
      var i = V(this),
        s = t.mode,
        s =
          parseInt(t.percent, 10) ||
          (0 === parseInt(t.percent, 10) || "effect" !== s ? 0 : 100),
        s = V.extend(
          !0,
          {
            from: V.effects.scaledDimensions(i),
            to: V.effects.scaledDimensions(i, s, t.direction || "both"),
            origin: t.origin || ["middle", "center"],
          },
          t
        );
      t.fade && ((s.from.opacity = 1), (s.to.opacity = 0)),
        V.effects.effect.size.call(this, s, e);
    }),
    V.effects.define("puff", "hide", function (t, e) {
      t = V.extend(!0, {}, t, {
        fade: !0,
        percent: parseInt(t.percent, 10) || 150,
      });
      V.effects.effect.scale.call(this, t, e);
    }),
    V.effects.define("pulsate", "show", function (t, e) {
      var i = V(this),
        s = t.mode,
        n = "show" === s,
        o = 2 * (t.times || 5) + (n || "hide" === s ? 1 : 0),
        a = t.duration / o,
        r = 0,
        l = 1,
        s = i.queue().length;
      for (
        (!n && i.is(":visible")) || (i.css("opacity", 0).show(), (r = 1));
        l < o;
        l++
      )
        i.animate({ opacity: r }, a, t.easing), (r = 1 - r);
      i.animate({ opacity: r }, a, t.easing),
        i.queue(e),
        V.effects.unshift(i, s, 1 + o);
    }),
    V.effects.define("shake", function (t, e) {
      var i = 1,
        s = V(this),
        n = t.direction || "left",
        o = t.distance || 20,
        a = t.times || 3,
        r = 2 * a + 1,
        l = Math.round(t.duration / r),
        h = "up" === n || "down" === n ? "top" : "left",
        c = "up" === n || "left" === n,
        u = {},
        d = {},
        p = {},
        n = s.queue().length;
      for (
        V.effects.createPlaceholder(s),
          u[h] = (c ? "-=" : "+=") + o,
          d[h] = (c ? "+=" : "-=") + 2 * o,
          p[h] = (c ? "-=" : "+=") + 2 * o,
          s.animate(u, l, t.easing);
        i < a;
        i++
      )
        s.animate(d, l, t.easing).animate(p, l, t.easing);
      s
        .animate(d, l, t.easing)
        .animate(u, l / 2, t.easing)
        .queue(e),
        V.effects.unshift(s, n, 1 + r);
    }),
    V.effects.define("slide", "show", function (t, e) {
      var i,
        s,
        n = V(this),
        o = {
          up: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          right: ["left", "right"],
        },
        a = t.mode,
        r = t.direction || "left",
        l = "up" === r || "down" === r ? "top" : "left",
        h = "up" === r || "left" === r,
        c = t.distance || n["top" == l ? "outerHeight" : "outerWidth"](!0),
        u = {};
      V.effects.createPlaceholder(n),
        (i = n.cssClip()),
        (s = n.position()[l]),
        (u[l] = (h ? -1 : 1) * c + s),
        (u.clip = n.cssClip()),
        (u.clip[o[r][1]] = u.clip[o[r][0]]),
        "show" === a &&
          (n.cssClip(u.clip), n.css(l, u[l]), (u.clip = i), (u[l] = s)),
        n.animate(u, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: e,
        });
    }),
    (y =
      !1 !== V.uiBackCompat
        ? V.effects.define("transfer", function (t, e) {
            V(this).transfer(t, e);
          })
        : y);
  (V.ui.focusable = function (t, e) {
    var i,
      s,
      n,
      o,
      a = t.nodeName.toLowerCase();
    return "area" === a
      ? ((s = (i = t.parentNode).name),
        !(!t.href || !s || "map" !== i.nodeName.toLowerCase()) &&
          0 < (s = V("img[usemap='#" + s + "']")).length &&
          s.is(":visible"))
      : (/^(input|select|textarea|button|object)$/.test(a)
          ? (n = !t.disabled) &&
            (o = V(t).closest("fieldset")[0]) &&
            (n = !o.disabled)
          : (n = ("a" === a && t.href) || e),
        n &&
          V(t).is(":visible") &&
          (function (t) {
            var e = t.css("visibility");
            for (; "inherit" === e; )
              (t = t.parent()), (e = t.css("visibility"));
            return "visible" === e;
          })(V(t)));
  }),
    V.extend(V.expr.pseudos, {
      focusable: function (t) {
        return V.ui.focusable(t, null != V.attr(t, "tabindex"));
      },
    });
  var Q, J;
  V.ui.focusable,
    (V.fn._form = function () {
      return "string" == typeof this[0].form
        ? this.closest("form")
        : V(this[0].form);
    }),
    (V.ui.formResetMixin = {
      _formResetHandler: function () {
        var e = V(this);
        setTimeout(function () {
          var t = e.data("ui-form-reset-instances");
          V.each(t, function () {
            this.refresh();
          });
        });
      },
      _bindFormResetHandler: function () {
        var t;
        (this.form = this.element._form()),
          this.form.length &&
            ((t = this.form.data("ui-form-reset-instances") || []).length ||
              this.form.on("reset.ui-form-reset", this._formResetHandler),
            t.push(this),
            this.form.data("ui-form-reset-instances", t));
      },
      _unbindFormResetHandler: function () {
        var t;
        this.form.length &&
          ((t = this.form.data("ui-form-reset-instances")).splice(
            V.inArray(this, t),
            1
          ),
          t.length
            ? this.form.data("ui-form-reset-instances", t)
            : this.form
                .removeData("ui-form-reset-instances")
                .off("reset.ui-form-reset"));
      },
    });
  V.expr.pseudos || (V.expr.pseudos = V.expr[":"]),
    V.uniqueSort || (V.uniqueSort = V.unique),
    V.escapeSelector ||
      ((Q = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g),
      (J = function (t, e) {
        return e
          ? "\0" === t
            ? "�"
            : t.slice(0, -1) +
              "\\" +
              t.charCodeAt(t.length - 1).toString(16) +
              " "
          : "\\" + t;
      }),
      (V.escapeSelector = function (t) {
        return (t + "").replace(Q, J);
      })),
    (V.fn.even && V.fn.odd) ||
      V.fn.extend({
        even: function () {
          return this.filter(function (t) {
            return t % 2 == 0;
          });
        },
        odd: function () {
          return this.filter(function (t) {
            return t % 2 == 1;
          });
        },
      });
  var Z;
  (V.ui.keyCode = {
    BACKSPACE: 8,
    COMMA: 188,
    DELETE: 46,
    DOWN: 40,
    END: 35,
    ENTER: 13,
    ESCAPE: 27,
    HOME: 36,
    LEFT: 37,
    PAGE_DOWN: 34,
    PAGE_UP: 33,
    PERIOD: 190,
    RIGHT: 39,
    SPACE: 32,
    TAB: 9,
    UP: 38,
  }),
    (V.fn.labels = function () {
      var t, e, i;
      return this.length
        ? this[0].labels && this[0].labels.length
          ? this.pushStack(this[0].labels)
          : ((e = this.eq(0).parents("label")),
            (t = this.attr("id")) &&
              ((i = (i = this.eq(0).parents().last()).add(
                (i.length ? i : this).siblings()
              )),
              (t = "label[for='" + V.escapeSelector(t) + "']"),
              (e = e.add(i.find(t).addBack(t)))),
            this.pushStack(e))
        : this.pushStack([]);
    }),
    (V.fn.scrollParent = function (t) {
      var e = this.css("position"),
        i = "absolute" === e,
        s = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
        t = this.parents()
          .filter(function () {
            var t = V(this);
            return (
              (!i || "static" !== t.css("position")) &&
              s.test(
                t.css("overflow") + t.css("overflow-y") + t.css("overflow-x")
              )
            );
          })
          .eq(0);
      return "fixed" !== e && t.length
        ? t
        : V(this[0].ownerDocument || document);
    }),
    V.extend(V.expr.pseudos, {
      tabbable: function (t) {
        var e = V.attr(t, "tabindex"),
          i = null != e;
        return (!i || 0 <= e) && V.ui.focusable(t, i);
      },
    }),
    V.fn.extend({
      uniqueId:
        ((Z = 0),
        function () {
          return this.each(function () {
            this.id || (this.id = "ui-id-" + ++Z);
          });
        }),
      removeUniqueId: function () {
        return this.each(function () {
          /^ui-id-\d+$/.test(this.id) && V(this).removeAttr("id");
        });
      },
    }),
    V.widget("ui.accordion", {
      version: "1.13.2",
      options: {
        active: 0,
        animate: {},
        classes: {
          "ui-accordion-header": "ui-corner-top",
          "ui-accordion-header-collapsed": "ui-corner-all",
          "ui-accordion-content": "ui-corner-bottom",
        },
        collapsible: !1,
        event: "click",
        header: function (t) {
          return t.find("> li > :first-child").add(t.find("> :not(li)").even());
        },
        heightStyle: "auto",
        icons: {
          activeHeader: "ui-icon-triangle-1-s",
          header: "ui-icon-triangle-1-e",
        },
        activate: null,
        beforeActivate: null,
      },
      hideProps: {
        borderTopWidth: "hide",
        borderBottomWidth: "hide",
        paddingTop: "hide",
        paddingBottom: "hide",
        height: "hide",
      },
      showProps: {
        borderTopWidth: "show",
        borderBottomWidth: "show",
        paddingTop: "show",
        paddingBottom: "show",
        height: "show",
      },
      _create: function () {
        var t = this.options;
        (this.prevShow = this.prevHide = V()),
          this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
          this.element.attr("role", "tablist"),
          t.collapsible ||
            (!1 !== t.active && null != t.active) ||
            (t.active = 0),
          this._processPanels(),
          t.active < 0 && (t.active += this.headers.length),
          this._refresh();
      },
      _getCreateEventData: function () {
        return {
          header: this.active,
          panel: this.active.length ? this.active.next() : V(),
        };
      },
      _createIcons: function () {
        var t,
          e = this.options.icons;
        e &&
          ((t = V("<span>")),
          this._addClass(t, "ui-accordion-header-icon", "ui-icon " + e.header),
          t.prependTo(this.headers),
          (t = this.active.children(".ui-accordion-header-icon")),
          this._removeClass(t, e.header)
            ._addClass(t, null, e.activeHeader)
            ._addClass(this.headers, "ui-accordion-icons"));
      },
      _destroyIcons: function () {
        this._removeClass(this.headers, "ui-accordion-icons"),
          this.headers.children(".ui-accordion-header-icon").remove();
      },
      _destroy: function () {
        var t;
        this.element.removeAttr("role"),
          this.headers
            .removeAttr(
              "role aria-expanded aria-selected aria-controls tabIndex"
            )
            .removeUniqueId(),
          this._destroyIcons(),
          (t = this.headers
            .next()
            .css("display", "")
            .removeAttr("role aria-hidden aria-labelledby")
            .removeUniqueId()),
          "content" !== this.options.heightStyle && t.css("height", "");
      },
      _setOption: function (t, e) {
        "active" !== t
          ? ("event" === t &&
              (this.options.event &&
                this._off(this.headers, this.options.event),
              this._setupEvents(e)),
            this._super(t, e),
            "collapsible" !== t ||
              e ||
              !1 !== this.options.active ||
              this._activate(0),
            "icons" === t && (this._destroyIcons(), e && this._createIcons()))
          : this._activate(e);
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", t),
          this._toggleClass(null, "ui-state-disabled", !!t),
          this._toggleClass(
            this.headers.add(this.headers.next()),
            null,
            "ui-state-disabled",
            !!t
          );
      },
      _keydown: function (t) {
        if (!t.altKey && !t.ctrlKey) {
          var e = V.ui.keyCode,
            i = this.headers.length,
            s = this.headers.index(t.target),
            n = !1;
          switch (t.keyCode) {
            case e.RIGHT:
            case e.DOWN:
              n = this.headers[(s + 1) % i];
              break;
            case e.LEFT:
            case e.UP:
              n = this.headers[(s - 1 + i) % i];
              break;
            case e.SPACE:
            case e.ENTER:
              this._eventHandler(t);
              break;
            case e.HOME:
              n = this.headers[0];
              break;
            case e.END:
              n = this.headers[i - 1];
          }
          n &&
            (V(t.target).attr("tabIndex", -1),
            V(n).attr("tabIndex", 0),
            V(n).trigger("focus"),
            t.preventDefault());
        }
      },
      _panelKeyDown: function (t) {
        t.keyCode === V.ui.keyCode.UP &&
          t.ctrlKey &&
          V(t.currentTarget).prev().trigger("focus");
      },
      refresh: function () {
        var t = this.options;
        this._processPanels(),
          (!1 === t.active && !0 === t.collapsible) || !this.headers.length
            ? ((t.active = !1), (this.active = V()))
            : !1 === t.active
            ? this._activate(0)
            : this.active.length && !V.contains(this.element[0], this.active[0])
            ? this.headers.length ===
              this.headers.find(".ui-state-disabled").length
              ? ((t.active = !1), (this.active = V()))
              : this._activate(Math.max(0, t.active - 1))
            : (t.active = this.headers.index(this.active)),
          this._destroyIcons(),
          this._refresh();
      },
      _processPanels: function () {
        var t = this.headers,
          e = this.panels;
        "function" == typeof this.options.header
          ? (this.headers = this.options.header(this.element))
          : (this.headers = this.element.find(this.options.header)),
          this._addClass(
            this.headers,
            "ui-accordion-header ui-accordion-header-collapsed",
            "ui-state-default"
          ),
          (this.panels = this.headers
            .next()
            .filter(":not(.ui-accordion-content-active)")
            .hide()),
          this._addClass(
            this.panels,
            "ui-accordion-content",
            "ui-helper-reset ui-widget-content"
          ),
          e && (this._off(t.not(this.headers)), this._off(e.not(this.panels)));
      },
      _refresh: function () {
        var i,
          t = this.options,
          e = t.heightStyle,
          s = this.element.parent();
        (this.active = this._findActive(t.active)),
          this._addClass(
            this.active,
            "ui-accordion-header-active",
            "ui-state-active"
          )._removeClass(this.active, "ui-accordion-header-collapsed"),
          this._addClass(this.active.next(), "ui-accordion-content-active"),
          this.active.next().show(),
          this.headers
            .attr("role", "tab")
            .each(function () {
              var t = V(this),
                e = t.uniqueId().attr("id"),
                i = t.next(),
                s = i.uniqueId().attr("id");
              t.attr("aria-controls", s), i.attr("aria-labelledby", e);
            })
            .next()
            .attr("role", "tabpanel"),
          this.headers
            .not(this.active)
            .attr({
              "aria-selected": "false",
              "aria-expanded": "false",
              tabIndex: -1,
            })
            .next()
            .attr({ "aria-hidden": "true" })
            .hide(),
          this.active.length
            ? this.active
                .attr({
                  "aria-selected": "true",
                  "aria-expanded": "true",
                  tabIndex: 0,
                })
                .next()
                .attr({ "aria-hidden": "false" })
            : this.headers.eq(0).attr("tabIndex", 0),
          this._createIcons(),
          this._setupEvents(t.event),
          "fill" === e
            ? ((i = s.height()),
              this.element.siblings(":visible").each(function () {
                var t = V(this),
                  e = t.css("position");
                "absolute" !== e && "fixed" !== e && (i -= t.outerHeight(!0));
              }),
              this.headers.each(function () {
                i -= V(this).outerHeight(!0);
              }),
              this.headers
                .next()
                .each(function () {
                  V(this).height(
                    Math.max(0, i - V(this).innerHeight() + V(this).height())
                  );
                })
                .css("overflow", "auto"))
            : "auto" === e &&
              ((i = 0),
              this.headers
                .next()
                .each(function () {
                  var t = V(this).is(":visible");
                  t || V(this).show(),
                    (i = Math.max(i, V(this).css("height", "").height())),
                    t || V(this).hide();
                })
                .height(i));
      },
      _activate: function (t) {
        t = this._findActive(t)[0];
        t !== this.active[0] &&
          ((t = t || this.active[0]),
          this._eventHandler({
            target: t,
            currentTarget: t,
            preventDefault: V.noop,
          }));
      },
      _findActive: function (t) {
        return "number" == typeof t ? this.headers.eq(t) : V();
      },
      _setupEvents: function (t) {
        var i = { keydown: "_keydown" };
        t &&
          V.each(t.split(" "), function (t, e) {
            i[e] = "_eventHandler";
          }),
          this._off(this.headers.add(this.headers.next())),
          this._on(this.headers, i),
          this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
          this._hoverable(this.headers),
          this._focusable(this.headers);
      },
      _eventHandler: function (t) {
        var e = this.options,
          i = this.active,
          s = V(t.currentTarget),
          n = s[0] === i[0],
          o = n && e.collapsible,
          a = o ? V() : s.next(),
          r = i.next(),
          a = {
            oldHeader: i,
            oldPanel: r,
            newHeader: o ? V() : s,
            newPanel: a,
          };
        t.preventDefault(),
          (n && !e.collapsible) ||
            !1 === this._trigger("beforeActivate", t, a) ||
            ((e.active = !o && this.headers.index(s)),
            (this.active = n ? V() : s),
            this._toggle(a),
            this._removeClass(
              i,
              "ui-accordion-header-active",
              "ui-state-active"
            ),
            e.icons &&
              ((i = i.children(".ui-accordion-header-icon")),
              this._removeClass(i, null, e.icons.activeHeader)._addClass(
                i,
                null,
                e.icons.header
              )),
            n ||
              (this._removeClass(s, "ui-accordion-header-collapsed")._addClass(
                s,
                "ui-accordion-header-active",
                "ui-state-active"
              ),
              e.icons &&
                ((n = s.children(".ui-accordion-header-icon")),
                this._removeClass(n, null, e.icons.header)._addClass(
                  n,
                  null,
                  e.icons.activeHeader
                )),
              this._addClass(s.next(), "ui-accordion-content-active")));
      },
      _toggle: function (t) {
        var e = t.newPanel,
          i = this.prevShow.length ? this.prevShow : t.oldPanel;
        this.prevShow.add(this.prevHide).stop(!0, !0),
          (this.prevShow = e),
          (this.prevHide = i),
          this.options.animate
            ? this._animate(e, i, t)
            : (i.hide(), e.show(), this._toggleComplete(t)),
          i.attr({ "aria-hidden": "true" }),
          i.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }),
          e.length && i.length
            ? i.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
            : e.length &&
              this.headers
                .filter(function () {
                  return 0 === parseInt(V(this).attr("tabIndex"), 10);
                })
                .attr("tabIndex", -1),
          e.attr("aria-hidden", "false").prev().attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _animate: function (t, i, e) {
        var s,
          n,
          o,
          a = this,
          r = 0,
          l = t.css("box-sizing"),
          h = t.length && (!i.length || t.index() < i.index()),
          c = this.options.animate || {},
          u = (h && c.down) || c,
          h = function () {
            a._toggleComplete(e);
          };
        return (
          (n = (n = "string" == typeof u ? u : n) || u.easing || c.easing),
          (o = (o = "number" == typeof u ? u : o) || u.duration || c.duration),
          i.length
            ? t.length
              ? ((s = t.show().outerHeight()),
                i.animate(this.hideProps, {
                  duration: o,
                  easing: n,
                  step: function (t, e) {
                    e.now = Math.round(t);
                  },
                }),
                void t.hide().animate(this.showProps, {
                  duration: o,
                  easing: n,
                  complete: h,
                  step: function (t, e) {
                    (e.now = Math.round(t)),
                      "height" !== e.prop
                        ? "content-box" === l && (r += e.now)
                        : "content" !== a.options.heightStyle &&
                          ((e.now = Math.round(s - i.outerHeight() - r)),
                          (r = 0));
                  },
                }))
              : i.animate(this.hideProps, o, n, h)
            : t.animate(this.showProps, o, n, h)
        );
      },
      _toggleComplete: function (t) {
        var e = t.oldPanel,
          i = e.prev();
        this._removeClass(e, "ui-accordion-content-active"),
          this._removeClass(i, "ui-accordion-header-active")._addClass(
            i,
            "ui-accordion-header-collapsed"
          ),
          e.length && (e.parent()[0].className = e.parent()[0].className),
          this._trigger("activate", null, t);
      },
    }),
    (V.ui.safeActiveElement = function (e) {
      var i;
      try {
        i = e.activeElement;
      } catch (t) {
        i = e.body;
      }
      return (i = !(i = i || e.body).nodeName ? e.body : i);
    }),
    V.widget("ui.menu", {
      version: "1.13.2",
      defaultElement: "<ul>",
      delay: 300,
      options: {
        icons: { submenu: "ui-icon-caret-1-e" },
        items: "> *",
        menus: "ul",
        position: { my: "left top", at: "right top" },
        role: "menu",
        blur: null,
        focus: null,
        select: null,
      },
      _create: function () {
        (this.activeMenu = this.element),
          (this.mouseHandled = !1),
          (this.lastMousePosition = { x: null, y: null }),
          this.element
            .uniqueId()
            .attr({ role: this.options.role, tabIndex: 0 }),
          this._addClass("ui-menu", "ui-widget ui-widget-content"),
          this._on({
            "mousedown .ui-menu-item": function (t) {
              t.preventDefault(), this._activateItem(t);
            },
            "click .ui-menu-item": function (t) {
              var e = V(t.target),
                i = V(V.ui.safeActiveElement(this.document[0]));
              !this.mouseHandled &&
                e.not(".ui-state-disabled").length &&
                (this.select(t),
                t.isPropagationStopped() || (this.mouseHandled = !0),
                e.has(".ui-menu").length
                  ? this.expand(t)
                  : !this.element.is(":focus") &&
                    i.closest(".ui-menu").length &&
                    (this.element.trigger("focus", [!0]),
                    this.active &&
                      1 === this.active.parents(".ui-menu").length &&
                      clearTimeout(this.timer)));
            },
            "mouseenter .ui-menu-item": "_activateItem",
            "mousemove .ui-menu-item": "_activateItem",
            mouseleave: "collapseAll",
            "mouseleave .ui-menu": "collapseAll",
            focus: function (t, e) {
              var i = this.active || this._menuItems().first();
              e || this.focus(t, i);
            },
            blur: function (t) {
              this._delay(function () {
                V.contains(
                  this.element[0],
                  V.ui.safeActiveElement(this.document[0])
                ) || this.collapseAll(t);
              });
            },
            keydown: "_keydown",
          }),
          this.refresh(),
          this._on(this.document, {
            click: function (t) {
              this._closeOnDocumentClick(t) && this.collapseAll(t, !0),
                (this.mouseHandled = !1);
            },
          });
      },
      _activateItem: function (t) {
        var e, i;
        this.previousFilter ||
          (t.clientX === this.lastMousePosition.x &&
            t.clientY === this.lastMousePosition.y) ||
          ((this.lastMousePosition = { x: t.clientX, y: t.clientY }),
          (e = V(t.target).closest(".ui-menu-item")),
          (i = V(t.currentTarget)),
          e[0] === i[0] &&
            (i.is(".ui-state-active") ||
              (this._removeClass(
                i.siblings().children(".ui-state-active"),
                null,
                "ui-state-active"
              ),
              this.focus(t, i))));
      },
      _destroy: function () {
        var t = this.element
          .find(".ui-menu-item")
          .removeAttr("role aria-disabled")
          .children(".ui-menu-item-wrapper")
          .removeUniqueId()
          .removeAttr("tabIndex role aria-haspopup");
        this.element
          .removeAttr("aria-activedescendant")
          .find(".ui-menu")
          .addBack()
          .removeAttr(
            "role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex"
          )
          .removeUniqueId()
          .show(),
          t.children().each(function () {
            var t = V(this);
            t.data("ui-menu-submenu-caret") && t.remove();
          });
      },
      _keydown: function (t) {
        var e,
          i,
          s,
          n = !0;
        switch (t.keyCode) {
          case V.ui.keyCode.PAGE_UP:
            this.previousPage(t);
            break;
          case V.ui.keyCode.PAGE_DOWN:
            this.nextPage(t);
            break;
          case V.ui.keyCode.HOME:
            this._move("first", "first", t);
            break;
          case V.ui.keyCode.END:
            this._move("last", "last", t);
            break;
          case V.ui.keyCode.UP:
            this.previous(t);
            break;
          case V.ui.keyCode.DOWN:
            this.next(t);
            break;
          case V.ui.keyCode.LEFT:
            this.collapse(t);
            break;
          case V.ui.keyCode.RIGHT:
            this.active &&
              !this.active.is(".ui-state-disabled") &&
              this.expand(t);
            break;
          case V.ui.keyCode.ENTER:
          case V.ui.keyCode.SPACE:
            this._activate(t);
            break;
          case V.ui.keyCode.ESCAPE:
            this.collapse(t);
            break;
          default:
            (e = this.previousFilter || ""),
              (s = n = !1),
              (i =
                96 <= t.keyCode && t.keyCode <= 105
                  ? (t.keyCode - 96).toString()
                  : String.fromCharCode(t.keyCode)),
              clearTimeout(this.filterTimer),
              i === e ? (s = !0) : (i = e + i),
              (e = this._filterMenuItems(i)),
              (e =
                s && -1 !== e.index(this.active.next())
                  ? this.active.nextAll(".ui-menu-item")
                  : e).length ||
                ((i = String.fromCharCode(t.keyCode)),
                (e = this._filterMenuItems(i))),
              e.length
                ? (this.focus(t, e),
                  (this.previousFilter = i),
                  (this.filterTimer = this._delay(function () {
                    delete this.previousFilter;
                  }, 1e3)))
                : delete this.previousFilter;
        }
        n && t.preventDefault();
      },
      _activate: function (t) {
        this.active &&
          !this.active.is(".ui-state-disabled") &&
          (this.active.children("[aria-haspopup='true']").length
            ? this.expand(t)
            : this.select(t));
      },
      refresh: function () {
        var t,
          e,
          s = this,
          n = this.options.icons.submenu,
          i = this.element.find(this.options.menus);
        this._toggleClass(
          "ui-menu-icons",
          null,
          !!this.element.find(".ui-icon").length
        ),
          (e = i
            .filter(":not(.ui-menu)")
            .hide()
            .attr({
              role: this.options.role,
              "aria-hidden": "true",
              "aria-expanded": "false",
            })
            .each(function () {
              var t = V(this),
                e = t.prev(),
                i = V("<span>").data("ui-menu-submenu-caret", !0);
              s._addClass(i, "ui-menu-icon", "ui-icon " + n),
                e.attr("aria-haspopup", "true").prepend(i),
                t.attr("aria-labelledby", e.attr("id"));
            })),
          this._addClass(e, "ui-menu", "ui-widget ui-widget-content ui-front"),
          (t = i.add(this.element).find(this.options.items))
            .not(".ui-menu-item")
            .each(function () {
              var t = V(this);
              s._isDivider(t) &&
                s._addClass(t, "ui-menu-divider", "ui-widget-content");
            }),
          (i = (e = t.not(".ui-menu-item, .ui-menu-divider"))
            .children()
            .not(".ui-menu")
            .uniqueId()
            .attr({ tabIndex: -1, role: this._itemRole() })),
          this._addClass(e, "ui-menu-item")._addClass(
            i,
            "ui-menu-item-wrapper"
          ),
          t.filter(".ui-state-disabled").attr("aria-disabled", "true"),
          this.active &&
            !V.contains(this.element[0], this.active[0]) &&
            this.blur();
      },
      _itemRole: function () {
        return { menu: "menuitem", listbox: "option" }[this.options.role];
      },
      _setOption: function (t, e) {
        var i;
        "icons" === t &&
          ((i = this.element.find(".ui-menu-icon")),
          this._removeClass(i, null, this.options.icons.submenu)._addClass(
            i,
            null,
            e.submenu
          )),
          this._super(t, e);
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", String(t)),
          this._toggleClass(null, "ui-state-disabled", !!t);
      },
      focus: function (t, e) {
        var i;
        this.blur(t, t && "focus" === t.type),
          this._scrollIntoView(e),
          (this.active = e.first()),
          (i = this.active.children(".ui-menu-item-wrapper")),
          this._addClass(i, null, "ui-state-active"),
          this.options.role &&
            this.element.attr("aria-activedescendant", i.attr("id")),
          (i = this.active
            .parent()
            .closest(".ui-menu-item")
            .children(".ui-menu-item-wrapper")),
          this._addClass(i, null, "ui-state-active"),
          t && "keydown" === t.type
            ? this._close()
            : (this.timer = this._delay(function () {
                this._close();
              }, this.delay)),
          (i = e.children(".ui-menu")).length &&
            t &&
            /^mouse/.test(t.type) &&
            this._startOpening(i),
          (this.activeMenu = e.parent()),
          this._trigger("focus", t, { item: e });
      },
      _scrollIntoView: function (t) {
        var e, i, s;
        this._hasScroll() &&
          ((i = parseFloat(V.css(this.activeMenu[0], "borderTopWidth")) || 0),
          (s = parseFloat(V.css(this.activeMenu[0], "paddingTop")) || 0),
          (e = t.offset().top - this.activeMenu.offset().top - i - s),
          (i = this.activeMenu.scrollTop()),
          (s = this.activeMenu.height()),
          (t = t.outerHeight()),
          e < 0
            ? this.activeMenu.scrollTop(i + e)
            : s < e + t && this.activeMenu.scrollTop(i + e - s + t));
      },
      blur: function (t, e) {
        e || clearTimeout(this.timer),
          this.active &&
            (this._removeClass(
              this.active.children(".ui-menu-item-wrapper"),
              null,
              "ui-state-active"
            ),
            this._trigger("blur", t, { item: this.active }),
            (this.active = null));
      },
      _startOpening: function (t) {
        clearTimeout(this.timer),
          "true" === t.attr("aria-hidden") &&
            (this.timer = this._delay(function () {
              this._close(), this._open(t);
            }, this.delay));
      },
      _open: function (t) {
        var e = V.extend({ of: this.active }, this.options.position);
        clearTimeout(this.timer),
          this.element
            .find(".ui-menu")
            .not(t.parents(".ui-menu"))
            .hide()
            .attr("aria-hidden", "true"),
          t
            .show()
            .removeAttr("aria-hidden")
            .attr("aria-expanded", "true")
            .position(e);
      },
      collapseAll: function (e, i) {
        clearTimeout(this.timer),
          (this.timer = this._delay(
            function () {
              var t = i
                ? this.element
                : V(e && e.target).closest(this.element.find(".ui-menu"));
              t.length || (t = this.element),
                this._close(t),
                this.blur(e),
                this._removeClass(
                  t.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                (this.activeMenu = t);
            },
            i ? 0 : this.delay
          ));
      },
      _close: function (t) {
        (t = t || (this.active ? this.active.parent() : this.element))
          .find(".ui-menu")
          .hide()
          .attr("aria-hidden", "true")
          .attr("aria-expanded", "false");
      },
      _closeOnDocumentClick: function (t) {
        return !V(t.target).closest(".ui-menu").length;
      },
      _isDivider: function (t) {
        return !/[^\-\u2014\u2013\s]/.test(t.text());
      },
      collapse: function (t) {
        var e =
          this.active &&
          this.active.parent().closest(".ui-menu-item", this.element);
        e && e.length && (this._close(), this.focus(t, e));
      },
      expand: function (t) {
        var e =
          this.active &&
          this._menuItems(this.active.children(".ui-menu")).first();
        e &&
          e.length &&
          (this._open(e.parent()),
          this._delay(function () {
            this.focus(t, e);
          }));
      },
      next: function (t) {
        this._move("next", "first", t);
      },
      previous: function (t) {
        this._move("prev", "last", t);
      },
      isFirstItem: function () {
        return this.active && !this.active.prevAll(".ui-menu-item").length;
      },
      isLastItem: function () {
        return this.active && !this.active.nextAll(".ui-menu-item").length;
      },
      _menuItems: function (t) {
        return (t || this.element)
          .find(this.options.items)
          .filter(".ui-menu-item");
      },
      _move: function (t, e, i) {
        var s;
        ((s = this.active
          ? "first" === t || "last" === t
            ? this.active["first" === t ? "prevAll" : "nextAll"](
                ".ui-menu-item"
              ).last()
            : this.active[t + "All"](".ui-menu-item").first()
          : s) &&
          s.length &&
          this.active) ||
          (s = this._menuItems(this.activeMenu)[e]()),
          this.focus(i, s);
      },
      nextPage: function (t) {
        var e, i, s;
        this.active
          ? this.isLastItem() ||
            (this._hasScroll()
              ? ((i = this.active.offset().top),
                (s = this.element.innerHeight()),
                0 === V.fn.jquery.indexOf("3.2.") &&
                  (s +=
                    this.element[0].offsetHeight - this.element.outerHeight()),
                this.active.nextAll(".ui-menu-item").each(function () {
                  return (e = V(this)).offset().top - i - s < 0;
                }),
                this.focus(t, e))
              : this.focus(
                  t,
                  this._menuItems(this.activeMenu)[
                    this.active ? "last" : "first"
                  ]()
                ))
          : this.next(t);
      },
      previousPage: function (t) {
        var e, i, s;
        this.active
          ? this.isFirstItem() ||
            (this._hasScroll()
              ? ((i = this.active.offset().top),
                (s = this.element.innerHeight()),
                0 === V.fn.jquery.indexOf("3.2.") &&
                  (s +=
                    this.element[0].offsetHeight - this.element.outerHeight()),
                this.active.prevAll(".ui-menu-item").each(function () {
                  return 0 < (e = V(this)).offset().top - i + s;
                }),
                this.focus(t, e))
              : this.focus(t, this._menuItems(this.activeMenu).first()))
          : this.next(t);
      },
      _hasScroll: function () {
        return this.element.outerHeight() < this.element.prop("scrollHeight");
      },
      select: function (t) {
        this.active = this.active || V(t.target).closest(".ui-menu-item");
        var e = { item: this.active };
        this.active.has(".ui-menu").length || this.collapseAll(t, !0),
          this._trigger("select", t, e);
      },
      _filterMenuItems: function (t) {
        var t = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
          e = new RegExp("^" + t, "i");
        return this.activeMenu
          .find(this.options.items)
          .filter(".ui-menu-item")
          .filter(function () {
            return e.test(
              String.prototype.trim.call(
                V(this).children(".ui-menu-item-wrapper").text()
              )
            );
          });
      },
    });
  V.widget("ui.autocomplete", {
    version: "1.13.2",
    defaultElement: "<input>",
    options: {
      appendTo: null,
      autoFocus: !1,
      delay: 300,
      minLength: 1,
      position: { my: "left top", at: "left bottom", collision: "none" },
      source: null,
      change: null,
      close: null,
      focus: null,
      open: null,
      response: null,
      search: null,
      select: null,
    },
    requestIndex: 0,
    pending: 0,
    liveRegionTimer: null,
    _create: function () {
      var i,
        s,
        n,
        t = this.element[0].nodeName.toLowerCase(),
        e = "textarea" === t,
        t = "input" === t;
      (this.isMultiLine = e || (!t && this._isContentEditable(this.element))),
        (this.valueMethod = this.element[e || t ? "val" : "text"]),
        (this.isNewMenu = !0),
        this._addClass("ui-autocomplete-input"),
        this.element.attr("autocomplete", "off"),
        this._on(this.element, {
          keydown: function (t) {
            if (this.element.prop("readOnly")) s = n = i = !0;
            else {
              s = n = i = !1;
              var e = V.ui.keyCode;
              switch (t.keyCode) {
                case e.PAGE_UP:
                  (i = !0), this._move("previousPage", t);
                  break;
                case e.PAGE_DOWN:
                  (i = !0), this._move("nextPage", t);
                  break;
                case e.UP:
                  (i = !0), this._keyEvent("previous", t);
                  break;
                case e.DOWN:
                  (i = !0), this._keyEvent("next", t);
                  break;
                case e.ENTER:
                  this.menu.active &&
                    ((i = !0), t.preventDefault(), this.menu.select(t));
                  break;
                case e.TAB:
                  this.menu.active && this.menu.select(t);
                  break;
                case e.ESCAPE:
                  this.menu.element.is(":visible") &&
                    (this.isMultiLine || this._value(this.term),
                    this.close(t),
                    t.preventDefault());
                  break;
                default:
                  (s = !0), this._searchTimeout(t);
              }
            }
          },
          keypress: function (t) {
            if (i)
              return (
                (i = !1),
                void (
                  (this.isMultiLine && !this.menu.element.is(":visible")) ||
                  t.preventDefault()
                )
              );
            if (!s) {
              var e = V.ui.keyCode;
              switch (t.keyCode) {
                case e.PAGE_UP:
                  this._move("previousPage", t);
                  break;
                case e.PAGE_DOWN:
                  this._move("nextPage", t);
                  break;
                case e.UP:
                  this._keyEvent("previous", t);
                  break;
                case e.DOWN:
                  this._keyEvent("next", t);
              }
            }
          },
          input: function (t) {
            if (n) return (n = !1), void t.preventDefault();
            this._searchTimeout(t);
          },
          focus: function () {
            (this.selectedItem = null), (this.previous = this._value());
          },
          blur: function (t) {
            clearTimeout(this.searching), this.close(t), this._change(t);
          },
        }),
        this._initSource(),
        (this.menu = V("<ul>")
          .appendTo(this._appendTo())
          .menu({ role: null })
          .hide()
          .attr({ unselectable: "on" })
          .menu("instance")),
        this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
        this._on(this.menu.element, {
          mousedown: function (t) {
            t.preventDefault();
          },
          menufocus: function (t, e) {
            var i, s;
            if (
              this.isNewMenu &&
              ((this.isNewMenu = !1),
              t.originalEvent && /^mouse/.test(t.originalEvent.type))
            )
              return (
                this.menu.blur(),
                void this.document.one("mousemove", function () {
                  V(t.target).trigger(t.originalEvent);
                })
              );
            (s = e.item.data("ui-autocomplete-item")),
              !1 !== this._trigger("focus", t, { item: s }) &&
                t.originalEvent &&
                /^key/.test(t.originalEvent.type) &&
                this._value(s.value),
              (i = e.item.attr("aria-label") || s.value) &&
                String.prototype.trim.call(i).length &&
                (clearTimeout(this.liveRegionTimer),
                (this.liveRegionTimer = this._delay(function () {
                  this.liveRegion.html(V("<div>").text(i));
                }, 100)));
          },
          menuselect: function (t, e) {
            var i = e.item.data("ui-autocomplete-item"),
              s = this.previous;
            this.element[0] !== V.ui.safeActiveElement(this.document[0]) &&
              (this.element.trigger("focus"),
              (this.previous = s),
              this._delay(function () {
                (this.previous = s), (this.selectedItem = i);
              })),
              !1 !== this._trigger("select", t, { item: i }) &&
                this._value(i.value),
              (this.term = this._value()),
              this.close(t),
              (this.selectedItem = i);
          },
        }),
        (this.liveRegion = V("<div>", {
          role: "status",
          "aria-live": "assertive",
          "aria-relevant": "additions",
        }).appendTo(this.document[0].body)),
        this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
        this._on(this.window, {
          beforeunload: function () {
            this.element.removeAttr("autocomplete");
          },
        });
    },
    _destroy: function () {
      clearTimeout(this.searching),
        this.element.removeAttr("autocomplete"),
        this.menu.element.remove(),
        this.liveRegion.remove();
    },
    _setOption: function (t, e) {
      this._super(t, e),
        "source" === t && this._initSource(),
        "appendTo" === t && this.menu.element.appendTo(this._appendTo()),
        "disabled" === t && e && this.xhr && this.xhr.abort();
    },
    _isEventTargetInWidget: function (t) {
      var e = this.menu.element[0];
      return (
        t.target === this.element[0] ||
        t.target === e ||
        V.contains(e, t.target)
      );
    },
    _closeOnClickOutside: function (t) {
      this._isEventTargetInWidget(t) || this.close();
    },
    _appendTo: function () {
      var t = this.options.appendTo;
      return (t = !(t =
        !(t =
          t && (t.jquery || t.nodeType ? V(t) : this.document.find(t).eq(0))) ||
        !t[0]
          ? this.element.closest(".ui-front, dialog")
          : t).length
        ? this.document[0].body
        : t);
    },
    _initSource: function () {
      var i,
        s,
        n = this;
      Array.isArray(this.options.source)
        ? ((i = this.options.source),
          (this.source = function (t, e) {
            e(V.ui.autocomplete.filter(i, t.term));
          }))
        : "string" == typeof this.options.source
        ? ((s = this.options.source),
          (this.source = function (t, e) {
            n.xhr && n.xhr.abort(),
              (n.xhr = V.ajax({
                url: s,
                data: t,
                dataType: "json",
                success: function (t) {
                  e(t);
                },
                error: function () {
                  e([]);
                },
              }));
          }))
        : (this.source = this.options.source);
    },
    _searchTimeout: function (s) {
      clearTimeout(this.searching),
        (this.searching = this._delay(function () {
          var t = this.term === this._value(),
            e = this.menu.element.is(":visible"),
            i = s.altKey || s.ctrlKey || s.metaKey || s.shiftKey;
          (t && (e || i)) || ((this.selectedItem = null), this.search(null, s));
        }, this.options.delay));
    },
    search: function (t, e) {
      return (
        (t = null != t ? t : this._value()),
        (this.term = this._value()),
        t.length < this.options.minLength
          ? this.close(e)
          : !1 !== this._trigger("search", e)
          ? this._search(t)
          : void 0
      );
    },
    _search: function (t) {
      this.pending++,
        this._addClass("ui-autocomplete-loading"),
        (this.cancelSearch = !1),
        this.source({ term: t }, this._response());
    },
    _response: function () {
      var e = ++this.requestIndex;
      return function (t) {
        e === this.requestIndex && this.__response(t),
          this.pending--,
          this.pending || this._removeClass("ui-autocomplete-loading");
      }.bind(this);
    },
    __response: function (t) {
      (t = t && this._normalize(t)),
        this._trigger("response", null, { content: t }),
        !this.options.disabled && t && t.length && !this.cancelSearch
          ? (this._suggest(t), this._trigger("open"))
          : this._close();
    },
    close: function (t) {
      (this.cancelSearch = !0), this._close(t);
    },
    _close: function (t) {
      this._off(this.document, "mousedown"),
        this.menu.element.is(":visible") &&
          (this.menu.element.hide(),
          this.menu.blur(),
          (this.isNewMenu = !0),
          this._trigger("close", t));
    },
    _change: function (t) {
      this.previous !== this._value() &&
        this._trigger("change", t, { item: this.selectedItem });
    },
    _normalize: function (t) {
      return t.length && t[0].label && t[0].value
        ? t
        : V.map(t, function (t) {
            return "string" == typeof t
              ? { label: t, value: t }
              : V.extend({}, t, {
                  label: t.label || t.value,
                  value: t.value || t.label,
                });
          });
    },
    _suggest: function (t) {
      var e = this.menu.element.empty();
      this._renderMenu(e, t),
        (this.isNewMenu = !0),
        this.menu.refresh(),
        e.show(),
        this._resizeMenu(),
        e.position(V.extend({ of: this.element }, this.options.position)),
        this.options.autoFocus && this.menu.next(),
        this._on(this.document, { mousedown: "_closeOnClickOutside" });
    },
    _resizeMenu: function () {
      var t = this.menu.element;
      t.outerWidth(
        Math.max(t.width("").outerWidth() + 1, this.element.outerWidth())
      );
    },
    _renderMenu: function (i, t) {
      var s = this;
      V.each(t, function (t, e) {
        s._renderItemData(i, e);
      });
    },
    _renderItemData: function (t, e) {
      return this._renderItem(t, e).data("ui-autocomplete-item", e);
    },
    _renderItem: function (t, e) {
      return V("<li>").append(V("<div>").text(e.label)).appendTo(t);
    },
    _move: function (t, e) {
      if (this.menu.element.is(":visible"))
        return (this.menu.isFirstItem() && /^previous/.test(t)) ||
          (this.menu.isLastItem() && /^next/.test(t))
          ? (this.isMultiLine || this._value(this.term), void this.menu.blur())
          : void this.menu[t](e);
      this.search(null, e);
    },
    widget: function () {
      return this.menu.element;
    },
    _value: function () {
      return this.valueMethod.apply(this.element, arguments);
    },
    _keyEvent: function (t, e) {
      (this.isMultiLine && !this.menu.element.is(":visible")) ||
        (this._move(t, e), e.preventDefault());
    },
    _isContentEditable: function (t) {
      if (!t.length) return !1;
      var e = t.prop("contentEditable");
      return "inherit" === e
        ? this._isContentEditable(t.parent())
        : "true" === e;
    },
  }),
    V.extend(V.ui.autocomplete, {
      escapeRegex: function (t) {
        return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
      },
      filter: function (t, e) {
        var i = new RegExp(V.ui.autocomplete.escapeRegex(e), "i");
        return V.grep(t, function (t) {
          return i.test(t.label || t.value || t);
        });
      },
    }),
    V.widget("ui.autocomplete", V.ui.autocomplete, {
      options: {
        messages: {
          noResults: "No search results.",
          results: function (t) {
            return (
              t +
              (1 < t ? " results are" : " result is") +
              " available, use up and down arrow keys to navigate."
            );
          },
        },
      },
      __response: function (t) {
        var e;
        this._superApply(arguments),
          this.options.disabled ||
            this.cancelSearch ||
            ((e =
              t && t.length
                ? this.options.messages.results(t.length)
                : this.options.messages.noResults),
            clearTimeout(this.liveRegionTimer),
            (this.liveRegionTimer = this._delay(function () {
              this.liveRegion.html(V("<div>").text(e));
            }, 100)));
      },
    });
  V.ui.autocomplete;
  var tt = /ui-corner-([a-z]){2,6}/g;
  V.widget("ui.controlgroup", {
    version: "1.13.2",
    defaultElement: "<div>",
    options: {
      direction: "horizontal",
      disabled: null,
      onlyVisible: !0,
      items: {
        button:
          "input[type=button], input[type=submit], input[type=reset], button, a",
        controlgroupLabel: ".ui-controlgroup-label",
        checkboxradio: "input[type='checkbox'], input[type='radio']",
        selectmenu: "select",
        spinner: ".ui-spinner-input",
      },
    },
    _create: function () {
      this._enhance();
    },
    _enhance: function () {
      this.element.attr("role", "toolbar"), this.refresh();
    },
    _destroy: function () {
      this._callChildMethod("destroy"),
        this.childWidgets.removeData("ui-controlgroup-data"),
        this.element.removeAttr("role"),
        this.options.items.controlgroupLabel &&
          this.element
            .find(this.options.items.controlgroupLabel)
            .find(".ui-controlgroup-label-contents")
            .contents()
            .unwrap();
    },
    _initWidgets: function () {
      var o = this,
        a = [];
      V.each(this.options.items, function (s, t) {
        var e,
          n = {};
        if (t)
          return "controlgroupLabel" === s
            ? ((e = o.element.find(t)).each(function () {
                var t = V(this);
                t.children(".ui-controlgroup-label-contents").length ||
                  t
                    .contents()
                    .wrapAll(
                      "<span class='ui-controlgroup-label-contents'></span>"
                    );
              }),
              o._addClass(
                e,
                null,
                "ui-widget ui-widget-content ui-state-default"
              ),
              void (a = a.concat(e.get())))
            : void (
                V.fn[s] &&
                ((n = o["_" + s + "Options"]
                  ? o["_" + s + "Options"]("middle")
                  : { classes: {} }),
                o.element.find(t).each(function () {
                  var t = V(this),
                    e = t[s]("instance"),
                    i = V.widget.extend({}, n);
                  ("button" === s && t.parent(".ui-spinner").length) ||
                    ((e = e || t[s]()[s]("instance")) &&
                      (i.classes = o._resolveClassesValues(i.classes, e)),
                    t[s](i),
                    (i = t[s]("widget")),
                    V.data(i[0], "ui-controlgroup-data", e || t[s]("instance")),
                    a.push(i[0]));
                }))
              );
      }),
        (this.childWidgets = V(V.uniqueSort(a))),
        this._addClass(this.childWidgets, "ui-controlgroup-item");
    },
    _callChildMethod: function (e) {
      this.childWidgets.each(function () {
        var t = V(this).data("ui-controlgroup-data");
        t && t[e] && t[e]();
      });
    },
    _updateCornerClass: function (t, e) {
      e = this._buildSimpleOptions(e, "label").classes.label;
      this._removeClass(
        t,
        null,
        "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"
      ),
        this._addClass(t, null, e);
    },
    _buildSimpleOptions: function (t, e) {
      var i = "vertical" === this.options.direction,
        s = { classes: {} };
      return (
        (s.classes[e] = {
          middle: "",
          first: "ui-corner-" + (i ? "top" : "left"),
          last: "ui-corner-" + (i ? "bottom" : "right"),
          only: "ui-corner-all",
        }[t]),
        s
      );
    },
    _spinnerOptions: function (t) {
      t = this._buildSimpleOptions(t, "ui-spinner");
      return (
        (t.classes["ui-spinner-up"] = ""),
        (t.classes["ui-spinner-down"] = ""),
        t
      );
    },
    _buttonOptions: function (t) {
      return this._buildSimpleOptions(t, "ui-button");
    },
    _checkboxradioOptions: function (t) {
      return this._buildSimpleOptions(t, "ui-checkboxradio-label");
    },
    _selectmenuOptions: function (t) {
      var e = "vertical" === this.options.direction;
      return {
        width: e && "auto",
        classes: {
          middle: {
            "ui-selectmenu-button-open": "",
            "ui-selectmenu-button-closed": "",
          },
          first: {
            "ui-selectmenu-button-open": "ui-corner-" + (e ? "top" : "tl"),
            "ui-selectmenu-button-closed": "ui-corner-" + (e ? "top" : "left"),
          },
          last: {
            "ui-selectmenu-button-open": e ? "" : "ui-corner-tr",
            "ui-selectmenu-button-closed":
              "ui-corner-" + (e ? "bottom" : "right"),
          },
          only: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
        }[t],
      };
    },
    _resolveClassesValues: function (i, s) {
      var n = {};
      return (
        V.each(i, function (t) {
          var e = s.options.classes[t] || "",
            e = String.prototype.trim.call(e.replace(tt, ""));
          n[t] = (e + " " + i[t]).replace(/\s+/g, " ");
        }),
        n
      );
    },
    _setOption: function (t, e) {
      "direction" === t &&
        this._removeClass("ui-controlgroup-" + this.options.direction),
        this._super(t, e),
        "disabled" !== t
          ? this.refresh()
          : this._callChildMethod(e ? "disable" : "enable");
    },
    refresh: function () {
      var n,
        o = this;
      this._addClass(
        "ui-controlgroup ui-controlgroup-" + this.options.direction
      ),
        "horizontal" === this.options.direction &&
          this._addClass(null, "ui-helper-clearfix"),
        this._initWidgets(),
        (n = this.childWidgets),
        (n = this.options.onlyVisible ? n.filter(":visible") : n).length &&
          (V.each(["first", "last"], function (t, e) {
            var i,
              s = n[e]().data("ui-controlgroup-data");
            s && o["_" + s.widgetName + "Options"]
              ? (((i = o["_" + s.widgetName + "Options"](
                  1 === n.length ? "only" : e
                )).classes = o._resolveClassesValues(i.classes, s)),
                s.element[s.widgetName](i))
              : o._updateCornerClass(n[e](), e);
          }),
          this._callChildMethod("refresh"));
    },
  });
  V.widget("ui.checkboxradio", [
    V.ui.formResetMixin,
    {
      version: "1.13.2",
      options: {
        disabled: null,
        label: null,
        icon: !0,
        classes: {
          "ui-checkboxradio-label": "ui-corner-all",
          "ui-checkboxradio-icon": "ui-corner-all",
        },
      },
      _getCreateOptions: function () {
        var t,
          e = this._super() || {};
        return (
          this._readType(),
          (t = this.element.labels()),
          (this.label = V(t[t.length - 1])),
          this.label.length ||
            V.error("No label found for checkboxradio widget"),
          (this.originalLabel = ""),
          (t = this.label.contents().not(this.element[0])).length &&
            (this.originalLabel += t
              .clone()
              .wrapAll("<div></div>")
              .parent()
              .html()),
          this.originalLabel && (e.label = this.originalLabel),
          null != (t = this.element[0].disabled) && (e.disabled = t),
          e
        );
      },
      _create: function () {
        var t = this.element[0].checked;
        this._bindFormResetHandler(),
          null == this.options.disabled &&
            (this.options.disabled = this.element[0].disabled),
          this._setOption("disabled", this.options.disabled),
          this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
          this._addClass(
            this.label,
            "ui-checkboxradio-label",
            "ui-button ui-widget"
          ),
          "radio" === this.type &&
            this._addClass(this.label, "ui-checkboxradio-radio-label"),
          this.options.label && this.options.label !== this.originalLabel
            ? this._updateLabel()
            : this.originalLabel && (this.options.label = this.originalLabel),
          this._enhance(),
          t &&
            this._addClass(
              this.label,
              "ui-checkboxradio-checked",
              "ui-state-active"
            ),
          this._on({
            change: "_toggleClasses",
            focus: function () {
              this._addClass(
                this.label,
                null,
                "ui-state-focus ui-visual-focus"
              );
            },
            blur: function () {
              this._removeClass(
                this.label,
                null,
                "ui-state-focus ui-visual-focus"
              );
            },
          });
      },
      _readType: function () {
        var t = this.element[0].nodeName.toLowerCase();
        (this.type = this.element[0].type),
          ("input" === t && /radio|checkbox/.test(this.type)) ||
            V.error(
              "Can't create checkboxradio on element.nodeName=" +
                t +
                " and element.type=" +
                this.type
            );
      },
      _enhance: function () {
        this._updateIcon(this.element[0].checked);
      },
      widget: function () {
        return this.label;
      },
      _getRadioGroup: function () {
        var t = this.element[0].name,
          e = "input[name='" + V.escapeSelector(t) + "']";
        return t
          ? (this.form.length
              ? V(this.form[0].elements).filter(e)
              : V(e).filter(function () {
                  return 0 === V(this)._form().length;
                })
            ).not(this.element)
          : V([]);
      },
      _toggleClasses: function () {
        var t = this.element[0].checked;
        this._toggleClass(
          this.label,
          "ui-checkboxradio-checked",
          "ui-state-active",
          t
        ),
          this.options.icon &&
            "checkbox" === this.type &&
            this._toggleClass(
              this.icon,
              null,
              "ui-icon-check ui-state-checked",
              t
            )._toggleClass(this.icon, null, "ui-icon-blank", !t),
          "radio" === this.type &&
            this._getRadioGroup().each(function () {
              var t = V(this).checkboxradio("instance");
              t &&
                t._removeClass(
                  t.label,
                  "ui-checkboxradio-checked",
                  "ui-state-active"
                );
            });
      },
      _destroy: function () {
        this._unbindFormResetHandler(),
          this.icon && (this.icon.remove(), this.iconSpace.remove());
      },
      _setOption: function (t, e) {
        if ("label" !== t || e) {
          if ((this._super(t, e), "disabled" === t))
            return (
              this._toggleClass(this.label, null, "ui-state-disabled", e),
              void (this.element[0].disabled = e)
            );
          this.refresh();
        }
      },
      _updateIcon: function (t) {
        var e = "ui-icon ui-icon-background ";
        this.options.icon
          ? (this.icon ||
              ((this.icon = V("<span>")),
              (this.iconSpace = V("<span> </span>")),
              this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
            "checkbox" === this.type
              ? ((e += t ? "ui-icon-check ui-state-checked" : "ui-icon-blank"),
                this._removeClass(
                  this.icon,
                  null,
                  t ? "ui-icon-blank" : "ui-icon-check"
                ))
              : (e += "ui-icon-blank"),
            this._addClass(this.icon, "ui-checkboxradio-icon", e),
            t ||
              this._removeClass(
                this.icon,
                null,
                "ui-icon-check ui-state-checked"
              ),
            this.icon.prependTo(this.label).after(this.iconSpace))
          : void 0 !== this.icon &&
            (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
      },
      _updateLabel: function () {
        var t = this.label.contents().not(this.element[0]);
        this.icon && (t = t.not(this.icon[0])),
          (t = this.iconSpace ? t.not(this.iconSpace[0]) : t).remove(),
          this.label.append(this.options.label);
      },
      refresh: function () {
        var t = this.element[0].checked,
          e = this.element[0].disabled;
        this._updateIcon(t),
          this._toggleClass(
            this.label,
            "ui-checkboxradio-checked",
            "ui-state-active",
            t
          ),
          null !== this.options.label && this._updateLabel(),
          e !== this.options.disabled && this._setOptions({ disabled: e });
      },
    },
  ]);
  var et;
  V.ui.checkboxradio;
  V.widget("ui.button", {
    version: "1.13.2",
    defaultElement: "<button>",
    options: {
      classes: { "ui-button": "ui-corner-all" },
      disabled: null,
      icon: null,
      iconPosition: "beginning",
      label: null,
      showLabel: !0,
    },
    _getCreateOptions: function () {
      var t,
        e = this._super() || {};
      return (
        (this.isInput = this.element.is("input")),
        null != (t = this.element[0].disabled) && (e.disabled = t),
        (this.originalLabel = this.isInput
          ? this.element.val()
          : this.element.html()),
        this.originalLabel && (e.label = this.originalLabel),
        e
      );
    },
    _create: function () {
      !this.option.showLabel & !this.options.icon &&
        (this.options.showLabel = !0),
        null == this.options.disabled &&
          (this.options.disabled = this.element[0].disabled || !1),
        (this.hasTitle = !!this.element.attr("title")),
        this.options.label &&
          this.options.label !== this.originalLabel &&
          (this.isInput
            ? this.element.val(this.options.label)
            : this.element.html(this.options.label)),
        this._addClass("ui-button", "ui-widget"),
        this._setOption("disabled", this.options.disabled),
        this._enhance(),
        this.element.is("a") &&
          this._on({
            keyup: function (t) {
              t.keyCode === V.ui.keyCode.SPACE &&
                (t.preventDefault(),
                this.element[0].click
                  ? this.element[0].click()
                  : this.element.trigger("click"));
            },
          });
    },
    _enhance: function () {
      this.element.is("button") || this.element.attr("role", "button"),
        this.options.icon &&
          (this._updateIcon("icon", this.options.icon), this._updateTooltip());
    },
    _updateTooltip: function () {
      (this.title = this.element.attr("title")),
        this.options.showLabel ||
          this.title ||
          this.element.attr("title", this.options.label);
    },
    _updateIcon: function (t, e) {
      var i = "iconPosition" !== t,
        s = i ? this.options.iconPosition : e,
        t = "top" === s || "bottom" === s;
      this.icon
        ? i && this._removeClass(this.icon, null, this.options.icon)
        : ((this.icon = V("<span>")),
          this._addClass(this.icon, "ui-button-icon", "ui-icon"),
          this.options.showLabel || this._addClass("ui-button-icon-only")),
        i && this._addClass(this.icon, null, e),
        this._attachIcon(s),
        t
          ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
            this.iconSpace && this.iconSpace.remove())
          : (this.iconSpace ||
              ((this.iconSpace = V("<span> </span>")),
              this._addClass(this.iconSpace, "ui-button-icon-space")),
            this._removeClass(this.icon, null, "ui-wiget-icon-block"),
            this._attachIconSpace(s));
    },
    _destroy: function () {
      this.element.removeAttr("role"),
        this.icon && this.icon.remove(),
        this.iconSpace && this.iconSpace.remove(),
        this.hasTitle || this.element.removeAttr("title");
    },
    _attachIconSpace: function (t) {
      this.icon[/^(?:end|bottom)/.test(t) ? "before" : "after"](this.iconSpace);
    },
    _attachIcon: function (t) {
      this.element[/^(?:end|bottom)/.test(t) ? "append" : "prepend"](this.icon);
    },
    _setOptions: function (t) {
      var e = (void 0 === t.showLabel ? this.options : t).showLabel,
        i = (void 0 === t.icon ? this.options : t).icon;
      e || i || (t.showLabel = !0), this._super(t);
    },
    _setOption: function (t, e) {
      "icon" === t &&
        (e
          ? this._updateIcon(t, e)
          : this.icon &&
            (this.icon.remove(), this.iconSpace && this.iconSpace.remove())),
        "iconPosition" === t && this._updateIcon(t, e),
        "showLabel" === t &&
          (this._toggleClass("ui-button-icon-only", null, !e),
          this._updateTooltip()),
        "label" === t &&
          (this.isInput
            ? this.element.val(e)
            : (this.element.html(e),
              this.icon &&
                (this._attachIcon(this.options.iconPosition),
                this._attachIconSpace(this.options.iconPosition)))),
        this._super(t, e),
        "disabled" === t &&
          (this._toggleClass(null, "ui-state-disabled", e),
          (this.element[0].disabled = e) && this.element.trigger("blur"));
    },
    refresh: function () {
      var t = this.element.is("input, button")
        ? this.element[0].disabled
        : this.element.hasClass("ui-button-disabled");
      t !== this.options.disabled && this._setOptions({ disabled: t }),
        this._updateTooltip();
    },
  }),
    !1 !== V.uiBackCompat &&
      (V.widget("ui.button", V.ui.button, {
        options: { text: !0, icons: { primary: null, secondary: null } },
        _create: function () {
          this.options.showLabel &&
            !this.options.text &&
            (this.options.showLabel = this.options.text),
            !this.options.showLabel &&
              this.options.text &&
              (this.options.text = this.options.showLabel),
            this.options.icon ||
            (!this.options.icons.primary && !this.options.icons.secondary)
              ? this.options.icon &&
                (this.options.icons.primary = this.options.icon)
              : this.options.icons.primary
              ? (this.options.icon = this.options.icons.primary)
              : ((this.options.icon = this.options.icons.secondary),
                (this.options.iconPosition = "end")),
            this._super();
        },
        _setOption: function (t, e) {
          "text" !== t
            ? ("showLabel" === t && (this.options.text = e),
              "icon" === t && (this.options.icons.primary = e),
              "icons" === t &&
                (e.primary
                  ? (this._super("icon", e.primary),
                    this._super("iconPosition", "beginning"))
                  : e.secondary &&
                    (this._super("icon", e.secondary),
                    this._super("iconPosition", "end"))),
              this._superApply(arguments))
            : this._super("showLabel", e);
        },
      }),
      (V.fn.button =
        ((et = V.fn.button),
        function (i) {
          var t = "string" == typeof i,
            s = Array.prototype.slice.call(arguments, 1),
            n = this;
          return (
            t
              ? this.length || "instance" !== i
                ? this.each(function () {
                    var t = V(this).attr("type"),
                      e = V.data(
                        this,
                        "ui-" +
                          ("checkbox" !== t && "radio" !== t
                            ? "button"
                            : "checkboxradio")
                      );
                    return "instance" === i
                      ? ((n = e), !1)
                      : e
                      ? "function" != typeof e[i] || "_" === i.charAt(0)
                        ? V.error(
                            "no such method '" +
                              i +
                              "' for button widget instance"
                          )
                        : (t = e[i].apply(e, s)) !== e && void 0 !== t
                        ? ((n = t && t.jquery ? n.pushStack(t.get()) : t), !1)
                        : void 0
                      : V.error(
                          "cannot call methods on button prior to initialization; attempted to call method '" +
                            i +
                            "'"
                        );
                  })
                : (n = void 0)
              : (s.length && (i = V.widget.extend.apply(null, [i].concat(s))),
                this.each(function () {
                  var t = V(this).attr("type"),
                    e =
                      "checkbox" !== t && "radio" !== t
                        ? "button"
                        : "checkboxradio",
                    t = V.data(this, "ui-" + e);
                  t
                    ? (t.option(i || {}), t._init && t._init())
                    : "button" != e
                    ? V(this).checkboxradio(V.extend({ icon: !1 }, i))
                    : et.call(V(this), i);
                })),
            n
          );
        })),
      (V.fn.buttonset = function () {
        return (
          V.ui.controlgroup || V.error("Controlgroup widget missing"),
          "option" === arguments[0] && "items" === arguments[1] && arguments[2]
            ? this.controlgroup.apply(this, [
                arguments[0],
                "items.button",
                arguments[2],
              ])
            : "option" === arguments[0] && "items" === arguments[1]
            ? this.controlgroup.apply(this, [arguments[0], "items.button"])
            : ("object" == typeof arguments[0] &&
                arguments[0].items &&
                (arguments[0].items = { button: arguments[0].items }),
              this.controlgroup.apply(this, arguments))
        );
      }));
  var it;
  V.ui.button;
  function st() {
    (this._curInst = null),
      (this._keyEvent = !1),
      (this._disabledInputs = []),
      (this._datepickerShowing = !1),
      (this._inDialog = !1),
      (this._mainDivId = "ui-datepicker-div"),
      (this._inlineClass = "ui-datepicker-inline"),
      (this._appendClass = "ui-datepicker-append"),
      (this._triggerClass = "ui-datepicker-trigger"),
      (this._dialogClass = "ui-datepicker-dialog"),
      (this._disableClass = "ui-datepicker-disabled"),
      (this._unselectableClass = "ui-datepicker-unselectable"),
      (this._currentClass = "ui-datepicker-current-day"),
      (this._dayOverClass = "ui-datepicker-days-cell-over"),
      (this.regional = []),
      (this.regional[""] = {
        closeText: "Done",
        prevText: "Prev",
        nextText: "Next",
        currentText: "Today",
        monthNames: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        monthNamesShort: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        dayNames: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        weekHeader: "Wk",
        dateFormat: "mm/dd/yy",
        firstDay: 0,
        isRTL: !1,
        showMonthAfterYear: !1,
        yearSuffix: "",
        selectMonthLabel: "Select month",
        selectYearLabel: "Select year",
      }),
      (this._defaults = {
        showOn: "focus",
        showAnim: "fadeIn",
        showOptions: {},
        defaultDate: null,
        appendText: "",
        buttonText: "...",
        buttonImage: "",
        buttonImageOnly: !1,
        hideIfNoPrevNext: !1,
        navigationAsDateFormat: !1,
        gotoCurrent: !1,
        changeMonth: !1,
        changeYear: !1,
        yearRange: "c-10:c+10",
        showOtherMonths: !1,
        selectOtherMonths: !1,
        showWeek: !1,
        calculateWeek: this.iso8601Week,
        shortYearCutoff: "+10",
        minDate: null,
        maxDate: null,
        duration: "fast",
        beforeShowDay: null,
        beforeShow: null,
        onSelect: null,
        onChangeMonthYear: null,
        onClose: null,
        onUpdateDatepicker: null,
        numberOfMonths: 1,
        showCurrentAtPos: 0,
        stepMonths: 1,
        stepBigMonths: 12,
        altField: "",
        altFormat: "",
        constrainInput: !0,
        showButtonPanel: !1,
        autoSize: !1,
        disabled: !1,
      }),
      V.extend(this._defaults, this.regional[""]),
      (this.regional.en = V.extend(!0, {}, this.regional[""])),
      (this.regional["en-US"] = V.extend(!0, {}, this.regional.en)),
      (this.dpDiv = nt(
        V(
          "<div id='" +
            this._mainDivId +
            "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
        )
      ));
  }
  function nt(t) {
    var e =
      "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    return t
      .on("mouseout", e, function () {
        V(this).removeClass("ui-state-hover"),
          -1 !== this.className.indexOf("ui-datepicker-prev") &&
            V(this).removeClass("ui-datepicker-prev-hover"),
          -1 !== this.className.indexOf("ui-datepicker-next") &&
            V(this).removeClass("ui-datepicker-next-hover");
      })
      .on("mouseover", e, ot);
  }
  function ot() {
    V.datepicker._isDisabledDatepicker(
      (it.inline ? it.dpDiv.parent() : it.input)[0]
    ) ||
      (V(this)
        .parents(".ui-datepicker-calendar")
        .find("a")
        .removeClass("ui-state-hover"),
      V(this).addClass("ui-state-hover"),
      -1 !== this.className.indexOf("ui-datepicker-prev") &&
        V(this).addClass("ui-datepicker-prev-hover"),
      -1 !== this.className.indexOf("ui-datepicker-next") &&
        V(this).addClass("ui-datepicker-next-hover"));
  }
  function at(t, e) {
    for (var i in (V.extend(t, e), e)) null == e[i] && (t[i] = e[i]);
    return t;
  }
  V.extend(V.ui, { datepicker: { version: "1.13.2" } }),
    V.extend(st.prototype, {
      markerClassName: "hasDatepicker",
      maxRows: 4,
      _widgetDatepicker: function () {
        return this.dpDiv;
      },
      setDefaults: function (t) {
        return at(this._defaults, t || {}), this;
      },
      _attachDatepicker: function (t, e) {
        var i,
          s = t.nodeName.toLowerCase(),
          n = "div" === s || "span" === s;
        t.id || ((this.uuid += 1), (t.id = "dp" + this.uuid)),
          ((i = this._newInst(V(t), n)).settings = V.extend({}, e || {})),
          "input" === s
            ? this._connectDatepicker(t, i)
            : n && this._inlineDatepicker(t, i);
      },
      _newInst: function (t, e) {
        return {
          id: t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
          input: t,
          selectedDay: 0,
          selectedMonth: 0,
          selectedYear: 0,
          drawMonth: 0,
          drawYear: 0,
          inline: e,
          dpDiv: e
            ? nt(
                V(
                  "<div class='" +
                    this._inlineClass +
                    " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
                )
              )
            : this.dpDiv,
        };
      },
      _connectDatepicker: function (t, e) {
        var i = V(t);
        (e.append = V([])),
          (e.trigger = V([])),
          i.hasClass(this.markerClassName) ||
            (this._attachments(i, e),
            i
              .addClass(this.markerClassName)
              .on("keydown", this._doKeyDown)
              .on("keypress", this._doKeyPress)
              .on("keyup", this._doKeyUp),
            this._autoSize(e),
            V.data(t, "datepicker", e),
            e.settings.disabled && this._disableDatepicker(t));
      },
      _attachments: function (t, e) {
        var i,
          s = this._get(e, "appendText"),
          n = this._get(e, "isRTL");
        e.append && e.append.remove(),
          s &&
            ((e.append = V("<span>").addClass(this._appendClass).text(s)),
            t[n ? "before" : "after"](e.append)),
          t.off("focus", this._showDatepicker),
          e.trigger && e.trigger.remove(),
          ("focus" !== (i = this._get(e, "showOn")) && "both" !== i) ||
            t.on("focus", this._showDatepicker),
          ("button" !== i && "both" !== i) ||
            ((s = this._get(e, "buttonText")),
            (i = this._get(e, "buttonImage")),
            this._get(e, "buttonImageOnly")
              ? (e.trigger = V("<img>")
                  .addClass(this._triggerClass)
                  .attr({ src: i, alt: s, title: s }))
              : ((e.trigger = V("<button type='button'>").addClass(
                  this._triggerClass
                )),
                i
                  ? e.trigger.html(
                      V("<img>").attr({ src: i, alt: s, title: s })
                    )
                  : e.trigger.text(s)),
            t[n ? "before" : "after"](e.trigger),
            e.trigger.on("click", function () {
              return (
                V.datepicker._datepickerShowing &&
                V.datepicker._lastInput === t[0]
                  ? V.datepicker._hideDatepicker()
                  : (V.datepicker._datepickerShowing &&
                      V.datepicker._lastInput !== t[0] &&
                      V.datepicker._hideDatepicker(),
                    V.datepicker._showDatepicker(t[0])),
                !1
              );
            }));
      },
      _autoSize: function (t) {
        var e, i, s, n, o, a;
        this._get(t, "autoSize") &&
          !t.inline &&
          ((o = new Date(2009, 11, 20)),
          (a = this._get(t, "dateFormat")).match(/[DM]/) &&
            ((e = function (t) {
              for (n = s = i = 0; n < t.length; n++)
                t[n].length > i && ((i = t[n].length), (s = n));
              return s;
            }),
            o.setMonth(
              e(this._get(t, a.match(/MM/) ? "monthNames" : "monthNamesShort"))
            ),
            o.setDate(
              e(this._get(t, a.match(/DD/) ? "dayNames" : "dayNamesShort")) +
                20 -
                o.getDay()
            )),
          t.input.attr("size", this._formatDate(t, o).length));
      },
      _inlineDatepicker: function (t, e) {
        var i = V(t);
        i.hasClass(this.markerClassName) ||
          (i.addClass(this.markerClassName).append(e.dpDiv),
          V.data(t, "datepicker", e),
          this._setDate(e, this._getDefaultDate(e), !0),
          this._updateDatepicker(e),
          this._updateAlternate(e),
          e.settings.disabled && this._disableDatepicker(t),
          e.dpDiv.css("display", "block"));
      },
      _dialogDatepicker: function (t, e, i, s, n) {
        var o,
          a = this._dialogInst;
        return (
          a ||
            ((this.uuid += 1),
            (o = "dp" + this.uuid),
            (this._dialogInput = V(
              "<input type='text' id='" +
                o +
                "' style='position: absolute; top: -100px; width: 0px;'/>"
            )),
            this._dialogInput.on("keydown", this._doKeyDown),
            V("body").append(this._dialogInput),
            ((a = this._dialogInst =
              this._newInst(this._dialogInput, !1)).settings = {}),
            V.data(this._dialogInput[0], "datepicker", a)),
          at(a.settings, s || {}),
          (e = e && e.constructor === Date ? this._formatDate(a, e) : e),
          this._dialogInput.val(e),
          (this._pos = n ? (n.length ? n : [n.pageX, n.pageY]) : null),
          this._pos ||
            ((o = document.documentElement.clientWidth),
            (s = document.documentElement.clientHeight),
            (e =
              document.documentElement.scrollLeft || document.body.scrollLeft),
            (n = document.documentElement.scrollTop || document.body.scrollTop),
            (this._pos = [o / 2 - 100 + e, s / 2 - 150 + n])),
          this._dialogInput
            .css("left", this._pos[0] + 20 + "px")
            .css("top", this._pos[1] + "px"),
          (a.settings.onSelect = i),
          (this._inDialog = !0),
          this.dpDiv.addClass(this._dialogClass),
          this._showDatepicker(this._dialogInput[0]),
          V.blockUI && V.blockUI(this.dpDiv),
          V.data(this._dialogInput[0], "datepicker", a),
          this
        );
      },
      _destroyDatepicker: function (t) {
        var e,
          i = V(t),
          s = V.data(t, "datepicker");
        i.hasClass(this.markerClassName) &&
          ((e = t.nodeName.toLowerCase()),
          V.removeData(t, "datepicker"),
          "input" === e
            ? (s.append.remove(),
              s.trigger.remove(),
              i
                .removeClass(this.markerClassName)
                .off("focus", this._showDatepicker)
                .off("keydown", this._doKeyDown)
                .off("keypress", this._doKeyPress)
                .off("keyup", this._doKeyUp))
            : ("div" !== e && "span" !== e) ||
              i.removeClass(this.markerClassName).empty(),
          it === s && ((it = null), (this._curInst = null)));
      },
      _enableDatepicker: function (e) {
        var t,
          i = V(e),
          s = V.data(e, "datepicker");
        i.hasClass(this.markerClassName) &&
          ("input" === (t = e.nodeName.toLowerCase())
            ? ((e.disabled = !1),
              s.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !1;
                })
                .end()
                .filter("img")
                .css({ opacity: "1.0", cursor: "" }))
            : ("div" !== t && "span" !== t) ||
              ((i = i.children("." + this._inlineClass))
                .children()
                .removeClass("ui-state-disabled"),
              i
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !1)),
          (this._disabledInputs = V.map(this._disabledInputs, function (t) {
            return t === e ? null : t;
          })));
      },
      _disableDatepicker: function (e) {
        var t,
          i = V(e),
          s = V.data(e, "datepicker");
        i.hasClass(this.markerClassName) &&
          ("input" === (t = e.nodeName.toLowerCase())
            ? ((e.disabled = !0),
              s.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !0;
                })
                .end()
                .filter("img")
                .css({ opacity: "0.5", cursor: "default" }))
            : ("div" !== t && "span" !== t) ||
              ((i = i.children("." + this._inlineClass))
                .children()
                .addClass("ui-state-disabled"),
              i
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !0)),
          (this._disabledInputs = V.map(this._disabledInputs, function (t) {
            return t === e ? null : t;
          })),
          (this._disabledInputs[this._disabledInputs.length] = e));
      },
      _isDisabledDatepicker: function (t) {
        if (!t) return !1;
        for (var e = 0; e < this._disabledInputs.length; e++)
          if (this._disabledInputs[e] === t) return !0;
        return !1;
      },
      _getInst: function (t) {
        try {
          return V.data(t, "datepicker");
        } catch (t) {
          throw "Missing instance data for this datepicker";
        }
      },
      _optionDatepicker: function (t, e, i) {
        var s,
          n,
          o = this._getInst(t);
        if (2 === arguments.length && "string" == typeof e)
          return "defaults" === e
            ? V.extend({}, V.datepicker._defaults)
            : o
            ? "all" === e
              ? V.extend({}, o.settings)
              : this._get(o, e)
            : null;
        (s = e || {}),
          "string" == typeof e && ((s = {})[e] = i),
          o &&
            (this._curInst === o && this._hideDatepicker(),
            (n = this._getDateDatepicker(t, !0)),
            (e = this._getMinMaxDate(o, "min")),
            (i = this._getMinMaxDate(o, "max")),
            at(o.settings, s),
            null !== e &&
              void 0 !== s.dateFormat &&
              void 0 === s.minDate &&
              (o.settings.minDate = this._formatDate(o, e)),
            null !== i &&
              void 0 !== s.dateFormat &&
              void 0 === s.maxDate &&
              (o.settings.maxDate = this._formatDate(o, i)),
            "disabled" in s &&
              (s.disabled
                ? this._disableDatepicker(t)
                : this._enableDatepicker(t)),
            this._attachments(V(t), o),
            this._autoSize(o),
            this._setDate(o, n),
            this._updateAlternate(o),
            this._updateDatepicker(o));
      },
      _changeDatepicker: function (t, e, i) {
        this._optionDatepicker(t, e, i);
      },
      _refreshDatepicker: function (t) {
        t = this._getInst(t);
        t && this._updateDatepicker(t);
      },
      _setDateDatepicker: function (t, e) {
        t = this._getInst(t);
        t &&
          (this._setDate(t, e),
          this._updateDatepicker(t),
          this._updateAlternate(t));
      },
      _getDateDatepicker: function (t, e) {
        t = this._getInst(t);
        return (
          t && !t.inline && this._setDateFromField(t, e),
          t ? this._getDate(t) : null
        );
      },
      _doKeyDown: function (t) {
        var e,
          i,
          s = V.datepicker._getInst(t.target),
          n = !0,
          o = s.dpDiv.is(".ui-datepicker-rtl");
        if (((s._keyEvent = !0), V.datepicker._datepickerShowing))
          switch (t.keyCode) {
            case 9:
              V.datepicker._hideDatepicker(), (n = !1);
              break;
            case 13:
              return (
                (i = V(
                  "td." +
                    V.datepicker._dayOverClass +
                    ":not(." +
                    V.datepicker._currentClass +
                    ")",
                  s.dpDiv
                ))[0] &&
                  V.datepicker._selectDay(
                    t.target,
                    s.selectedMonth,
                    s.selectedYear,
                    i[0]
                  ),
                (e = V.datepicker._get(s, "onSelect"))
                  ? ((i = V.datepicker._formatDate(s)),
                    e.apply(s.input ? s.input[0] : null, [i, s]))
                  : V.datepicker._hideDatepicker(),
                !1
              );
            case 27:
              V.datepicker._hideDatepicker();
              break;
            case 33:
              V.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? -V.datepicker._get(s, "stepBigMonths")
                  : -V.datepicker._get(s, "stepMonths"),
                "M"
              );
              break;
            case 34:
              V.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? +V.datepicker._get(s, "stepBigMonths")
                  : +V.datepicker._get(s, "stepMonths"),
                "M"
              );
              break;
            case 35:
              (t.ctrlKey || t.metaKey) && V.datepicker._clearDate(t.target),
                (n = t.ctrlKey || t.metaKey);
              break;
            case 36:
              (t.ctrlKey || t.metaKey) && V.datepicker._gotoToday(t.target),
                (n = t.ctrlKey || t.metaKey);
              break;
            case 37:
              (t.ctrlKey || t.metaKey) &&
                V.datepicker._adjustDate(t.target, o ? 1 : -1, "D"),
                (n = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  V.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? -V.datepicker._get(s, "stepBigMonths")
                      : -V.datepicker._get(s, "stepMonths"),
                    "M"
                  );
              break;
            case 38:
              (t.ctrlKey || t.metaKey) &&
                V.datepicker._adjustDate(t.target, -7, "D"),
                (n = t.ctrlKey || t.metaKey);
              break;
            case 39:
              (t.ctrlKey || t.metaKey) &&
                V.datepicker._adjustDate(t.target, o ? -1 : 1, "D"),
                (n = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  V.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? +V.datepicker._get(s, "stepBigMonths")
                      : +V.datepicker._get(s, "stepMonths"),
                    "M"
                  );
              break;
            case 40:
              (t.ctrlKey || t.metaKey) &&
                V.datepicker._adjustDate(t.target, 7, "D"),
                (n = t.ctrlKey || t.metaKey);
              break;
            default:
              n = !1;
          }
        else
          36 === t.keyCode && t.ctrlKey
            ? V.datepicker._showDatepicker(this)
            : (n = !1);
        n && (t.preventDefault(), t.stopPropagation());
      },
      _doKeyPress: function (t) {
        var e,
          i = V.datepicker._getInst(t.target);
        if (V.datepicker._get(i, "constrainInput"))
          return (
            (e = V.datepicker._possibleChars(
              V.datepicker._get(i, "dateFormat")
            )),
            (i = String.fromCharCode(
              null == t.charCode ? t.keyCode : t.charCode
            )),
            t.ctrlKey || t.metaKey || i < " " || !e || -1 < e.indexOf(i)
          );
      },
      _doKeyUp: function (t) {
        t = V.datepicker._getInst(t.target);
        if (t.input.val() !== t.lastVal)
          try {
            V.datepicker.parseDate(
              V.datepicker._get(t, "dateFormat"),
              t.input ? t.input.val() : null,
              V.datepicker._getFormatConfig(t)
            ) &&
              (V.datepicker._setDateFromField(t),
              V.datepicker._updateAlternate(t),
              V.datepicker._updateDatepicker(t));
          } catch (t) {}
        return !0;
      },
      _showDatepicker: function (t) {
        var e, i, s, n;
        "input" !== (t = t.target || t).nodeName.toLowerCase() &&
          (t = V("input", t.parentNode)[0]),
          V.datepicker._isDisabledDatepicker(t) ||
            V.datepicker._lastInput === t ||
            ((n = V.datepicker._getInst(t)),
            V.datepicker._curInst &&
              V.datepicker._curInst !== n &&
              (V.datepicker._curInst.dpDiv.stop(!0, !0),
              n &&
                V.datepicker._datepickerShowing &&
                V.datepicker._hideDatepicker(V.datepicker._curInst.input[0])),
            !1 !==
              (i = (s = V.datepicker._get(n, "beforeShow"))
                ? s.apply(t, [t, n])
                : {}) &&
              (at(n.settings, i),
              (n.lastVal = null),
              (V.datepicker._lastInput = t),
              V.datepicker._setDateFromField(n),
              V.datepicker._inDialog && (t.value = ""),
              V.datepicker._pos ||
                ((V.datepicker._pos = V.datepicker._findPos(t)),
                (V.datepicker._pos[1] += t.offsetHeight)),
              (e = !1),
              V(t)
                .parents()
                .each(function () {
                  return !(e |= "fixed" === V(this).css("position"));
                }),
              (s = { left: V.datepicker._pos[0], top: V.datepicker._pos[1] }),
              (V.datepicker._pos = null),
              n.dpDiv.empty(),
              n.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px",
              }),
              V.datepicker._updateDatepicker(n),
              (s = V.datepicker._checkOffset(n, s, e)),
              n.dpDiv.css({
                position:
                  V.datepicker._inDialog && V.blockUI
                    ? "static"
                    : e
                    ? "fixed"
                    : "absolute",
                display: "none",
                left: s.left + "px",
                top: s.top + "px",
              }),
              n.inline ||
                ((i = V.datepicker._get(n, "showAnim")),
                (s = V.datepicker._get(n, "duration")),
                n.dpDiv.css(
                  "z-index",
                  (function (t) {
                    for (var e, i; t.length && t[0] !== document; ) {
                      if (
                        ("absolute" === (e = t.css("position")) ||
                          "relative" === e ||
                          "fixed" === e) &&
                        ((i = parseInt(t.css("zIndex"), 10)),
                        !isNaN(i) && 0 !== i)
                      )
                        return i;
                      t = t.parent();
                    }
                    return 0;
                  })(V(t)) + 1
                ),
                (V.datepicker._datepickerShowing = !0),
                V.effects && V.effects.effect[i]
                  ? n.dpDiv.show(i, V.datepicker._get(n, "showOptions"), s)
                  : n.dpDiv[i || "show"](i ? s : null),
                V.datepicker._shouldFocusInput(n) && n.input.trigger("focus"),
                (V.datepicker._curInst = n))));
      },
      _updateDatepicker: function (t) {
        (this.maxRows = 4),
          (it = t).dpDiv.empty().append(this._generateHTML(t)),
          this._attachHandlers(t);
        var e,
          i = this._getNumberOfMonths(t),
          s = i[1],
          n = t.dpDiv.find("." + this._dayOverClass + " a"),
          o = V.datepicker._get(t, "onUpdateDatepicker");
        0 < n.length && ot.apply(n.get(0)),
          t.dpDiv
            .removeClass(
              "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"
            )
            .width(""),
          1 < s &&
            t.dpDiv
              .addClass("ui-datepicker-multi-" + s)
              .css("width", 17 * s + "em"),
          t.dpDiv[(1 !== i[0] || 1 !== i[1] ? "add" : "remove") + "Class"](
            "ui-datepicker-multi"
          ),
          t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"](
            "ui-datepicker-rtl"
          ),
          t === V.datepicker._curInst &&
            V.datepicker._datepickerShowing &&
            V.datepicker._shouldFocusInput(t) &&
            t.input.trigger("focus"),
          t.yearshtml &&
            ((e = t.yearshtml),
            setTimeout(function () {
              e === t.yearshtml &&
                t.yearshtml &&
                t.dpDiv
                  .find("select.ui-datepicker-year")
                  .first()
                  .replaceWith(t.yearshtml),
                (e = t.yearshtml = null);
            }, 0)),
          o && o.apply(t.input ? t.input[0] : null, [t]);
      },
      _shouldFocusInput: function (t) {
        return (
          t.input &&
          t.input.is(":visible") &&
          !t.input.is(":disabled") &&
          !t.input.is(":focus")
        );
      },
      _checkOffset: function (t, e, i) {
        var s = t.dpDiv.outerWidth(),
          n = t.dpDiv.outerHeight(),
          o = t.input ? t.input.outerWidth() : 0,
          a = t.input ? t.input.outerHeight() : 0,
          r =
            document.documentElement.clientWidth +
            (i ? 0 : V(document).scrollLeft()),
          l =
            document.documentElement.clientHeight +
            (i ? 0 : V(document).scrollTop());
        return (
          (e.left -= this._get(t, "isRTL") ? s - o : 0),
          (e.left -=
            i && e.left === t.input.offset().left
              ? V(document).scrollLeft()
              : 0),
          (e.top -=
            i && e.top === t.input.offset().top + a
              ? V(document).scrollTop()
              : 0),
          (e.left -= Math.min(
            e.left,
            e.left + s > r && s < r ? Math.abs(e.left + s - r) : 0
          )),
          (e.top -= Math.min(
            e.top,
            e.top + n > l && n < l ? Math.abs(n + a) : 0
          )),
          e
        );
      },
      _findPos: function (t) {
        for (
          var e = this._getInst(t), i = this._get(e, "isRTL");
          t &&
          ("hidden" === t.type || 1 !== t.nodeType || V.expr.pseudos.hidden(t));

        )
          t = t[i ? "previousSibling" : "nextSibling"];
        return [(e = V(t).offset()).left, e.top];
      },
      _hideDatepicker: function (t) {
        var e,
          i,
          s = this._curInst;
        !s ||
          (t && s !== V.data(t, "datepicker")) ||
          (this._datepickerShowing &&
            ((e = this._get(s, "showAnim")),
            (i = this._get(s, "duration")),
            (t = function () {
              V.datepicker._tidyDialog(s);
            }),
            V.effects && (V.effects.effect[e] || V.effects[e])
              ? s.dpDiv.hide(e, V.datepicker._get(s, "showOptions"), i, t)
              : s.dpDiv[
                  "slideDown" === e
                    ? "slideUp"
                    : "fadeIn" === e
                    ? "fadeOut"
                    : "hide"
                ](e ? i : null, t),
            e || t(),
            (this._datepickerShowing = !1),
            (t = this._get(s, "onClose")) &&
              t.apply(s.input ? s.input[0] : null, [
                s.input ? s.input.val() : "",
                s,
              ]),
            (this._lastInput = null),
            this._inDialog &&
              (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px",
              }),
              V.blockUI && (V.unblockUI(), V("body").append(this.dpDiv))),
            (this._inDialog = !1)));
      },
      _tidyDialog: function (t) {
        t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
      },
      _checkExternalClick: function (t) {
        var e;
        V.datepicker._curInst &&
          ((e = V(t.target)),
          (t = V.datepicker._getInst(e[0])),
          ((e[0].id === V.datepicker._mainDivId ||
            0 !== e.parents("#" + V.datepicker._mainDivId).length ||
            e.hasClass(V.datepicker.markerClassName) ||
            e.closest("." + V.datepicker._triggerClass).length ||
            !V.datepicker._datepickerShowing ||
            (V.datepicker._inDialog && V.blockUI)) &&
            (!e.hasClass(V.datepicker.markerClassName) ||
              V.datepicker._curInst === t)) ||
            V.datepicker._hideDatepicker());
      },
      _adjustDate: function (t, e, i) {
        var s = V(t),
          t = this._getInst(s[0]);
        this._isDisabledDatepicker(s[0]) ||
          (this._adjustInstDate(t, e, i), this._updateDatepicker(t));
      },
      _gotoToday: function (t) {
        var e = V(t),
          i = this._getInst(e[0]);
        this._get(i, "gotoCurrent") && i.currentDay
          ? ((i.selectedDay = i.currentDay),
            (i.drawMonth = i.selectedMonth = i.currentMonth),
            (i.drawYear = i.selectedYear = i.currentYear))
          : ((t = new Date()),
            (i.selectedDay = t.getDate()),
            (i.drawMonth = i.selectedMonth = t.getMonth()),
            (i.drawYear = i.selectedYear = t.getFullYear())),
          this._notifyChange(i),
          this._adjustDate(e);
      },
      _selectMonthYear: function (t, e, i) {
        var s = V(t),
          t = this._getInst(s[0]);
        (t["selected" + ("M" === i ? "Month" : "Year")] = t[
          "draw" + ("M" === i ? "Month" : "Year")
        ] =
          parseInt(e.options[e.selectedIndex].value, 10)),
          this._notifyChange(t),
          this._adjustDate(s);
      },
      _selectDay: function (t, e, i, s) {
        var n = V(t);
        V(s).hasClass(this._unselectableClass) ||
          this._isDisabledDatepicker(n[0]) ||
          (((n = this._getInst(n[0])).selectedDay = n.currentDay =
            parseInt(V("a", s).attr("data-date"))),
          (n.selectedMonth = n.currentMonth = e),
          (n.selectedYear = n.currentYear = i),
          this._selectDate(
            t,
            this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear)
          ));
      },
      _clearDate: function (t) {
        t = V(t);
        this._selectDate(t, "");
      },
      _selectDate: function (t, e) {
        var i = V(t),
          t = this._getInst(i[0]);
        (e = null != e ? e : this._formatDate(t)),
          t.input && t.input.val(e),
          this._updateAlternate(t),
          (i = this._get(t, "onSelect"))
            ? i.apply(t.input ? t.input[0] : null, [e, t])
            : t.input && t.input.trigger("change"),
          t.inline
            ? this._updateDatepicker(t)
            : (this._hideDatepicker(),
              (this._lastInput = t.input[0]),
              "object" != typeof t.input[0] && t.input.trigger("focus"),
              (this._lastInput = null));
      },
      _updateAlternate: function (t) {
        var e,
          i,
          s = this._get(t, "altField");
        s &&
          ((e = this._get(t, "altFormat") || this._get(t, "dateFormat")),
          (i = this._getDate(t)),
          (t = this.formatDate(e, i, this._getFormatConfig(t))),
          V(document).find(s).val(t));
      },
      noWeekends: function (t) {
        t = t.getDay();
        return [0 < t && t < 6, ""];
      },
      iso8601Week: function (t) {
        var e = new Date(t.getTime());
        return (
          e.setDate(e.getDate() + 4 - (e.getDay() || 7)),
          (t = e.getTime()),
          e.setMonth(0),
          e.setDate(1),
          Math.floor(Math.round((t - e) / 864e5) / 7) + 1
        );
      },
      parseDate: function (e, n, t) {
        if (null == e || null == n) throw "Invalid arguments";
        if ("" === (n = "object" == typeof n ? n.toString() : n + ""))
          return null;
        for (
          var i,
            s,
            o,
            a = 0,
            r =
              (t ? t.shortYearCutoff : null) || this._defaults.shortYearCutoff,
            r =
              "string" != typeof r
                ? r
                : (new Date().getFullYear() % 100) + parseInt(r, 10),
            l = (t ? t.dayNamesShort : null) || this._defaults.dayNamesShort,
            h = (t ? t.dayNames : null) || this._defaults.dayNames,
            c =
              (t ? t.monthNamesShort : null) || this._defaults.monthNamesShort,
            u = (t ? t.monthNames : null) || this._defaults.monthNames,
            d = -1,
            p = -1,
            f = -1,
            g = -1,
            m = !1,
            _ = function (t) {
              t = w + 1 < e.length && e.charAt(w + 1) === t;
              return t && w++, t;
            },
            v = function (t) {
              var e = _(t),
                e =
                  "@" === t
                    ? 14
                    : "!" === t
                    ? 20
                    : "y" === t && e
                    ? 4
                    : "o" === t
                    ? 3
                    : 2,
                e = new RegExp("^\\d{" + ("y" === t ? e : 1) + "," + e + "}"),
                e = n.substring(a).match(e);
              if (!e) throw "Missing number at position " + a;
              return (a += e[0].length), parseInt(e[0], 10);
            },
            b = function (t, e, i) {
              var s = -1,
                e = V.map(_(t) ? i : e, function (t, e) {
                  return [[e, t]];
                }).sort(function (t, e) {
                  return -(t[1].length - e[1].length);
                });
              if (
                (V.each(e, function (t, e) {
                  var i = e[1];
                  if (n.substr(a, i.length).toLowerCase() === i.toLowerCase())
                    return (s = e[0]), (a += i.length), !1;
                }),
                -1 !== s)
              )
                return s + 1;
              throw "Unknown name at position " + a;
            },
            y = function () {
              if (n.charAt(a) !== e.charAt(w))
                throw "Unexpected literal at position " + a;
              a++;
            },
            w = 0;
          w < e.length;
          w++
        )
          if (m) "'" !== e.charAt(w) || _("'") ? y() : (m = !1);
          else
            switch (e.charAt(w)) {
              case "d":
                f = v("d");
                break;
              case "D":
                b("D", l, h);
                break;
              case "o":
                g = v("o");
                break;
              case "m":
                p = v("m");
                break;
              case "M":
                p = b("M", c, u);
                break;
              case "y":
                d = v("y");
                break;
              case "@":
                (d = (o = new Date(v("@"))).getFullYear()),
                  (p = o.getMonth() + 1),
                  (f = o.getDate());
                break;
              case "!":
                (d = (o = new Date(
                  (v("!") - this._ticksTo1970) / 1e4
                )).getFullYear()),
                  (p = o.getMonth() + 1),
                  (f = o.getDate());
                break;
              case "'":
                _("'") ? y() : (m = !0);
                break;
              default:
                y();
            }
        if (a < n.length && ((s = n.substr(a)), !/^\s+/.test(s)))
          throw "Extra/unparsed characters found in date: " + s;
        if (
          (-1 === d
            ? (d = new Date().getFullYear())
            : d < 100 &&
              (d +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (d <= r ? 0 : -100)),
          -1 < g)
        )
          for (p = 1, f = g; ; ) {
            if (f <= (i = this._getDaysInMonth(d, p - 1))) break;
            p++, (f -= i);
          }
        if (
          (o = this._daylightSavingAdjust(
            new Date(d, p - 1, f)
          )).getFullYear() !== d ||
          o.getMonth() + 1 !== p ||
          o.getDate() !== f
        )
          throw "Invalid date";
        return o;
      },
      ATOM: "yy-mm-dd",
      COOKIE: "D, dd M yy",
      ISO_8601: "yy-mm-dd",
      RFC_822: "D, d M y",
      RFC_850: "DD, dd-M-y",
      RFC_1036: "D, d M y",
      RFC_1123: "D, d M yy",
      RFC_2822: "D, d M yy",
      RSS: "D, d M y",
      TICKS: "!",
      TIMESTAMP: "@",
      W3C: "yy-mm-dd",
      _ticksTo1970:
        24 *
        (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) *
        60 *
        60 *
        1e7,
      formatDate: function (e, t, i) {
        if (!t) return "";
        function s(t, e, i) {
          var s = "" + e;
          if (c(t)) for (; s.length < i; ) s = "0" + s;
          return s;
        }
        function n(t, e, i, s) {
          return (c(t) ? s : i)[e];
        }
        var o,
          a = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
          r = (i ? i.dayNames : null) || this._defaults.dayNames,
          l = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
          h = (i ? i.monthNames : null) || this._defaults.monthNames,
          c = function (t) {
            t = o + 1 < e.length && e.charAt(o + 1) === t;
            return t && o++, t;
          },
          u = "",
          d = !1;
        if (t)
          for (o = 0; o < e.length; o++)
            if (d)
              "'" !== e.charAt(o) || c("'") ? (u += e.charAt(o)) : (d = !1);
            else
              switch (e.charAt(o)) {
                case "d":
                  u += s("d", t.getDate(), 2);
                  break;
                case "D":
                  u += n("D", t.getDay(), a, r);
                  break;
                case "o":
                  u += s(
                    "o",
                    Math.round(
                      (new Date(
                        t.getFullYear(),
                        t.getMonth(),
                        t.getDate()
                      ).getTime() -
                        new Date(t.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  u += s("m", t.getMonth() + 1, 2);
                  break;
                case "M":
                  u += n("M", t.getMonth(), l, h);
                  break;
                case "y":
                  u += c("y")
                    ? t.getFullYear()
                    : (t.getFullYear() % 100 < 10 ? "0" : "") +
                      (t.getFullYear() % 100);
                  break;
                case "@":
                  u += t.getTime();
                  break;
                case "!":
                  u += 1e4 * t.getTime() + this._ticksTo1970;
                  break;
                case "'":
                  c("'") ? (u += "'") : (d = !0);
                  break;
                default:
                  u += e.charAt(o);
              }
        return u;
      },
      _possibleChars: function (e) {
        for (
          var t = "",
            i = !1,
            s = function (t) {
              t = n + 1 < e.length && e.charAt(n + 1) === t;
              return t && n++, t;
            },
            n = 0;
          n < e.length;
          n++
        )
          if (i) "'" !== e.charAt(n) || s("'") ? (t += e.charAt(n)) : (i = !1);
          else
            switch (e.charAt(n)) {
              case "d":
              case "m":
              case "y":
              case "@":
                t += "0123456789";
                break;
              case "D":
              case "M":
                return null;
              case "'":
                s("'") ? (t += "'") : (i = !0);
                break;
              default:
                t += e.charAt(n);
            }
        return t;
      },
      _get: function (t, e) {
        return (void 0 !== t.settings[e] ? t.settings : this._defaults)[e];
      },
      _setDateFromField: function (t, e) {
        if (t.input.val() !== t.lastVal) {
          var i = this._get(t, "dateFormat"),
            s = (t.lastVal = t.input ? t.input.val() : null),
            n = this._getDefaultDate(t),
            o = n,
            a = this._getFormatConfig(t);
          try {
            o = this.parseDate(i, s, a) || n;
          } catch (t) {
            s = e ? "" : s;
          }
          (t.selectedDay = o.getDate()),
            (t.drawMonth = t.selectedMonth = o.getMonth()),
            (t.drawYear = t.selectedYear = o.getFullYear()),
            (t.currentDay = s ? o.getDate() : 0),
            (t.currentMonth = s ? o.getMonth() : 0),
            (t.currentYear = s ? o.getFullYear() : 0),
            this._adjustInstDate(t);
        }
      },
      _getDefaultDate: function (t) {
        return this._restrictMinMax(
          t,
          this._determineDate(t, this._get(t, "defaultDate"), new Date())
        );
      },
      _determineDate: function (r, t, e) {
        var i,
          s,
          t =
            null == t || "" === t
              ? e
              : "string" == typeof t
              ? (function (t) {
                  try {
                    return V.datepicker.parseDate(
                      V.datepicker._get(r, "dateFormat"),
                      t,
                      V.datepicker._getFormatConfig(r)
                    );
                  } catch (t) {}
                  for (
                    var e =
                        (t.toLowerCase().match(/^c/)
                          ? V.datepicker._getDate(r)
                          : null) || new Date(),
                      i = e.getFullYear(),
                      s = e.getMonth(),
                      n = e.getDate(),
                      o = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                      a = o.exec(t);
                    a;

                  ) {
                    switch (a[2] || "d") {
                      case "d":
                      case "D":
                        n += parseInt(a[1], 10);
                        break;
                      case "w":
                      case "W":
                        n += 7 * parseInt(a[1], 10);
                        break;
                      case "m":
                      case "M":
                        (s += parseInt(a[1], 10)),
                          (n = Math.min(n, V.datepicker._getDaysInMonth(i, s)));
                        break;
                      case "y":
                      case "Y":
                        (i += parseInt(a[1], 10)),
                          (n = Math.min(n, V.datepicker._getDaysInMonth(i, s)));
                    }
                    a = o.exec(t);
                  }
                  return new Date(i, s, n);
                })(t)
              : "number" == typeof t
              ? isNaN(t)
                ? e
                : ((i = t), (s = new Date()).setDate(s.getDate() + i), s)
              : new Date(t.getTime());
        return (
          (t = t && "Invalid Date" === t.toString() ? e : t) &&
            (t.setHours(0),
            t.setMinutes(0),
            t.setSeconds(0),
            t.setMilliseconds(0)),
          this._daylightSavingAdjust(t)
        );
      },
      _daylightSavingAdjust: function (t) {
        return t
          ? (t.setHours(12 < t.getHours() ? t.getHours() + 2 : 0), t)
          : null;
      },
      _setDate: function (t, e, i) {
        var s = !e,
          n = t.selectedMonth,
          o = t.selectedYear,
          e = this._restrictMinMax(t, this._determineDate(t, e, new Date()));
        (t.selectedDay = t.currentDay = e.getDate()),
          (t.drawMonth = t.selectedMonth = t.currentMonth = e.getMonth()),
          (t.drawYear = t.selectedYear = t.currentYear = e.getFullYear()),
          (n === t.selectedMonth && o === t.selectedYear) ||
            i ||
            this._notifyChange(t),
          this._adjustInstDate(t),
          t.input && t.input.val(s ? "" : this._formatDate(t));
      },
      _getDate: function (t) {
        return !t.currentYear || (t.input && "" === t.input.val())
          ? null
          : this._daylightSavingAdjust(
              new Date(t.currentYear, t.currentMonth, t.currentDay)
            );
      },
      _attachHandlers: function (t) {
        var e = this._get(t, "stepMonths"),
          i = "#" + t.id.replace(/\\\\/g, "\\");
        t.dpDiv.find("[data-handler]").map(function () {
          var t = {
            prev: function () {
              V.datepicker._adjustDate(i, -e, "M");
            },
            next: function () {
              V.datepicker._adjustDate(i, +e, "M");
            },
            hide: function () {
              V.datepicker._hideDatepicker();
            },
            today: function () {
              V.datepicker._gotoToday(i);
            },
            selectDay: function () {
              return (
                V.datepicker._selectDay(
                  i,
                  +this.getAttribute("data-month"),
                  +this.getAttribute("data-year"),
                  this
                ),
                !1
              );
            },
            selectMonth: function () {
              return V.datepicker._selectMonthYear(i, this, "M"), !1;
            },
            selectYear: function () {
              return V.datepicker._selectMonthYear(i, this, "Y"), !1;
            },
          };
          V(this).on(
            this.getAttribute("data-event"),
            t[this.getAttribute("data-handler")]
          );
        });
      },
      _generateHTML: function (t) {
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l,
          h,
          c,
          u,
          d,
          p,
          f,
          g,
          m,
          _,
          v,
          b,
          y,
          w,
          x,
          k,
          C,
          D,
          I,
          T,
          P,
          M,
          S,
          H,
          z,
          A = new Date(),
          O = this._daylightSavingAdjust(
            new Date(A.getFullYear(), A.getMonth(), A.getDate())
          ),
          N = this._get(t, "isRTL"),
          E = this._get(t, "showButtonPanel"),
          W = this._get(t, "hideIfNoPrevNext"),
          F = this._get(t, "navigationAsDateFormat"),
          L = this._getNumberOfMonths(t),
          R = this._get(t, "showCurrentAtPos"),
          A = this._get(t, "stepMonths"),
          Y = 1 !== L[0] || 1 !== L[1],
          B = this._daylightSavingAdjust(
            t.currentDay
              ? new Date(t.currentYear, t.currentMonth, t.currentDay)
              : new Date(9999, 9, 9)
          ),
          j = this._getMinMaxDate(t, "min"),
          q = this._getMinMaxDate(t, "max"),
          K = t.drawMonth - R,
          U = t.drawYear;
        if ((K < 0 && ((K += 12), U--), q))
          for (
            e = this._daylightSavingAdjust(
              new Date(
                q.getFullYear(),
                q.getMonth() - L[0] * L[1] + 1,
                q.getDate()
              )
            ),
              e = j && e < j ? j : e;
            this._daylightSavingAdjust(new Date(U, K, 1)) > e;

          )
            --K < 0 && ((K = 11), U--);
        for (
          t.drawMonth = K,
            t.drawYear = U,
            R = this._get(t, "prevText"),
            R = F
              ? this.formatDate(
                  R,
                  this._daylightSavingAdjust(new Date(U, K - A, 1)),
                  this._getFormatConfig(t)
                )
              : R,
            i = this._canAdjustMonth(t, -1, U, K)
              ? V("<a>")
                  .attr({
                    class: "ui-datepicker-prev ui-corner-all",
                    "data-handler": "prev",
                    "data-event": "click",
                    title: R,
                  })
                  .append(
                    V("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (N ? "e" : "w")
                      )
                      .text(R)
                  )[0].outerHTML
              : W
              ? ""
              : V("<a>")
                  .attr({
                    class: "ui-datepicker-prev ui-corner-all ui-state-disabled",
                    title: R,
                  })
                  .append(
                    V("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (N ? "e" : "w")
                      )
                      .text(R)
                  )[0].outerHTML,
            R = this._get(t, "nextText"),
            R = F
              ? this.formatDate(
                  R,
                  this._daylightSavingAdjust(new Date(U, K + A, 1)),
                  this._getFormatConfig(t)
                )
              : R,
            s = this._canAdjustMonth(t, 1, U, K)
              ? V("<a>")
                  .attr({
                    class: "ui-datepicker-next ui-corner-all",
                    "data-handler": "next",
                    "data-event": "click",
                    title: R,
                  })
                  .append(
                    V("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (N ? "w" : "e")
                      )
                      .text(R)
                  )[0].outerHTML
              : W
              ? ""
              : V("<a>")
                  .attr({
                    class: "ui-datepicker-next ui-corner-all ui-state-disabled",
                    title: R,
                  })
                  .append(
                    V("<span>")
                      .attr(
                        "class",
                        "ui-icon ui-icon-circle-triangle-" + (N ? "w" : "e")
                      )
                      .text(R)
                  )[0].outerHTML,
            A = this._get(t, "currentText"),
            W = this._get(t, "gotoCurrent") && t.currentDay ? B : O,
            A = F ? this.formatDate(A, W, this._getFormatConfig(t)) : A,
            R = "",
            t.inline ||
              (R = V("<button>")
                .attr({
                  type: "button",
                  class:
                    "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all",
                  "data-handler": "hide",
                  "data-event": "click",
                })
                .text(this._get(t, "closeText"))[0].outerHTML),
            F = "",
            E &&
              (F = V("<div class='ui-datepicker-buttonpane ui-widget-content'>")
                .append(N ? R : "")
                .append(
                  this._isInRange(t, W)
                    ? V("<button>")
                        .attr({
                          type: "button",
                          class:
                            "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all",
                          "data-handler": "today",
                          "data-event": "click",
                        })
                        .text(A)
                    : ""
                )
                .append(N ? "" : R)[0].outerHTML),
            n = parseInt(this._get(t, "firstDay"), 10),
            n = isNaN(n) ? 0 : n,
            o = this._get(t, "showWeek"),
            a = this._get(t, "dayNames"),
            r = this._get(t, "dayNamesMin"),
            l = this._get(t, "monthNames"),
            h = this._get(t, "monthNamesShort"),
            c = this._get(t, "beforeShowDay"),
            u = this._get(t, "showOtherMonths"),
            d = this._get(t, "selectOtherMonths"),
            p = this._getDefaultDate(t),
            f = "",
            m = 0;
          m < L[0];
          m++
        ) {
          for (_ = "", this.maxRows = 4, v = 0; v < L[1]; v++) {
            if (
              ((b = this._daylightSavingAdjust(new Date(U, K, t.selectedDay))),
              (y = " ui-corner-all"),
              (w = ""),
              Y)
            ) {
              if (((w += "<div class='ui-datepicker-group"), 1 < L[1]))
                switch (v) {
                  case 0:
                    (w += " ui-datepicker-group-first"),
                      (y = " ui-corner-" + (N ? "right" : "left"));
                    break;
                  case L[1] - 1:
                    (w += " ui-datepicker-group-last"),
                      (y = " ui-corner-" + (N ? "left" : "right"));
                    break;
                  default:
                    (w += " ui-datepicker-group-middle"), (y = "");
                }
              w += "'>";
            }
            for (
              w +=
                "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                y +
                "'>" +
                (/all|left/.test(y) && 0 === m ? (N ? s : i) : "") +
                (/all|right/.test(y) && 0 === m ? (N ? i : s) : "") +
                this._generateMonthYearHeader(
                  t,
                  K,
                  U,
                  j,
                  q,
                  0 < m || 0 < v,
                  l,
                  h
                ) +
                "</div><table class='ui-datepicker-calendar'><thead><tr>",
                x = o
                  ? "<th class='ui-datepicker-week-col'>" +
                    this._get(t, "weekHeader") +
                    "</th>"
                  : "",
                g = 0;
              g < 7;
              g++
            )
              x +=
                "<th scope='col'" +
                (5 <= (g + n + 6) % 7
                  ? " class='ui-datepicker-week-end'"
                  : "") +
                "><span title='" +
                a[(k = (g + n) % 7)] +
                "'>" +
                r[k] +
                "</span></th>";
            for (
              w += x + "</tr></thead><tbody>",
                D = this._getDaysInMonth(U, K),
                U === t.selectedYear &&
                  K === t.selectedMonth &&
                  (t.selectedDay = Math.min(t.selectedDay, D)),
                C = (this._getFirstDayOfMonth(U, K) - n + 7) % 7,
                D = Math.ceil((C + D) / 7),
                I = Y && this.maxRows > D ? this.maxRows : D,
                this.maxRows = I,
                T = this._daylightSavingAdjust(new Date(U, K, 1 - C)),
                P = 0;
              P < I;
              P++
            ) {
              for (
                w += "<tr>",
                  M = o
                    ? "<td class='ui-datepicker-week-col'>" +
                      this._get(t, "calculateWeek")(T) +
                      "</td>"
                    : "",
                  g = 0;
                g < 7;
                g++
              )
                (S = c ? c.apply(t.input ? t.input[0] : null, [T]) : [!0, ""]),
                  (z =
                    ((H = T.getMonth() !== K) && !d) ||
                    !S[0] ||
                    (j && T < j) ||
                    (q && q < T)),
                  (M +=
                    "<td class='" +
                    (5 <= (g + n + 6) % 7 ? " ui-datepicker-week-end" : "") +
                    (H ? " ui-datepicker-other-month" : "") +
                    ((T.getTime() === b.getTime() &&
                      K === t.selectedMonth &&
                      t._keyEvent) ||
                    (p.getTime() === T.getTime() && p.getTime() === b.getTime())
                      ? " " + this._dayOverClass
                      : "") +
                    (z
                      ? " " + this._unselectableClass + " ui-state-disabled"
                      : "") +
                    (H && !u
                      ? ""
                      : " " +
                        S[1] +
                        (T.getTime() === B.getTime()
                          ? " " + this._currentClass
                          : "") +
                        (T.getTime() === O.getTime()
                          ? " ui-datepicker-today"
                          : "")) +
                    "'" +
                    ((H && !u) || !S[2]
                      ? ""
                      : " title='" + S[2].replace(/'/g, "&#39;") + "'") +
                    (z
                      ? ""
                      : " data-handler='selectDay' data-event='click' data-month='" +
                        T.getMonth() +
                        "' data-year='" +
                        T.getFullYear() +
                        "'") +
                    ">" +
                    (H && !u
                      ? "&#xa0;"
                      : z
                      ? "<span class='ui-state-default'>" +
                        T.getDate() +
                        "</span>"
                      : "<a class='ui-state-default" +
                        (T.getTime() === O.getTime()
                          ? " ui-state-highlight"
                          : "") +
                        (T.getTime() === B.getTime()
                          ? " ui-state-active"
                          : "") +
                        (H ? " ui-priority-secondary" : "") +
                        "' href='#' aria-current='" +
                        (T.getTime() === B.getTime() ? "true" : "false") +
                        "' data-date='" +
                        T.getDate() +
                        "'>" +
                        T.getDate() +
                        "</a>") +
                    "</td>"),
                  T.setDate(T.getDate() + 1),
                  (T = this._daylightSavingAdjust(T));
              w += M + "</tr>";
            }
            11 < ++K && ((K = 0), U++),
              (_ += w +=
                "</tbody></table>" +
                (Y
                  ? "</div>" +
                    (0 < L[0] && v === L[1] - 1
                      ? "<div class='ui-datepicker-row-break'></div>"
                      : "")
                  : ""));
          }
          f += _;
        }
        return (f += F), (t._keyEvent = !1), f;
      },
      _generateMonthYearHeader: function (t, e, i, s, n, o, a, r) {
        var l,
          h,
          c,
          u,
          d,
          p,
          f = this._get(t, "changeMonth"),
          g = this._get(t, "changeYear"),
          m = this._get(t, "showMonthAfterYear"),
          _ = this._get(t, "selectMonthLabel"),
          v = this._get(t, "selectYearLabel"),
          b = "<div class='ui-datepicker-title'>",
          y = "";
        if (o || !f)
          y += "<span class='ui-datepicker-month'>" + a[e] + "</span>";
        else {
          for (
            l = s && s.getFullYear() === i,
              h = n && n.getFullYear() === i,
              y +=
                "<select class='ui-datepicker-month' aria-label='" +
                _ +
                "' data-handler='selectMonth' data-event='change'>",
              c = 0;
            c < 12;
            c++
          )
            (!l || c >= s.getMonth()) &&
              (!h || c <= n.getMonth()) &&
              (y +=
                "<option value='" +
                c +
                "'" +
                (c === e ? " selected='selected'" : "") +
                ">" +
                r[c] +
                "</option>");
          y += "</select>";
        }
        if ((m || (b += y + (!o && f && g ? "" : "&#xa0;")), !t.yearshtml))
          if (((t.yearshtml = ""), o || !g))
            b += "<span class='ui-datepicker-year'>" + i + "</span>";
          else {
            for (
              a = this._get(t, "yearRange").split(":"),
                u = new Date().getFullYear(),
                d = (_ = function (t) {
                  t = t.match(/c[+\-].*/)
                    ? i + parseInt(t.substring(1), 10)
                    : t.match(/[+\-].*/)
                    ? u + parseInt(t, 10)
                    : parseInt(t, 10);
                  return isNaN(t) ? u : t;
                })(a[0]),
                p = Math.max(d, _(a[1] || "")),
                d = s ? Math.max(d, s.getFullYear()) : d,
                p = n ? Math.min(p, n.getFullYear()) : p,
                t.yearshtml +=
                  "<select class='ui-datepicker-year' aria-label='" +
                  v +
                  "' data-handler='selectYear' data-event='change'>";
              d <= p;
              d++
            )
              t.yearshtml +=
                "<option value='" +
                d +
                "'" +
                (d === i ? " selected='selected'" : "") +
                ">" +
                d +
                "</option>";
            (t.yearshtml += "</select>"),
              (b += t.yearshtml),
              (t.yearshtml = null);
          }
        return (
          (b += this._get(t, "yearSuffix")),
          m && (b += (!o && f && g ? "" : "&#xa0;") + y),
          (b += "</div>")
        );
      },
      _adjustInstDate: function (t, e, i) {
        var s = t.selectedYear + ("Y" === i ? e : 0),
          n = t.selectedMonth + ("M" === i ? e : 0),
          e =
            Math.min(t.selectedDay, this._getDaysInMonth(s, n)) +
            ("D" === i ? e : 0),
          e = this._restrictMinMax(
            t,
            this._daylightSavingAdjust(new Date(s, n, e))
          );
        (t.selectedDay = e.getDate()),
          (t.drawMonth = t.selectedMonth = e.getMonth()),
          (t.drawYear = t.selectedYear = e.getFullYear()),
          ("M" !== i && "Y" !== i) || this._notifyChange(t);
      },
      _restrictMinMax: function (t, e) {
        var i = this._getMinMaxDate(t, "min"),
          t = this._getMinMaxDate(t, "max"),
          e = i && e < i ? i : e;
        return t && t < e ? t : e;
      },
      _notifyChange: function (t) {
        var e = this._get(t, "onChangeMonthYear");
        e &&
          e.apply(t.input ? t.input[0] : null, [
            t.selectedYear,
            t.selectedMonth + 1,
            t,
          ]);
      },
      _getNumberOfMonths: function (t) {
        t = this._get(t, "numberOfMonths");
        return null == t ? [1, 1] : "number" == typeof t ? [1, t] : t;
      },
      _getMinMaxDate: function (t, e) {
        return this._determineDate(t, this._get(t, e + "Date"), null);
      },
      _getDaysInMonth: function (t, e) {
        return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate();
      },
      _getFirstDayOfMonth: function (t, e) {
        return new Date(t, e, 1).getDay();
      },
      _canAdjustMonth: function (t, e, i, s) {
        var n = this._getNumberOfMonths(t),
          n = this._daylightSavingAdjust(
            new Date(i, s + (e < 0 ? e : n[0] * n[1]), 1)
          );
        return (
          e < 0 &&
            n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth())),
          this._isInRange(t, n)
        );
      },
      _isInRange: function (t, e) {
        var i = this._getMinMaxDate(t, "min"),
          s = this._getMinMaxDate(t, "max"),
          n = null,
          o = null,
          a = this._get(t, "yearRange");
        return (
          a &&
            ((t = a.split(":")),
            (a = new Date().getFullYear()),
            (n = parseInt(t[0], 10)),
            (o = parseInt(t[1], 10)),
            t[0].match(/[+\-].*/) && (n += a),
            t[1].match(/[+\-].*/) && (o += a)),
          (!i || e.getTime() >= i.getTime()) &&
            (!s || e.getTime() <= s.getTime()) &&
            (!n || e.getFullYear() >= n) &&
            (!o || e.getFullYear() <= o)
        );
      },
      _getFormatConfig: function (t) {
        var e = this._get(t, "shortYearCutoff");
        return {
          shortYearCutoff: (e =
            "string" != typeof e
              ? e
              : (new Date().getFullYear() % 100) + parseInt(e, 10)),
          dayNamesShort: this._get(t, "dayNamesShort"),
          dayNames: this._get(t, "dayNames"),
          monthNamesShort: this._get(t, "monthNamesShort"),
          monthNames: this._get(t, "monthNames"),
        };
      },
      _formatDate: function (t, e, i, s) {
        e ||
          ((t.currentDay = t.selectedDay),
          (t.currentMonth = t.selectedMonth),
          (t.currentYear = t.selectedYear));
        e = e
          ? "object" == typeof e
            ? e
            : this._daylightSavingAdjust(new Date(s, i, e))
          : this._daylightSavingAdjust(
              new Date(t.currentYear, t.currentMonth, t.currentDay)
            );
        return this.formatDate(
          this._get(t, "dateFormat"),
          e,
          this._getFormatConfig(t)
        );
      },
    }),
    (V.fn.datepicker = function (t) {
      if (!this.length) return this;
      V.datepicker.initialized ||
        (V(document).on("mousedown", V.datepicker._checkExternalClick),
        (V.datepicker.initialized = !0)),
        0 === V("#" + V.datepicker._mainDivId).length &&
          V("body").append(V.datepicker.dpDiv);
      var e = Array.prototype.slice.call(arguments, 1);
      return ("string" == typeof t &&
        ("isDisabled" === t || "getDate" === t || "widget" === t)) ||
        ("option" === t &&
          2 === arguments.length &&
          "string" == typeof arguments[1])
        ? V.datepicker["_" + t + "Datepicker"].apply(
            V.datepicker,
            [this[0]].concat(e)
          )
        : this.each(function () {
            "string" == typeof t
              ? V.datepicker["_" + t + "Datepicker"].apply(
                  V.datepicker,
                  [this].concat(e)
                )
              : V.datepicker._attachDatepicker(this, t);
          });
    }),
    (V.datepicker = new st()),
    (V.datepicker.initialized = !1),
    (V.datepicker.uuid = new Date().getTime()),
    (V.datepicker.version = "1.13.2");
  V.datepicker,
    (V.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
  var rt = !1;
  V(document).on("mouseup", function () {
    rt = !1;
  });
  V.widget("ui.mouse", {
    version: "1.13.2",
    options: {
      cancel: "input, textarea, button, select, option",
      distance: 1,
      delay: 0,
    },
    _mouseInit: function () {
      var e = this;
      this.element
        .on("mousedown." + this.widgetName, function (t) {
          return e._mouseDown(t);
        })
        .on("click." + this.widgetName, function (t) {
          if (!0 === V.data(t.target, e.widgetName + ".preventClickEvent"))
            return (
              V.removeData(t.target, e.widgetName + ".preventClickEvent"),
              t.stopImmediatePropagation(),
              !1
            );
        }),
        (this.started = !1);
    },
    _mouseDestroy: function () {
      this.element.off("." + this.widgetName),
        this._mouseMoveDelegate &&
          this.document
            .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
            .off("mouseup." + this.widgetName, this._mouseUpDelegate);
    },
    _mouseDown: function (t) {
      if (!rt) {
        (this._mouseMoved = !1),
          this._mouseStarted && this._mouseUp(t),
          (this._mouseDownEvent = t);
        var e = this,
          i = 1 === t.which,
          s =
            !("string" != typeof this.options.cancel || !t.target.nodeName) &&
            V(t.target).closest(this.options.cancel).length;
        return i && !s && this._mouseCapture(t)
          ? ((this.mouseDelayMet = !this.options.delay),
            this.mouseDelayMet ||
              (this._mouseDelayTimer = setTimeout(function () {
                e.mouseDelayMet = !0;
              }, this.options.delay)),
            this._mouseDistanceMet(t) &&
            this._mouseDelayMet(t) &&
            ((this._mouseStarted = !1 !== this._mouseStart(t)),
            !this._mouseStarted)
              ? (t.preventDefault(), !0)
              : (!0 ===
                  V.data(t.target, this.widgetName + ".preventClickEvent") &&
                  V.removeData(
                    t.target,
                    this.widgetName + ".preventClickEvent"
                  ),
                (this._mouseMoveDelegate = function (t) {
                  return e._mouseMove(t);
                }),
                (this._mouseUpDelegate = function (t) {
                  return e._mouseUp(t);
                }),
                this.document
                  .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                  .on("mouseup." + this.widgetName, this._mouseUpDelegate),
                t.preventDefault(),
                (rt = !0)))
          : !0;
      }
    },
    _mouseMove: function (t) {
      if (this._mouseMoved) {
        if (
          V.ui.ie &&
          (!document.documentMode || document.documentMode < 9) &&
          !t.button
        )
          return this._mouseUp(t);
        if (!t.which)
          if (
            t.originalEvent.altKey ||
            t.originalEvent.ctrlKey ||
            t.originalEvent.metaKey ||
            t.originalEvent.shiftKey
          )
            this.ignoreMissingWhich = !0;
          else if (!this.ignoreMissingWhich) return this._mouseUp(t);
      }
      return (
        (t.which || t.button) && (this._mouseMoved = !0),
        this._mouseStarted
          ? (this._mouseDrag(t), t.preventDefault())
          : (this._mouseDistanceMet(t) &&
              this._mouseDelayMet(t) &&
              ((this._mouseStarted =
                !1 !== this._mouseStart(this._mouseDownEvent, t)),
              this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
            !this._mouseStarted)
      );
    },
    _mouseUp: function (t) {
      this.document
        .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
        .off("mouseup." + this.widgetName, this._mouseUpDelegate),
        this._mouseStarted &&
          ((this._mouseStarted = !1),
          t.target === this._mouseDownEvent.target &&
            V.data(t.target, this.widgetName + ".preventClickEvent", !0),
          this._mouseStop(t)),
        this._mouseDelayTimer &&
          (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
        (this.ignoreMissingWhich = !1),
        (rt = !1),
        t.preventDefault();
    },
    _mouseDistanceMet: function (t) {
      return (
        Math.max(
          Math.abs(this._mouseDownEvent.pageX - t.pageX),
          Math.abs(this._mouseDownEvent.pageY - t.pageY)
        ) >= this.options.distance
      );
    },
    _mouseDelayMet: function () {
      return this.mouseDelayMet;
    },
    _mouseStart: function () {},
    _mouseDrag: function () {},
    _mouseStop: function () {},
    _mouseCapture: function () {
      return !0;
    },
  }),
    (V.ui.plugin = {
      add: function (t, e, i) {
        var s,
          n = V.ui[t].prototype;
        for (s in i)
          (n.plugins[s] = n.plugins[s] || []), n.plugins[s].push([e, i[s]]);
      },
      call: function (t, e, i, s) {
        var n,
          o = t.plugins[e];
        if (
          o &&
          (s ||
            (t.element[0].parentNode &&
              11 !== t.element[0].parentNode.nodeType))
        )
          for (n = 0; n < o.length; n++)
            t.options[o[n][0]] && o[n][1].apply(t.element, i);
      },
    }),
    (V.ui.safeBlur = function (t) {
      t && "body" !== t.nodeName.toLowerCase() && V(t).trigger("blur");
    });
  V.widget("ui.draggable", V.ui.mouse, {
    version: "1.13.2",
    widgetEventPrefix: "drag",
    options: {
      addClasses: !0,
      appendTo: "parent",
      axis: !1,
      connectToSortable: !1,
      containment: !1,
      cursor: "auto",
      cursorAt: !1,
      grid: !1,
      handle: !1,
      helper: "original",
      iframeFix: !1,
      opacity: !1,
      refreshPositions: !1,
      revert: !1,
      revertDuration: 500,
      scope: "default",
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      snap: !1,
      snapMode: "both",
      snapTolerance: 20,
      stack: !1,
      zIndex: !1,
      drag: null,
      start: null,
      stop: null,
    },
    _create: function () {
      "original" === this.options.helper && this._setPositionRelative(),
        this.options.addClasses && this._addClass("ui-draggable"),
        this._setHandleClassName(),
        this._mouseInit();
    },
    _setOption: function (t, e) {
      this._super(t, e),
        "handle" === t &&
          (this._removeHandleClassName(), this._setHandleClassName());
    },
    _destroy: function () {
      (this.helper || this.element).is(".ui-draggable-dragging")
        ? (this.destroyOnClear = !0)
        : (this._removeHandleClassName(), this._mouseDestroy());
    },
    _mouseCapture: function (t) {
      var e = this.options;
      return (
        !(
          this.helper ||
          e.disabled ||
          0 < V(t.target).closest(".ui-resizable-handle").length
        ) &&
        ((this.handle = this._getHandle(t)),
        !!this.handle &&
          (this._blurActiveElement(t),
          this._blockFrames(!0 === e.iframeFix ? "iframe" : e.iframeFix),
          !0))
      );
    },
    _blockFrames: function (t) {
      this.iframeBlocks = this.document.find(t).map(function () {
        var t = V(this);
        return V("<div>")
          .css("position", "absolute")
          .appendTo(t.parent())
          .outerWidth(t.outerWidth())
          .outerHeight(t.outerHeight())
          .offset(t.offset())[0];
      });
    },
    _unblockFrames: function () {
      this.iframeBlocks &&
        (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _blurActiveElement: function (t) {
      var e = V.ui.safeActiveElement(this.document[0]);
      V(t.target).closest(e).length || V.ui.safeBlur(e);
    },
    _mouseStart: function (t) {
      var e = this.options;
      return (
        (this.helper = this._createHelper(t)),
        this._addClass(this.helper, "ui-draggable-dragging"),
        this._cacheHelperProportions(),
        V.ui.ddmanager && (V.ui.ddmanager.current = this),
        this._cacheMargins(),
        (this.cssPosition = this.helper.css("position")),
        (this.scrollParent = this.helper.scrollParent(!0)),
        (this.offsetParent = this.helper.offsetParent()),
        (this.hasFixedAncestor =
          0 <
          this.helper.parents().filter(function () {
            return "fixed" === V(this).css("position");
          }).length),
        (this.positionAbs = this.element.offset()),
        this._refreshOffsets(t),
        (this.originalPosition = this.position = this._generatePosition(t, !1)),
        (this.originalPageX = t.pageX),
        (this.originalPageY = t.pageY),
        e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt),
        this._setContainment(),
        !1 === this._trigger("start", t)
          ? (this._clear(), !1)
          : (this._cacheHelperProportions(),
            V.ui.ddmanager &&
              !e.dropBehaviour &&
              V.ui.ddmanager.prepareOffsets(this, t),
            this._mouseDrag(t, !0),
            V.ui.ddmanager && V.ui.ddmanager.dragStart(this, t),
            !0)
      );
    },
    _refreshOffsets: function (t) {
      (this.offset = {
        top: this.positionAbs.top - this.margins.top,
        left: this.positionAbs.left - this.margins.left,
        scroll: !1,
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset(),
      }),
        (this.offset.click = {
          left: t.pageX - this.offset.left,
          top: t.pageY - this.offset.top,
        });
    },
    _mouseDrag: function (t, e) {
      if (
        (this.hasFixedAncestor &&
          (this.offset.parent = this._getParentOffset()),
        (this.position = this._generatePosition(t, !0)),
        (this.positionAbs = this._convertPositionTo("absolute")),
        !e)
      ) {
        e = this._uiHash();
        if (!1 === this._trigger("drag", t, e))
          return this._mouseUp(new V.Event("mouseup", t)), !1;
        this.position = e.position;
      }
      return (
        (this.helper[0].style.left = this.position.left + "px"),
        (this.helper[0].style.top = this.position.top + "px"),
        V.ui.ddmanager && V.ui.ddmanager.drag(this, t),
        !1
      );
    },
    _mouseStop: function (t) {
      var e = this,
        i = !1;
      return (
        V.ui.ddmanager &&
          !this.options.dropBehaviour &&
          (i = V.ui.ddmanager.drop(this, t)),
        this.dropped && ((i = this.dropped), (this.dropped = !1)),
        ("invalid" === this.options.revert && !i) ||
        ("valid" === this.options.revert && i) ||
        !0 === this.options.revert ||
        ("function" == typeof this.options.revert &&
          this.options.revert.call(this.element, i))
          ? V(this.helper).animate(
              this.originalPosition,
              parseInt(this.options.revertDuration, 10),
              function () {
                !1 !== e._trigger("stop", t) && e._clear();
              }
            )
          : !1 !== this._trigger("stop", t) && this._clear(),
        !1
      );
    },
    _mouseUp: function (t) {
      return (
        this._unblockFrames(),
        V.ui.ddmanager && V.ui.ddmanager.dragStop(this, t),
        this.handleElement.is(t.target) && this.element.trigger("focus"),
        V.ui.mouse.prototype._mouseUp.call(this, t)
      );
    },
    cancel: function () {
      return (
        this.helper.is(".ui-draggable-dragging")
          ? this._mouseUp(new V.Event("mouseup", { target: this.element[0] }))
          : this._clear(),
        this
      );
    },
    _getHandle: function (t) {
      return (
        !this.options.handle ||
        !!V(t.target).closest(this.element.find(this.options.handle)).length
      );
    },
    _setHandleClassName: function () {
      (this.handleElement = this.options.handle
        ? this.element.find(this.options.handle)
        : this.element),
        this._addClass(this.handleElement, "ui-draggable-handle");
    },
    _removeHandleClassName: function () {
      this._removeClass(this.handleElement, "ui-draggable-handle");
    },
    _createHelper: function (t) {
      var e = this.options,
        i = "function" == typeof e.helper,
        t = i
          ? V(e.helper.apply(this.element[0], [t]))
          : "clone" === e.helper
          ? this.element.clone().removeAttr("id")
          : this.element;
      return (
        t.parents("body").length ||
          t.appendTo(
            "parent" === e.appendTo ? this.element[0].parentNode : e.appendTo
          ),
        i && t[0] === this.element[0] && this._setPositionRelative(),
        t[0] === this.element[0] ||
          /(fixed|absolute)/.test(t.css("position")) ||
          t.css("position", "absolute"),
        t
      );
    },
    _setPositionRelative: function () {
      /^(?:r|a|f)/.test(this.element.css("position")) ||
        (this.element[0].style.position = "relative");
    },
    _adjustOffsetFromHelper: function (t) {
      "string" == typeof t && (t = t.split(" ")),
        "left" in
          (t = Array.isArray(t) ? { left: +t[0], top: +t[1] || 0 } : t) &&
          (this.offset.click.left = t.left + this.margins.left),
        "right" in t &&
          (this.offset.click.left =
            this.helperProportions.width - t.right + this.margins.left),
        "top" in t && (this.offset.click.top = t.top + this.margins.top),
        "bottom" in t &&
          (this.offset.click.top =
            this.helperProportions.height - t.bottom + this.margins.top);
    },
    _isRootNode: function (t) {
      return /(html|body)/i.test(t.tagName) || t === this.document[0];
    },
    _getParentOffset: function () {
      var t = this.offsetParent.offset(),
        e = this.document[0];
      return (
        "absolute" === this.cssPosition &&
          this.scrollParent[0] !== e &&
          V.contains(this.scrollParent[0], this.offsetParent[0]) &&
          ((t.left += this.scrollParent.scrollLeft()),
          (t.top += this.scrollParent.scrollTop())),
        {
          top:
            (t = this._isRootNode(this.offsetParent[0])
              ? { top: 0, left: 0 }
              : t).top +
            (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
          left:
            t.left +
            (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
        }
      );
    },
    _getRelativeOffset: function () {
      if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
      var t = this.element.position(),
        e = this._isRootNode(this.scrollParent[0]);
      return {
        top:
          t.top -
          (parseInt(this.helper.css("top"), 10) || 0) +
          (e ? 0 : this.scrollParent.scrollTop()),
        left:
          t.left -
          (parseInt(this.helper.css("left"), 10) || 0) +
          (e ? 0 : this.scrollParent.scrollLeft()),
      };
    },
    _cacheMargins: function () {
      this.margins = {
        left: parseInt(this.element.css("marginLeft"), 10) || 0,
        top: parseInt(this.element.css("marginTop"), 10) || 0,
        right: parseInt(this.element.css("marginRight"), 10) || 0,
        bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
      };
    },
    _cacheHelperProportions: function () {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight(),
      };
    },
    _setContainment: function () {
      var t,
        e,
        i,
        s = this.options,
        n = this.document[0];
      (this.relativeContainer = null),
        s.containment
          ? "window" !== s.containment
            ? "document" !== s.containment
              ? s.containment.constructor !== Array
                ? ("parent" === s.containment &&
                    (s.containment = this.helper[0].parentNode),
                  (i = (e = V(s.containment))[0]) &&
                    ((t = /(scroll|auto)/.test(e.css("overflow"))),
                    (this.containment = [
                      (parseInt(e.css("borderLeftWidth"), 10) || 0) +
                        (parseInt(e.css("paddingLeft"), 10) || 0),
                      (parseInt(e.css("borderTopWidth"), 10) || 0) +
                        (parseInt(e.css("paddingTop"), 10) || 0),
                      (t
                        ? Math.max(i.scrollWidth, i.offsetWidth)
                        : i.offsetWidth) -
                        (parseInt(e.css("borderRightWidth"), 10) || 0) -
                        (parseInt(e.css("paddingRight"), 10) || 0) -
                        this.helperProportions.width -
                        this.margins.left -
                        this.margins.right,
                      (t
                        ? Math.max(i.scrollHeight, i.offsetHeight)
                        : i.offsetHeight) -
                        (parseInt(e.css("borderBottomWidth"), 10) || 0) -
                        (parseInt(e.css("paddingBottom"), 10) || 0) -
                        this.helperProportions.height -
                        this.margins.top -
                        this.margins.bottom,
                    ]),
                    (this.relativeContainer = e)))
                : (this.containment = s.containment)
              : (this.containment = [
                  0,
                  0,
                  V(n).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  (V(n).height() || n.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
            : (this.containment = [
                V(window).scrollLeft() -
                  this.offset.relative.left -
                  this.offset.parent.left,
                V(window).scrollTop() -
                  this.offset.relative.top -
                  this.offset.parent.top,
                V(window).scrollLeft() +
                  V(window).width() -
                  this.helperProportions.width -
                  this.margins.left,
                V(window).scrollTop() +
                  (V(window).height() || n.body.parentNode.scrollHeight) -
                  this.helperProportions.height -
                  this.margins.top,
              ])
          : (this.containment = null);
    },
    _convertPositionTo: function (t, e) {
      e = e || this.position;
      var i = "absolute" === t ? 1 : -1,
        t = this._isRootNode(this.scrollParent[0]);
      return {
        top:
          e.top +
          this.offset.relative.top * i +
          this.offset.parent.top * i -
          ("fixed" === this.cssPosition
            ? -this.offset.scroll.top
            : t
            ? 0
            : this.offset.scroll.top) *
            i,
        left:
          e.left +
          this.offset.relative.left * i +
          this.offset.parent.left * i -
          ("fixed" === this.cssPosition
            ? -this.offset.scroll.left
            : t
            ? 0
            : this.offset.scroll.left) *
            i,
      };
    },
    _generatePosition: function (t, e) {
      var i,
        s = this.options,
        n = this._isRootNode(this.scrollParent[0]),
        o = t.pageX,
        a = t.pageY;
      return (
        (n && this.offset.scroll) ||
          (this.offset.scroll = {
            top: this.scrollParent.scrollTop(),
            left: this.scrollParent.scrollLeft(),
          }),
        e &&
          (this.containment &&
            ((i = this.relativeContainer
              ? ((i = this.relativeContainer.offset()),
                [
                  this.containment[0] + i.left,
                  this.containment[1] + i.top,
                  this.containment[2] + i.left,
                  this.containment[3] + i.top,
                ])
              : this.containment),
            t.pageX - this.offset.click.left < i[0] &&
              (o = i[0] + this.offset.click.left),
            t.pageY - this.offset.click.top < i[1] &&
              (a = i[1] + this.offset.click.top),
            t.pageX - this.offset.click.left > i[2] &&
              (o = i[2] + this.offset.click.left),
            t.pageY - this.offset.click.top > i[3] &&
              (a = i[3] + this.offset.click.top)),
          s.grid &&
            ((t = s.grid[1]
              ? this.originalPageY +
                Math.round((a - this.originalPageY) / s.grid[1]) * s.grid[1]
              : this.originalPageY),
            (a =
              !i ||
              t - this.offset.click.top >= i[1] ||
              t - this.offset.click.top > i[3]
                ? t
                : t - this.offset.click.top >= i[1]
                ? t - s.grid[1]
                : t + s.grid[1]),
            (t = s.grid[0]
              ? this.originalPageX +
                Math.round((o - this.originalPageX) / s.grid[0]) * s.grid[0]
              : this.originalPageX),
            (o =
              !i ||
              t - this.offset.click.left >= i[0] ||
              t - this.offset.click.left > i[2]
                ? t
                : t - this.offset.click.left >= i[0]
                ? t - s.grid[0]
                : t + s.grid[0])),
          "y" === s.axis && (o = this.originalPageX),
          "x" === s.axis && (a = this.originalPageY)),
        {
          top:
            a -
            this.offset.click.top -
            this.offset.relative.top -
            this.offset.parent.top +
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.top
              : n
              ? 0
              : this.offset.scroll.top),
          left:
            o -
            this.offset.click.left -
            this.offset.relative.left -
            this.offset.parent.left +
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.left
              : n
              ? 0
              : this.offset.scroll.left),
        }
      );
    },
    _clear: function () {
      this._removeClass(this.helper, "ui-draggable-dragging"),
        this.helper[0] === this.element[0] ||
          this.cancelHelperRemoval ||
          this.helper.remove(),
        (this.helper = null),
        (this.cancelHelperRemoval = !1),
        this.destroyOnClear && this.destroy();
    },
    _trigger: function (t, e, i) {
      return (
        (i = i || this._uiHash()),
        V.ui.plugin.call(this, t, [e, i, this], !0),
        /^(drag|start|stop)/.test(t) &&
          ((this.positionAbs = this._convertPositionTo("absolute")),
          (i.offset = this.positionAbs)),
        V.Widget.prototype._trigger.call(this, t, e, i)
      );
    },
    plugins: {},
    _uiHash: function () {
      return {
        helper: this.helper,
        position: this.position,
        originalPosition: this.originalPosition,
        offset: this.positionAbs,
      };
    },
  }),
    V.ui.plugin.add("draggable", "connectToSortable", {
      start: function (e, t, i) {
        var s = V.extend({}, t, { item: i.element });
        (i.sortables = []),
          V(i.options.connectToSortable).each(function () {
            var t = V(this).sortable("instance");
            t &&
              !t.options.disabled &&
              (i.sortables.push(t),
              t.refreshPositions(),
              t._trigger("activate", e, s));
          });
      },
      stop: function (e, t, i) {
        var s = V.extend({}, t, { item: i.element });
        (i.cancelHelperRemoval = !1),
          V.each(i.sortables, function () {
            var t = this;
            t.isOver
              ? ((t.isOver = 0),
                (i.cancelHelperRemoval = !0),
                (t.cancelHelperRemoval = !1),
                (t._storedCSS = {
                  position: t.placeholder.css("position"),
                  top: t.placeholder.css("top"),
                  left: t.placeholder.css("left"),
                }),
                t._mouseStop(e),
                (t.options.helper = t.options._helper))
              : ((t.cancelHelperRemoval = !0), t._trigger("deactivate", e, s));
          });
      },
      drag: function (i, s, n) {
        V.each(n.sortables, function () {
          var t = !1,
            e = this;
          (e.positionAbs = n.positionAbs),
            (e.helperProportions = n.helperProportions),
            (e.offset.click = n.offset.click),
            e._intersectsWith(e.containerCache) &&
              ((t = !0),
              V.each(n.sortables, function () {
                return (
                  (this.positionAbs = n.positionAbs),
                  (this.helperProportions = n.helperProportions),
                  (this.offset.click = n.offset.click),
                  (t =
                    this !== e &&
                    this._intersectsWith(this.containerCache) &&
                    V.contains(e.element[0], this.element[0])
                      ? !1
                      : t)
                );
              })),
            t
              ? (e.isOver ||
                  ((e.isOver = 1),
                  (n._parent = s.helper.parent()),
                  (e.currentItem = s.helper
                    .appendTo(e.element)
                    .data("ui-sortable-item", !0)),
                  (e.options._helper = e.options.helper),
                  (e.options.helper = function () {
                    return s.helper[0];
                  }),
                  (i.target = e.currentItem[0]),
                  e._mouseCapture(i, !0),
                  e._mouseStart(i, !0, !0),
                  (e.offset.click.top = n.offset.click.top),
                  (e.offset.click.left = n.offset.click.left),
                  (e.offset.parent.left -=
                    n.offset.parent.left - e.offset.parent.left),
                  (e.offset.parent.top -=
                    n.offset.parent.top - e.offset.parent.top),
                  n._trigger("toSortable", i),
                  (n.dropped = e.element),
                  V.each(n.sortables, function () {
                    this.refreshPositions();
                  }),
                  (n.currentItem = n.element),
                  (e.fromOutside = n)),
                e.currentItem && (e._mouseDrag(i), (s.position = e.position)))
              : e.isOver &&
                ((e.isOver = 0),
                (e.cancelHelperRemoval = !0),
                (e.options._revert = e.options.revert),
                (e.options.revert = !1),
                e._trigger("out", i, e._uiHash(e)),
                e._mouseStop(i, !0),
                (e.options.revert = e.options._revert),
                (e.options.helper = e.options._helper),
                e.placeholder && e.placeholder.remove(),
                s.helper.appendTo(n._parent),
                n._refreshOffsets(i),
                (s.position = n._generatePosition(i, !0)),
                n._trigger("fromSortable", i),
                (n.dropped = !1),
                V.each(n.sortables, function () {
                  this.refreshPositions();
                }));
        });
      },
    }),
    V.ui.plugin.add("draggable", "cursor", {
      start: function (t, e, i) {
        var s = V("body"),
          i = i.options;
        s.css("cursor") && (i._cursor = s.css("cursor")),
          s.css("cursor", i.cursor);
      },
      stop: function (t, e, i) {
        i = i.options;
        i._cursor && V("body").css("cursor", i._cursor);
      },
    }),
    V.ui.plugin.add("draggable", "opacity", {
      start: function (t, e, i) {
        (e = V(e.helper)), (i = i.options);
        e.css("opacity") && (i._opacity = e.css("opacity")),
          e.css("opacity", i.opacity);
      },
      stop: function (t, e, i) {
        i = i.options;
        i._opacity && V(e.helper).css("opacity", i._opacity);
      },
    }),
    V.ui.plugin.add("draggable", "scroll", {
      start: function (t, e, i) {
        i.scrollParentNotHidden ||
          (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
          i.scrollParentNotHidden[0] !== i.document[0] &&
            "HTML" !== i.scrollParentNotHidden[0].tagName &&
            (i.overflowOffset = i.scrollParentNotHidden.offset());
      },
      drag: function (t, e, i) {
        var s = i.options,
          n = !1,
          o = i.scrollParentNotHidden[0],
          a = i.document[0];
        o !== a && "HTML" !== o.tagName
          ? ((s.axis && "x" === s.axis) ||
              (i.overflowOffset.top + o.offsetHeight - t.pageY <
              s.scrollSensitivity
                ? (o.scrollTop = n = o.scrollTop + s.scrollSpeed)
                : t.pageY - i.overflowOffset.top < s.scrollSensitivity &&
                  (o.scrollTop = n = o.scrollTop - s.scrollSpeed)),
            (s.axis && "y" === s.axis) ||
              (i.overflowOffset.left + o.offsetWidth - t.pageX <
              s.scrollSensitivity
                ? (o.scrollLeft = n = o.scrollLeft + s.scrollSpeed)
                : t.pageX - i.overflowOffset.left < s.scrollSensitivity &&
                  (o.scrollLeft = n = o.scrollLeft - s.scrollSpeed)))
          : ((s.axis && "x" === s.axis) ||
              (t.pageY - V(a).scrollTop() < s.scrollSensitivity
                ? (n = V(a).scrollTop(V(a).scrollTop() - s.scrollSpeed))
                : V(window).height() - (t.pageY - V(a).scrollTop()) <
                    s.scrollSensitivity &&
                  (n = V(a).scrollTop(V(a).scrollTop() + s.scrollSpeed))),
            (s.axis && "y" === s.axis) ||
              (t.pageX - V(a).scrollLeft() < s.scrollSensitivity
                ? (n = V(a).scrollLeft(V(a).scrollLeft() - s.scrollSpeed))
                : V(window).width() - (t.pageX - V(a).scrollLeft()) <
                    s.scrollSensitivity &&
                  (n = V(a).scrollLeft(V(a).scrollLeft() + s.scrollSpeed)))),
          !1 !== n &&
            V.ui.ddmanager &&
            !s.dropBehaviour &&
            V.ui.ddmanager.prepareOffsets(i, t);
      },
    }),
    V.ui.plugin.add("draggable", "snap", {
      start: function (t, e, i) {
        var s = i.options;
        (i.snapElements = []),
          V(
            s.snap.constructor !== String
              ? s.snap.items || ":data(ui-draggable)"
              : s.snap
          ).each(function () {
            var t = V(this),
              e = t.offset();
            this !== i.element[0] &&
              i.snapElements.push({
                item: this,
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: e.top,
                left: e.left,
              });
          });
      },
      drag: function (t, e, i) {
        for (
          var s,
            n,
            o,
            a,
            r,
            l,
            h,
            c,
            u,
            d = i.options,
            p = d.snapTolerance,
            f = e.offset.left,
            g = f + i.helperProportions.width,
            m = e.offset.top,
            _ = m + i.helperProportions.height,
            v = i.snapElements.length - 1;
          0 <= v;
          v--
        )
          (l =
            (r = i.snapElements[v].left - i.margins.left) +
            i.snapElements[v].width),
            (c =
              (h = i.snapElements[v].top - i.margins.top) +
              i.snapElements[v].height),
            g < r - p ||
            l + p < f ||
            _ < h - p ||
            c + p < m ||
            !V.contains(
              i.snapElements[v].item.ownerDocument,
              i.snapElements[v].item
            )
              ? (i.snapElements[v].snapping &&
                  i.options.snap.release &&
                  i.options.snap.release.call(
                    i.element,
                    t,
                    V.extend(i._uiHash(), { snapItem: i.snapElements[v].item })
                  ),
                (i.snapElements[v].snapping = !1))
              : ("inner" !== d.snapMode &&
                  ((s = Math.abs(h - _) <= p),
                  (n = Math.abs(c - m) <= p),
                  (o = Math.abs(r - g) <= p),
                  (a = Math.abs(l - f) <= p),
                  s &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: h - i.helperProportions.height,
                      left: 0,
                    }).top),
                  n &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: c,
                      left: 0,
                    }).top),
                  o &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: r - i.helperProportions.width,
                    }).left),
                  a &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: l,
                    }).left)),
                (u = s || n || o || a),
                "outer" !== d.snapMode &&
                  ((s = Math.abs(h - m) <= p),
                  (n = Math.abs(c - _) <= p),
                  (o = Math.abs(r - f) <= p),
                  (a = Math.abs(l - g) <= p),
                  s &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: h,
                      left: 0,
                    }).top),
                  n &&
                    (e.position.top = i._convertPositionTo("relative", {
                      top: c - i.helperProportions.height,
                      left: 0,
                    }).top),
                  o &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: r,
                    }).left),
                  a &&
                    (e.position.left = i._convertPositionTo("relative", {
                      top: 0,
                      left: l - i.helperProportions.width,
                    }).left)),
                !i.snapElements[v].snapping &&
                  (s || n || o || a || u) &&
                  i.options.snap.snap &&
                  i.options.snap.snap.call(
                    i.element,
                    t,
                    V.extend(i._uiHash(), { snapItem: i.snapElements[v].item })
                  ),
                (i.snapElements[v].snapping = s || n || o || a || u));
      },
    }),
    V.ui.plugin.add("draggable", "stack", {
      start: function (t, e, i) {
        var s,
          i = i.options,
          i = V.makeArray(V(i.stack)).sort(function (t, e) {
            return (
              (parseInt(V(t).css("zIndex"), 10) || 0) -
              (parseInt(V(e).css("zIndex"), 10) || 0)
            );
          });
        i.length &&
          ((s = parseInt(V(i[0]).css("zIndex"), 10) || 0),
          V(i).each(function (t) {
            V(this).css("zIndex", s + t);
          }),
          this.css("zIndex", s + i.length));
      },
    }),
    V.ui.plugin.add("draggable", "zIndex", {
      start: function (t, e, i) {
        (e = V(e.helper)), (i = i.options);
        e.css("zIndex") && (i._zIndex = e.css("zIndex")),
          e.css("zIndex", i.zIndex);
      },
      stop: function (t, e, i) {
        i = i.options;
        i._zIndex && V(e.helper).css("zIndex", i._zIndex);
      },
    });
  V.ui.draggable;
  V.widget("ui.resizable", V.ui.mouse, {
    version: "1.13.2",
    widgetEventPrefix: "resize",
    options: {
      alsoResize: !1,
      animate: !1,
      animateDuration: "slow",
      animateEasing: "swing",
      aspectRatio: !1,
      autoHide: !1,
      classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
      containment: !1,
      ghost: !1,
      grid: !1,
      handles: "e,s,se",
      helper: !1,
      maxHeight: null,
      maxWidth: null,
      minHeight: 10,
      minWidth: 10,
      zIndex: 90,
      resize: null,
      start: null,
      stop: null,
    },
    _num: function (t) {
      return parseFloat(t) || 0;
    },
    _isNumber: function (t) {
      return !isNaN(parseFloat(t));
    },
    _hasScroll: function (t, e) {
      if ("hidden" === V(t).css("overflow")) return !1;
      var i = e && "left" === e ? "scrollLeft" : "scrollTop",
        e = !1;
      if (0 < t[i]) return !0;
      try {
        (t[i] = 1), (e = 0 < t[i]), (t[i] = 0);
      } catch (t) {}
      return e;
    },
    _create: function () {
      var t,
        e = this.options,
        i = this;
      this._addClass("ui-resizable"),
        V.extend(this, {
          _aspectRatio: !!e.aspectRatio,
          aspectRatio: e.aspectRatio,
          originalElement: this.element,
          _proportionallyResizeElements: [],
          _helper:
            e.helper || e.ghost || e.animate
              ? e.helper || "ui-resizable-helper"
              : null,
        }),
        this.element[0].nodeName.match(
          /^(canvas|textarea|input|select|button|img)$/i
        ) &&
          (this.element.wrap(
            V("<div class='ui-wrapper'></div>").css({
              overflow: "hidden",
              position: this.element.css("position"),
              width: this.element.outerWidth(),
              height: this.element.outerHeight(),
              top: this.element.css("top"),
              left: this.element.css("left"),
            })
          ),
          (this.element = this.element
            .parent()
            .data("ui-resizable", this.element.resizable("instance"))),
          (this.elementIsWrapper = !0),
          (t = {
            marginTop: this.originalElement.css("marginTop"),
            marginRight: this.originalElement.css("marginRight"),
            marginBottom: this.originalElement.css("marginBottom"),
            marginLeft: this.originalElement.css("marginLeft"),
          }),
          this.element.css(t),
          this.originalElement.css("margin", 0),
          (this.originalResizeStyle = this.originalElement.css("resize")),
          this.originalElement.css("resize", "none"),
          this._proportionallyResizeElements.push(
            this.originalElement.css({
              position: "static",
              zoom: 1,
              display: "block",
            })
          ),
          this.originalElement.css(t),
          this._proportionallyResize()),
        this._setupHandles(),
        e.autoHide &&
          V(this.element)
            .on("mouseenter", function () {
              e.disabled ||
                (i._removeClass("ui-resizable-autohide"), i._handles.show());
            })
            .on("mouseleave", function () {
              e.disabled ||
                i.resizing ||
                (i._addClass("ui-resizable-autohide"), i._handles.hide());
            }),
        this._mouseInit();
    },
    _destroy: function () {
      this._mouseDestroy(), this._addedHandles.remove();
      function t(t) {
        V(t)
          .removeData("resizable")
          .removeData("ui-resizable")
          .off(".resizable");
      }
      var e;
      return (
        this.elementIsWrapper &&
          (t(this.element),
          (e = this.element),
          this.originalElement
            .css({
              position: e.css("position"),
              width: e.outerWidth(),
              height: e.outerHeight(),
              top: e.css("top"),
              left: e.css("left"),
            })
            .insertAfter(e),
          e.remove()),
        this.originalElement.css("resize", this.originalResizeStyle),
        t(this.originalElement),
        this
      );
    },
    _setOption: function (t, e) {
      switch ((this._super(t, e), t)) {
        case "handles":
          this._removeHandles(), this._setupHandles();
          break;
        case "aspectRatio":
          this._aspectRatio = !!e;
      }
    },
    _setupHandles: function () {
      var t,
        e,
        i,
        s,
        n,
        o = this.options,
        a = this;
      if (
        ((this.handles =
          o.handles ||
          (V(".ui-resizable-handle", this.element).length
            ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw",
              }
            : "e,s,se")),
        (this._handles = V()),
        (this._addedHandles = V()),
        this.handles.constructor === String)
      )
        for (
          "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
            i = this.handles.split(","),
            this.handles = {},
            e = 0;
          e < i.length;
          e++
        )
          (s = "ui-resizable-" + (t = String.prototype.trim.call(i[e]))),
            (n = V("<div>")),
            this._addClass(n, "ui-resizable-handle " + s),
            n.css({ zIndex: o.zIndex }),
            (this.handles[t] = ".ui-resizable-" + t),
            this.element.children(this.handles[t]).length ||
              (this.element.append(n),
              (this._addedHandles = this._addedHandles.add(n)));
      (this._renderAxis = function (t) {
        var e, i, s;
        for (e in ((t = t || this.element), this.handles))
          this.handles[e].constructor === String
            ? (this.handles[e] = this.element
                .children(this.handles[e])
                .first()
                .show())
            : (this.handles[e].jquery || this.handles[e].nodeType) &&
              ((this.handles[e] = V(this.handles[e])),
              this._on(this.handles[e], { mousedown: a._mouseDown })),
            this.elementIsWrapper &&
              this.originalElement[0].nodeName.match(
                /^(textarea|input|select|button)$/i
              ) &&
              ((i = V(this.handles[e], this.element)),
              (s = /sw|ne|nw|se|n|s/.test(e)
                ? i.outerHeight()
                : i.outerWidth()),
              (i = [
                "padding",
                /ne|nw|n/.test(e)
                  ? "Top"
                  : /se|sw|s/.test(e)
                  ? "Bottom"
                  : /^e$/.test(e)
                  ? "Right"
                  : "Left",
              ].join("")),
              t.css(i, s),
              this._proportionallyResize()),
            (this._handles = this._handles.add(this.handles[e]));
      }),
        this._renderAxis(this.element),
        (this._handles = this._handles.add(
          this.element.find(".ui-resizable-handle")
        )),
        this._handles.disableSelection(),
        this._handles.on("mouseover", function () {
          a.resizing ||
            (this.className &&
              (n = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),
            (a.axis = n && n[1] ? n[1] : "se"));
        }),
        o.autoHide &&
          (this._handles.hide(), this._addClass("ui-resizable-autohide"));
    },
    _removeHandles: function () {
      this._addedHandles.remove();
    },
    _mouseCapture: function (t) {
      var e,
        i,
        s = !1;
      for (e in this.handles)
        ((i = V(this.handles[e])[0]) !== t.target &&
          !V.contains(i, t.target)) ||
          (s = !0);
      return !this.options.disabled && s;
    },
    _mouseStart: function (t) {
      var e,
        i,
        s = this.options,
        n = this.element;
      return (
        (this.resizing = !0),
        this._renderProxy(),
        (e = this._num(this.helper.css("left"))),
        (i = this._num(this.helper.css("top"))),
        s.containment &&
          ((e += V(s.containment).scrollLeft() || 0),
          (i += V(s.containment).scrollTop() || 0)),
        (this.offset = this.helper.offset()),
        (this.position = { left: e, top: i }),
        (this.size = this._helper
          ? { width: this.helper.width(), height: this.helper.height() }
          : { width: n.width(), height: n.height() }),
        (this.originalSize = this._helper
          ? { width: n.outerWidth(), height: n.outerHeight() }
          : { width: n.width(), height: n.height() }),
        (this.sizeDiff = {
          width: n.outerWidth() - n.width(),
          height: n.outerHeight() - n.height(),
        }),
        (this.originalPosition = { left: e, top: i }),
        (this.originalMousePosition = { left: t.pageX, top: t.pageY }),
        (this.aspectRatio =
          "number" == typeof s.aspectRatio
            ? s.aspectRatio
            : this.originalSize.width / this.originalSize.height || 1),
        (s = V(".ui-resizable-" + this.axis).css("cursor")),
        V("body").css("cursor", "auto" === s ? this.axis + "-resize" : s),
        this._addClass("ui-resizable-resizing"),
        this._propagate("start", t),
        !0
      );
    },
    _mouseDrag: function (t) {
      var e = this.originalMousePosition,
        i = this.axis,
        s = t.pageX - e.left || 0,
        e = t.pageY - e.top || 0,
        i = this._change[i];
      return (
        this._updatePrevProperties(),
        i &&
          ((e = i.apply(this, [t, s, e])),
          this._updateVirtualBoundaries(t.shiftKey),
          (this._aspectRatio || t.shiftKey) && (e = this._updateRatio(e, t)),
          (e = this._respectSize(e, t)),
          this._updateCache(e),
          this._propagate("resize", t),
          (e = this._applyChanges()),
          !this._helper &&
            this._proportionallyResizeElements.length &&
            this._proportionallyResize(),
          V.isEmptyObject(e) ||
            (this._updatePrevProperties(),
            this._trigger("resize", t, this.ui()),
            this._applyChanges())),
        !1
      );
    },
    _mouseStop: function (t) {
      this.resizing = !1;
      var e,
        i,
        s,
        n = this.options,
        o = this;
      return (
        this._helper &&
          ((s =
            (e =
              (i = this._proportionallyResizeElements).length &&
              /textarea/i.test(i[0].nodeName)) && this._hasScroll(i[0], "left")
              ? 0
              : o.sizeDiff.height),
          (i = e ? 0 : o.sizeDiff.width),
          (e = { width: o.helper.width() - i, height: o.helper.height() - s }),
          (i =
            parseFloat(o.element.css("left")) +
              (o.position.left - o.originalPosition.left) || null),
          (s =
            parseFloat(o.element.css("top")) +
              (o.position.top - o.originalPosition.top) || null),
          n.animate || this.element.css(V.extend(e, { top: s, left: i })),
          o.helper.height(o.size.height),
          o.helper.width(o.size.width),
          this._helper && !n.animate && this._proportionallyResize()),
        V("body").css("cursor", "auto"),
        this._removeClass("ui-resizable-resizing"),
        this._propagate("stop", t),
        this._helper && this.helper.remove(),
        !1
      );
    },
    _updatePrevProperties: function () {
      (this.prevPosition = {
        top: this.position.top,
        left: this.position.left,
      }),
        (this.prevSize = { width: this.size.width, height: this.size.height });
    },
    _applyChanges: function () {
      var t = {};
      return (
        this.position.top !== this.prevPosition.top &&
          (t.top = this.position.top + "px"),
        this.position.left !== this.prevPosition.left &&
          (t.left = this.position.left + "px"),
        this.size.width !== this.prevSize.width &&
          (t.width = this.size.width + "px"),
        this.size.height !== this.prevSize.height &&
          (t.height = this.size.height + "px"),
        this.helper.css(t),
        t
      );
    },
    _updateVirtualBoundaries: function (t) {
      var e,
        i,
        s = this.options,
        n = {
          minWidth: this._isNumber(s.minWidth) ? s.minWidth : 0,
          maxWidth: this._isNumber(s.maxWidth) ? s.maxWidth : 1 / 0,
          minHeight: this._isNumber(s.minHeight) ? s.minHeight : 0,
          maxHeight: this._isNumber(s.maxHeight) ? s.maxHeight : 1 / 0,
        };
      (this._aspectRatio || t) &&
        ((e = n.minHeight * this.aspectRatio),
        (i = n.minWidth / this.aspectRatio),
        (s = n.maxHeight * this.aspectRatio),
        (t = n.maxWidth / this.aspectRatio),
        e > n.minWidth && (n.minWidth = e),
        i > n.minHeight && (n.minHeight = i),
        s < n.maxWidth && (n.maxWidth = s),
        t < n.maxHeight && (n.maxHeight = t)),
        (this._vBoundaries = n);
    },
    _updateCache: function (t) {
      (this.offset = this.helper.offset()),
        this._isNumber(t.left) && (this.position.left = t.left),
        this._isNumber(t.top) && (this.position.top = t.top),
        this._isNumber(t.height) && (this.size.height = t.height),
        this._isNumber(t.width) && (this.size.width = t.width);
    },
    _updateRatio: function (t) {
      var e = this.position,
        i = this.size,
        s = this.axis;
      return (
        this._isNumber(t.height)
          ? (t.width = t.height * this.aspectRatio)
          : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio),
        "sw" === s && ((t.left = e.left + (i.width - t.width)), (t.top = null)),
        "nw" === s &&
          ((t.top = e.top + (i.height - t.height)),
          (t.left = e.left + (i.width - t.width))),
        t
      );
    },
    _respectSize: function (t) {
      var e = this._vBoundaries,
        i = this.axis,
        s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width,
        n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height,
        o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width,
        a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height,
        r = this.originalPosition.left + this.originalSize.width,
        l = this.originalPosition.top + this.originalSize.height,
        h = /sw|nw|w/.test(i),
        i = /nw|ne|n/.test(i);
      return (
        o && (t.width = e.minWidth),
        a && (t.height = e.minHeight),
        s && (t.width = e.maxWidth),
        n && (t.height = e.maxHeight),
        o && h && (t.left = r - e.minWidth),
        s && h && (t.left = r - e.maxWidth),
        a && i && (t.top = l - e.minHeight),
        n && i && (t.top = l - e.maxHeight),
        t.width || t.height || t.left || !t.top
          ? t.width || t.height || t.top || !t.left || (t.left = null)
          : (t.top = null),
        t
      );
    },
    _getPaddingPlusBorderDimensions: function (t) {
      for (
        var e = 0,
          i = [],
          s = [
            t.css("borderTopWidth"),
            t.css("borderRightWidth"),
            t.css("borderBottomWidth"),
            t.css("borderLeftWidth"),
          ],
          n = [
            t.css("paddingTop"),
            t.css("paddingRight"),
            t.css("paddingBottom"),
            t.css("paddingLeft"),
          ];
        e < 4;
        e++
      )
        (i[e] = parseFloat(s[e]) || 0), (i[e] += parseFloat(n[e]) || 0);
      return { height: i[0] + i[2], width: i[1] + i[3] };
    },
    _proportionallyResize: function () {
      if (this._proportionallyResizeElements.length)
        for (
          var t, e = 0, i = this.helper || this.element;
          e < this._proportionallyResizeElements.length;
          e++
        )
          (t = this._proportionallyResizeElements[e]),
            this.outerDimensions ||
              (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)),
            t.css({
              height: i.height() - this.outerDimensions.height || 0,
              width: i.width() - this.outerDimensions.width || 0,
            });
    },
    _renderProxy: function () {
      var t = this.element,
        e = this.options;
      (this.elementOffset = t.offset()),
        this._helper
          ? ((this.helper =
              this.helper || V("<div></div>").css({ overflow: "hidden" })),
            this._addClass(this.helper, this._helper),
            this.helper.css({
              width: this.element.outerWidth(),
              height: this.element.outerHeight(),
              position: "absolute",
              left: this.elementOffset.left + "px",
              top: this.elementOffset.top + "px",
              zIndex: ++e.zIndex,
            }),
            this.helper.appendTo("body").disableSelection())
          : (this.helper = this.element);
    },
    _change: {
      e: function (t, e) {
        return { width: this.originalSize.width + e };
      },
      w: function (t, e) {
        var i = this.originalSize;
        return { left: this.originalPosition.left + e, width: i.width - e };
      },
      n: function (t, e, i) {
        var s = this.originalSize;
        return { top: this.originalPosition.top + i, height: s.height - i };
      },
      s: function (t, e, i) {
        return { height: this.originalSize.height + i };
      },
      se: function (t, e, i) {
        return V.extend(
          this._change.s.apply(this, arguments),
          this._change.e.apply(this, [t, e, i])
        );
      },
      sw: function (t, e, i) {
        return V.extend(
          this._change.s.apply(this, arguments),
          this._change.w.apply(this, [t, e, i])
        );
      },
      ne: function (t, e, i) {
        return V.extend(
          this._change.n.apply(this, arguments),
          this._change.e.apply(this, [t, e, i])
        );
      },
      nw: function (t, e, i) {
        return V.extend(
          this._change.n.apply(this, arguments),
          this._change.w.apply(this, [t, e, i])
        );
      },
    },
    _propagate: function (t, e) {
      V.ui.plugin.call(this, t, [e, this.ui()]),
        "resize" !== t && this._trigger(t, e, this.ui());
    },
    plugins: {},
    ui: function () {
      return {
        originalElement: this.originalElement,
        element: this.element,
        helper: this.helper,
        position: this.position,
        size: this.size,
        originalSize: this.originalSize,
        originalPosition: this.originalPosition,
      };
    },
  }),
    V.ui.plugin.add("resizable", "animate", {
      stop: function (e) {
        var i = V(this).resizable("instance"),
          t = i.options,
          s = i._proportionallyResizeElements,
          n = s.length && /textarea/i.test(s[0].nodeName),
          o = n && i._hasScroll(s[0], "left") ? 0 : i.sizeDiff.height,
          a = n ? 0 : i.sizeDiff.width,
          n = { width: i.size.width - a, height: i.size.height - o },
          a =
            parseFloat(i.element.css("left")) +
              (i.position.left - i.originalPosition.left) || null,
          o =
            parseFloat(i.element.css("top")) +
              (i.position.top - i.originalPosition.top) || null;
        i.element.animate(V.extend(n, o && a ? { top: o, left: a } : {}), {
          duration: t.animateDuration,
          easing: t.animateEasing,
          step: function () {
            var t = {
              width: parseFloat(i.element.css("width")),
              height: parseFloat(i.element.css("height")),
              top: parseFloat(i.element.css("top")),
              left: parseFloat(i.element.css("left")),
            };
            s && s.length && V(s[0]).css({ width: t.width, height: t.height }),
              i._updateCache(t),
              i._propagate("resize", e);
          },
        });
      },
    }),
    V.ui.plugin.add("resizable", "containment", {
      start: function () {
        var i,
          s,
          n = V(this).resizable("instance"),
          t = n.options,
          e = n.element,
          o = t.containment,
          a =
            o instanceof V
              ? o.get(0)
              : /parent/.test(o)
              ? e.parent().get(0)
              : o;
        a &&
          ((n.containerElement = V(a)),
          /document/.test(o) || o === document
            ? ((n.containerOffset = { left: 0, top: 0 }),
              (n.containerPosition = { left: 0, top: 0 }),
              (n.parentData = {
                element: V(document),
                left: 0,
                top: 0,
                width: V(document).width(),
                height:
                  V(document).height() || document.body.parentNode.scrollHeight,
              }))
            : ((i = V(a)),
              (s = []),
              V(["Top", "Right", "Left", "Bottom"]).each(function (t, e) {
                s[t] = n._num(i.css("padding" + e));
              }),
              (n.containerOffset = i.offset()),
              (n.containerPosition = i.position()),
              (n.containerSize = {
                height: i.innerHeight() - s[3],
                width: i.innerWidth() - s[1],
              }),
              (t = n.containerOffset),
              (e = n.containerSize.height),
              (o = n.containerSize.width),
              (o = n._hasScroll(a, "left") ? a.scrollWidth : o),
              (e = n._hasScroll(a) ? a.scrollHeight : e),
              (n.parentData = {
                element: a,
                left: t.left,
                top: t.top,
                width: o,
                height: e,
              })));
      },
      resize: function (t) {
        var e = V(this).resizable("instance"),
          i = e.options,
          s = e.containerOffset,
          n = e.position,
          o = e._aspectRatio || t.shiftKey,
          a = { top: 0, left: 0 },
          r = e.containerElement,
          t = !0;
        r[0] !== document && /static/.test(r.css("position")) && (a = s),
          n.left < (e._helper ? s.left : 0) &&
            ((e.size.width =
              e.size.width +
              (e._helper
                ? e.position.left - s.left
                : e.position.left - a.left)),
            o && ((e.size.height = e.size.width / e.aspectRatio), (t = !1)),
            (e.position.left = i.helper ? s.left : 0)),
          n.top < (e._helper ? s.top : 0) &&
            ((e.size.height =
              e.size.height +
              (e._helper ? e.position.top - s.top : e.position.top)),
            o && ((e.size.width = e.size.height * e.aspectRatio), (t = !1)),
            (e.position.top = e._helper ? s.top : 0)),
          (i = e.containerElement.get(0) === e.element.parent().get(0)),
          (n = /relative|absolute/.test(e.containerElement.css("position"))),
          i && n
            ? ((e.offset.left = e.parentData.left + e.position.left),
              (e.offset.top = e.parentData.top + e.position.top))
            : ((e.offset.left = e.element.offset().left),
              (e.offset.top = e.element.offset().top)),
          (n = Math.abs(
            e.sizeDiff.width +
              (e._helper ? e.offset.left - a.left : e.offset.left - s.left)
          )),
          (s = Math.abs(
            e.sizeDiff.height +
              (e._helper ? e.offset.top - a.top : e.offset.top - s.top)
          )),
          n + e.size.width >= e.parentData.width &&
            ((e.size.width = e.parentData.width - n),
            o && ((e.size.height = e.size.width / e.aspectRatio), (t = !1))),
          s + e.size.height >= e.parentData.height &&
            ((e.size.height = e.parentData.height - s),
            o && ((e.size.width = e.size.height * e.aspectRatio), (t = !1))),
          t ||
            ((e.position.left = e.prevPosition.left),
            (e.position.top = e.prevPosition.top),
            (e.size.width = e.prevSize.width),
            (e.size.height = e.prevSize.height));
      },
      stop: function () {
        var t = V(this).resizable("instance"),
          e = t.options,
          i = t.containerOffset,
          s = t.containerPosition,
          n = t.containerElement,
          o = V(t.helper),
          a = o.offset(),
          r = o.outerWidth() - t.sizeDiff.width,
          o = o.outerHeight() - t.sizeDiff.height;
        t._helper &&
          !e.animate &&
          /relative/.test(n.css("position")) &&
          V(this).css({ left: a.left - s.left - i.left, width: r, height: o }),
          t._helper &&
            !e.animate &&
            /static/.test(n.css("position")) &&
            V(this).css({
              left: a.left - s.left - i.left,
              width: r,
              height: o,
            });
      },
    }),
    V.ui.plugin.add("resizable", "alsoResize", {
      start: function () {
        var t = V(this).resizable("instance").options;
        V(t.alsoResize).each(function () {
          var t = V(this);
          t.data("ui-resizable-alsoresize", {
            width: parseFloat(t.width()),
            height: parseFloat(t.height()),
            left: parseFloat(t.css("left")),
            top: parseFloat(t.css("top")),
          });
        });
      },
      resize: function (t, i) {
        var e = V(this).resizable("instance"),
          s = e.options,
          n = e.originalSize,
          o = e.originalPosition,
          a = {
            height: e.size.height - n.height || 0,
            width: e.size.width - n.width || 0,
            top: e.position.top - o.top || 0,
            left: e.position.left - o.left || 0,
          };
        V(s.alsoResize).each(function () {
          var t = V(this),
            s = V(this).data("ui-resizable-alsoresize"),
            n = {},
            e = t.parents(i.originalElement[0]).length
              ? ["width", "height"]
              : ["width", "height", "top", "left"];
          V.each(e, function (t, e) {
            var i = (s[e] || 0) + (a[e] || 0);
            i && 0 <= i && (n[e] = i || null);
          }),
            t.css(n);
        });
      },
      stop: function () {
        V(this).removeData("ui-resizable-alsoresize");
      },
    }),
    V.ui.plugin.add("resizable", "ghost", {
      start: function () {
        var t = V(this).resizable("instance"),
          e = t.size;
        (t.ghost = t.originalElement.clone()),
          t.ghost.css({
            opacity: 0.25,
            display: "block",
            position: "relative",
            height: e.height,
            width: e.width,
            margin: 0,
            left: 0,
            top: 0,
          }),
          t._addClass(t.ghost, "ui-resizable-ghost"),
          !1 !== V.uiBackCompat &&
            "string" == typeof t.options.ghost &&
            t.ghost.addClass(this.options.ghost),
          t.ghost.appendTo(t.helper);
      },
      resize: function () {
        var t = V(this).resizable("instance");
        t.ghost &&
          t.ghost.css({
            position: "relative",
            height: t.size.height,
            width: t.size.width,
          });
      },
      stop: function () {
        var t = V(this).resizable("instance");
        t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
      },
    }),
    V.ui.plugin.add("resizable", "grid", {
      resize: function () {
        var t,
          e = V(this).resizable("instance"),
          i = e.options,
          s = e.size,
          n = e.originalSize,
          o = e.originalPosition,
          a = e.axis,
          r = "number" == typeof i.grid ? [i.grid, i.grid] : i.grid,
          l = r[0] || 1,
          h = r[1] || 1,
          c = Math.round((s.width - n.width) / l) * l,
          u = Math.round((s.height - n.height) / h) * h,
          d = n.width + c,
          p = n.height + u,
          f = i.maxWidth && i.maxWidth < d,
          g = i.maxHeight && i.maxHeight < p,
          m = i.minWidth && i.minWidth > d,
          s = i.minHeight && i.minHeight > p;
        (i.grid = r),
          m && (d += l),
          s && (p += h),
          f && (d -= l),
          g && (p -= h),
          /^(se|s|e)$/.test(a)
            ? ((e.size.width = d), (e.size.height = p))
            : /^(ne)$/.test(a)
            ? ((e.size.width = d),
              (e.size.height = p),
              (e.position.top = o.top - u))
            : /^(sw)$/.test(a)
            ? ((e.size.width = d),
              (e.size.height = p),
              (e.position.left = o.left - c))
            : ((p - h <= 0 || d - l <= 0) &&
                (t = e._getPaddingPlusBorderDimensions(this)),
              0 < p - h
                ? ((e.size.height = p), (e.position.top = o.top - u))
                : ((p = h - t.height),
                  (e.size.height = p),
                  (e.position.top = o.top + n.height - p)),
              0 < d - l
                ? ((e.size.width = d), (e.position.left = o.left - c))
                : ((d = l - t.width),
                  (e.size.width = d),
                  (e.position.left = o.left + n.width - d)));
      },
    });
  V.ui.resizable;
  V.widget("ui.dialog", {
    version: "1.13.2",
    options: {
      appendTo: "body",
      autoOpen: !0,
      buttons: [],
      classes: {
        "ui-dialog": "ui-corner-all",
        "ui-dialog-titlebar": "ui-corner-all",
      },
      closeOnEscape: !0,
      closeText: "Close",
      draggable: !0,
      hide: null,
      height: "auto",
      maxHeight: null,
      maxWidth: null,
      minHeight: 150,
      minWidth: 150,
      modal: !1,
      position: {
        my: "center",
        at: "center",
        of: window,
        collision: "fit",
        using: function (t) {
          var e = V(this).css(t).offset().top;
          e < 0 && V(this).css("top", t.top - e);
        },
      },
      resizable: !0,
      show: null,
      title: null,
      width: 300,
      beforeClose: null,
      close: null,
      drag: null,
      dragStart: null,
      dragStop: null,
      focus: null,
      open: null,
      resize: null,
      resizeStart: null,
      resizeStop: null,
    },
    sizeRelatedOptions: {
      buttons: !0,
      height: !0,
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0,
      width: !0,
    },
    resizableRelatedOptions: {
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0,
    },
    _create: function () {
      (this.originalCss = {
        display: this.element[0].style.display,
        width: this.element[0].style.width,
        minHeight: this.element[0].style.minHeight,
        maxHeight: this.element[0].style.maxHeight,
        height: this.element[0].style.height,
      }),
        (this.originalPosition = {
          parent: this.element.parent(),
          index: this.element.parent().children().index(this.element),
        }),
        (this.originalTitle = this.element.attr("title")),
        null == this.options.title &&
          null != this.originalTitle &&
          (this.options.title = this.originalTitle),
        this.options.disabled && (this.options.disabled = !1),
        this._createWrapper(),
        this.element.show().removeAttr("title").appendTo(this.uiDialog),
        this._addClass("ui-dialog-content", "ui-widget-content"),
        this._createTitlebar(),
        this._createButtonPane(),
        this.options.draggable && V.fn.draggable && this._makeDraggable(),
        this.options.resizable && V.fn.resizable && this._makeResizable(),
        (this._isOpen = !1),
        this._trackFocus();
    },
    _init: function () {
      this.options.autoOpen && this.open();
    },
    _appendTo: function () {
      var t = this.options.appendTo;
      return t && (t.jquery || t.nodeType)
        ? V(t)
        : this.document.find(t || "body").eq(0);
    },
    _destroy: function () {
      var t,
        e = this.originalPosition;
      this._untrackInstance(),
        this._destroyOverlay(),
        this.element.removeUniqueId().css(this.originalCss).detach(),
        this.uiDialog.remove(),
        this.originalTitle && this.element.attr("title", this.originalTitle),
        (t = e.parent.children().eq(e.index)).length && t[0] !== this.element[0]
          ? t.before(this.element)
          : e.parent.append(this.element);
    },
    widget: function () {
      return this.uiDialog;
    },
    disable: V.noop,
    enable: V.noop,
    close: function (t) {
      var e = this;
      this._isOpen &&
        !1 !== this._trigger("beforeClose", t) &&
        ((this._isOpen = !1),
        (this._focusedElement = null),
        this._destroyOverlay(),
        this._untrackInstance(),
        this.opener.filter(":focusable").trigger("focus").length ||
          V.ui.safeBlur(V.ui.safeActiveElement(this.document[0])),
        this._hide(this.uiDialog, this.options.hide, function () {
          e._trigger("close", t);
        }));
    },
    isOpen: function () {
      return this._isOpen;
    },
    moveToTop: function () {
      this._moveToTop();
    },
    _moveToTop: function (t, e) {
      var i = !1,
        s = this.uiDialog
          .siblings(".ui-front:visible")
          .map(function () {
            return +V(this).css("z-index");
          })
          .get(),
        s = Math.max.apply(null, s);
      return (
        s >= +this.uiDialog.css("z-index") &&
          (this.uiDialog.css("z-index", s + 1), (i = !0)),
        i && !e && this._trigger("focus", t),
        i
      );
    },
    open: function () {
      var t = this;
      this._isOpen
        ? this._moveToTop() && this._focusTabbable()
        : ((this._isOpen = !0),
          (this.opener = V(V.ui.safeActiveElement(this.document[0]))),
          this._size(),
          this._position(),
          this._createOverlay(),
          this._moveToTop(null, !0),
          this.overlay &&
            this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
          this._show(this.uiDialog, this.options.show, function () {
            t._focusTabbable(), t._trigger("focus");
          }),
          this._makeFocusTarget(),
          this._trigger("open"));
    },
    _focusTabbable: function () {
      var t = this._focusedElement;
      (t = !(t = !(t = !(t = !(t = t || this.element.find("[autofocus]")).length
        ? this.element.find(":tabbable")
        : t).length
        ? this.uiDialogButtonPane.find(":tabbable")
        : t).length
        ? this.uiDialogTitlebarClose.filter(":tabbable")
        : t).length
        ? this.uiDialog
        : t)
        .eq(0)
        .trigger("focus");
    },
    _restoreTabbableFocus: function () {
      var t = V.ui.safeActiveElement(this.document[0]);
      this.uiDialog[0] === t ||
        V.contains(this.uiDialog[0], t) ||
        this._focusTabbable();
    },
    _keepFocus: function (t) {
      t.preventDefault(),
        this._restoreTabbableFocus(),
        this._delay(this._restoreTabbableFocus);
    },
    _createWrapper: function () {
      (this.uiDialog = V("<div>")
        .hide()
        .attr({ tabIndex: -1, role: "dialog" })
        .appendTo(this._appendTo())),
        this._addClass(
          this.uiDialog,
          "ui-dialog",
          "ui-widget ui-widget-content ui-front"
        ),
        this._on(this.uiDialog, {
          keydown: function (t) {
            if (
              this.options.closeOnEscape &&
              !t.isDefaultPrevented() &&
              t.keyCode &&
              t.keyCode === V.ui.keyCode.ESCAPE
            )
              return t.preventDefault(), void this.close(t);
            var e, i, s;
            t.keyCode !== V.ui.keyCode.TAB ||
              t.isDefaultPrevented() ||
              ((e = this.uiDialog.find(":tabbable")),
              (i = e.first()),
              (s = e.last()),
              (t.target !== s[0] && t.target !== this.uiDialog[0]) || t.shiftKey
                ? (t.target !== i[0] && t.target !== this.uiDialog[0]) ||
                  !t.shiftKey ||
                  (this._delay(function () {
                    s.trigger("focus");
                  }),
                  t.preventDefault())
                : (this._delay(function () {
                    i.trigger("focus");
                  }),
                  t.preventDefault()));
          },
          mousedown: function (t) {
            this._moveToTop(t) && this._focusTabbable();
          },
        }),
        this.element.find("[aria-describedby]").length ||
          this.uiDialog.attr({
            "aria-describedby": this.element.uniqueId().attr("id"),
          });
    },
    _createTitlebar: function () {
      var t;
      (this.uiDialogTitlebar = V("<div>")),
        this._addClass(
          this.uiDialogTitlebar,
          "ui-dialog-titlebar",
          "ui-widget-header ui-helper-clearfix"
        ),
        this._on(this.uiDialogTitlebar, {
          mousedown: function (t) {
            V(t.target).closest(".ui-dialog-titlebar-close") ||
              this.uiDialog.trigger("focus");
          },
        }),
        (this.uiDialogTitlebarClose = V("<button type='button'></button>")
          .button({
            label: V("<a>").text(this.options.closeText).html(),
            icon: "ui-icon-closethick",
            showLabel: !1,
          })
          .appendTo(this.uiDialogTitlebar)),
        this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"),
        this._on(this.uiDialogTitlebarClose, {
          click: function (t) {
            t.preventDefault(), this.close(t);
          },
        }),
        (t = V("<span>").uniqueId().prependTo(this.uiDialogTitlebar)),
        this._addClass(t, "ui-dialog-title"),
        this._title(t),
        this.uiDialogTitlebar.prependTo(this.uiDialog),
        this.uiDialog.attr({ "aria-labelledby": t.attr("id") });
    },
    _title: function (t) {
      this.options.title ? t.text(this.options.title) : t.html("&#160;");
    },
    _createButtonPane: function () {
      (this.uiDialogButtonPane = V("<div>")),
        this._addClass(
          this.uiDialogButtonPane,
          "ui-dialog-buttonpane",
          "ui-widget-content ui-helper-clearfix"
        ),
        (this.uiButtonSet = V("<div>").appendTo(this.uiDialogButtonPane)),
        this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
        this._createButtons();
    },
    _createButtons: function () {
      var s = this,
        t = this.options.buttons;
      this.uiDialogButtonPane.remove(),
        this.uiButtonSet.empty(),
        V.isEmptyObject(t) || (Array.isArray(t) && !t.length)
          ? this._removeClass(this.uiDialog, "ui-dialog-buttons")
          : (V.each(t, function (t, e) {
              var i;
              (e = V.extend(
                { type: "button" },
                (e = "function" == typeof e ? { click: e, text: t } : e)
              )),
                (i = e.click),
                (t = {
                  icon: e.icon,
                  iconPosition: e.iconPosition,
                  showLabel: e.showLabel,
                  icons: e.icons,
                  text: e.text,
                }),
                delete e.click,
                delete e.icon,
                delete e.iconPosition,
                delete e.showLabel,
                delete e.icons,
                "boolean" == typeof e.text && delete e.text,
                V("<button></button>", e)
                  .button(t)
                  .appendTo(s.uiButtonSet)
                  .on("click", function () {
                    i.apply(s.element[0], arguments);
                  });
            }),
            this._addClass(this.uiDialog, "ui-dialog-buttons"),
            this.uiDialogButtonPane.appendTo(this.uiDialog));
    },
    _makeDraggable: function () {
      var n = this,
        o = this.options;
      function a(t) {
        return { position: t.position, offset: t.offset };
      }
      this.uiDialog.draggable({
        cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
        handle: ".ui-dialog-titlebar",
        containment: "document",
        start: function (t, e) {
          n._addClass(V(this), "ui-dialog-dragging"),
            n._blockFrames(),
            n._trigger("dragStart", t, a(e));
        },
        drag: function (t, e) {
          n._trigger("drag", t, a(e));
        },
        stop: function (t, e) {
          var i = e.offset.left - n.document.scrollLeft(),
            s = e.offset.top - n.document.scrollTop();
          (o.position = {
            my: "left top",
            at:
              "left" +
              (0 <= i ? "+" : "") +
              i +
              " top" +
              (0 <= s ? "+" : "") +
              s,
            of: n.window,
          }),
            n._removeClass(V(this), "ui-dialog-dragging"),
            n._unblockFrames(),
            n._trigger("dragStop", t, a(e));
        },
      });
    },
    _makeResizable: function () {
      var n = this,
        o = this.options,
        t = o.resizable,
        e = this.uiDialog.css("position"),
        t = "string" == typeof t ? t : "n,e,s,w,se,sw,ne,nw";
      function a(t) {
        return {
          originalPosition: t.originalPosition,
          originalSize: t.originalSize,
          position: t.position,
          size: t.size,
        };
      }
      this.uiDialog
        .resizable({
          cancel: ".ui-dialog-content",
          containment: "document",
          alsoResize: this.element,
          maxWidth: o.maxWidth,
          maxHeight: o.maxHeight,
          minWidth: o.minWidth,
          minHeight: this._minHeight(),
          handles: t,
          start: function (t, e) {
            n._addClass(V(this), "ui-dialog-resizing"),
              n._blockFrames(),
              n._trigger("resizeStart", t, a(e));
          },
          resize: function (t, e) {
            n._trigger("resize", t, a(e));
          },
          stop: function (t, e) {
            var i = n.uiDialog.offset(),
              s = i.left - n.document.scrollLeft(),
              i = i.top - n.document.scrollTop();
            (o.height = n.uiDialog.height()),
              (o.width = n.uiDialog.width()),
              (o.position = {
                my: "left top",
                at:
                  "left" +
                  (0 <= s ? "+" : "") +
                  s +
                  " top" +
                  (0 <= i ? "+" : "") +
                  i,
                of: n.window,
              }),
              n._removeClass(V(this), "ui-dialog-resizing"),
              n._unblockFrames(),
              n._trigger("resizeStop", t, a(e));
          },
        })
        .css("position", e);
    },
    _trackFocus: function () {
      this._on(this.widget(), {
        focusin: function (t) {
          this._makeFocusTarget(), (this._focusedElement = V(t.target));
        },
      });
    },
    _makeFocusTarget: function () {
      this._untrackInstance(), this._trackingInstances().unshift(this);
    },
    _untrackInstance: function () {
      var t = this._trackingInstances(),
        e = V.inArray(this, t);
      -1 !== e && t.splice(e, 1);
    },
    _trackingInstances: function () {
      var t = this.document.data("ui-dialog-instances");
      return t || this.document.data("ui-dialog-instances", (t = [])), t;
    },
    _minHeight: function () {
      var t = this.options;
      return "auto" === t.height
        ? t.minHeight
        : Math.min(t.minHeight, t.height);
    },
    _position: function () {
      var t = this.uiDialog.is(":visible");
      t || this.uiDialog.show(),
        this.uiDialog.position(this.options.position),
        t || this.uiDialog.hide();
    },
    _setOptions: function (t) {
      var i = this,
        s = !1,
        n = {};
      V.each(t, function (t, e) {
        i._setOption(t, e),
          t in i.sizeRelatedOptions && (s = !0),
          t in i.resizableRelatedOptions && (n[t] = e);
      }),
        s && (this._size(), this._position()),
        this.uiDialog.is(":data(ui-resizable)") &&
          this.uiDialog.resizable("option", n);
    },
    _setOption: function (t, e) {
      var i,
        s = this.uiDialog;
      "disabled" !== t &&
        (this._super(t, e),
        "appendTo" === t && this.uiDialog.appendTo(this._appendTo()),
        "buttons" === t && this._createButtons(),
        "closeText" === t &&
          this.uiDialogTitlebarClose.button({
            label: V("<a>")
              .text("" + this.options.closeText)
              .html(),
          }),
        "draggable" === t &&
          ((i = s.is(":data(ui-draggable)")) && !e && s.draggable("destroy"),
          !i && e && this._makeDraggable()),
        "position" === t && this._position(),
        "resizable" === t &&
          ((i = s.is(":data(ui-resizable)")) && !e && s.resizable("destroy"),
          i && "string" == typeof e && s.resizable("option", "handles", e),
          i || !1 === e || this._makeResizable()),
        "title" === t &&
          this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
    },
    _size: function () {
      var t,
        e,
        i,
        s = this.options;
      this.element
        .show()
        .css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }),
        s.minWidth > s.width && (s.width = s.minWidth),
        (t = this.uiDialog
          .css({ height: "auto", width: s.width })
          .outerHeight()),
        (e = Math.max(0, s.minHeight - t)),
        (i =
          "number" == typeof s.maxHeight
            ? Math.max(0, s.maxHeight - t)
            : "none"),
        "auto" === s.height
          ? this.element.css({ minHeight: e, maxHeight: i, height: "auto" })
          : this.element.height(Math.max(0, s.height - t)),
        this.uiDialog.is(":data(ui-resizable)") &&
          this.uiDialog.resizable("option", "minHeight", this._minHeight());
    },
    _blockFrames: function () {
      this.iframeBlocks = this.document.find("iframe").map(function () {
        var t = V(this);
        return V("<div>")
          .css({
            position: "absolute",
            width: t.outerWidth(),
            height: t.outerHeight(),
          })
          .appendTo(t.parent())
          .offset(t.offset())[0];
      });
    },
    _unblockFrames: function () {
      this.iframeBlocks &&
        (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _allowInteraction: function (t) {
      return (
        !!V(t.target).closest(".ui-dialog").length ||
        !!V(t.target).closest(".ui-datepicker").length
      );
    },
    _createOverlay: function () {
      var i, s;
      this.options.modal &&
        ((i = V.fn.jquery.substring(0, 4)),
        (s = !0),
        this._delay(function () {
          s = !1;
        }),
        this.document.data("ui-dialog-overlays") ||
          this.document.on(
            "focusin.ui-dialog",
            function (t) {
              var e;
              s ||
                (e = this._trackingInstances()[0])._allowInteraction(t) ||
                (t.preventDefault(),
                e._focusTabbable(),
                ("3.4." !== i && "3.5." !== i) ||
                  e._delay(e._restoreTabbableFocus));
            }.bind(this)
          ),
        (this.overlay = V("<div>").appendTo(this._appendTo())),
        this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
        this._on(this.overlay, { mousedown: "_keepFocus" }),
        this.document.data(
          "ui-dialog-overlays",
          (this.document.data("ui-dialog-overlays") || 0) + 1
        ));
    },
    _destroyOverlay: function () {
      var t;
      this.options.modal &&
        this.overlay &&
        ((t = this.document.data("ui-dialog-overlays") - 1)
          ? this.document.data("ui-dialog-overlays", t)
          : (this.document.off("focusin.ui-dialog"),
            this.document.removeData("ui-dialog-overlays")),
        this.overlay.remove(),
        (this.overlay = null));
    },
  }),
    !1 !== V.uiBackCompat &&
      V.widget("ui.dialog", V.ui.dialog, {
        options: { dialogClass: "" },
        _createWrapper: function () {
          this._super(), this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function (t, e) {
          "dialogClass" === t &&
            this.uiDialog.removeClass(this.options.dialogClass).addClass(e),
            this._superApply(arguments);
        },
      });
  V.ui.dialog;
  function lt(t, e, i) {
    return e <= t && t < e + i;
  }
  V.widget("ui.droppable", {
    version: "1.13.2",
    widgetEventPrefix: "drop",
    options: {
      accept: "*",
      addClasses: !0,
      greedy: !1,
      scope: "default",
      tolerance: "intersect",
      activate: null,
      deactivate: null,
      drop: null,
      out: null,
      over: null,
    },
    _create: function () {
      var t,
        e = this.options,
        i = e.accept;
      (this.isover = !1),
        (this.isout = !0),
        (this.accept =
          "function" == typeof i
            ? i
            : function (t) {
                return t.is(i);
              }),
        (this.proportions = function () {
          if (!arguments.length)
            return (t = t || {
              width: this.element[0].offsetWidth,
              height: this.element[0].offsetHeight,
            });
          t = arguments[0];
        }),
        this._addToManager(e.scope),
        e.addClasses && this._addClass("ui-droppable");
    },
    _addToManager: function (t) {
      (V.ui.ddmanager.droppables[t] = V.ui.ddmanager.droppables[t] || []),
        V.ui.ddmanager.droppables[t].push(this);
    },
    _splice: function (t) {
      for (var e = 0; e < t.length; e++) t[e] === this && t.splice(e, 1);
    },
    _destroy: function () {
      var t = V.ui.ddmanager.droppables[this.options.scope];
      this._splice(t);
    },
    _setOption: function (t, e) {
      var i;
      "accept" === t
        ? (this.accept =
            "function" == typeof e
              ? e
              : function (t) {
                  return t.is(e);
                })
        : "scope" === t &&
          ((i = V.ui.ddmanager.droppables[this.options.scope]),
          this._splice(i),
          this._addToManager(e)),
        this._super(t, e);
    },
    _activate: function (t) {
      var e = V.ui.ddmanager.current;
      this._addActiveClass(), e && this._trigger("activate", t, this.ui(e));
    },
    _deactivate: function (t) {
      var e = V.ui.ddmanager.current;
      this._removeActiveClass(),
        e && this._trigger("deactivate", t, this.ui(e));
    },
    _over: function (t) {
      var e = V.ui.ddmanager.current;
      e &&
        (e.currentItem || e.element)[0] !== this.element[0] &&
        this.accept.call(this.element[0], e.currentItem || e.element) &&
        (this._addHoverClass(), this._trigger("over", t, this.ui(e)));
    },
    _out: function (t) {
      var e = V.ui.ddmanager.current;
      e &&
        (e.currentItem || e.element)[0] !== this.element[0] &&
        this.accept.call(this.element[0], e.currentItem || e.element) &&
        (this._removeHoverClass(), this._trigger("out", t, this.ui(e)));
    },
    _drop: function (e, t) {
      var i = t || V.ui.ddmanager.current,
        s = !1;
      return (
        !(!i || (i.currentItem || i.element)[0] === this.element[0]) &&
        (this.element
          .find(":data(ui-droppable)")
          .not(".ui-draggable-dragging")
          .each(function () {
            var t = V(this).droppable("instance");
            if (
              t.options.greedy &&
              !t.options.disabled &&
              t.options.scope === i.options.scope &&
              t.accept.call(t.element[0], i.currentItem || i.element) &&
              V.ui.intersect(
                i,
                V.extend(t, { offset: t.element.offset() }),
                t.options.tolerance,
                e
              )
            )
              return !(s = !0);
          }),
        !s &&
          !!this.accept.call(this.element[0], i.currentItem || i.element) &&
          (this._removeActiveClass(),
          this._removeHoverClass(),
          this._trigger("drop", e, this.ui(i)),
          this.element))
      );
    },
    ui: function (t) {
      return {
        draggable: t.currentItem || t.element,
        helper: t.helper,
        position: t.position,
        offset: t.positionAbs,
      };
    },
    _addHoverClass: function () {
      this._addClass("ui-droppable-hover");
    },
    _removeHoverClass: function () {
      this._removeClass("ui-droppable-hover");
    },
    _addActiveClass: function () {
      this._addClass("ui-droppable-active");
    },
    _removeActiveClass: function () {
      this._removeClass("ui-droppable-active");
    },
  }),
    (V.ui.intersect = function (t, e, i, s) {
      if (!e.offset) return !1;
      var n = (t.positionAbs || t.position.absolute).left + t.margins.left,
        o = (t.positionAbs || t.position.absolute).top + t.margins.top,
        a = n + t.helperProportions.width,
        r = o + t.helperProportions.height,
        l = e.offset.left,
        h = e.offset.top,
        c = l + e.proportions().width,
        u = h + e.proportions().height;
      switch (i) {
        case "fit":
          return l <= n && a <= c && h <= o && r <= u;
        case "intersect":
          return (
            l < n + t.helperProportions.width / 2 &&
            a - t.helperProportions.width / 2 < c &&
            h < o + t.helperProportions.height / 2 &&
            r - t.helperProportions.height / 2 < u
          );
        case "pointer":
          return (
            lt(s.pageY, h, e.proportions().height) &&
            lt(s.pageX, l, e.proportions().width)
          );
        case "touch":
          return (
            ((h <= o && o <= u) || (h <= r && r <= u) || (o < h && u < r)) &&
            ((l <= n && n <= c) || (l <= a && a <= c) || (n < l && c < a))
          );
        default:
          return !1;
      }
    }),
    !(V.ui.ddmanager = {
      current: null,
      droppables: { default: [] },
      prepareOffsets: function (t, e) {
        var i,
          s,
          n = V.ui.ddmanager.droppables[t.options.scope] || [],
          o = e ? e.type : null,
          a = (t.currentItem || t.element)
            .find(":data(ui-droppable)")
            .addBack();
        t: for (i = 0; i < n.length; i++)
          if (
            !(
              n[i].options.disabled ||
              (t &&
                !n[i].accept.call(n[i].element[0], t.currentItem || t.element))
            )
          ) {
            for (s = 0; s < a.length; s++)
              if (a[s] === n[i].element[0]) {
                n[i].proportions().height = 0;
                continue t;
              }
            (n[i].visible = "none" !== n[i].element.css("display")),
              n[i].visible &&
                ("mousedown" === o && n[i]._activate.call(n[i], e),
                (n[i].offset = n[i].element.offset()),
                n[i].proportions({
                  width: n[i].element[0].offsetWidth,
                  height: n[i].element[0].offsetHeight,
                }));
          }
      },
      drop: function (t, e) {
        var i = !1;
        return (
          V.each(
            (V.ui.ddmanager.droppables[t.options.scope] || []).slice(),
            function () {
              this.options &&
                (!this.options.disabled &&
                  this.visible &&
                  V.ui.intersect(t, this, this.options.tolerance, e) &&
                  (i = this._drop.call(this, e) || i),
                !this.options.disabled &&
                  this.visible &&
                  this.accept.call(
                    this.element[0],
                    t.currentItem || t.element
                  ) &&
                  ((this.isout = !0),
                  (this.isover = !1),
                  this._deactivate.call(this, e)));
            }
          ),
          i
        );
      },
      dragStart: function (t, e) {
        t.element.parentsUntil("body").on("scroll.droppable", function () {
          t.options.refreshPositions || V.ui.ddmanager.prepareOffsets(t, e);
        });
      },
      drag: function (n, o) {
        n.options.refreshPositions && V.ui.ddmanager.prepareOffsets(n, o),
          V.each(V.ui.ddmanager.droppables[n.options.scope] || [], function () {
            var t, e, i, s;
            this.options.disabled ||
              this.greedyChild ||
              !this.visible ||
              ((s =
                !(i = V.ui.intersect(n, this, this.options.tolerance, o)) &&
                this.isover
                  ? "isout"
                  : i && !this.isover
                  ? "isover"
                  : null) &&
                (this.options.greedy &&
                  ((e = this.options.scope),
                  (i = this.element
                    .parents(":data(ui-droppable)")
                    .filter(function () {
                      return V(this).droppable("instance").options.scope === e;
                    })).length &&
                    ((t = V(i[0]).droppable("instance")).greedyChild =
                      "isover" === s)),
                t &&
                  "isover" === s &&
                  ((t.isover = !1), (t.isout = !0), t._out.call(t, o)),
                (this[s] = !0),
                (this["isout" === s ? "isover" : "isout"] = !1),
                this["isover" === s ? "_over" : "_out"].call(this, o),
                t &&
                  "isout" === s &&
                  ((t.isout = !1), (t.isover = !0), t._over.call(t, o))));
          });
      },
      dragStop: function (t, e) {
        t.element.parentsUntil("body").off("scroll.droppable"),
          t.options.refreshPositions || V.ui.ddmanager.prepareOffsets(t, e);
      },
    }) !== V.uiBackCompat &&
      V.widget("ui.droppable", V.ui.droppable, {
        options: { hoverClass: !1, activeClass: !1 },
        _addActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.addClass(this.options.activeClass);
        },
        _removeActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.removeClass(this.options.activeClass);
        },
        _addHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.addClass(this.options.hoverClass);
        },
        _removeHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.removeClass(this.options.hoverClass);
        },
      });
  V.ui.droppable,
    V.widget("ui.progressbar", {
      version: "1.13.2",
      options: {
        classes: {
          "ui-progressbar": "ui-corner-all",
          "ui-progressbar-value": "ui-corner-left",
          "ui-progressbar-complete": "ui-corner-right",
        },
        max: 100,
        value: 0,
        change: null,
        complete: null,
      },
      min: 0,
      _create: function () {
        (this.oldValue = this.options.value = this._constrainedValue()),
          this.element.attr({ role: "progressbar", "aria-valuemin": this.min }),
          this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
          (this.valueDiv = V("<div>").appendTo(this.element)),
          this._addClass(
            this.valueDiv,
            "ui-progressbar-value",
            "ui-widget-header"
          ),
          this._refreshValue();
      },
      _destroy: function () {
        this.element.removeAttr(
          "role aria-valuemin aria-valuemax aria-valuenow"
        ),
          this.valueDiv.remove();
      },
      value: function (t) {
        if (void 0 === t) return this.options.value;
        (this.options.value = this._constrainedValue(t)), this._refreshValue();
      },
      _constrainedValue: function (t) {
        return (
          void 0 === t && (t = this.options.value),
          (this.indeterminate = !1 === t),
          "number" != typeof t && (t = 0),
          !this.indeterminate &&
            Math.min(this.options.max, Math.max(this.min, t))
        );
      },
      _setOptions: function (t) {
        var e = t.value;
        delete t.value,
          this._super(t),
          (this.options.value = this._constrainedValue(e)),
          this._refreshValue();
      },
      _setOption: function (t, e) {
        "max" === t && (e = Math.max(this.min, e)), this._super(t, e);
      },
      _setOptionDisabled: function (t) {
        this._super(t),
          this.element.attr("aria-disabled", t),
          this._toggleClass(null, "ui-state-disabled", !!t);
      },
      _percentage: function () {
        return this.indeterminate
          ? 100
          : (100 * (this.options.value - this.min)) /
              (this.options.max - this.min);
      },
      _refreshValue: function () {
        var t = this.options.value,
          e = this._percentage();
        this.valueDiv
          .toggle(this.indeterminate || t > this.min)
          .width(e.toFixed(0) + "%"),
          this._toggleClass(
            this.valueDiv,
            "ui-progressbar-complete",
            null,
            t === this.options.max
          )._toggleClass(
            "ui-progressbar-indeterminate",
            null,
            this.indeterminate
          ),
          this.indeterminate
            ? (this.element.removeAttr("aria-valuenow"),
              this.overlayDiv ||
                ((this.overlayDiv = V("<div>").appendTo(this.valueDiv)),
                this._addClass(this.overlayDiv, "ui-progressbar-overlay")))
            : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": t,
              }),
              this.overlayDiv &&
                (this.overlayDiv.remove(), (this.overlayDiv = null))),
          this.oldValue !== t && ((this.oldValue = t), this._trigger("change")),
          t === this.options.max && this._trigger("complete");
      },
    }),
    V.widget("ui.selectable", V.ui.mouse, {
      version: "1.13.2",
      options: {
        appendTo: "body",
        autoRefresh: !0,
        distance: 0,
        filter: "*",
        tolerance: "touch",
        selected: null,
        selecting: null,
        start: null,
        stop: null,
        unselected: null,
        unselecting: null,
      },
      _create: function () {
        var i = this;
        this._addClass("ui-selectable"),
          (this.dragged = !1),
          (this.refresh = function () {
            (i.elementPos = V(i.element[0]).offset()),
              (i.selectees = V(i.options.filter, i.element[0])),
              i._addClass(i.selectees, "ui-selectee"),
              i.selectees.each(function () {
                var t = V(this),
                  e = t.offset(),
                  e = {
                    left: e.left - i.elementPos.left,
                    top: e.top - i.elementPos.top,
                  };
                V.data(this, "selectable-item", {
                  element: this,
                  $element: t,
                  left: e.left,
                  top: e.top,
                  right: e.left + t.outerWidth(),
                  bottom: e.top + t.outerHeight(),
                  startselected: !1,
                  selected: t.hasClass("ui-selected"),
                  selecting: t.hasClass("ui-selecting"),
                  unselecting: t.hasClass("ui-unselecting"),
                });
              });
          }),
          this.refresh(),
          this._mouseInit(),
          (this.helper = V("<div>")),
          this._addClass(this.helper, "ui-selectable-helper");
      },
      _destroy: function () {
        this.selectees.removeData("selectable-item"), this._mouseDestroy();
      },
      _mouseStart: function (i) {
        var s = this,
          t = this.options;
        (this.opos = [i.pageX, i.pageY]),
          (this.elementPos = V(this.element[0]).offset()),
          this.options.disabled ||
            ((this.selectees = V(t.filter, this.element[0])),
            this._trigger("start", i),
            V(t.appendTo).append(this.helper),
            this.helper.css({
              left: i.pageX,
              top: i.pageY,
              width: 0,
              height: 0,
            }),
            t.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function () {
              var t = V.data(this, "selectable-item");
              (t.startselected = !0),
                i.metaKey ||
                  i.ctrlKey ||
                  (s._removeClass(t.$element, "ui-selected"),
                  (t.selected = !1),
                  s._addClass(t.$element, "ui-unselecting"),
                  (t.unselecting = !0),
                  s._trigger("unselecting", i, { unselecting: t.element }));
            }),
            V(i.target)
              .parents()
              .addBack()
              .each(function () {
                var t,
                  e = V.data(this, "selectable-item");
                if (e)
                  return (
                    (t =
                      (!i.metaKey && !i.ctrlKey) ||
                      !e.$element.hasClass("ui-selected")),
                    s
                      ._removeClass(
                        e.$element,
                        t ? "ui-unselecting" : "ui-selected"
                      )
                      ._addClass(
                        e.$element,
                        t ? "ui-selecting" : "ui-unselecting"
                      ),
                    (e.unselecting = !t),
                    (e.selecting = t),
                    (e.selected = t)
                      ? s._trigger("selecting", i, { selecting: e.element })
                      : s._trigger("unselecting", i, {
                          unselecting: e.element,
                        }),
                    !1
                  );
              }));
      },
      _mouseDrag: function (s) {
        if (((this.dragged = !0), !this.options.disabled)) {
          var t,
            n = this,
            o = this.options,
            a = this.opos[0],
            r = this.opos[1],
            l = s.pageX,
            h = s.pageY;
          return (
            l < a && ((t = l), (l = a), (a = t)),
            h < r && ((t = h), (h = r), (r = t)),
            this.helper.css({ left: a, top: r, width: l - a, height: h - r }),
            this.selectees.each(function () {
              var t = V.data(this, "selectable-item"),
                e = !1,
                i = {};
              t &&
                t.element !== n.element[0] &&
                ((i.left = t.left + n.elementPos.left),
                (i.right = t.right + n.elementPos.left),
                (i.top = t.top + n.elementPos.top),
                (i.bottom = t.bottom + n.elementPos.top),
                "touch" === o.tolerance
                  ? (e = !(
                      i.left > l ||
                      i.right < a ||
                      i.top > h ||
                      i.bottom < r
                    ))
                  : "fit" === o.tolerance &&
                    (e =
                      i.left > a && i.right < l && i.top > r && i.bottom < h),
                e
                  ? (t.selected &&
                      (n._removeClass(t.$element, "ui-selected"),
                      (t.selected = !1)),
                    t.unselecting &&
                      (n._removeClass(t.$element, "ui-unselecting"),
                      (t.unselecting = !1)),
                    t.selecting ||
                      (n._addClass(t.$element, "ui-selecting"),
                      (t.selecting = !0),
                      n._trigger("selecting", s, { selecting: t.element })))
                  : (t.selecting &&
                      ((s.metaKey || s.ctrlKey) && t.startselected
                        ? (n._removeClass(t.$element, "ui-selecting"),
                          (t.selecting = !1),
                          n._addClass(t.$element, "ui-selected"),
                          (t.selected = !0))
                        : (n._removeClass(t.$element, "ui-selecting"),
                          (t.selecting = !1),
                          t.startselected &&
                            (n._addClass(t.$element, "ui-unselecting"),
                            (t.unselecting = !0)),
                          n._trigger("unselecting", s, {
                            unselecting: t.element,
                          }))),
                    t.selected &&
                      (s.metaKey ||
                        s.ctrlKey ||
                        t.startselected ||
                        (n._removeClass(t.$element, "ui-selected"),
                        (t.selected = !1),
                        n._addClass(t.$element, "ui-unselecting"),
                        (t.unselecting = !0),
                        n._trigger("unselecting", s, {
                          unselecting: t.element,
                        })))));
            }),
            !1
          );
        }
      },
      _mouseStop: function (e) {
        var i = this;
        return (
          (this.dragged = !1),
          V(".ui-unselecting", this.element[0]).each(function () {
            var t = V.data(this, "selectable-item");
            i._removeClass(t.$element, "ui-unselecting"),
              (t.unselecting = !1),
              (t.startselected = !1),
              i._trigger("unselected", e, { unselected: t.element });
          }),
          V(".ui-selecting", this.element[0]).each(function () {
            var t = V.data(this, "selectable-item");
            i
              ._removeClass(t.$element, "ui-selecting")
              ._addClass(t.$element, "ui-selected"),
              (t.selecting = !1),
              (t.selected = !0),
              (t.startselected = !0),
              i._trigger("selected", e, { selected: t.element });
          }),
          this._trigger("stop", e),
          this.helper.remove(),
          !1
        );
      },
    }),
    V.widget("ui.selectmenu", [
      V.ui.formResetMixin,
      {
        version: "1.13.2",
        defaultElement: "<select>",
        options: {
          appendTo: null,
          classes: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
          disabled: null,
          icons: { button: "ui-icon-triangle-1-s" },
          position: { my: "left top", at: "left bottom", collision: "none" },
          width: !1,
          change: null,
          close: null,
          focus: null,
          open: null,
          select: null,
        },
        _create: function () {
          var t = this.element.uniqueId().attr("id");
          (this.ids = { element: t, button: t + "-button", menu: t + "-menu" }),
            this._drawButton(),
            this._drawMenu(),
            this._bindFormResetHandler(),
            (this._rendered = !1),
            (this.menuItems = V());
        },
        _drawButton: function () {
          var t,
            e = this,
            i = this._parseOption(
              this.element.find("option:selected"),
              this.element[0].selectedIndex
            );
          (this.labels = this.element.labels().attr("for", this.ids.button)),
            this._on(this.labels, {
              click: function (t) {
                this.button.trigger("focus"), t.preventDefault();
              },
            }),
            this.element.hide(),
            (this.button = V("<span>", {
              tabindex: this.options.disabled ? -1 : 0,
              id: this.ids.button,
              role: "combobox",
              "aria-expanded": "false",
              "aria-autocomplete": "list",
              "aria-owns": this.ids.menu,
              "aria-haspopup": "true",
              title: this.element.attr("title"),
            }).insertAfter(this.element)),
            this._addClass(
              this.button,
              "ui-selectmenu-button ui-selectmenu-button-closed",
              "ui-button ui-widget"
            ),
            (t = V("<span>").appendTo(this.button)),
            this._addClass(
              t,
              "ui-selectmenu-icon",
              "ui-icon " + this.options.icons.button
            ),
            (this.buttonItem = this._renderButtonItem(i).appendTo(this.button)),
            !1 !== this.options.width && this._resizeButton(),
            this._on(this.button, this._buttonEvents),
            this.button.one("focusin", function () {
              e._rendered || e._refreshMenu();
            });
        },
        _drawMenu: function () {
          var i = this;
          (this.menu = V("<ul>", {
            "aria-hidden": "true",
            "aria-labelledby": this.ids.button,
            id: this.ids.menu,
          })),
            (this.menuWrap = V("<div>").append(this.menu)),
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
            this.menuWrap.appendTo(this._appendTo()),
            (this.menuInstance = this.menu
              .menu({
                classes: { "ui-menu": "ui-corner-bottom" },
                role: "listbox",
                select: function (t, e) {
                  t.preventDefault(),
                    i._setSelection(),
                    i._select(e.item.data("ui-selectmenu-item"), t);
                },
                focus: function (t, e) {
                  e = e.item.data("ui-selectmenu-item");
                  null != i.focusIndex &&
                    e.index !== i.focusIndex &&
                    (i._trigger("focus", t, { item: e }),
                    i.isOpen || i._select(e, t)),
                    (i.focusIndex = e.index),
                    i.button.attr(
                      "aria-activedescendant",
                      i.menuItems.eq(e.index).attr("id")
                    );
                },
              })
              .menu("instance")),
            this.menuInstance._off(this.menu, "mouseleave"),
            (this.menuInstance._closeOnDocumentClick = function () {
              return !1;
            }),
            (this.menuInstance._isDivider = function () {
              return !1;
            });
        },
        refresh: function () {
          this._refreshMenu(),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(
                this._getSelectedItem().data("ui-selectmenu-item") || {}
              ))
            ),
            null === this.options.width && this._resizeButton();
        },
        _refreshMenu: function () {
          var t = this.element.find("option");
          this.menu.empty(),
            this._parseOptions(t),
            this._renderMenu(this.menu, this.items),
            this.menuInstance.refresh(),
            (this.menuItems = this.menu
              .find("li")
              .not(".ui-selectmenu-optgroup")
              .find(".ui-menu-item-wrapper")),
            (this._rendered = !0),
            t.length &&
              ((t = this._getSelectedItem()),
              this.menuInstance.focus(null, t),
              this._setAria(t.data("ui-selectmenu-item")),
              this._setOption("disabled", this.element.prop("disabled")));
        },
        open: function (t) {
          this.options.disabled ||
            (this._rendered
              ? (this._removeClass(
                  this.menu.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                this.menuInstance.focus(null, this._getSelectedItem()))
              : this._refreshMenu(),
            this.menuItems.length &&
              ((this.isOpen = !0),
              this._toggleAttr(),
              this._resizeMenu(),
              this._position(),
              this._on(this.document, this._documentClick),
              this._trigger("open", t)));
        },
        _position: function () {
          this.menuWrap.position(
            V.extend({ of: this.button }, this.options.position)
          );
        },
        close: function (t) {
          this.isOpen &&
            ((this.isOpen = !1),
            this._toggleAttr(),
            (this.range = null),
            this._off(this.document),
            this._trigger("close", t));
        },
        widget: function () {
          return this.button;
        },
        menuWidget: function () {
          return this.menu;
        },
        _renderButtonItem: function (t) {
          var e = V("<span>");
          return (
            this._setText(e, t.label),
            this._addClass(e, "ui-selectmenu-text"),
            e
          );
        },
        _renderMenu: function (s, t) {
          var n = this,
            o = "";
          V.each(t, function (t, e) {
            var i;
            e.optgroup !== o &&
              ((i = V("<li>", { text: e.optgroup })),
              n._addClass(
                i,
                "ui-selectmenu-optgroup",
                "ui-menu-divider" +
                  (e.element.parent("optgroup").prop("disabled")
                    ? " ui-state-disabled"
                    : "")
              ),
              i.appendTo(s),
              (o = e.optgroup)),
              n._renderItemData(s, e);
          });
        },
        _renderItemData: function (t, e) {
          return this._renderItem(t, e).data("ui-selectmenu-item", e);
        },
        _renderItem: function (t, e) {
          var i = V("<li>"),
            s = V("<div>", { title: e.element.attr("title") });
          return (
            e.disabled && this._addClass(i, null, "ui-state-disabled"),
            this._setText(s, e.label),
            i.append(s).appendTo(t)
          );
        },
        _setText: function (t, e) {
          e ? t.text(e) : t.html("&#160;");
        },
        _move: function (t, e) {
          var i,
            s = ".ui-menu-item";
          this.isOpen
            ? (i = this.menuItems.eq(this.focusIndex).parent("li"))
            : ((i = this.menuItems
                .eq(this.element[0].selectedIndex)
                .parent("li")),
              (s += ":not(.ui-state-disabled)")),
            (s =
              "first" === t || "last" === t
                ? i["first" === t ? "prevAll" : "nextAll"](s).eq(-1)
                : i[t + "All"](s).eq(0)).length &&
              this.menuInstance.focus(e, s);
        },
        _getSelectedItem: function () {
          return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },
        _toggle: function (t) {
          this[this.isOpen ? "close" : "open"](t);
        },
        _setSelection: function () {
          var t;
          this.range &&
            (window.getSelection
              ? ((t = window.getSelection()).removeAllRanges(),
                t.addRange(this.range))
              : this.range.select(),
            this.button.trigger("focus"));
        },
        _documentClick: {
          mousedown: function (t) {
            this.isOpen &&
              (V(t.target).closest(
                ".ui-selectmenu-menu, #" + V.escapeSelector(this.ids.button)
              ).length ||
                this.close(t));
          },
        },
        _buttonEvents: {
          mousedown: function () {
            var t;
            window.getSelection
              ? (t = window.getSelection()).rangeCount &&
                (this.range = t.getRangeAt(0))
              : (this.range = document.selection.createRange());
          },
          click: function (t) {
            this._setSelection(), this._toggle(t);
          },
          keydown: function (t) {
            var e = !0;
            switch (t.keyCode) {
              case V.ui.keyCode.TAB:
              case V.ui.keyCode.ESCAPE:
                this.close(t), (e = !1);
                break;
              case V.ui.keyCode.ENTER:
                this.isOpen && this._selectFocusedItem(t);
                break;
              case V.ui.keyCode.UP:
                t.altKey ? this._toggle(t) : this._move("prev", t);
                break;
              case V.ui.keyCode.DOWN:
                t.altKey ? this._toggle(t) : this._move("next", t);
                break;
              case V.ui.keyCode.SPACE:
                this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);
                break;
              case V.ui.keyCode.LEFT:
                this._move("prev", t);
                break;
              case V.ui.keyCode.RIGHT:
                this._move("next", t);
                break;
              case V.ui.keyCode.HOME:
              case V.ui.keyCode.PAGE_UP:
                this._move("first", t);
                break;
              case V.ui.keyCode.END:
              case V.ui.keyCode.PAGE_DOWN:
                this._move("last", t);
                break;
              default:
                this.menu.trigger(t), (e = !1);
            }
            e && t.preventDefault();
          },
        },
        _selectFocusedItem: function (t) {
          var e = this.menuItems.eq(this.focusIndex).parent("li");
          e.hasClass("ui-state-disabled") ||
            this._select(e.data("ui-selectmenu-item"), t);
        },
        _select: function (t, e) {
          var i = this.element[0].selectedIndex;
          (this.element[0].selectedIndex = t.index),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(t))
            ),
            this._setAria(t),
            this._trigger("select", e, { item: t }),
            t.index !== i && this._trigger("change", e, { item: t }),
            this.close(e);
        },
        _setAria: function (t) {
          t = this.menuItems.eq(t.index).attr("id");
          this.button.attr({
            "aria-labelledby": t,
            "aria-activedescendant": t,
          }),
            this.menu.attr("aria-activedescendant", t);
        },
        _setOption: function (t, e) {
          var i;
          "icons" === t &&
            ((i = this.button.find("span.ui-icon")),
            this._removeClass(i, null, this.options.icons.button)._addClass(
              i,
              null,
              e.button
            )),
            this._super(t, e),
            "appendTo" === t && this.menuWrap.appendTo(this._appendTo()),
            "width" === t && this._resizeButton();
        },
        _setOptionDisabled: function (t) {
          this._super(t),
            this.menuInstance.option("disabled", t),
            this.button.attr("aria-disabled", t),
            this._toggleClass(this.button, null, "ui-state-disabled", t),
            this.element.prop("disabled", t),
            t
              ? (this.button.attr("tabindex", -1), this.close())
              : this.button.attr("tabindex", 0);
        },
        _appendTo: function () {
          var t = this.options.appendTo;
          return (t = !(t =
            !(t =
              t &&
              (t.jquery || t.nodeType ? V(t) : this.document.find(t).eq(0))) ||
            !t[0]
              ? this.element.closest(".ui-front, dialog")
              : t).length
            ? this.document[0].body
            : t);
        },
        _toggleAttr: function () {
          this.button.attr("aria-expanded", this.isOpen),
            this._removeClass(
              this.button,
              "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open")
            )
              ._addClass(
                this.button,
                "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed")
              )
              ._toggleClass(
                this.menuWrap,
                "ui-selectmenu-open",
                null,
                this.isOpen
              ),
            this.menu.attr("aria-hidden", !this.isOpen);
        },
        _resizeButton: function () {
          var t = this.options.width;
          !1 !== t
            ? (null === t &&
                ((t = this.element.show().outerWidth()), this.element.hide()),
              this.button.outerWidth(t))
            : this.button.css("width", "");
        },
        _resizeMenu: function () {
          this.menu.outerWidth(
            Math.max(
              this.button.outerWidth(),
              this.menu.width("").outerWidth() + 1
            )
          );
        },
        _getCreateOptions: function () {
          var t = this._super();
          return (t.disabled = this.element.prop("disabled")), t;
        },
        _parseOptions: function (t) {
          var i = this,
            s = [];
          t.each(function (t, e) {
            e.hidden || s.push(i._parseOption(V(e), t));
          }),
            (this.items = s);
        },
        _parseOption: function (t, e) {
          var i = t.parent("optgroup");
          return {
            element: t,
            index: e,
            value: t.val(),
            label: t.text(),
            optgroup: i.attr("label") || "",
            disabled: i.prop("disabled") || t.prop("disabled"),
          };
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.menuWrap.remove(),
            this.button.remove(),
            this.element.show(),
            this.element.removeUniqueId(),
            this.labels.attr("for", this.ids.element);
        },
      },
    ]),
    V.widget("ui.slider", V.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "slide",
      options: {
        animate: !1,
        classes: {
          "ui-slider": "ui-corner-all",
          "ui-slider-handle": "ui-corner-all",
          "ui-slider-range": "ui-corner-all ui-widget-header",
        },
        distance: 0,
        max: 100,
        min: 0,
        orientation: "horizontal",
        range: !1,
        step: 1,
        value: 0,
        values: null,
        change: null,
        slide: null,
        start: null,
        stop: null,
      },
      numPages: 5,
      _create: function () {
        (this._keySliding = !1),
          (this._mouseSliding = !1),
          (this._animateOff = !0),
          (this._handleIndex = null),
          this._detectOrientation(),
          this._mouseInit(),
          this._calculateNewMax(),
          this._addClass(
            "ui-slider ui-slider-" + this.orientation,
            "ui-widget ui-widget-content"
          ),
          this._refresh(),
          (this._animateOff = !1);
      },
      _refresh: function () {
        this._createRange(),
          this._createHandles(),
          this._setupEvents(),
          this._refreshValue();
      },
      _createHandles: function () {
        var t,
          e = this.options,
          i = this.element.find(".ui-slider-handle"),
          s = [],
          n = (e.values && e.values.length) || 1;
        for (
          i.length > n && (i.slice(n).remove(), (i = i.slice(0, n))),
            t = i.length;
          t < n;
          t++
        )
          s.push("<span tabindex='0'></span>");
        (this.handles = i.add(V(s.join("")).appendTo(this.element))),
          this._addClass(this.handles, "ui-slider-handle", "ui-state-default"),
          (this.handle = this.handles.eq(0)),
          this.handles.each(function (t) {
            V(this).data("ui-slider-handle-index", t).attr("tabIndex", 0);
          });
      },
      _createRange: function () {
        var t = this.options;
        t.range
          ? (!0 === t.range &&
              (t.values
                ? t.values.length && 2 !== t.values.length
                  ? (t.values = [t.values[0], t.values[0]])
                  : Array.isArray(t.values) && (t.values = t.values.slice(0))
                : (t.values = [this._valueMin(), this._valueMin()])),
            this.range && this.range.length
              ? (this._removeClass(
                  this.range,
                  "ui-slider-range-min ui-slider-range-max"
                ),
                this.range.css({ left: "", bottom: "" }))
              : ((this.range = V("<div>").appendTo(this.element)),
                this._addClass(this.range, "ui-slider-range")),
            ("min" !== t.range && "max" !== t.range) ||
              this._addClass(this.range, "ui-slider-range-" + t.range))
          : (this.range && this.range.remove(), (this.range = null));
      },
      _setupEvents: function () {
        this._off(this.handles),
          this._on(this.handles, this._handleEvents),
          this._hoverable(this.handles),
          this._focusable(this.handles);
      },
      _destroy: function () {
        this.handles.remove(),
          this.range && this.range.remove(),
          this._mouseDestroy();
      },
      _mouseCapture: function (t) {
        var i,
          s,
          n,
          o,
          e,
          a,
          r = this,
          l = this.options;
        return (
          !l.disabled &&
          ((this.elementSize = {
            width: this.element.outerWidth(),
            height: this.element.outerHeight(),
          }),
          (this.elementOffset = this.element.offset()),
          (a = { x: t.pageX, y: t.pageY }),
          (i = this._normValueFromMouse(a)),
          (s = this._valueMax() - this._valueMin() + 1),
          this.handles.each(function (t) {
            var e = Math.abs(i - r.values(t));
            (e < s ||
              (s === e &&
                (t === r._lastChangedValue || r.values(t) === l.min))) &&
              ((s = e), (n = V(this)), (o = t));
          }),
          !1 !== this._start(t, o) &&
            ((this._mouseSliding = !0),
            (this._handleIndex = o),
            this._addClass(n, null, "ui-state-active"),
            n.trigger("focus"),
            (e = n.offset()),
            (a = !V(t.target).parents().addBack().is(".ui-slider-handle")),
            (this._clickOffset = a
              ? { left: 0, top: 0 }
              : {
                  left: t.pageX - e.left - n.width() / 2,
                  top:
                    t.pageY -
                    e.top -
                    n.height() / 2 -
                    (parseInt(n.css("borderTopWidth"), 10) || 0) -
                    (parseInt(n.css("borderBottomWidth"), 10) || 0) +
                    (parseInt(n.css("marginTop"), 10) || 0),
                }),
            this.handles.hasClass("ui-state-hover") || this._slide(t, o, i),
            (this._animateOff = !0)))
        );
      },
      _mouseStart: function () {
        return !0;
      },
      _mouseDrag: function (t) {
        var e = { x: t.pageX, y: t.pageY },
          e = this._normValueFromMouse(e);
        return this._slide(t, this._handleIndex, e), !1;
      },
      _mouseStop: function (t) {
        return (
          this._removeClass(this.handles, null, "ui-state-active"),
          (this._mouseSliding = !1),
          this._stop(t, this._handleIndex),
          this._change(t, this._handleIndex),
          (this._handleIndex = null),
          (this._clickOffset = null),
          (this._animateOff = !1)
        );
      },
      _detectOrientation: function () {
        this.orientation =
          "vertical" === this.options.orientation ? "vertical" : "horizontal";
      },
      _normValueFromMouse: function (t) {
        var e,
          t =
            "horizontal" === this.orientation
              ? ((e = this.elementSize.width),
                t.x -
                  this.elementOffset.left -
                  (this._clickOffset ? this._clickOffset.left : 0))
              : ((e = this.elementSize.height),
                t.y -
                  this.elementOffset.top -
                  (this._clickOffset ? this._clickOffset.top : 0)),
          t = t / e;
        return (
          (t = 1 < t ? 1 : t) < 0 && (t = 0),
          "vertical" === this.orientation && (t = 1 - t),
          (e = this._valueMax() - this._valueMin()),
          (e = this._valueMin() + t * e),
          this._trimAlignValue(e)
        );
      },
      _uiHash: function (t, e, i) {
        var s = {
          handle: this.handles[t],
          handleIndex: t,
          value: void 0 !== e ? e : this.value(),
        };
        return (
          this._hasMultipleValues() &&
            ((s.value = void 0 !== e ? e : this.values(t)),
            (s.values = i || this.values())),
          s
        );
      },
      _hasMultipleValues: function () {
        return this.options.values && this.options.values.length;
      },
      _start: function (t, e) {
        return this._trigger("start", t, this._uiHash(e));
      },
      _slide: function (t, e, i) {
        var s,
          n = this.value(),
          o = this.values();
        this._hasMultipleValues() &&
          ((s = this.values(e ? 0 : 1)),
          (n = this.values(e)),
          2 === this.options.values.length &&
            !0 === this.options.range &&
            (i = 0 === e ? Math.min(s, i) : Math.max(s, i)),
          (o[e] = i)),
          i !== n &&
            !1 !== this._trigger("slide", t, this._uiHash(e, i, o)) &&
            (this._hasMultipleValues() ? this.values(e, i) : this.value(i));
      },
      _stop: function (t, e) {
        this._trigger("stop", t, this._uiHash(e));
      },
      _change: function (t, e) {
        this._keySliding ||
          this._mouseSliding ||
          ((this._lastChangedValue = e),
          this._trigger("change", t, this._uiHash(e)));
      },
      value: function (t) {
        return arguments.length
          ? ((this.options.value = this._trimAlignValue(t)),
            this._refreshValue(),
            void this._change(null, 0))
          : this._value();
      },
      values: function (t, e) {
        var i, s, n;
        if (1 < arguments.length)
          return (
            (this.options.values[t] = this._trimAlignValue(e)),
            this._refreshValue(),
            void this._change(null, t)
          );
        if (!arguments.length) return this._values();
        if (!Array.isArray(t))
          return this._hasMultipleValues() ? this._values(t) : this.value();
        for (i = this.options.values, s = t, n = 0; n < i.length; n += 1)
          (i[n] = this._trimAlignValue(s[n])), this._change(null, n);
        this._refreshValue();
      },
      _setOption: function (t, e) {
        var i,
          s = 0;
        switch (
          ("range" === t &&
            !0 === this.options.range &&
            ("min" === e
              ? ((this.options.value = this._values(0)),
                (this.options.values = null))
              : "max" === e &&
                ((this.options.value = this._values(
                  this.options.values.length - 1
                )),
                (this.options.values = null))),
          Array.isArray(this.options.values) &&
            (s = this.options.values.length),
          this._super(t, e),
          t)
        ) {
          case "orientation":
            this._detectOrientation(),
              this._removeClass(
                "ui-slider-horizontal ui-slider-vertical"
              )._addClass("ui-slider-" + this.orientation),
              this._refreshValue(),
              this.options.range && this._refreshRange(e),
              this.handles.css("horizontal" === e ? "bottom" : "left", "");
            break;
          case "value":
            (this._animateOff = !0),
              this._refreshValue(),
              this._change(null, 0),
              (this._animateOff = !1);
            break;
          case "values":
            for (
              this._animateOff = !0, this._refreshValue(), i = s - 1;
              0 <= i;
              i--
            )
              this._change(null, i);
            this._animateOff = !1;
            break;
          case "step":
          case "min":
          case "max":
            (this._animateOff = !0),
              this._calculateNewMax(),
              this._refreshValue(),
              (this._animateOff = !1);
            break;
          case "range":
            (this._animateOff = !0), this._refresh(), (this._animateOff = !1);
        }
      },
      _setOptionDisabled: function (t) {
        this._super(t), this._toggleClass(null, "ui-state-disabled", !!t);
      },
      _value: function () {
        var t = this.options.value;
        return (t = this._trimAlignValue(t));
      },
      _values: function (t) {
        var e, i;
        if (arguments.length)
          return (t = this.options.values[t]), (t = this._trimAlignValue(t));
        if (this._hasMultipleValues()) {
          for (e = this.options.values.slice(), i = 0; i < e.length; i += 1)
            e[i] = this._trimAlignValue(e[i]);
          return e;
        }
        return [];
      },
      _trimAlignValue: function (t) {
        if (t <= this._valueMin()) return this._valueMin();
        if (t >= this._valueMax()) return this._valueMax();
        var e = 0 < this.options.step ? this.options.step : 1,
          i = (t - this._valueMin()) % e,
          t = t - i;
        return (
          2 * Math.abs(i) >= e && (t += 0 < i ? e : -e),
          parseFloat(t.toFixed(5))
        );
      },
      _calculateNewMax: function () {
        var t = this.options.max,
          e = this._valueMin(),
          i = this.options.step;
        (t = Math.round((t - e) / i) * i + e) > this.options.max && (t -= i),
          (this.max = parseFloat(t.toFixed(this._precision())));
      },
      _precision: function () {
        var t = this._precisionOf(this.options.step);
        return (t =
          null !== this.options.min
            ? Math.max(t, this._precisionOf(this.options.min))
            : t);
      },
      _precisionOf: function (t) {
        var e = t.toString(),
          t = e.indexOf(".");
        return -1 === t ? 0 : e.length - t - 1;
      },
      _valueMin: function () {
        return this.options.min;
      },
      _valueMax: function () {
        return this.max;
      },
      _refreshRange: function (t) {
        "vertical" === t && this.range.css({ width: "", left: "" }),
          "horizontal" === t && this.range.css({ height: "", bottom: "" });
      },
      _refreshValue: function () {
        var e,
          i,
          t,
          s,
          n,
          o = this.options.range,
          a = this.options,
          r = this,
          l = !this._animateOff && a.animate,
          h = {};
        this._hasMultipleValues()
          ? this.handles.each(function (t) {
              (i =
                ((r.values(t) - r._valueMin()) /
                  (r._valueMax() - r._valueMin())) *
                100),
                (h["horizontal" === r.orientation ? "left" : "bottom"] =
                  i + "%"),
                V(this).stop(1, 1)[l ? "animate" : "css"](h, a.animate),
                !0 === r.options.range &&
                  ("horizontal" === r.orientation
                    ? (0 === t &&
                        r.range
                          .stop(1, 1)
                          [l ? "animate" : "css"]({ left: i + "%" }, a.animate),
                      1 === t &&
                        r.range[l ? "animate" : "css"](
                          { width: i - e + "%" },
                          { queue: !1, duration: a.animate }
                        ))
                    : (0 === t &&
                        r.range
                          .stop(1, 1)
                          [l ? "animate" : "css"](
                            { bottom: i + "%" },
                            a.animate
                          ),
                      1 === t &&
                        r.range[l ? "animate" : "css"](
                          { height: i - e + "%" },
                          { queue: !1, duration: a.animate }
                        ))),
                (e = i);
            })
          : ((t = this.value()),
            (s = this._valueMin()),
            (n = this._valueMax()),
            (i = n !== s ? ((t - s) / (n - s)) * 100 : 0),
            (h["horizontal" === this.orientation ? "left" : "bottom"] =
              i + "%"),
            this.handle.stop(1, 1)[l ? "animate" : "css"](h, a.animate),
            "min" === o &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ width: i + "%" }, a.animate),
            "max" === o &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ width: 100 - i + "%" }, a.animate),
            "min" === o &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ height: i + "%" }, a.animate),
            "max" === o &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [l ? "animate" : "css"]({ height: 100 - i + "%" }, a.animate));
      },
      _handleEvents: {
        keydown: function (t) {
          var e,
            i,
            s,
            n = V(t.target).data("ui-slider-handle-index");
          switch (t.keyCode) {
            case V.ui.keyCode.HOME:
            case V.ui.keyCode.END:
            case V.ui.keyCode.PAGE_UP:
            case V.ui.keyCode.PAGE_DOWN:
            case V.ui.keyCode.UP:
            case V.ui.keyCode.RIGHT:
            case V.ui.keyCode.DOWN:
            case V.ui.keyCode.LEFT:
              if (
                (t.preventDefault(),
                !this._keySliding &&
                  ((this._keySliding = !0),
                  this._addClass(V(t.target), null, "ui-state-active"),
                  !1 === this._start(t, n)))
              )
                return;
          }
          switch (
            ((s = this.options.step),
            (e = i = this._hasMultipleValues() ? this.values(n) : this.value()),
            t.keyCode)
          ) {
            case V.ui.keyCode.HOME:
              i = this._valueMin();
              break;
            case V.ui.keyCode.END:
              i = this._valueMax();
              break;
            case V.ui.keyCode.PAGE_UP:
              i = this._trimAlignValue(
                e + (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case V.ui.keyCode.PAGE_DOWN:
              i = this._trimAlignValue(
                e - (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case V.ui.keyCode.UP:
            case V.ui.keyCode.RIGHT:
              if (e === this._valueMax()) return;
              i = this._trimAlignValue(e + s);
              break;
            case V.ui.keyCode.DOWN:
            case V.ui.keyCode.LEFT:
              if (e === this._valueMin()) return;
              i = this._trimAlignValue(e - s);
          }
          this._slide(t, n, i);
        },
        keyup: function (t) {
          var e = V(t.target).data("ui-slider-handle-index");
          this._keySliding &&
            ((this._keySliding = !1),
            this._stop(t, e),
            this._change(t, e),
            this._removeClass(V(t.target), null, "ui-state-active"));
        },
      },
    }),
    V.widget("ui.sortable", V.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "sort",
      ready: !1,
      options: {
        appendTo: "parent",
        axis: !1,
        connectWith: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        dropOnEmpty: !0,
        forcePlaceholderSize: !1,
        forceHelperSize: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        items: "> *",
        opacity: !1,
        placeholder: !1,
        revert: !1,
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        scope: "default",
        tolerance: "intersect",
        zIndex: 1e3,
        activate: null,
        beforeStop: null,
        change: null,
        deactivate: null,
        out: null,
        over: null,
        receive: null,
        remove: null,
        sort: null,
        start: null,
        stop: null,
        update: null,
      },
      _isOverAxis: function (t, e, i) {
        return e <= t && t < e + i;
      },
      _isFloating: function (t) {
        return (
          /left|right/.test(t.css("float")) ||
          /inline|table-cell/.test(t.css("display"))
        );
      },
      _create: function () {
        (this.containerCache = {}),
          this._addClass("ui-sortable"),
          this.refresh(),
          (this.offset = this.element.offset()),
          this._mouseInit(),
          this._setHandleClassName(),
          (this.ready = !0);
      },
      _setOption: function (t, e) {
        this._super(t, e), "handle" === t && this._setHandleClassName();
      },
      _setHandleClassName: function () {
        var t = this;
        this._removeClass(
          this.element.find(".ui-sortable-handle"),
          "ui-sortable-handle"
        ),
          V.each(this.items, function () {
            t._addClass(
              this.instance.options.handle
                ? this.item.find(this.instance.options.handle)
                : this.item,
              "ui-sortable-handle"
            );
          });
      },
      _destroy: function () {
        this._mouseDestroy();
        for (var t = this.items.length - 1; 0 <= t; t--)
          this.items[t].item.removeData(this.widgetName + "-item");
        return this;
      },
      _mouseCapture: function (t, e) {
        var i = null,
          s = !1,
          n = this;
        return (
          !this.reverting &&
          !this.options.disabled &&
          "static" !== this.options.type &&
          (this._refreshItems(t),
          V(t.target)
            .parents()
            .each(function () {
              if (V.data(this, n.widgetName + "-item") === n)
                return (i = V(this)), !1;
            }),
          !!(i =
            V.data(t.target, n.widgetName + "-item") === n ? V(t.target) : i) &&
            !(
              this.options.handle &&
              !e &&
              (V(this.options.handle, i)
                .find("*")
                .addBack()
                .each(function () {
                  this === t.target && (s = !0);
                }),
              !s)
            ) &&
            ((this.currentItem = i), this._removeCurrentsFromItems(), !0))
        );
      },
      _mouseStart: function (t, e, i) {
        var s,
          n,
          o = this.options;
        if (
          ((this.currentContainer = this).refreshPositions(),
          (this.appendTo = V(
            "parent" !== o.appendTo ? o.appendTo : this.currentItem.parent()
          )),
          (this.helper = this._createHelper(t)),
          this._cacheHelperProportions(),
          this._cacheMargins(),
          (this.offset = this.currentItem.offset()),
          (this.offset = {
            top: this.offset.top - this.margins.top,
            left: this.offset.left - this.margins.left,
          }),
          V.extend(this.offset, {
            click: {
              left: t.pageX - this.offset.left,
              top: t.pageY - this.offset.top,
            },
            relative: this._getRelativeOffset(),
          }),
          this.helper.css("position", "absolute"),
          (this.cssPosition = this.helper.css("position")),
          o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt),
          (this.domPosition = {
            prev: this.currentItem.prev()[0],
            parent: this.currentItem.parent()[0],
          }),
          this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
          this._createPlaceholder(),
          (this.scrollParent = this.placeholder.scrollParent()),
          V.extend(this.offset, { parent: this._getParentOffset() }),
          o.containment && this._setContainment(),
          o.cursor &&
            "auto" !== o.cursor &&
            ((n = this.document.find("body")),
            (this.storedCursor = n.css("cursor")),
            n.css("cursor", o.cursor),
            (this.storedStylesheet = V(
              "<style>*{ cursor: " + o.cursor + " !important; }</style>"
            ).appendTo(n))),
          o.zIndex &&
            (this.helper.css("zIndex") &&
              (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", o.zIndex)),
          o.opacity &&
            (this.helper.css("opacity") &&
              (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", o.opacity)),
          this.scrollParent[0] !== this.document[0] &&
            "HTML" !== this.scrollParent[0].tagName &&
            (this.overflowOffset = this.scrollParent.offset()),
          this._trigger("start", t, this._uiHash()),
          this._preserveHelperProportions || this._cacheHelperProportions(),
          !i)
        )
          for (s = this.containers.length - 1; 0 <= s; s--)
            this.containers[s]._trigger("activate", t, this._uiHash(this));
        return (
          V.ui.ddmanager && (V.ui.ddmanager.current = this),
          V.ui.ddmanager &&
            !o.dropBehaviour &&
            V.ui.ddmanager.prepareOffsets(this, t),
          (this.dragging = !0),
          this._addClass(this.helper, "ui-sortable-helper"),
          this.helper.parent().is(this.appendTo) ||
            (this.helper.detach().appendTo(this.appendTo),
            (this.offset.parent = this._getParentOffset())),
          (this.position = this.originalPosition = this._generatePosition(t)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          (this.lastPositionAbs = this.positionAbs =
            this._convertPositionTo("absolute")),
          this._mouseDrag(t),
          !0
        );
      },
      _scroll: function (t) {
        var e = this.options,
          i = !1;
        return (
          this.scrollParent[0] !== this.document[0] &&
          "HTML" !== this.scrollParent[0].tagName
            ? (this.overflowOffset.top +
                this.scrollParent[0].offsetHeight -
                t.pageY <
              e.scrollSensitivity
                ? (this.scrollParent[0].scrollTop = i =
                    this.scrollParent[0].scrollTop + e.scrollSpeed)
                : t.pageY - this.overflowOffset.top < e.scrollSensitivity &&
                  (this.scrollParent[0].scrollTop = i =
                    this.scrollParent[0].scrollTop - e.scrollSpeed),
              this.overflowOffset.left +
                this.scrollParent[0].offsetWidth -
                t.pageX <
              e.scrollSensitivity
                ? (this.scrollParent[0].scrollLeft = i =
                    this.scrollParent[0].scrollLeft + e.scrollSpeed)
                : t.pageX - this.overflowOffset.left < e.scrollSensitivity &&
                  (this.scrollParent[0].scrollLeft = i =
                    this.scrollParent[0].scrollLeft - e.scrollSpeed))
            : (t.pageY - this.document.scrollTop() < e.scrollSensitivity
                ? (i = this.document.scrollTop(
                    this.document.scrollTop() - e.scrollSpeed
                  ))
                : this.window.height() - (t.pageY - this.document.scrollTop()) <
                    e.scrollSensitivity &&
                  (i = this.document.scrollTop(
                    this.document.scrollTop() + e.scrollSpeed
                  )),
              t.pageX - this.document.scrollLeft() < e.scrollSensitivity
                ? (i = this.document.scrollLeft(
                    this.document.scrollLeft() - e.scrollSpeed
                  ))
                : this.window.width() - (t.pageX - this.document.scrollLeft()) <
                    e.scrollSensitivity &&
                  (i = this.document.scrollLeft(
                    this.document.scrollLeft() + e.scrollSpeed
                  ))),
          i
        );
      },
      _mouseDrag: function (t) {
        var e,
          i,
          s,
          n,
          o = this.options;
        for (
          this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute"),
            (this.options.axis && "y" === this.options.axis) ||
              (this.helper[0].style.left = this.position.left + "px"),
            (this.options.axis && "x" === this.options.axis) ||
              (this.helper[0].style.top = this.position.top + "px"),
            o.scroll &&
              !1 !== this._scroll(t) &&
              (this._refreshItemPositions(!0),
              V.ui.ddmanager &&
                !o.dropBehaviour &&
                V.ui.ddmanager.prepareOffsets(this, t)),
            this.dragDirection = {
              vertical: this._getDragVerticalDirection(),
              horizontal: this._getDragHorizontalDirection(),
            },
            e = this.items.length - 1;
          0 <= e;
          e--
        )
          if (
            ((s = (i = this.items[e]).item[0]),
            (n = this._intersectsWithPointer(i)) &&
              i.instance === this.currentContainer &&
              !(
                s === this.currentItem[0] ||
                this.placeholder[1 === n ? "next" : "prev"]()[0] === s ||
                V.contains(this.placeholder[0], s) ||
                ("semi-dynamic" === this.options.type &&
                  V.contains(this.element[0], s))
              ))
          ) {
            if (
              ((this.direction = 1 === n ? "down" : "up"),
              "pointer" !== this.options.tolerance &&
                !this._intersectsWithSides(i))
            )
              break;
            this._rearrange(t, i), this._trigger("change", t, this._uiHash());
            break;
          }
        return (
          this._contactContainers(t),
          V.ui.ddmanager && V.ui.ddmanager.drag(this, t),
          this._trigger("sort", t, this._uiHash()),
          (this.lastPositionAbs = this.positionAbs),
          !1
        );
      },
      _mouseStop: function (t, e) {
        var i, s, n, o;
        if (t)
          return (
            V.ui.ddmanager &&
              !this.options.dropBehaviour &&
              V.ui.ddmanager.drop(this, t),
            this.options.revert
              ? ((s = (i = this).placeholder.offset()),
                (o = {}),
                ((n = this.options.axis) && "x" !== n) ||
                  (o.left =
                    s.left -
                    this.offset.parent.left -
                    this.margins.left +
                    (this.offsetParent[0] === this.document[0].body
                      ? 0
                      : this.offsetParent[0].scrollLeft)),
                (n && "y" !== n) ||
                  (o.top =
                    s.top -
                    this.offset.parent.top -
                    this.margins.top +
                    (this.offsetParent[0] === this.document[0].body
                      ? 0
                      : this.offsetParent[0].scrollTop)),
                (this.reverting = !0),
                V(this.helper).animate(
                  o,
                  parseInt(this.options.revert, 10) || 500,
                  function () {
                    i._clear(t);
                  }
                ))
              : this._clear(t, e),
            !1
          );
      },
      cancel: function () {
        if (this.dragging) {
          this._mouseUp(new V.Event("mouseup", { target: null })),
            "original" === this.options.helper
              ? (this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper"))
              : this.currentItem.show();
          for (var t = this.containers.length - 1; 0 <= t; t--)
            this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
              this.containers[t].containerCache.over &&
                (this.containers[t]._trigger("out", null, this._uiHash(this)),
                (this.containers[t].containerCache.over = 0));
        }
        return (
          this.placeholder &&
            (this.placeholder[0].parentNode &&
              this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            "original" !== this.options.helper &&
              this.helper &&
              this.helper[0].parentNode &&
              this.helper.remove(),
            V.extend(this, {
              helper: null,
              dragging: !1,
              reverting: !1,
              _noFinalSort: null,
            }),
            this.domPosition.prev
              ? V(this.domPosition.prev).after(this.currentItem)
              : V(this.domPosition.parent).prepend(this.currentItem)),
          this
        );
      },
      serialize: function (e) {
        var t = this._getItemsAsjQuery(e && e.connected),
          i = [];
        return (
          (e = e || {}),
          V(t).each(function () {
            var t = (V(e.item || this).attr(e.attribute || "id") || "").match(
              e.expression || /(.+)[\-=_](.+)/
            );
            t &&
              i.push(
                (e.key || t[1] + "[]") +
                  "=" +
                  (e.key && e.expression ? t[1] : t[2])
              );
          }),
          !i.length && e.key && i.push(e.key + "="),
          i.join("&")
        );
      },
      toArray: function (t) {
        var e = this._getItemsAsjQuery(t && t.connected),
          i = [];
        return (
          (t = t || {}),
          e.each(function () {
            i.push(V(t.item || this).attr(t.attribute || "id") || "");
          }),
          i
        );
      },
      _intersectsWith: function (t) {
        var e = this.positionAbs.left,
          i = e + this.helperProportions.width,
          s = this.positionAbs.top,
          n = s + this.helperProportions.height,
          o = t.left,
          a = o + t.width,
          r = t.top,
          l = r + t.height,
          h = this.offset.click.top,
          c = this.offset.click.left,
          h = "x" === this.options.axis || (r < s + h && s + h < l),
          c = "y" === this.options.axis || (o < e + c && e + c < a);
        return "pointer" === this.options.tolerance ||
          this.options.forcePointerForContainers ||
          ("pointer" !== this.options.tolerance &&
            this.helperProportions[this.floating ? "width" : "height"] >
              t[this.floating ? "width" : "height"])
          ? h && c
          : o < e + this.helperProportions.width / 2 &&
              i - this.helperProportions.width / 2 < a &&
              r < s + this.helperProportions.height / 2 &&
              n - this.helperProportions.height / 2 < l;
      },
      _intersectsWithPointer: function (t) {
        var e =
            "x" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.top + this.offset.click.top,
              t.top,
              t.height
            ),
          t =
            "y" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.left + this.offset.click.left,
              t.left,
              t.width
            );
        return (
          !(!e || !t) &&
          ((e = this.dragDirection.vertical),
          (t = this.dragDirection.horizontal),
          this.floating
            ? "right" === t || "down" === e
              ? 2
              : 1
            : e && ("down" === e ? 2 : 1))
        );
      },
      _intersectsWithSides: function (t) {
        var e = this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            t.top + t.height / 2,
            t.height
          ),
          i = this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            t.left + t.width / 2,
            t.width
          ),
          s = this.dragDirection.vertical,
          t = this.dragDirection.horizontal;
        return this.floating && t
          ? ("right" === t && i) || ("left" === t && !i)
          : s && (("down" === s && e) || ("up" === s && !e));
      },
      _getDragVerticalDirection: function () {
        var t = this.positionAbs.top - this.lastPositionAbs.top;
        return 0 != t && (0 < t ? "down" : "up");
      },
      _getDragHorizontalDirection: function () {
        var t = this.positionAbs.left - this.lastPositionAbs.left;
        return 0 != t && (0 < t ? "right" : "left");
      },
      refresh: function (t) {
        return (
          this._refreshItems(t),
          this._setHandleClassName(),
          this.refreshPositions(),
          this
        );
      },
      _connectWith: function () {
        var t = this.options;
        return t.connectWith.constructor === String
          ? [t.connectWith]
          : t.connectWith;
      },
      _getItemsAsjQuery: function (t) {
        var e,
          i,
          s,
          n,
          o = [],
          a = [],
          r = this._connectWith();
        if (r && t)
          for (e = r.length - 1; 0 <= e; e--)
            for (i = (s = V(r[e], this.document[0])).length - 1; 0 <= i; i--)
              (n = V.data(s[i], this.widgetFullName)) &&
                n !== this &&
                !n.options.disabled &&
                a.push([
                  "function" == typeof n.options.items
                    ? n.options.items.call(n.element)
                    : V(n.options.items, n.element)
                        .not(".ui-sortable-helper")
                        .not(".ui-sortable-placeholder"),
                  n,
                ]);
        function l() {
          o.push(this);
        }
        for (
          a.push([
            "function" == typeof this.options.items
              ? this.options.items.call(this.element, null, {
                  options: this.options,
                  item: this.currentItem,
                })
              : V(this.options.items, this.element)
                  .not(".ui-sortable-helper")
                  .not(".ui-sortable-placeholder"),
            this,
          ]),
            e = a.length - 1;
          0 <= e;
          e--
        )
          a[e][0].each(l);
        return V(o);
      },
      _removeCurrentsFromItems: function () {
        var i = this.currentItem.find(":data(" + this.widgetName + "-item)");
        this.items = V.grep(this.items, function (t) {
          for (var e = 0; e < i.length; e++) if (i[e] === t.item[0]) return !1;
          return !0;
        });
      },
      _refreshItems: function (t) {
        (this.items = []), (this.containers = [this]);
        var e,
          i,
          s,
          n,
          o,
          a,
          r,
          l,
          h = this.items,
          c = [
            [
              "function" == typeof this.options.items
                ? this.options.items.call(this.element[0], t, {
                    item: this.currentItem,
                  })
                : V(this.options.items, this.element),
              this,
            ],
          ],
          u = this._connectWith();
        if (u && this.ready)
          for (e = u.length - 1; 0 <= e; e--)
            for (i = (s = V(u[e], this.document[0])).length - 1; 0 <= i; i--)
              (n = V.data(s[i], this.widgetFullName)) &&
                n !== this &&
                !n.options.disabled &&
                (c.push([
                  "function" == typeof n.options.items
                    ? n.options.items.call(n.element[0], t, {
                        item: this.currentItem,
                      })
                    : V(n.options.items, n.element),
                  n,
                ]),
                this.containers.push(n));
        for (e = c.length - 1; 0 <= e; e--)
          for (o = c[e][1], l = (a = c[e][(i = 0)]).length; i < l; i++)
            (r = V(a[i])).data(this.widgetName + "-item", o),
              h.push({
                item: r,
                instance: o,
                width: 0,
                height: 0,
                left: 0,
                top: 0,
              });
      },
      _refreshItemPositions: function (t) {
        for (var e, i, s = this.items.length - 1; 0 <= s; s--)
          (e = this.items[s]),
            (this.currentContainer &&
              e.instance !== this.currentContainer &&
              e.item[0] !== this.currentItem[0]) ||
              ((i = this.options.toleranceElement
                ? V(this.options.toleranceElement, e.item)
                : e.item),
              t || ((e.width = i.outerWidth()), (e.height = i.outerHeight())),
              (i = i.offset()),
              (e.left = i.left),
              (e.top = i.top));
      },
      refreshPositions: function (t) {
        var e, i;
        if (
          ((this.floating =
            !!this.items.length &&
            ("x" === this.options.axis ||
              this._isFloating(this.items[0].item))),
          this.offsetParent &&
            this.helper &&
            (this.offset.parent = this._getParentOffset()),
          this._refreshItemPositions(t),
          this.options.custom && this.options.custom.refreshContainers)
        )
          this.options.custom.refreshContainers.call(this);
        else
          for (e = this.containers.length - 1; 0 <= e; e--)
            (i = this.containers[e].element.offset()),
              (this.containers[e].containerCache.left = i.left),
              (this.containers[e].containerCache.top = i.top),
              (this.containers[e].containerCache.width =
                this.containers[e].element.outerWidth()),
              (this.containers[e].containerCache.height =
                this.containers[e].element.outerHeight());
        return this;
      },
      _createPlaceholder: function (i) {
        var s,
          n,
          o = (i = i || this).options;
        (o.placeholder && o.placeholder.constructor !== String) ||
          ((s = o.placeholder),
          (n = i.currentItem[0].nodeName.toLowerCase()),
          (o.placeholder = {
            element: function () {
              var t = V("<" + n + ">", i.document[0]);
              return (
                i
                  ._addClass(
                    t,
                    "ui-sortable-placeholder",
                    s || i.currentItem[0].className
                  )
                  ._removeClass(t, "ui-sortable-helper"),
                "tbody" === n
                  ? i._createTrPlaceholder(
                      i.currentItem.find("tr").eq(0),
                      V("<tr>", i.document[0]).appendTo(t)
                    )
                  : "tr" === n
                  ? i._createTrPlaceholder(i.currentItem, t)
                  : "img" === n && t.attr("src", i.currentItem.attr("src")),
                s || t.css("visibility", "hidden"),
                t
              );
            },
            update: function (t, e) {
              (s && !o.forcePlaceholderSize) ||
                ((e.height() &&
                  (!o.forcePlaceholderSize || ("tbody" !== n && "tr" !== n))) ||
                  e.height(
                    i.currentItem.innerHeight() -
                      parseInt(i.currentItem.css("paddingTop") || 0, 10) -
                      parseInt(i.currentItem.css("paddingBottom") || 0, 10)
                  ),
                e.width() ||
                  e.width(
                    i.currentItem.innerWidth() -
                      parseInt(i.currentItem.css("paddingLeft") || 0, 10) -
                      parseInt(i.currentItem.css("paddingRight") || 0, 10)
                  ));
            },
          })),
          (i.placeholder = V(
            o.placeholder.element.call(i.element, i.currentItem)
          )),
          i.currentItem.after(i.placeholder),
          o.placeholder.update(i, i.placeholder);
      },
      _createTrPlaceholder: function (t, e) {
        var i = this;
        t.children().each(function () {
          V("<td>&#160;</td>", i.document[0])
            .attr("colspan", V(this).attr("colspan") || 1)
            .appendTo(e);
        });
      },
      _contactContainers: function (t) {
        for (
          var e,
            i,
            s,
            n,
            o,
            a,
            r,
            l,
            h,
            c = null,
            u = null,
            d = this.containers.length - 1;
          0 <= d;
          d--
        )
          V.contains(this.currentItem[0], this.containers[d].element[0]) ||
            (this._intersectsWith(this.containers[d].containerCache)
              ? (c &&
                  V.contains(this.containers[d].element[0], c.element[0])) ||
                ((c = this.containers[d]), (u = d))
              : this.containers[d].containerCache.over &&
                (this.containers[d]._trigger("out", t, this._uiHash(this)),
                (this.containers[d].containerCache.over = 0)));
        if (c)
          if (1 === this.containers.length)
            this.containers[u].containerCache.over ||
              (this.containers[u]._trigger("over", t, this._uiHash(this)),
              (this.containers[u].containerCache.over = 1));
          else {
            for (
              i = 1e4,
                s = null,
                n = (l = c.floating || this._isFloating(this.currentItem))
                  ? "left"
                  : "top",
                o = l ? "width" : "height",
                h = l ? "pageX" : "pageY",
                e = this.items.length - 1;
              0 <= e;
              e--
            )
              V.contains(
                this.containers[u].element[0],
                this.items[e].item[0]
              ) &&
                this.items[e].item[0] !== this.currentItem[0] &&
                ((a = this.items[e].item.offset()[n]),
                (r = !1),
                t[h] - a > this.items[e][o] / 2 && (r = !0),
                Math.abs(t[h] - a) < i &&
                  ((i = Math.abs(t[h] - a)),
                  (s = this.items[e]),
                  (this.direction = r ? "up" : "down")));
            (s || this.options.dropOnEmpty) &&
              (this.currentContainer !== this.containers[u]
                ? (s
                    ? this._rearrange(t, s, null, !0)
                    : this._rearrange(t, null, this.containers[u].element, !0),
                  this._trigger("change", t, this._uiHash()),
                  this.containers[u]._trigger("change", t, this._uiHash(this)),
                  (this.currentContainer = this.containers[u]),
                  this.options.placeholder.update(
                    this.currentContainer,
                    this.placeholder
                  ),
                  (this.scrollParent = this.placeholder.scrollParent()),
                  this.scrollParent[0] !== this.document[0] &&
                    "HTML" !== this.scrollParent[0].tagName &&
                    (this.overflowOffset = this.scrollParent.offset()),
                  this.containers[u]._trigger("over", t, this._uiHash(this)),
                  (this.containers[u].containerCache.over = 1))
                : this.currentContainer.containerCache.over ||
                  (this.containers[u]._trigger("over", t, this._uiHash()),
                  (this.currentContainer.containerCache.over = 1)));
          }
      },
      _createHelper: function (t) {
        var e = this.options,
          t =
            "function" == typeof e.helper
              ? V(e.helper.apply(this.element[0], [t, this.currentItem]))
              : "clone" === e.helper
              ? this.currentItem.clone()
              : this.currentItem;
        return (
          t.parents("body").length || this.appendTo[0].appendChild(t[0]),
          t[0] === this.currentItem[0] &&
            (this._storedCSS = {
              width: this.currentItem[0].style.width,
              height: this.currentItem[0].style.height,
              position: this.currentItem.css("position"),
              top: this.currentItem.css("top"),
              left: this.currentItem.css("left"),
            }),
          (t[0].style.width && !e.forceHelperSize) ||
            t.width(this.currentItem.width()),
          (t[0].style.height && !e.forceHelperSize) ||
            t.height(this.currentItem.height()),
          t
        );
      },
      _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")),
          "left" in
            (t = Array.isArray(t) ? { left: +t[0], top: +t[1] || 0 } : t) &&
            (this.offset.click.left = t.left + this.margins.left),
          "right" in t &&
            (this.offset.click.left =
              this.helperProportions.width - t.right + this.margins.left),
          "top" in t && (this.offset.click.top = t.top + this.margins.top),
          "bottom" in t &&
            (this.offset.click.top =
              this.helperProportions.height - t.bottom + this.margins.top);
      },
      _getParentOffset: function () {
        this.offsetParent = this.helper.offsetParent();
        var t = this.offsetParent.offset();
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== this.document[0] &&
            V.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          {
            top:
              (t =
                this.offsetParent[0] === this.document[0].body ||
                (this.offsetParent[0].tagName &&
                  "html" === this.offsetParent[0].tagName.toLowerCase() &&
                  V.ui.ie)
                  ? { top: 0, left: 0 }
                  : t).top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
        var t = this.currentItem.position();
        return {
          top:
            t.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            this.scrollParent.scrollTop(),
          left:
            t.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            this.scrollParent.scrollLeft(),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
          top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          e,
          i = this.options;
        "parent" === i.containment &&
          (i.containment = this.helper[0].parentNode),
          ("document" !== i.containment && "window" !== i.containment) ||
            (this.containment = [
              0 - this.offset.relative.left - this.offset.parent.left,
              0 - this.offset.relative.top - this.offset.parent.top,
              "document" === i.containment
                ? this.document.width()
                : this.window.width() -
                  this.helperProportions.width -
                  this.margins.left,
              ("document" === i.containment
                ? this.document.height() ||
                  document.body.parentNode.scrollHeight
                : this.window.height() ||
                  this.document[0].body.parentNode.scrollHeight) -
                this.helperProportions.height -
                this.margins.top,
            ]),
          /^(document|window|parent)$/.test(i.containment) ||
            ((t = V(i.containment)[0]),
            (e = V(i.containment).offset()),
            (i = "hidden" !== V(t).css("overflow")),
            (this.containment = [
              e.left +
                (parseInt(V(t).css("borderLeftWidth"), 10) || 0) +
                (parseInt(V(t).css("paddingLeft"), 10) || 0) -
                this.margins.left,
              e.top +
                (parseInt(V(t).css("borderTopWidth"), 10) || 0) +
                (parseInt(V(t).css("paddingTop"), 10) || 0) -
                this.margins.top,
              e.left +
                (i ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) -
                (parseInt(V(t).css("borderLeftWidth"), 10) || 0) -
                (parseInt(V(t).css("paddingRight"), 10) || 0) -
                this.helperProportions.width -
                this.margins.left,
              e.top +
                (i
                  ? Math.max(t.scrollHeight, t.offsetHeight)
                  : t.offsetHeight) -
                (parseInt(V(t).css("borderTopWidth"), 10) || 0) -
                (parseInt(V(t).css("paddingBottom"), 10) || 0) -
                this.helperProportions.height -
                this.margins.top,
            ]));
      },
      _convertPositionTo: function (t, e) {
        e = e || this.position;
        var i = "absolute" === t ? 1 : -1,
          s =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              V.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          t = /(html|body)/i.test(s[0].tagName);
        return {
          top:
            e.top +
            this.offset.relative.top * i +
            this.offset.parent.top * i -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollTop()
              : t
              ? 0
              : s.scrollTop()) *
              i,
          left:
            e.left +
            this.offset.relative.left * i +
            this.offset.parent.left * i -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollLeft()
              : t
              ? 0
              : s.scrollLeft()) *
              i,
        };
      },
      _generatePosition: function (t) {
        var e = this.options,
          i = t.pageX,
          s = t.pageY,
          n =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              V.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          o = /(html|body)/i.test(n[0].tagName);
        return (
          "relative" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              this.scrollParent[0] !== this.offsetParent[0]) ||
            (this.offset.relative = this._getRelativeOffset()),
          this.originalPosition &&
            (this.containment &&
              (t.pageX - this.offset.click.left < this.containment[0] &&
                (i = this.containment[0] + this.offset.click.left),
              t.pageY - this.offset.click.top < this.containment[1] &&
                (s = this.containment[1] + this.offset.click.top),
              t.pageX - this.offset.click.left > this.containment[2] &&
                (i = this.containment[2] + this.offset.click.left),
              t.pageY - this.offset.click.top > this.containment[3] &&
                (s = this.containment[3] + this.offset.click.top)),
            e.grid &&
              ((t =
                this.originalPageY +
                Math.round((s - this.originalPageY) / e.grid[1]) * e.grid[1]),
              (s =
                !this.containment ||
                (t - this.offset.click.top >= this.containment[1] &&
                  t - this.offset.click.top <= this.containment[3])
                  ? t
                  : t - this.offset.click.top >= this.containment[1]
                  ? t - e.grid[1]
                  : t + e.grid[1]),
              (t =
                this.originalPageX +
                Math.round((i - this.originalPageX) / e.grid[0]) * e.grid[0]),
              (i =
                !this.containment ||
                (t - this.offset.click.left >= this.containment[0] &&
                  t - this.offset.click.left <= this.containment[2])
                  ? t
                  : t - this.offset.click.left >= this.containment[0]
                  ? t - e.grid[0]
                  : t + e.grid[0]))),
          {
            top:
              s -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollTop()
                : o
                ? 0
                : n.scrollTop()),
            left:
              i -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollLeft()
                : o
                ? 0
                : n.scrollLeft()),
          }
        );
      },
      _rearrange: function (t, e, i, s) {
        i
          ? i[0].appendChild(this.placeholder[0])
          : e.item[0].parentNode.insertBefore(
              this.placeholder[0],
              "down" === this.direction ? e.item[0] : e.item[0].nextSibling
            ),
          (this.counter = this.counter ? ++this.counter : 1);
        var n = this.counter;
        this._delay(function () {
          n === this.counter && this.refreshPositions(!s);
        });
      },
      _clear: function (t, e) {
        this.reverting = !1;
        var i,
          s = [];
        if (
          (!this._noFinalSort &&
            this.currentItem.parent().length &&
            this.placeholder.before(this.currentItem),
          (this._noFinalSort = null),
          this.helper[0] === this.currentItem[0])
        ) {
          for (i in this._storedCSS)
            ("auto" !== this._storedCSS[i] &&
              "static" !== this._storedCSS[i]) ||
              (this._storedCSS[i] = "");
          this.currentItem.css(this._storedCSS),
            this._removeClass(this.currentItem, "ui-sortable-helper");
        } else this.currentItem.show();
        function n(e, i, s) {
          return function (t) {
            s._trigger(e, t, i._uiHash(i));
          };
        }
        for (
          this.fromOutside &&
            !e &&
            s.push(function (t) {
              this._trigger("receive", t, this._uiHash(this.fromOutside));
            }),
            (!this.fromOutside &&
              this.domPosition.prev ===
                this.currentItem.prev().not(".ui-sortable-helper")[0] &&
              this.domPosition.parent === this.currentItem.parent()[0]) ||
              e ||
              s.push(function (t) {
                this._trigger("update", t, this._uiHash());
              }),
            this !== this.currentContainer &&
              (e ||
                (s.push(function (t) {
                  this._trigger("remove", t, this._uiHash());
                }),
                s.push(
                  function (e) {
                    return function (t) {
                      e._trigger("receive", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ),
                s.push(
                  function (e) {
                    return function (t) {
                      e._trigger("update", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ))),
            i = this.containers.length - 1;
          0 <= i;
          i--
        )
          e || s.push(n("deactivate", this, this.containers[i])),
            this.containers[i].containerCache.over &&
              (s.push(n("out", this, this.containers[i])),
              (this.containers[i].containerCache.over = 0));
        if (
          (this.storedCursor &&
            (this.document.find("body").css("cursor", this.storedCursor),
            this.storedStylesheet.remove()),
          this._storedOpacity &&
            this.helper.css("opacity", this._storedOpacity),
          this._storedZIndex &&
            this.helper.css(
              "zIndex",
              "auto" === this._storedZIndex ? "" : this._storedZIndex
            ),
          (this.dragging = !1),
          e || this._trigger("beforeStop", t, this._uiHash()),
          this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
          this.cancelHelperRemoval ||
            (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
            (this.helper = null)),
          !e)
        ) {
          for (i = 0; i < s.length; i++) s[i].call(this, t);
          this._trigger("stop", t, this._uiHash());
        }
        return (this.fromOutside = !1), !this.cancelHelperRemoval;
      },
      _trigger: function () {
        !1 === V.Widget.prototype._trigger.apply(this, arguments) &&
          this.cancel();
      },
      _uiHash: function (t) {
        var e = t || this;
        return {
          helper: e.helper,
          placeholder: e.placeholder || V([]),
          position: e.position,
          originalPosition: e.originalPosition,
          offset: e.positionAbs,
          item: e.currentItem,
          sender: t ? t.element : null,
        };
      },
    });
  function ht(e) {
    return function () {
      var t = this.element.val();
      e.apply(this, arguments),
        this._refresh(),
        t !== this.element.val() && this._trigger("change");
    };
  }
  V.widget("ui.spinner", {
    version: "1.13.2",
    defaultElement: "<input>",
    widgetEventPrefix: "spin",
    options: {
      classes: {
        "ui-spinner": "ui-corner-all",
        "ui-spinner-down": "ui-corner-br",
        "ui-spinner-up": "ui-corner-tr",
      },
      culture: null,
      icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
      incremental: !0,
      max: null,
      min: null,
      numberFormat: null,
      page: 10,
      step: 1,
      change: null,
      spin: null,
      start: null,
      stop: null,
    },
    _create: function () {
      this._setOption("max", this.options.max),
        this._setOption("min", this.options.min),
        this._setOption("step", this.options.step),
        "" !== this.value() && this._value(this.element.val(), !0),
        this._draw(),
        this._on(this._events),
        this._refresh(),
        this._on(this.window, {
          beforeunload: function () {
            this.element.removeAttr("autocomplete");
          },
        });
    },
    _getCreateOptions: function () {
      var s = this._super(),
        n = this.element;
      return (
        V.each(["min", "max", "step"], function (t, e) {
          var i = n.attr(e);
          null != i && i.length && (s[e] = i);
        }),
        s
      );
    },
    _events: {
      keydown: function (t) {
        this._start(t) && this._keydown(t) && t.preventDefault();
      },
      keyup: "_stop",
      focus: function () {
        this.previous = this.element.val();
      },
      blur: function (t) {
        this.cancelBlur
          ? delete this.cancelBlur
          : (this._stop(),
            this._refresh(),
            this.previous !== this.element.val() && this._trigger("change", t));
      },
      mousewheel: function (t, e) {
        var i = V.ui.safeActiveElement(this.document[0]);
        if (this.element[0] === i && e) {
          if (!this.spinning && !this._start(t)) return !1;
          this._spin((0 < e ? 1 : -1) * this.options.step, t),
            clearTimeout(this.mousewheelTimer),
            (this.mousewheelTimer = this._delay(function () {
              this.spinning && this._stop(t);
            }, 100)),
            t.preventDefault();
        }
      },
      "mousedown .ui-spinner-button": function (t) {
        var e;
        function i() {
          this.element[0] === V.ui.safeActiveElement(this.document[0]) ||
            (this.element.trigger("focus"),
            (this.previous = e),
            this._delay(function () {
              this.previous = e;
            }));
        }
        (e =
          this.element[0] === V.ui.safeActiveElement(this.document[0])
            ? this.previous
            : this.element.val()),
          t.preventDefault(),
          i.call(this),
          (this.cancelBlur = !0),
          this._delay(function () {
            delete this.cancelBlur, i.call(this);
          }),
          !1 !== this._start(t) &&
            this._repeat(
              null,
              V(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
              t
            );
      },
      "mouseup .ui-spinner-button": "_stop",
      "mouseenter .ui-spinner-button": function (t) {
        if (V(t.currentTarget).hasClass("ui-state-active"))
          return (
            !1 !== this._start(t) &&
            void this._repeat(
              null,
              V(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
              t
            )
          );
      },
      "mouseleave .ui-spinner-button": "_stop",
    },
    _enhance: function () {
      this.uiSpinner = this.element
        .attr("autocomplete", "off")
        .wrap("<span>")
        .parent()
        .append("<a></a><a></a>");
    },
    _draw: function () {
      this._enhance(),
        this._addClass(
          this.uiSpinner,
          "ui-spinner",
          "ui-widget ui-widget-content"
        ),
        this._addClass("ui-spinner-input"),
        this.element.attr("role", "spinbutton"),
        (this.buttons = this.uiSpinner
          .children("a")
          .attr("tabIndex", -1)
          .attr("aria-hidden", !0)
          .button({ classes: { "ui-button": "" } })),
        this._removeClass(this.buttons, "ui-corner-all"),
        this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"),
        this._addClass(
          this.buttons.last(),
          "ui-spinner-button ui-spinner-down"
        ),
        this.buttons
          .first()
          .button({ icon: this.options.icons.up, showLabel: !1 }),
        this.buttons
          .last()
          .button({ icon: this.options.icons.down, showLabel: !1 }),
        this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) &&
          0 < this.uiSpinner.height() &&
          this.uiSpinner.height(this.uiSpinner.height());
    },
    _keydown: function (t) {
      var e = this.options,
        i = V.ui.keyCode;
      switch (t.keyCode) {
        case i.UP:
          return this._repeat(null, 1, t), !0;
        case i.DOWN:
          return this._repeat(null, -1, t), !0;
        case i.PAGE_UP:
          return this._repeat(null, e.page, t), !0;
        case i.PAGE_DOWN:
          return this._repeat(null, -e.page, t), !0;
      }
      return !1;
    },
    _start: function (t) {
      return (
        !(!this.spinning && !1 === this._trigger("start", t)) &&
        (this.counter || (this.counter = 1), (this.spinning = !0))
      );
    },
    _repeat: function (t, e, i) {
      (t = t || 500),
        clearTimeout(this.timer),
        (this.timer = this._delay(function () {
          this._repeat(40, e, i);
        }, t)),
        this._spin(e * this.options.step, i);
    },
    _spin: function (t, e) {
      var i = this.value() || 0;
      this.counter || (this.counter = 1),
        (i = this._adjustValue(i + t * this._increment(this.counter))),
        (this.spinning && !1 === this._trigger("spin", e, { value: i })) ||
          (this._value(i), this.counter++);
    },
    _increment: function (t) {
      var e = this.options.incremental;
      return e
        ? "function" == typeof e
          ? e(t)
          : Math.floor((t * t * t) / 5e4 - (t * t) / 500 + (17 * t) / 200 + 1)
        : 1;
    },
    _precision: function () {
      var t = this._precisionOf(this.options.step);
      return (t =
        null !== this.options.min
          ? Math.max(t, this._precisionOf(this.options.min))
          : t);
    },
    _precisionOf: function (t) {
      var e = t.toString(),
        t = e.indexOf(".");
      return -1 === t ? 0 : e.length - t - 1;
    },
    _adjustValue: function (t) {
      var e = this.options,
        i = null !== e.min ? e.min : 0,
        s = t - i;
      return (
        (t = i + Math.round(s / e.step) * e.step),
        (t = parseFloat(t.toFixed(this._precision()))),
        null !== e.max && t > e.max
          ? e.max
          : null !== e.min && t < e.min
          ? e.min
          : t
      );
    },
    _stop: function (t) {
      this.spinning &&
        (clearTimeout(this.timer),
        clearTimeout(this.mousewheelTimer),
        (this.counter = 0),
        (this.spinning = !1),
        this._trigger("stop", t));
    },
    _setOption: function (t, e) {
      var i;
      if ("culture" === t || "numberFormat" === t)
        return (
          (i = this._parse(this.element.val())),
          (this.options[t] = e),
          void this.element.val(this._format(i))
        );
      ("max" !== t && "min" !== t && "step" !== t) ||
        ("string" == typeof e && (e = this._parse(e))),
        "icons" === t &&
          ((i = this.buttons.first().find(".ui-icon")),
          this._removeClass(i, null, this.options.icons.up),
          this._addClass(i, null, e.up),
          (i = this.buttons.last().find(".ui-icon")),
          this._removeClass(i, null, this.options.icons.down),
          this._addClass(i, null, e.down)),
        this._super(t, e);
    },
    _setOptionDisabled: function (t) {
      this._super(t),
        this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!t),
        this.element.prop("disabled", !!t),
        this.buttons.button(t ? "disable" : "enable");
    },
    _setOptions: ht(function (t) {
      this._super(t);
    }),
    _parse: function (t) {
      return "" ===
        (t =
          "string" == typeof t && "" !== t
            ? window.Globalize && this.options.numberFormat
              ? Globalize.parseFloat(t, 10, this.options.culture)
              : +t
            : t) || isNaN(t)
        ? null
        : t;
    },
    _format: function (t) {
      return "" === t
        ? ""
        : window.Globalize && this.options.numberFormat
        ? Globalize.format(t, this.options.numberFormat, this.options.culture)
        : t;
    },
    _refresh: function () {
      this.element.attr({
        "aria-valuemin": this.options.min,
        "aria-valuemax": this.options.max,
        "aria-valuenow": this._parse(this.element.val()),
      });
    },
    isValid: function () {
      var t = this.value();
      return null !== t && t === this._adjustValue(t);
    },
    _value: function (t, e) {
      var i;
      "" !== t &&
        null !== (i = this._parse(t)) &&
        (e || (i = this._adjustValue(i)), (t = this._format(i))),
        this.element.val(t),
        this._refresh();
    },
    _destroy: function () {
      this.element
        .prop("disabled", !1)
        .removeAttr(
          "autocomplete role aria-valuemin aria-valuemax aria-valuenow"
        ),
        this.uiSpinner.replaceWith(this.element);
    },
    stepUp: ht(function (t) {
      this._stepUp(t);
    }),
    _stepUp: function (t) {
      this._start() && (this._spin((t || 1) * this.options.step), this._stop());
    },
    stepDown: ht(function (t) {
      this._stepDown(t);
    }),
    _stepDown: function (t) {
      this._start() &&
        (this._spin((t || 1) * -this.options.step), this._stop());
    },
    pageUp: ht(function (t) {
      this._stepUp((t || 1) * this.options.page);
    }),
    pageDown: ht(function (t) {
      this._stepDown((t || 1) * this.options.page);
    }),
    value: function (t) {
      if (!arguments.length) return this._parse(this.element.val());
      ht(this._value).call(this, t);
    },
    widget: function () {
      return this.uiSpinner;
    },
  }),
    !1 !== V.uiBackCompat &&
      V.widget("ui.spinner", V.ui.spinner, {
        _enhance: function () {
          this.uiSpinner = this.element
            .attr("autocomplete", "off")
            .wrap(this._uiSpinnerHtml())
            .parent()
            .append(this._buttonHtml());
        },
        _uiSpinnerHtml: function () {
          return "<span>";
        },
        _buttonHtml: function () {
          return "<a></a><a></a>";
        },
      });
  var ct;
  V.ui.spinner;
  V.widget("ui.tabs", {
    version: "1.13.2",
    delay: 300,
    options: {
      active: null,
      classes: {
        "ui-tabs": "ui-corner-all",
        "ui-tabs-nav": "ui-corner-all",
        "ui-tabs-panel": "ui-corner-bottom",
        "ui-tabs-tab": "ui-corner-top",
      },
      collapsible: !1,
      event: "click",
      heightStyle: "content",
      hide: null,
      show: null,
      activate: null,
      beforeActivate: null,
      beforeLoad: null,
      load: null,
    },
    _isLocal:
      ((ct = /#.*$/),
      function (t) {
        var e = t.href.replace(ct, ""),
          i = location.href.replace(ct, "");
        try {
          e = decodeURIComponent(e);
        } catch (t) {}
        try {
          i = decodeURIComponent(i);
        } catch (t) {}
        return 1 < t.hash.length && e === i;
      }),
    _create: function () {
      var e = this,
        t = this.options;
      (this.running = !1),
        this._addClass("ui-tabs", "ui-widget ui-widget-content"),
        this._toggleClass("ui-tabs-collapsible", null, t.collapsible),
        this._processTabs(),
        (t.active = this._initialActive()),
        Array.isArray(t.disabled) &&
          (t.disabled = V.uniqueSort(
            t.disabled.concat(
              V.map(this.tabs.filter(".ui-state-disabled"), function (t) {
                return e.tabs.index(t);
              })
            )
          ).sort()),
        !1 !== this.options.active && this.anchors.length
          ? (this.active = this._findActive(t.active))
          : (this.active = V()),
        this._refresh(),
        this.active.length && this.load(t.active);
    },
    _initialActive: function () {
      var i = this.options.active,
        t = this.options.collapsible,
        s = location.hash.substring(1);
      return (
        null === i &&
          (s &&
            this.tabs.each(function (t, e) {
              if (V(e).attr("aria-controls") === s) return (i = t), !1;
            }),
          (null !==
            (i =
              null === i
                ? this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                : i) &&
            -1 !== i) ||
            (i = !!this.tabs.length && 0)),
        !1 !== i &&
          -1 === (i = this.tabs.index(this.tabs.eq(i))) &&
          (i = !t && 0),
        (i = !t && !1 === i && this.anchors.length ? 0 : i)
      );
    },
    _getCreateEventData: function () {
      return {
        tab: this.active,
        panel: this.active.length ? this._getPanelForTab(this.active) : V(),
      };
    },
    _tabKeydown: function (t) {
      var e = V(V.ui.safeActiveElement(this.document[0])).closest("li"),
        i = this.tabs.index(e),
        s = !0;
      if (!this._handlePageNav(t)) {
        switch (t.keyCode) {
          case V.ui.keyCode.RIGHT:
          case V.ui.keyCode.DOWN:
            i++;
            break;
          case V.ui.keyCode.UP:
          case V.ui.keyCode.LEFT:
            (s = !1), i--;
            break;
          case V.ui.keyCode.END:
            i = this.anchors.length - 1;
            break;
          case V.ui.keyCode.HOME:
            i = 0;
            break;
          case V.ui.keyCode.SPACE:
            return (
              t.preventDefault(),
              clearTimeout(this.activating),
              void this._activate(i)
            );
          case V.ui.keyCode.ENTER:
            return (
              t.preventDefault(),
              clearTimeout(this.activating),
              void this._activate(i !== this.options.active && i)
            );
          default:
            return;
        }
        t.preventDefault(),
          clearTimeout(this.activating),
          (i = this._focusNextTab(i, s)),
          t.ctrlKey ||
            t.metaKey ||
            (e.attr("aria-selected", "false"),
            this.tabs.eq(i).attr("aria-selected", "true"),
            (this.activating = this._delay(function () {
              this.option("active", i);
            }, this.delay)));
      }
    },
    _panelKeydown: function (t) {
      this._handlePageNav(t) ||
        (t.ctrlKey &&
          t.keyCode === V.ui.keyCode.UP &&
          (t.preventDefault(), this.active.trigger("focus")));
    },
    _handlePageNav: function (t) {
      return t.altKey && t.keyCode === V.ui.keyCode.PAGE_UP
        ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0)
        : t.altKey && t.keyCode === V.ui.keyCode.PAGE_DOWN
        ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0)
        : void 0;
    },
    _findNextTab: function (t, e) {
      var i = this.tabs.length - 1;
      for (
        ;
        -1 !==
        V.inArray((t = (t = i < t ? 0 : t) < 0 ? i : t), this.options.disabled);

      )
        t = e ? t + 1 : t - 1;
      return t;
    },
    _focusNextTab: function (t, e) {
      return (t = this._findNextTab(t, e)), this.tabs.eq(t).trigger("focus"), t;
    },
    _setOption: function (t, e) {
      "active" !== t
        ? (this._super(t, e),
          "collapsible" === t &&
            (this._toggleClass("ui-tabs-collapsible", null, e),
            e || !1 !== this.options.active || this._activate(0)),
          "event" === t && this._setupEvents(e),
          "heightStyle" === t && this._setupHeightStyle(e))
        : this._activate(e);
    },
    _sanitizeSelector: function (t) {
      return t ? t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
    },
    refresh: function () {
      var t = this.options,
        e = this.tablist.children(":has(a[href])");
      (t.disabled = V.map(e.filter(".ui-state-disabled"), function (t) {
        return e.index(t);
      })),
        this._processTabs(),
        !1 !== t.active && this.anchors.length
          ? this.active.length && !V.contains(this.tablist[0], this.active[0])
            ? this.tabs.length === t.disabled.length
              ? ((t.active = !1), (this.active = V()))
              : this._activate(this._findNextTab(Math.max(0, t.active - 1), !1))
            : (t.active = this.tabs.index(this.active))
          : ((t.active = !1), (this.active = V())),
        this._refresh();
    },
    _refresh: function () {
      this._setOptionDisabled(this.options.disabled),
        this._setupEvents(this.options.event),
        this._setupHeightStyle(this.options.heightStyle),
        this.tabs.not(this.active).attr({
          "aria-selected": "false",
          "aria-expanded": "false",
          tabIndex: -1,
        }),
        this.panels
          .not(this._getPanelForTab(this.active))
          .hide()
          .attr({ "aria-hidden": "true" }),
        this.active.length
          ? (this.active.attr({
              "aria-selected": "true",
              "aria-expanded": "true",
              tabIndex: 0,
            }),
            this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
            this._getPanelForTab(this.active)
              .show()
              .attr({ "aria-hidden": "false" }))
          : this.tabs.eq(0).attr("tabIndex", 0);
    },
    _processTabs: function () {
      var l = this,
        t = this.tabs,
        e = this.anchors,
        i = this.panels;
      (this.tablist = this._getList().attr("role", "tablist")),
        this._addClass(
          this.tablist,
          "ui-tabs-nav",
          "ui-helper-reset ui-helper-clearfix ui-widget-header"
        ),
        this.tablist
          .on("mousedown" + this.eventNamespace, "> li", function (t) {
            V(this).is(".ui-state-disabled") && t.preventDefault();
          })
          .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
            V(this).closest("li").is(".ui-state-disabled") && this.blur();
          }),
        (this.tabs = this.tablist
          .find("> li:has(a[href])")
          .attr({ role: "tab", tabIndex: -1 })),
        this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
        (this.anchors = this.tabs
          .map(function () {
            return V("a", this)[0];
          })
          .attr({ tabIndex: -1 })),
        this._addClass(this.anchors, "ui-tabs-anchor"),
        (this.panels = V()),
        this.anchors.each(function (t, e) {
          var i,
            s,
            n,
            o = V(e).uniqueId().attr("id"),
            a = V(e).closest("li"),
            r = a.attr("aria-controls");
          l._isLocal(e)
            ? ((n = (i = e.hash).substring(1)),
              (s = l.element.find(l._sanitizeSelector(i))))
            : ((n = a.attr("aria-controls") || V({}).uniqueId()[0].id),
              (s = l.element.find((i = "#" + n))).length ||
                (s = l._createPanel(n)).insertAfter(
                  l.panels[t - 1] || l.tablist
                ),
              s.attr("aria-live", "polite")),
            s.length && (l.panels = l.panels.add(s)),
            r && a.data("ui-tabs-aria-controls", r),
            a.attr({ "aria-controls": n, "aria-labelledby": o }),
            s.attr("aria-labelledby", o);
        }),
        this.panels.attr("role", "tabpanel"),
        this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
        t &&
          (this._off(t.not(this.tabs)),
          this._off(e.not(this.anchors)),
          this._off(i.not(this.panels)));
    },
    _getList: function () {
      return this.tablist || this.element.find("ol, ul").eq(0);
    },
    _createPanel: function (t) {
      return V("<div>").attr("id", t).data("ui-tabs-destroy", !0);
    },
    _setOptionDisabled: function (t) {
      var e, i;
      for (
        Array.isArray(t) &&
          (t.length ? t.length === this.anchors.length && (t = !0) : (t = !1)),
          i = 0;
        (e = this.tabs[i]);
        i++
      )
        (e = V(e)),
          !0 === t || -1 !== V.inArray(i, t)
            ? (e.attr("aria-disabled", "true"),
              this._addClass(e, null, "ui-state-disabled"))
            : (e.removeAttr("aria-disabled"),
              this._removeClass(e, null, "ui-state-disabled"));
      (this.options.disabled = t),
        this._toggleClass(
          this.widget(),
          this.widgetFullName + "-disabled",
          null,
          !0 === t
        );
    },
    _setupEvents: function (t) {
      var i = {};
      t &&
        V.each(t.split(" "), function (t, e) {
          i[e] = "_eventHandler";
        }),
        this._off(this.anchors.add(this.tabs).add(this.panels)),
        this._on(!0, this.anchors, {
          click: function (t) {
            t.preventDefault();
          },
        }),
        this._on(this.anchors, i),
        this._on(this.tabs, { keydown: "_tabKeydown" }),
        this._on(this.panels, { keydown: "_panelKeydown" }),
        this._focusable(this.tabs),
        this._hoverable(this.tabs);
    },
    _setupHeightStyle: function (t) {
      var i,
        e = this.element.parent();
      "fill" === t
        ? ((i = e.height()),
          (i -= this.element.outerHeight() - this.element.height()),
          this.element.siblings(":visible").each(function () {
            var t = V(this),
              e = t.css("position");
            "absolute" !== e && "fixed" !== e && (i -= t.outerHeight(!0));
          }),
          this.element
            .children()
            .not(this.panels)
            .each(function () {
              i -= V(this).outerHeight(!0);
            }),
          this.panels
            .each(function () {
              V(this).height(
                Math.max(0, i - V(this).innerHeight() + V(this).height())
              );
            })
            .css("overflow", "auto"))
        : "auto" === t &&
          ((i = 0),
          this.panels
            .each(function () {
              i = Math.max(i, V(this).height("").height());
            })
            .height(i));
    },
    _eventHandler: function (t) {
      var e = this.options,
        i = this.active,
        s = V(t.currentTarget).closest("li"),
        n = s[0] === i[0],
        o = n && e.collapsible,
        a = o ? V() : this._getPanelForTab(s),
        r = i.length ? this._getPanelForTab(i) : V(),
        i = { oldTab: i, oldPanel: r, newTab: o ? V() : s, newPanel: a };
      t.preventDefault(),
        s.hasClass("ui-state-disabled") ||
          s.hasClass("ui-tabs-loading") ||
          this.running ||
          (n && !e.collapsible) ||
          !1 === this._trigger("beforeActivate", t, i) ||
          ((e.active = !o && this.tabs.index(s)),
          (this.active = n ? V() : s),
          this.xhr && this.xhr.abort(),
          r.length ||
            a.length ||
            V.error("jQuery UI Tabs: Mismatching fragment identifier."),
          a.length && this.load(this.tabs.index(s), t),
          this._toggle(t, i));
    },
    _toggle: function (t, e) {
      var i = this,
        s = e.newPanel,
        n = e.oldPanel;
      function o() {
        (i.running = !1), i._trigger("activate", t, e);
      }
      function a() {
        i._addClass(
          e.newTab.closest("li"),
          "ui-tabs-active",
          "ui-state-active"
        ),
          s.length && i.options.show
            ? i._show(s, i.options.show, o)
            : (s.show(), o());
      }
      (this.running = !0),
        n.length && this.options.hide
          ? this._hide(n, this.options.hide, function () {
              i._removeClass(
                e.oldTab.closest("li"),
                "ui-tabs-active",
                "ui-state-active"
              ),
                a();
            })
          : (this._removeClass(
              e.oldTab.closest("li"),
              "ui-tabs-active",
              "ui-state-active"
            ),
            n.hide(),
            a()),
        n.attr("aria-hidden", "true"),
        e.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }),
        s.length && n.length
          ? e.oldTab.attr("tabIndex", -1)
          : s.length &&
            this.tabs
              .filter(function () {
                return 0 === V(this).attr("tabIndex");
              })
              .attr("tabIndex", -1),
        s.attr("aria-hidden", "false"),
        e.newTab.attr({
          "aria-selected": "true",
          "aria-expanded": "true",
          tabIndex: 0,
        });
    },
    _activate: function (t) {
      var t = this._findActive(t);
      t[0] !== this.active[0] &&
        ((t = (t = !t.length ? this.active : t).find(".ui-tabs-anchor")[0]),
        this._eventHandler({
          target: t,
          currentTarget: t,
          preventDefault: V.noop,
        }));
    },
    _findActive: function (t) {
      return !1 === t ? V() : this.tabs.eq(t);
    },
    _getIndex: function (t) {
      return (t =
        "string" == typeof t
          ? this.anchors.index(
              this.anchors.filter("[href$='" + V.escapeSelector(t) + "']")
            )
          : t);
    },
    _destroy: function () {
      this.xhr && this.xhr.abort(),
        this.tablist.removeAttr("role").off(this.eventNamespace),
        this.anchors.removeAttr("role tabIndex").removeUniqueId(),
        this.tabs.add(this.panels).each(function () {
          V.data(this, "ui-tabs-destroy")
            ? V(this).remove()
            : V(this).removeAttr(
                "role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded"
              );
        }),
        this.tabs.each(function () {
          var t = V(this),
            e = t.data("ui-tabs-aria-controls");
          e
            ? t.attr("aria-controls", e).removeData("ui-tabs-aria-controls")
            : t.removeAttr("aria-controls");
        }),
        this.panels.show(),
        "content" !== this.options.heightStyle && this.panels.css("height", "");
    },
    enable: function (i) {
      var t = this.options.disabled;
      !1 !== t &&
        ((t =
          void 0 !== i &&
          ((i = this._getIndex(i)),
          Array.isArray(t)
            ? V.map(t, function (t) {
                return t !== i ? t : null;
              })
            : V.map(this.tabs, function (t, e) {
                return e !== i ? e : null;
              }))),
        this._setOptionDisabled(t));
    },
    disable: function (t) {
      var e = this.options.disabled;
      if (!0 !== e) {
        if (void 0 === t) e = !0;
        else {
          if (((t = this._getIndex(t)), -1 !== V.inArray(t, e))) return;
          e = Array.isArray(e) ? V.merge([t], e).sort() : [t];
        }
        this._setOptionDisabled(e);
      }
    },
    load: function (t, s) {
      t = this._getIndex(t);
      function n(t, e) {
        "abort" === e && o.panels.stop(!1, !0),
          o._removeClass(i, "ui-tabs-loading"),
          a.removeAttr("aria-busy"),
          t === o.xhr && delete o.xhr;
      }
      var o = this,
        i = this.tabs.eq(t),
        t = i.find(".ui-tabs-anchor"),
        a = this._getPanelForTab(i),
        r = { tab: i, panel: a };
      this._isLocal(t[0]) ||
        ((this.xhr = V.ajax(this._ajaxSettings(t, s, r))),
        this.xhr &&
          "canceled" !== this.xhr.statusText &&
          (this._addClass(i, "ui-tabs-loading"),
          a.attr("aria-busy", "true"),
          this.xhr
            .done(function (t, e, i) {
              setTimeout(function () {
                a.html(t), o._trigger("load", s, r), n(i, e);
              }, 1);
            })
            .fail(function (t, e) {
              setTimeout(function () {
                n(t, e);
              }, 1);
            })));
    },
    _ajaxSettings: function (t, i, s) {
      var n = this;
      return {
        url: t.attr("href").replace(/#.*$/, ""),
        beforeSend: function (t, e) {
          return n._trigger(
            "beforeLoad",
            i,
            V.extend({ jqXHR: t, ajaxSettings: e }, s)
          );
        },
      };
    },
    _getPanelForTab: function (t) {
      t = V(t).attr("aria-controls");
      return this.element.find(this._sanitizeSelector("#" + t));
    },
  }),
    !1 !== V.uiBackCompat &&
      V.widget("ui.tabs", V.ui.tabs, {
        _processTabs: function () {
          this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        },
      });
  V.ui.tabs;
  V.widget("ui.tooltip", {
    version: "1.13.2",
    options: {
      classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" },
      content: function () {
        var t = V(this).attr("title");
        return V("<a>").text(t).html();
      },
      hide: !0,
      items: "[title]:not([disabled])",
      position: {
        my: "left top+15",
        at: "left bottom",
        collision: "flipfit flip",
      },
      show: !0,
      track: !1,
      close: null,
      open: null,
    },
    _addDescribedBy: function (t, e) {
      var i = (t.attr("aria-describedby") || "").split(/\s+/);
      i.push(e),
        t
          .data("ui-tooltip-id", e)
          .attr("aria-describedby", String.prototype.trim.call(i.join(" ")));
    },
    _removeDescribedBy: function (t) {
      var e = t.data("ui-tooltip-id"),
        i = (t.attr("aria-describedby") || "").split(/\s+/),
        e = V.inArray(e, i);
      -1 !== e && i.splice(e, 1),
        t.removeData("ui-tooltip-id"),
        (i = String.prototype.trim.call(i.join(" ")))
          ? t.attr("aria-describedby", i)
          : t.removeAttr("aria-describedby");
    },
    _create: function () {
      this._on({ mouseover: "open", focusin: "open" }),
        (this.tooltips = {}),
        (this.parents = {}),
        (this.liveRegion = V("<div>")
          .attr({
            role: "log",
            "aria-live": "assertive",
            "aria-relevant": "additions",
          })
          .appendTo(this.document[0].body)),
        this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
        (this.disabledTitles = V([]));
    },
    _setOption: function (t, e) {
      var i = this;
      this._super(t, e),
        "content" === t &&
          V.each(this.tooltips, function (t, e) {
            i._updateContent(e.element);
          });
    },
    _setOptionDisabled: function (t) {
      this[t ? "_disable" : "_enable"]();
    },
    _disable: function () {
      var s = this;
      V.each(this.tooltips, function (t, e) {
        var i = V.Event("blur");
        (i.target = i.currentTarget = e.element[0]), s.close(i, !0);
      }),
        (this.disabledTitles = this.disabledTitles.add(
          this.element
            .find(this.options.items)
            .addBack()
            .filter(function () {
              var t = V(this);
              if (t.is("[title]"))
                return t
                  .data("ui-tooltip-title", t.attr("title"))
                  .removeAttr("title");
            })
        ));
    },
    _enable: function () {
      this.disabledTitles.each(function () {
        var t = V(this);
        t.data("ui-tooltip-title") &&
          t.attr("title", t.data("ui-tooltip-title"));
      }),
        (this.disabledTitles = V([]));
    },
    open: function (t) {
      var i = this,
        e = V(t ? t.target : this.element).closest(this.options.items);
      e.length &&
        !e.data("ui-tooltip-id") &&
        (e.attr("title") && e.data("ui-tooltip-title", e.attr("title")),
        e.data("ui-tooltip-open", !0),
        t &&
          "mouseover" === t.type &&
          e.parents().each(function () {
            var t,
              e = V(this);
            e.data("ui-tooltip-open") &&
              (((t = V.Event("blur")).target = t.currentTarget = this),
              i.close(t, !0)),
              e.attr("title") &&
                (e.uniqueId(),
                (i.parents[this.id] = {
                  element: this,
                  title: e.attr("title"),
                }),
                e.attr("title", ""));
          }),
        this._registerCloseHandlers(t, e),
        this._updateContent(e, t));
    },
    _updateContent: function (e, i) {
      var t = this.options.content,
        s = this,
        n = i ? i.type : null;
      if ("string" == typeof t || t.nodeType || t.jquery)
        return this._open(i, e, t);
      (t = t.call(e[0], function (t) {
        s._delay(function () {
          e.data("ui-tooltip-open") && (i && (i.type = n), this._open(i, e, t));
        });
      })) && this._open(i, e, t);
    },
    _open: function (t, e, i) {
      var s,
        n,
        o,
        a = V.extend({}, this.options.position);
      function r(t) {
        (a.of = t), n.is(":hidden") || n.position(a);
      }
      i &&
        ((s = this._find(e))
          ? s.tooltip.find(".ui-tooltip-content").html(i)
          : (e.is("[title]") &&
              (t && "mouseover" === t.type
                ? e.attr("title", "")
                : e.removeAttr("title")),
            (s = this._tooltip(e)),
            (n = s.tooltip),
            this._addDescribedBy(e, n.attr("id")),
            n.find(".ui-tooltip-content").html(i),
            this.liveRegion.children().hide(),
            (i = V("<div>").html(n.find(".ui-tooltip-content").html()))
              .removeAttr("name")
              .find("[name]")
              .removeAttr("name"),
            i.removeAttr("id").find("[id]").removeAttr("id"),
            i.appendTo(this.liveRegion),
            this.options.track && t && /^mouse/.test(t.type)
              ? (this._on(this.document, { mousemove: r }), r(t))
              : n.position(V.extend({ of: e }, this.options.position)),
            n.hide(),
            this._show(n, this.options.show),
            this.options.track &&
              this.options.show &&
              this.options.show.delay &&
              (o = this.delayedShow =
                setInterval(function () {
                  n.is(":visible") && (r(a.of), clearInterval(o));
                }, 13)),
            this._trigger("open", t, { tooltip: n })));
    },
    _registerCloseHandlers: function (t, e) {
      var i = {
        keyup: function (t) {
          t.keyCode === V.ui.keyCode.ESCAPE &&
            (((t = V.Event(t)).currentTarget = e[0]), this.close(t, !0));
        },
      };
      e[0] !== this.element[0] &&
        (i.remove = function () {
          var t = this._find(e);
          t && this._removeTooltip(t.tooltip);
        }),
        (t && "mouseover" !== t.type) || (i.mouseleave = "close"),
        (t && "focusin" !== t.type) || (i.focusout = "close"),
        this._on(!0, e, i);
    },
    close: function (t) {
      var e,
        i = this,
        s = V(t ? t.currentTarget : this.element),
        n = this._find(s);
      n
        ? ((e = n.tooltip),
          n.closing ||
            (clearInterval(this.delayedShow),
            s.data("ui-tooltip-title") &&
              !s.attr("title") &&
              s.attr("title", s.data("ui-tooltip-title")),
            this._removeDescribedBy(s),
            (n.hiding = !0),
            e.stop(!0),
            this._hide(e, this.options.hide, function () {
              i._removeTooltip(V(this));
            }),
            s.removeData("ui-tooltip-open"),
            this._off(s, "mouseleave focusout keyup"),
            s[0] !== this.element[0] && this._off(s, "remove"),
            this._off(this.document, "mousemove"),
            t &&
              "mouseleave" === t.type &&
              V.each(this.parents, function (t, e) {
                V(e.element).attr("title", e.title), delete i.parents[t];
              }),
            (n.closing = !0),
            this._trigger("close", t, { tooltip: e }),
            n.hiding || (n.closing = !1)))
        : s.removeData("ui-tooltip-open");
    },
    _tooltip: function (t) {
      var e = V("<div>").attr("role", "tooltip"),
        i = V("<div>").appendTo(e),
        s = e.uniqueId().attr("id");
      return (
        this._addClass(i, "ui-tooltip-content"),
        this._addClass(e, "ui-tooltip", "ui-widget ui-widget-content"),
        e.appendTo(this._appendTo(t)),
        (this.tooltips[s] = { element: t, tooltip: e })
      );
    },
    _find: function (t) {
      t = t.data("ui-tooltip-id");
      return t ? this.tooltips[t] : null;
    },
    _removeTooltip: function (t) {
      clearInterval(this.delayedShow),
        t.remove(),
        delete this.tooltips[t.attr("id")];
    },
    _appendTo: function (t) {
      t = t.closest(".ui-front, dialog");
      return (t = !t.length ? this.document[0].body : t);
    },
    _destroy: function () {
      var s = this;
      V.each(this.tooltips, function (t, e) {
        var i = V.Event("blur"),
          e = e.element;
        (i.target = i.currentTarget = e[0]),
          s.close(i, !0),
          V("#" + t).remove(),
          e.data("ui-tooltip-title") &&
            (e.attr("title") || e.attr("title", e.data("ui-tooltip-title")),
            e.removeData("ui-tooltip-title"));
      }),
        this.liveRegion.remove();
    },
  }),
    !1 !== V.uiBackCompat &&
      V.widget("ui.tooltip", V.ui.tooltip, {
        options: { tooltipClass: null },
        _tooltip: function () {
          var t = this._superApply(arguments);
          return (
            this.options.tooltipClass &&
              t.tooltip.addClass(this.options.tooltipClass),
            t
          );
        },
      });
  V.ui.tooltip;
});

/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011–2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
!(function (a) {
  function f(a, b) {
    if (!(a.originalEvent.touches.length > 1)) {
      a.preventDefault();
      var c = a.originalEvent.changedTouches[0],
        d = document.createEvent("MouseEvents");
      d.initMouseEvent(
        b,
        !0,
        !0,
        window,
        1,
        c.screenX,
        c.screenY,
        c.clientX,
        c.clientY,
        !1,
        !1,
        !1,
        !1,
        0,
        null
      ),
        a.target.dispatchEvent(d);
    }
  }
  if (((a.support.touch = "ontouchend" in document), a.support.touch)) {
    var e,
      b = a.ui.mouse.prototype,
      c = b._mouseInit,
      d = b._mouseDestroy;
    (b._touchStart = function (a) {
      var b = this;
      !e &&
        b._mouseCapture(a.originalEvent.changedTouches[0]) &&
        ((e = !0),
        (b._touchMoved = !1),
        f(a, "mouseover"),
        f(a, "mousemove"),
        f(a, "mousedown"));
    }),
      (b._touchMove = function (a) {
        e && ((this._touchMoved = !0), f(a, "mousemove"));
      }),
      (b._touchEnd = function (a) {
        e &&
          (f(a, "mouseup"),
          f(a, "mouseout"),
          this._touchMoved || f(a, "click"),
          (e = !1));
      }),
      (b._mouseInit = function () {
        var b = this;
        b.element.bind({
          touchstart: a.proxy(b, "_touchStart"),
          touchmove: a.proxy(b, "_touchMove"),
          touchend: a.proxy(b, "_touchEnd"),
        }),
          c.call(b);
      }),
      (b._mouseDestroy = function () {
        var b = this;
        b.element.unbind({
          touchstart: a.proxy(b, "_touchStart"),
          touchmove: a.proxy(b, "_touchMove"),
          touchend: a.proxy(b, "_touchEnd"),
        }),
          d.call(b);
      });
  }
})(jQuery);



/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!(function (e, t) {
  "use strict";
  "object" == typeof module && "object" == typeof module.exports
    ? (module.exports = e.document
        ? t(e, !0)
        : function (e) {
            if (!e.document)
              throw new Error("jQuery requires a window with a document");
            return t(e);
          })
    : t(e);
})("undefined" != typeof window ? window : this, function (e, t) {
  "use strict";
  var i = [],
    s = Object.getPrototypeOf,
    n = i.slice,
    a = i.flat
      ? function (e) {
          return i.flat.call(e);
        }
      : function (e) {
          return i.concat.apply([], e);
        },
    r = i.push,
    o = i.indexOf,
    l = {},
    c = l.toString,
    h = l.hasOwnProperty,
    d = h.toString,
    u = d.call(Object),
    p = {},
    f = function (e) {
      return (
        "function" == typeof e &&
        "number" != typeof e.nodeType &&
        "function" != typeof e.item
      );
    },
    m = function (e) {
      return null != e && e === e.window;
    },
    g = e.document,
    v = { type: !0, src: !0, nonce: !0, noModule: !0 };
  function b(e, t, i) {
    var s,
      n,
      a = (i = i || g).createElement("script");
    if (((a.text = e), t))
      for (s in v)
        (n = t[s] || (t.getAttribute && t.getAttribute(s))) &&
          a.setAttribute(s, n);
    i.head.appendChild(a).parentNode.removeChild(a);
  }
  function y(e) {
    return null == e
      ? e + ""
      : "object" == typeof e || "function" == typeof e
      ? l[c.call(e)] || "object"
      : typeof e;
  }
  var _ = "3.7.1",
    w = /HTML$/i,
    x = function (e, t) {
      return new x.fn.init(e, t);
    };
  function C(e) {
    var t = !!e && "length" in e && e.length,
      i = y(e);
    return (
      !f(e) &&
      !m(e) &&
      ("array" === i ||
        0 === t ||
        ("number" == typeof t && 0 < t && t - 1 in e))
    );
  }
  function T(e, t) {
    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
  }
  (x.fn = x.prototype =
    {
      jquery: _,
      constructor: x,
      length: 0,
      toArray: function () {
        return n.call(this);
      },
      get: function (e) {
        return null == e
          ? n.call(this)
          : e < 0
          ? this[e + this.length]
          : this[e];
      },
      pushStack: function (e) {
        var t = x.merge(this.constructor(), e);
        return (t.prevObject = this), t;
      },
      each: function (e) {
        return x.each(this, e);
      },
      map: function (e) {
        return this.pushStack(
          x.map(this, function (t, i) {
            return e.call(t, i, t);
          })
        );
      },
      slice: function () {
        return this.pushStack(n.apply(this, arguments));
      },
      first: function () {
        return this.eq(0);
      },
      last: function () {
        return this.eq(-1);
      },
      even: function () {
        return this.pushStack(
          x.grep(this, function (e, t) {
            return (t + 1) % 2;
          })
        );
      },
      odd: function () {
        return this.pushStack(
          x.grep(this, function (e, t) {
            return t % 2;
          })
        );
      },
      eq: function (e) {
        var t = this.length,
          i = +e + (e < 0 ? t : 0);
        return this.pushStack(0 <= i && i < t ? [this[i]] : []);
      },
      end: function () {
        return this.prevObject || this.constructor();
      },
      push: r,
      sort: i.sort,
      splice: i.splice,
    }),
    (x.extend = x.fn.extend =
      function () {
        var e,
          t,
          i,
          s,
          n,
          a,
          r = arguments[0] || {},
          o = 1,
          l = arguments.length,
          c = !1;
        for (
          "boolean" == typeof r && ((c = r), (r = arguments[o] || {}), o++),
            "object" == typeof r || f(r) || (r = {}),
            o === l && ((r = this), o--);
          o < l;
          o++
        )
          if (null != (e = arguments[o]))
            for (t in e)
              (s = e[t]),
                "__proto__" !== t &&
                  r !== s &&
                  (c && s && (x.isPlainObject(s) || (n = Array.isArray(s)))
                    ? ((i = r[t]),
                      (a =
                        n && !Array.isArray(i)
                          ? []
                          : n || x.isPlainObject(i)
                          ? i
                          : {}),
                      (n = !1),
                      (r[t] = x.extend(c, a, s)))
                    : void 0 !== s && (r[t] = s));
        return r;
      }),
    x.extend({
      expando: "jQuery" + (_ + Math.random()).replace(/\D/g, ""),
      isReady: !0,
      error: function (e) {
        throw new Error(e);
      },
      noop: function () {},
      isPlainObject: function (e) {
        var t, i;
        return !(
          !e ||
          "[object Object]" !== c.call(e) ||
          ((t = s(e)) &&
            ("function" !=
              typeof (i = h.call(t, "constructor") && t.constructor) ||
              d.call(i) !== u))
        );
      },
      isEmptyObject: function (e) {
        var t;
        for (t in e) return !1;
        return !0;
      },
      globalEval: function (e, t, i) {
        b(e, { nonce: t && t.nonce }, i);
      },
      each: function (e, t) {
        var i,
          s = 0;
        if (C(e))
          for (i = e.length; s < i && !1 !== t.call(e[s], s, e[s]); s++);
        else for (s in e) if (!1 === t.call(e[s], s, e[s])) break;
        return e;
      },
      text: function (e) {
        var t,
          i = "",
          s = 0,
          n = e.nodeType;
        if (!n) for (; (t = e[s++]); ) i += x.text(t);
        return 1 === n || 11 === n
          ? e.textContent
          : 9 === n
          ? e.documentElement.textContent
          : 3 === n || 4 === n
          ? e.nodeValue
          : i;
      },
      makeArray: function (e, t) {
        var i = t || [];
        return (
          null != e &&
            (C(Object(e))
              ? x.merge(i, "string" == typeof e ? [e] : e)
              : r.call(i, e)),
          i
        );
      },
      inArray: function (e, t, i) {
        return null == t ? -1 : o.call(t, e, i);
      },
      isXMLDoc: function (e) {
        var t = e && e.namespaceURI,
          i = e && (e.ownerDocument || e).documentElement;
        return !w.test(t || (i && i.nodeName) || "HTML");
      },
      merge: function (e, t) {
        for (var i = +t.length, s = 0, n = e.length; s < i; s++) e[n++] = t[s];
        return (e.length = n), e;
      },
      grep: function (e, t, i) {
        for (var s = [], n = 0, a = e.length, r = !i; n < a; n++)
          !t(e[n], n) !== r && s.push(e[n]);
        return s;
      },
      map: function (e, t, i) {
        var s,
          n,
          r = 0,
          o = [];
        if (C(e))
          for (s = e.length; r < s; r++)
            null != (n = t(e[r], r, i)) && o.push(n);
        else for (r in e) null != (n = t(e[r], r, i)) && o.push(n);
        return a(o);
      },
      guid: 1,
      support: p,
    }),
    "function" == typeof Symbol && (x.fn[Symbol.iterator] = i[Symbol.iterator]),
    x.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " "
      ),
      function (e, t) {
        l["[object " + t + "]"] = t.toLowerCase();
      }
    );
  var S = i.pop,
    k = i.sort,
    E = i.splice,
    M = "[\\x20\\t\\r\\n\\f]",
    D = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g");
  x.contains = function (e, t) {
    var i = t && t.parentNode;
    return (
      e === i ||
      !(
        !i ||
        1 !== i.nodeType ||
        !(e.contains
          ? e.contains(i)
          : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i))
      )
    );
  };
  var P = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
  function I(e, t) {
    return t
      ? "\0" === e
        ? "�"
        : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " "
      : "\\" + e;
  }
  x.escapeSelector = function (e) {
    return (e + "").replace(P, I);
  };
  var A = g,
    L = r;
  !(function () {
    var t,
      s,
      a,
      r,
      l,
      c,
      d,
      u,
      f,
      m,
      g = L,
      v = x.expando,
      b = 0,
      y = 0,
      _ = ee(),
      w = ee(),
      C = ee(),
      P = ee(),
      I = function (e, t) {
        return e === t && (l = !0), 0;
      },
      O =
        "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
      z =
        "(?:\\\\[\\da-fA-F]{1,6}" +
        M +
        "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
      H =
        "\\[" +
        M +
        "*(" +
        z +
        ")(?:" +
        M +
        "*([*^$|!~]?=)" +
        M +
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
        z +
        "))|)" +
        M +
        "*\\]",
      N =
        ":(" +
        z +
        ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
        H +
        ")*)|.*)\\)|)",
      $ = new RegExp(M + "+", "g"),
      W = new RegExp("^" + M + "*," + M + "*"),
      R = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
      F = new RegExp(M + "|>"),
      q = new RegExp(N),
      j = new RegExp("^" + z + "$"),
      B = {
        ID: new RegExp("^#(" + z + ")"),
        CLASS: new RegExp("^\\.(" + z + ")"),
        TAG: new RegExp("^(" + z + "|[*])"),
        ATTR: new RegExp("^" + H),
        PSEUDO: new RegExp("^" + N),
        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
            M +
            "*(even|odd|(([+-]|)(\\d*)n|)" +
            M +
            "*(?:([+-]|)" +
            M +
            "*(\\d+)|))" +
            M +
            "*\\)|)",
          "i"
        ),
        bool: new RegExp("^(?:" + O + ")$", "i"),
        needsContext: new RegExp(
          "^" +
            M +
            "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
            M +
            "*((?:-\\d)?\\d*)" +
            M +
            "*\\)|)(?=[^-]|$)",
          "i"
        ),
      },
      Y = /^(?:input|select|textarea|button)$/i,
      V = /^h\d$/i,
      X = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      G = /[+~]/,
      U = new RegExp("\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\([^\\r\\n\\f])", "g"),
      K = function (e, t) {
        var i = "0x" + e.slice(1) - 65536;
        return (
          t ||
          (i < 0
            ? String.fromCharCode(i + 65536)
            : String.fromCharCode((i >> 10) | 55296, (1023 & i) | 56320))
        );
      },
      Q = function () {
        le();
      },
      J = ue(
        function (e) {
          return !0 === e.disabled && T(e, "fieldset");
        },
        { dir: "parentNode", next: "legend" }
      );
    try {
      g.apply((i = n.call(A.childNodes)), A.childNodes),
        i[A.childNodes.length].nodeType;
    } catch (t) {
      g = {
        apply: function (e, t) {
          L.apply(e, n.call(t));
        },
        call: function (e) {
          L.apply(e, n.call(arguments, 1));
        },
      };
    }
    function Z(e, t, i, s) {
      var n,
        a,
        r,
        o,
        l,
        h,
        d,
        m = t && t.ownerDocument,
        b = t ? t.nodeType : 9;
      if (
        ((i = i || []),
        "string" != typeof e || !e || (1 !== b && 9 !== b && 11 !== b))
      )
        return i;
      if (!s && (le(t), (t = t || c), u)) {
        if (11 !== b && (l = X.exec(e)))
          if ((n = l[1])) {
            if (9 === b) {
              if (!(r = t.getElementById(n))) return i;
              if (r.id === n) return g.call(i, r), i;
            } else if (
              m &&
              (r = m.getElementById(n)) &&
              Z.contains(t, r) &&
              r.id === n
            )
              return g.call(i, r), i;
          } else {
            if (l[2]) return g.apply(i, t.getElementsByTagName(e)), i;
            if ((n = l[3]) && t.getElementsByClassName)
              return g.apply(i, t.getElementsByClassName(n)), i;
          }
        if (!(P[e + " "] || (f && f.test(e)))) {
          if (((d = e), (m = t), 1 === b && (F.test(e) || R.test(e)))) {
            for (
              ((m = (G.test(e) && oe(t.parentNode)) || t) == t && p.scope) ||
                ((o = t.getAttribute("id"))
                  ? (o = x.escapeSelector(o))
                  : t.setAttribute("id", (o = v))),
                a = (h = he(e)).length;
              a--;

            )
              h[a] = (o ? "#" + o : ":scope") + " " + de(h[a]);
            d = h.join(",");
          }
          try {
            return g.apply(i, m.querySelectorAll(d)), i;
          } catch (t) {
            P(e, !0);
          } finally {
            o === v && t.removeAttribute("id");
          }
        }
      }
      return be(e.replace(D, "$1"), t, i, s);
    }
    function ee() {
      var e = [];
      return function t(i, n) {
        return (
          e.push(i + " ") > s.cacheLength && delete t[e.shift()],
          (t[i + " "] = n)
        );
      };
    }
    function te(e) {
      return (e[v] = !0), e;
    }
    function ie(e) {
      var t = c.createElement("fieldset");
      try {
        return !!e(t);
      } catch (e) {
        return !1;
      } finally {
        t.parentNode && t.parentNode.removeChild(t), (t = null);
      }
    }
    function se(e) {
      return function (t) {
        return T(t, "input") && t.type === e;
      };
    }
    function ne(e) {
      return function (t) {
        return (T(t, "input") || T(t, "button")) && t.type === e;
      };
    }
    function ae(e) {
      return function (t) {
        return "form" in t
          ? t.parentNode && !1 === t.disabled
            ? "label" in t
              ? "label" in t.parentNode
                ? t.parentNode.disabled === e
                : t.disabled === e
              : t.isDisabled === e || (t.isDisabled !== !e && J(t) === e)
            : t.disabled === e
          : "label" in t && t.disabled === e;
      };
    }
    function re(e) {
      return te(function (t) {
        return (
          (t = +t),
          te(function (i, s) {
            for (var n, a = e([], i.length, t), r = a.length; r--; )
              i[(n = a[r])] && (i[n] = !(s[n] = i[n]));
          })
        );
      });
    }
    function oe(e) {
      return e && void 0 !== e.getElementsByTagName && e;
    }
    function le(e) {
      var t,
        i = e ? e.ownerDocument || e : A;
      return (
        i != c &&
          9 === i.nodeType &&
          i.documentElement &&
          ((d = (c = i).documentElement),
          (u = !x.isXMLDoc(c)),
          (m = d.matches || d.webkitMatchesSelector || d.msMatchesSelector),
          d.msMatchesSelector &&
            A != c &&
            (t = c.defaultView) &&
            t.top !== t &&
            t.addEventListener("unload", Q),
          (p.getById = ie(function (e) {
            return (
              (d.appendChild(e).id = x.expando),
              !c.getElementsByName || !c.getElementsByName(x.expando).length
            );
          })),
          (p.disconnectedMatch = ie(function (e) {
            return m.call(e, "*");
          })),
          (p.scope = ie(function () {
            return c.querySelectorAll(":scope");
          })),
          (p.cssHas = ie(function () {
            try {
              return c.querySelector(":has(*,:jqfake)"), !1;
            } catch (e) {
              return !0;
            }
          })),
          p.getById
            ? ((s.filter.ID = function (e) {
                var t = e.replace(U, K);
                return function (e) {
                  return e.getAttribute("id") === t;
                };
              }),
              (s.find.ID = function (e, t) {
                if (void 0 !== t.getElementById && u) {
                  var i = t.getElementById(e);
                  return i ? [i] : [];
                }
              }))
            : ((s.filter.ID = function (e) {
                var t = e.replace(U, K);
                return function (e) {
                  var i =
                    void 0 !== e.getAttributeNode && e.getAttributeNode("id");
                  return i && i.value === t;
                };
              }),
              (s.find.ID = function (e, t) {
                if (void 0 !== t.getElementById && u) {
                  var i,
                    s,
                    n,
                    a = t.getElementById(e);
                  if (a) {
                    if ((i = a.getAttributeNode("id")) && i.value === e)
                      return [a];
                    for (n = t.getElementsByName(e), s = 0; (a = n[s++]); )
                      if ((i = a.getAttributeNode("id")) && i.value === e)
                        return [a];
                  }
                  return [];
                }
              })),
          (s.find.TAG = function (e, t) {
            return void 0 !== t.getElementsByTagName
              ? t.getElementsByTagName(e)
              : t.querySelectorAll(e);
          }),
          (s.find.CLASS = function (e, t) {
            if (void 0 !== t.getElementsByClassName && u)
              return t.getElementsByClassName(e);
          }),
          (f = []),
          ie(function (e) {
            var t;
            (d.appendChild(e).innerHTML =
              "<a id='" +
              v +
              "' href='' disabled='disabled'></a><select id='" +
              v +
              "-\r\\' disabled='disabled'><option selected=''></option></select>"),
              e.querySelectorAll("[selected]").length ||
                f.push("\\[" + M + "*(?:value|" + O + ")"),
              e.querySelectorAll("[id~=" + v + "-]").length || f.push("~="),
              e.querySelectorAll("a#" + v + "+*").length || f.push(".#.+[+~]"),
              e.querySelectorAll(":checked").length || f.push(":checked"),
              (t = c.createElement("input")).setAttribute("type", "hidden"),
              e.appendChild(t).setAttribute("name", "D"),
              (d.appendChild(e).disabled = !0),
              2 !== e.querySelectorAll(":disabled").length &&
                f.push(":enabled", ":disabled"),
              (t = c.createElement("input")).setAttribute("name", ""),
              e.appendChild(t),
              e.querySelectorAll("[name='']").length ||
                f.push("\\[" + M + "*name" + M + "*=" + M + "*(?:''|\"\")");
          }),
          p.cssHas || f.push(":has"),
          (f = f.length && new RegExp(f.join("|"))),
          (I = function (e, t) {
            if (e === t) return (l = !0), 0;
            var i = !e.compareDocumentPosition - !t.compareDocumentPosition;
            return (
              i ||
              (1 &
                (i =
                  (e.ownerDocument || e) == (t.ownerDocument || t)
                    ? e.compareDocumentPosition(t)
                    : 1) ||
              (!p.sortDetached && t.compareDocumentPosition(e) === i)
                ? e === c || (e.ownerDocument == A && Z.contains(A, e))
                  ? -1
                  : t === c || (t.ownerDocument == A && Z.contains(A, t))
                  ? 1
                  : r
                  ? o.call(r, e) - o.call(r, t)
                  : 0
                : 4 & i
                ? -1
                : 1)
            );
          })),
        c
      );
    }
    for (t in ((Z.matches = function (e, t) {
      return Z(e, null, null, t);
    }),
    (Z.matchesSelector = function (e, t) {
      if ((le(e), u && !P[t + " "] && (!f || !f.test(t))))
        try {
          var i = m.call(e, t);
          if (
            i ||
            p.disconnectedMatch ||
            (e.document && 11 !== e.document.nodeType)
          )
            return i;
        } catch (e) {
          P(t, !0);
        }
      return 0 < Z(t, c, null, [e]).length;
    }),
    (Z.contains = function (e, t) {
      return (e.ownerDocument || e) != c && le(e), x.contains(e, t);
    }),
    (Z.attr = function (e, t) {
      (e.ownerDocument || e) != c && le(e);
      var i = s.attrHandle[t.toLowerCase()],
        n = i && h.call(s.attrHandle, t.toLowerCase()) ? i(e, t, !u) : void 0;
      return void 0 !== n ? n : e.getAttribute(t);
    }),
    (Z.error = function (e) {
      throw new Error("Syntax error, unrecognized expression: " + e);
    }),
    (x.uniqueSort = function (e) {
      var t,
        i = [],
        s = 0,
        a = 0;
      if (
        ((l = !p.sortStable),
        (r = !p.sortStable && n.call(e, 0)),
        k.call(e, I),
        l)
      ) {
        for (; (t = e[a++]); ) t === e[a] && (s = i.push(a));
        for (; s--; ) E.call(e, i[s], 1);
      }
      return (r = null), e;
    }),
    (x.fn.uniqueSort = function () {
      return this.pushStack(x.uniqueSort(n.apply(this)));
    }),
    ((s = x.expr =
      {
        cacheLength: 50,
        createPseudo: te,
        match: B,
        attrHandle: {},
        find: {},
        relative: {
          ">": { dir: "parentNode", first: !0 },
          " ": { dir: "parentNode" },
          "+": { dir: "previousSibling", first: !0 },
          "~": { dir: "previousSibling" },
        },
        preFilter: {
          ATTR: function (e) {
            return (
              (e[1] = e[1].replace(U, K)),
              (e[3] = (e[3] || e[4] || e[5] || "").replace(U, K)),
              "~=" === e[2] && (e[3] = " " + e[3] + " "),
              e.slice(0, 4)
            );
          },
          CHILD: function (e) {
            return (
              (e[1] = e[1].toLowerCase()),
              "nth" === e[1].slice(0, 3)
                ? (e[3] || Z.error(e[0]),
                  (e[4] = +(e[4]
                    ? e[5] + (e[6] || 1)
                    : 2 * ("even" === e[3] || "odd" === e[3]))),
                  (e[5] = +(e[7] + e[8] || "odd" === e[3])))
                : e[3] && Z.error(e[0]),
              e
            );
          },
          PSEUDO: function (e) {
            var t,
              i = !e[6] && e[2];
            return B.CHILD.test(e[0])
              ? null
              : (e[3]
                  ? (e[2] = e[4] || e[5] || "")
                  : i &&
                    q.test(i) &&
                    (t = he(i, !0)) &&
                    (t = i.indexOf(")", i.length - t) - i.length) &&
                    ((e[0] = e[0].slice(0, t)), (e[2] = i.slice(0, t))),
                e.slice(0, 3));
          },
        },
        filter: {
          TAG: function (e) {
            var t = e.replace(U, K).toLowerCase();
            return "*" === e
              ? function () {
                  return !0;
                }
              : function (e) {
                  return T(e, t);
                };
          },
          CLASS: function (e) {
            var t = _[e + " "];
            return (
              t ||
              ((t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) &&
                _(e, function (e) {
                  return t.test(
                    ("string" == typeof e.className && e.className) ||
                      (void 0 !== e.getAttribute && e.getAttribute("class")) ||
                      ""
                  );
                }))
            );
          },
          ATTR: function (e, t, i) {
            return function (s) {
              var n = Z.attr(s, e);
              return null == n
                ? "!=" === t
                : !t ||
                    ((n += ""),
                    "=" === t
                      ? n === i
                      : "!=" === t
                      ? n !== i
                      : "^=" === t
                      ? i && 0 === n.indexOf(i)
                      : "*=" === t
                      ? i && -1 < n.indexOf(i)
                      : "$=" === t
                      ? i && n.slice(-i.length) === i
                      : "~=" === t
                      ? -1 < (" " + n.replace($, " ") + " ").indexOf(i)
                      : "|=" === t &&
                        (n === i || n.slice(0, i.length + 1) === i + "-"));
            };
          },
          CHILD: function (e, t, i, s, n) {
            var a = "nth" !== e.slice(0, 3),
              r = "last" !== e.slice(-4),
              o = "of-type" === t;
            return 1 === s && 0 === n
              ? function (e) {
                  return !!e.parentNode;
                }
              : function (t, i, l) {
                  var c,
                    h,
                    d,
                    u,
                    p,
                    f = a !== r ? "nextSibling" : "previousSibling",
                    m = t.parentNode,
                    g = o && t.nodeName.toLowerCase(),
                    y = !l && !o,
                    _ = !1;
                  if (m) {
                    if (a) {
                      for (; f; ) {
                        for (d = t; (d = d[f]); )
                          if (o ? T(d, g) : 1 === d.nodeType) return !1;
                        p = f = "only" === e && !p && "nextSibling";
                      }
                      return !0;
                    }
                    if (((p = [r ? m.firstChild : m.lastChild]), r && y)) {
                      for (
                        _ =
                          (u =
                            (c = (h = m[v] || (m[v] = {}))[e] || [])[0] === b &&
                            c[1]) && c[2],
                          d = u && m.childNodes[u];
                        (d = (++u && d && d[f]) || (_ = u = 0) || p.pop());

                      )
                        if (1 === d.nodeType && ++_ && d === t) {
                          h[e] = [b, u, _];
                          break;
                        }
                    } else if (
                      (y &&
                        (_ = u =
                          (c = (h = t[v] || (t[v] = {}))[e] || [])[0] === b &&
                          c[1]),
                      !1 === _)
                    )
                      for (
                        ;
                        (d = (++u && d && d[f]) || (_ = u = 0) || p.pop()) &&
                        (!(o ? T(d, g) : 1 === d.nodeType) ||
                          !++_ ||
                          (y && ((h = d[v] || (d[v] = {}))[e] = [b, _]),
                          d !== t));

                      );
                    return (_ -= n) === s || (_ % s == 0 && 0 <= _ / s);
                  }
                };
          },
          PSEUDO: function (e, t) {
            var i,
              n =
                s.pseudos[e] ||
                s.setFilters[e.toLowerCase()] ||
                Z.error("unsupported pseudo: " + e);
            return n[v]
              ? n(t)
              : 1 < n.length
              ? ((i = [e, e, "", t]),
                s.setFilters.hasOwnProperty(e.toLowerCase())
                  ? te(function (e, i) {
                      for (var s, a = n(e, t), r = a.length; r--; )
                        e[(s = o.call(e, a[r]))] = !(i[s] = a[r]);
                    })
                  : function (e) {
                      return n(e, 0, i);
                    })
              : n;
          },
        },
        pseudos: {
          not: te(function (e) {
            var t = [],
              i = [],
              s = ve(e.replace(D, "$1"));
            return s[v]
              ? te(function (e, t, i, n) {
                  for (var a, r = s(e, null, n, []), o = e.length; o--; )
                    (a = r[o]) && (e[o] = !(t[o] = a));
                })
              : function (e, n, a) {
                  return (t[0] = e), s(t, null, a, i), (t[0] = null), !i.pop();
                };
          }),
          has: te(function (e) {
            return function (t) {
              return 0 < Z(e, t).length;
            };
          }),
          contains: te(function (e) {
            return (
              (e = e.replace(U, K)),
              function (t) {
                return -1 < (t.textContent || x.text(t)).indexOf(e);
              }
            );
          }),
          lang: te(function (e) {
            return (
              j.test(e || "") || Z.error("unsupported lang: " + e),
              (e = e.replace(U, K).toLowerCase()),
              function (t) {
                var i;
                do {
                  if (
                    (i = u
                      ? t.lang
                      : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                  )
                    return (
                      (i = i.toLowerCase()) === e || 0 === i.indexOf(e + "-")
                    );
                } while ((t = t.parentNode) && 1 === t.nodeType);
                return !1;
              }
            );
          }),
          target: function (t) {
            var i = e.location && e.location.hash;
            return i && i.slice(1) === t.id;
          },
          root: function (e) {
            return e === d;
          },
          focus: function (e) {
            return (
              e ===
                (function () {
                  try {
                    return c.activeElement;
                  } catch (e) {}
                })() &&
              c.hasFocus() &&
              !!(e.type || e.href || ~e.tabIndex)
            );
          },
          enabled: ae(!1),
          disabled: ae(!0),
          checked: function (e) {
            return (
              (T(e, "input") && !!e.checked) || (T(e, "option") && !!e.selected)
            );
          },
          selected: function (e) {
            return (
              e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
            );
          },
          empty: function (e) {
            for (e = e.firstChild; e; e = e.nextSibling)
              if (e.nodeType < 6) return !1;
            return !0;
          },
          parent: function (e) {
            return !s.pseudos.empty(e);
          },
          header: function (e) {
            return V.test(e.nodeName);
          },
          input: function (e) {
            return Y.test(e.nodeName);
          },
          button: function (e) {
            return (T(e, "input") && "button" === e.type) || T(e, "button");
          },
          text: function (e) {
            var t;
            return (
              T(e, "input") &&
              "text" === e.type &&
              (null == (t = e.getAttribute("type")) ||
                "text" === t.toLowerCase())
            );
          },
          first: re(function () {
            return [0];
          }),
          last: re(function (e, t) {
            return [t - 1];
          }),
          eq: re(function (e, t, i) {
            return [i < 0 ? i + t : i];
          }),
          even: re(function (e, t) {
            for (var i = 0; i < t; i += 2) e.push(i);
            return e;
          }),
          odd: re(function (e, t) {
            for (var i = 1; i < t; i += 2) e.push(i);
            return e;
          }),
          lt: re(function (e, t, i) {
            var s;
            for (s = i < 0 ? i + t : t < i ? t : i; 0 <= --s; ) e.push(s);
            return e;
          }),
          gt: re(function (e, t, i) {
            for (var s = i < 0 ? i + t : i; ++s < t; ) e.push(s);
            return e;
          }),
        },
      }).pseudos.nth = s.pseudos.eq),
    { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
      s.pseudos[t] = se(t);
    for (t in { submit: !0, reset: !0 }) s.pseudos[t] = ne(t);
    function ce() {}
    function he(e, t) {
      var i,
        n,
        a,
        r,
        o,
        l,
        c,
        h = w[e + " "];
      if (h) return t ? 0 : h.slice(0);
      for (o = e, l = [], c = s.preFilter; o; ) {
        for (r in ((i && !(n = W.exec(o))) ||
          (n && (o = o.slice(n[0].length) || o), l.push((a = []))),
        (i = !1),
        (n = R.exec(o)) &&
          ((i = n.shift()),
          a.push({ value: i, type: n[0].replace(D, " ") }),
          (o = o.slice(i.length))),
        s.filter))
          !(n = B[r].exec(o)) ||
            (c[r] && !(n = c[r](n))) ||
            ((i = n.shift()),
            a.push({ value: i, type: r, matches: n }),
            (o = o.slice(i.length)));
        if (!i) break;
      }
      return t ? o.length : o ? Z.error(e) : w(e, l).slice(0);
    }
    function de(e) {
      for (var t = 0, i = e.length, s = ""; t < i; t++) s += e[t].value;
      return s;
    }
    function ue(e, t, i) {
      var s = t.dir,
        n = t.next,
        a = n || s,
        r = i && "parentNode" === a,
        o = y++;
      return t.first
        ? function (t, i, n) {
            for (; (t = t[s]); ) if (1 === t.nodeType || r) return e(t, i, n);
            return !1;
          }
        : function (t, i, l) {
            var c,
              h,
              d = [b, o];
            if (l) {
              for (; (t = t[s]); )
                if ((1 === t.nodeType || r) && e(t, i, l)) return !0;
            } else
              for (; (t = t[s]); )
                if (1 === t.nodeType || r)
                  if (((h = t[v] || (t[v] = {})), n && T(t, n))) t = t[s] || t;
                  else {
                    if ((c = h[a]) && c[0] === b && c[1] === o)
                      return (d[2] = c[2]);
                    if (((h[a] = d)[2] = e(t, i, l))) return !0;
                  }
            return !1;
          };
    }
    function pe(e) {
      return 1 < e.length
        ? function (t, i, s) {
            for (var n = e.length; n--; ) if (!e[n](t, i, s)) return !1;
            return !0;
          }
        : e[0];
    }
    function fe(e, t, i, s, n) {
      for (var a, r = [], o = 0, l = e.length, c = null != t; o < l; o++)
        (a = e[o]) && ((i && !i(a, s, n)) || (r.push(a), c && t.push(o)));
      return r;
    }
    function me(e, t, i, s, n, a) {
      return (
        s && !s[v] && (s = me(s)),
        n && !n[v] && (n = me(n, a)),
        te(function (a, r, l, c) {
          var h,
            d,
            u,
            p,
            f = [],
            m = [],
            v = r.length,
            b =
              a ||
              (function (e, t, i) {
                for (var s = 0, n = t.length; s < n; s++) Z(e, t[s], i);
                return i;
              })(t || "*", l.nodeType ? [l] : l, []),
            y = !e || (!a && t) ? b : fe(b, f, e, l, c);
          if (
            (i ? i(y, (p = n || (a ? e : v || s) ? [] : r), l, c) : (p = y), s)
          )
            for (h = fe(p, m), s(h, [], l, c), d = h.length; d--; )
              (u = h[d]) && (p[m[d]] = !(y[m[d]] = u));
          if (a) {
            if (n || e) {
              if (n) {
                for (h = [], d = p.length; d--; )
                  (u = p[d]) && h.push((y[d] = u));
                n(null, (p = []), h, c);
              }
              for (d = p.length; d--; )
                (u = p[d]) &&
                  -1 < (h = n ? o.call(a, u) : f[d]) &&
                  (a[h] = !(r[h] = u));
            }
          } else (p = fe(p === r ? p.splice(v, p.length) : p)), n ? n(null, r, p, c) : g.apply(r, p);
        })
      );
    }
    function ge(e) {
      for (
        var t,
          i,
          n,
          r = e.length,
          l = s.relative[e[0].type],
          c = l || s.relative[" "],
          h = l ? 1 : 0,
          d = ue(
            function (e) {
              return e === t;
            },
            c,
            !0
          ),
          u = ue(
            function (e) {
              return -1 < o.call(t, e);
            },
            c,
            !0
          ),
          p = [
            function (e, i, s) {
              var n =
                (!l && (s || i != a)) ||
                ((t = i).nodeType ? d(e, i, s) : u(e, i, s));
              return (t = null), n;
            },
          ];
        h < r;
        h++
      )
        if ((i = s.relative[e[h].type])) p = [ue(pe(p), i)];
        else {
          if ((i = s.filter[e[h].type].apply(null, e[h].matches))[v]) {
            for (n = ++h; n < r && !s.relative[e[n].type]; n++);
            return me(
              1 < h && pe(p),
              1 < h &&
                de(
                  e
                    .slice(0, h - 1)
                    .concat({ value: " " === e[h - 2].type ? "*" : "" })
                ).replace(D, "$1"),
              i,
              h < n && ge(e.slice(h, n)),
              n < r && ge((e = e.slice(n))),
              n < r && de(e)
            );
          }
          p.push(i);
        }
      return pe(p);
    }
    function ve(e, t) {
      var i,
        n,
        r,
        o,
        l,
        h,
        d = [],
        p = [],
        f = C[e + " "];
      if (!f) {
        for (t || (t = he(e)), i = t.length; i--; )
          (f = ge(t[i]))[v] ? d.push(f) : p.push(f);
        (f = C(
          e,
          ((n = p),
          (o = 0 < (r = d).length),
          (l = 0 < n.length),
          (h = function (e, t, i, h, d) {
            var p,
              f,
              m,
              v = 0,
              y = "0",
              _ = e && [],
              w = [],
              C = a,
              T = e || (l && s.find.TAG("*", d)),
              k = (b += null == C ? 1 : Math.random() || 0.1),
              E = T.length;
            for (
              d && (a = t == c || t || d);
              y !== E && null != (p = T[y]);
              y++
            ) {
              if (l && p) {
                for (
                  f = 0, t || p.ownerDocument == c || (le(p), (i = !u));
                  (m = n[f++]);

                )
                  if (m(p, t || c, i)) {
                    g.call(h, p);
                    break;
                  }
                d && (b = k);
              }
              o && ((p = !m && p) && v--, e && _.push(p));
            }
            if (((v += y), o && y !== v)) {
              for (f = 0; (m = r[f++]); ) m(_, w, t, i);
              if (e) {
                if (0 < v) for (; y--; ) _[y] || w[y] || (w[y] = S.call(h));
                w = fe(w);
              }
              g.apply(h, w),
                d && !e && 0 < w.length && 1 < v + r.length && x.uniqueSort(h);
            }
            return d && ((b = k), (a = C)), _;
          }),
          o ? te(h) : h)
        )).selector = e;
      }
      return f;
    }
    function be(e, t, i, n) {
      var a,
        r,
        o,
        l,
        c,
        h = "function" == typeof e && e,
        d = !n && he((e = h.selector || e));
      if (((i = i || []), 1 === d.length)) {
        if (
          2 < (r = d[0] = d[0].slice(0)).length &&
          "ID" === (o = r[0]).type &&
          9 === t.nodeType &&
          u &&
          s.relative[r[1].type]
        ) {
          if (!(t = (s.find.ID(o.matches[0].replace(U, K), t) || [])[0]))
            return i;
          h && (t = t.parentNode), (e = e.slice(r.shift().value.length));
        }
        for (
          a = B.needsContext.test(e) ? 0 : r.length;
          a-- && ((o = r[a]), !s.relative[(l = o.type)]);

        )
          if (
            (c = s.find[l]) &&
            (n = c(
              o.matches[0].replace(U, K),
              (G.test(r[0].type) && oe(t.parentNode)) || t
            ))
          ) {
            if ((r.splice(a, 1), !(e = n.length && de(r))))
              return g.apply(i, n), i;
            break;
          }
      }
      return (
        (h || ve(e, d))(
          n,
          t,
          !u,
          i,
          !t || (G.test(e) && oe(t.parentNode)) || t
        ),
        i
      );
    }
    (ce.prototype = s.filters = s.pseudos),
      (s.setFilters = new ce()),
      (p.sortStable = v.split("").sort(I).join("") === v),
      le(),
      (p.sortDetached = ie(function (e) {
        return 1 & e.compareDocumentPosition(c.createElement("fieldset"));
      })),
      (x.find = Z),
      (x.expr[":"] = x.expr.pseudos),
      (x.unique = x.uniqueSort),
      (Z.compile = ve),
      (Z.select = be),
      (Z.setDocument = le),
      (Z.tokenize = he),
      (Z.escape = x.escapeSelector),
      (Z.getText = x.text),
      (Z.isXML = x.isXMLDoc),
      (Z.selectors = x.expr),
      (Z.support = x.support),
      (Z.uniqueSort = x.uniqueSort);
  })();
  var O = function (e, t, i) {
      for (var s = [], n = void 0 !== i; (e = e[t]) && 9 !== e.nodeType; )
        if (1 === e.nodeType) {
          if (n && x(e).is(i)) break;
          s.push(e);
        }
      return s;
    },
    z = function (e, t) {
      for (var i = []; e; e = e.nextSibling)
        1 === e.nodeType && e !== t && i.push(e);
      return i;
    },
    H = x.expr.match.needsContext,
    N = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
  function $(e, t, i) {
    return f(t)
      ? x.grep(e, function (e, s) {
          return !!t.call(e, s, e) !== i;
        })
      : t.nodeType
      ? x.grep(e, function (e) {
          return (e === t) !== i;
        })
      : "string" != typeof t
      ? x.grep(e, function (e) {
          return -1 < o.call(t, e) !== i;
        })
      : x.filter(t, e, i);
  }
  (x.filter = function (e, t, i) {
    var s = t[0];
    return (
      i && (e = ":not(" + e + ")"),
      1 === t.length && 1 === s.nodeType
        ? x.find.matchesSelector(s, e)
          ? [s]
          : []
        : x.find.matches(
            e,
            x.grep(t, function (e) {
              return 1 === e.nodeType;
            })
          )
    );
  }),
    x.fn.extend({
      find: function (e) {
        var t,
          i,
          s = this.length,
          n = this;
        if ("string" != typeof e)
          return this.pushStack(
            x(e).filter(function () {
              for (t = 0; t < s; t++) if (x.contains(n[t], this)) return !0;
            })
          );
        for (i = this.pushStack([]), t = 0; t < s; t++) x.find(e, n[t], i);
        return 1 < s ? x.uniqueSort(i) : i;
      },
      filter: function (e) {
        return this.pushStack($(this, e || [], !1));
      },
      not: function (e) {
        return this.pushStack($(this, e || [], !0));
      },
      is: function (e) {
        return !!$(this, "string" == typeof e && H.test(e) ? x(e) : e || [], !1)
          .length;
      },
    });
  var W,
    R = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
  ((x.fn.init = function (e, t, i) {
    var s, n;
    if (!e) return this;
    if (((i = i || W), "string" == typeof e)) {
      if (
        !(s =
          "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length
            ? [null, e, null]
            : R.exec(e)) ||
        (!s[1] && t)
      )
        return !t || t.jquery ? (t || i).find(e) : this.constructor(t).find(e);
      if (s[1]) {
        if (
          ((t = t instanceof x ? t[0] : t),
          x.merge(
            this,
            x.parseHTML(s[1], t && t.nodeType ? t.ownerDocument || t : g, !0)
          ),
          N.test(s[1]) && x.isPlainObject(t))
        )
          for (s in t) f(this[s]) ? this[s](t[s]) : this.attr(s, t[s]);
        return this;
      }
      return (
        (n = g.getElementById(s[2])) && ((this[0] = n), (this.length = 1)), this
      );
    }
    return e.nodeType
      ? ((this[0] = e), (this.length = 1), this)
      : f(e)
      ? void 0 !== i.ready
        ? i.ready(e)
        : e(x)
      : x.makeArray(e, this);
  }).prototype = x.fn),
    (W = x(g));
  var F = /^(?:parents|prev(?:Until|All))/,
    q = { children: !0, contents: !0, next: !0, prev: !0 };
  function j(e, t) {
    for (; (e = e[t]) && 1 !== e.nodeType; );
    return e;
  }
  x.fn.extend({
    has: function (e) {
      var t = x(e, this),
        i = t.length;
      return this.filter(function () {
        for (var e = 0; e < i; e++) if (x.contains(this, t[e])) return !0;
      });
    },
    closest: function (e, t) {
      var i,
        s = 0,
        n = this.length,
        a = [],
        r = "string" != typeof e && x(e);
      if (!H.test(e))
        for (; s < n; s++)
          for (i = this[s]; i && i !== t; i = i.parentNode)
            if (
              i.nodeType < 11 &&
              (r
                ? -1 < r.index(i)
                : 1 === i.nodeType && x.find.matchesSelector(i, e))
            ) {
              a.push(i);
              break;
            }
      return this.pushStack(1 < a.length ? x.uniqueSort(a) : a);
    },
    index: function (e) {
      return e
        ? "string" == typeof e
          ? o.call(x(e), this[0])
          : o.call(this, e.jquery ? e[0] : e)
        : this[0] && this[0].parentNode
        ? this.first().prevAll().length
        : -1;
    },
    add: function (e, t) {
      return this.pushStack(x.uniqueSort(x.merge(this.get(), x(e, t))));
    },
    addBack: function (e) {
      return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
    },
  }),
    x.each(
      {
        parent: function (e) {
          var t = e.parentNode;
          return t && 11 !== t.nodeType ? t : null;
        },
        parents: function (e) {
          return O(e, "parentNode");
        },
        parentsUntil: function (e, t, i) {
          return O(e, "parentNode", i);
        },
        next: function (e) {
          return j(e, "nextSibling");
        },
        prev: function (e) {
          return j(e, "previousSibling");
        },
        nextAll: function (e) {
          return O(e, "nextSibling");
        },
        prevAll: function (e) {
          return O(e, "previousSibling");
        },
        nextUntil: function (e, t, i) {
          return O(e, "nextSibling", i);
        },
        prevUntil: function (e, t, i) {
          return O(e, "previousSibling", i);
        },
        siblings: function (e) {
          return z((e.parentNode || {}).firstChild, e);
        },
        children: function (e) {
          return z(e.firstChild);
        },
        contents: function (e) {
          return null != e.contentDocument && s(e.contentDocument)
            ? e.contentDocument
            : (T(e, "template") && (e = e.content || e),
              x.merge([], e.childNodes));
        },
      },
      function (e, t) {
        x.fn[e] = function (i, s) {
          var n = x.map(this, t, i);
          return (
            "Until" !== e.slice(-5) && (s = i),
            s && "string" == typeof s && (n = x.filter(s, n)),
            1 < this.length &&
              (q[e] || x.uniqueSort(n), F.test(e) && n.reverse()),
            this.pushStack(n)
          );
        };
      }
    );
  var B = /[^\x20\t\r\n\f]+/g;
  function Y(e) {
    return e;
  }
  function V(e) {
    throw e;
  }
  function X(e, t, i, s) {
    var n;
    try {
      e && f((n = e.promise))
        ? n.call(e).done(t).fail(i)
        : e && f((n = e.then))
        ? n.call(e, t, i)
        : t.apply(void 0, [e].slice(s));
    } catch (e) {
      i.apply(void 0, [e]);
    }
  }
  (x.Callbacks = function (e) {
    var t, i;
    e =
      "string" == typeof e
        ? ((t = e),
          (i = {}),
          x.each(t.match(B) || [], function (e, t) {
            i[t] = !0;
          }),
          i)
        : x.extend({}, e);
    var s,
      n,
      a,
      r,
      o = [],
      l = [],
      c = -1,
      h = function () {
        for (r = r || e.once, a = s = !0; l.length; c = -1)
          for (n = l.shift(); ++c < o.length; )
            !1 === o[c].apply(n[0], n[1]) &&
              e.stopOnFalse &&
              ((c = o.length), (n = !1));
        e.memory || (n = !1), (s = !1), r && (o = n ? [] : "");
      },
      d = {
        add: function () {
          return (
            o &&
              (n && !s && ((c = o.length - 1), l.push(n)),
              (function t(i) {
                x.each(i, function (i, s) {
                  f(s)
                    ? (e.unique && d.has(s)) || o.push(s)
                    : s && s.length && "string" !== y(s) && t(s);
                });
              })(arguments),
              n && !s && h()),
            this
          );
        },
        remove: function () {
          return (
            x.each(arguments, function (e, t) {
              for (var i; -1 < (i = x.inArray(t, o, i)); )
                o.splice(i, 1), i <= c && c--;
            }),
            this
          );
        },
        has: function (e) {
          return e ? -1 < x.inArray(e, o) : 0 < o.length;
        },
        empty: function () {
          return o && (o = []), this;
        },
        disable: function () {
          return (r = l = []), (o = n = ""), this;
        },
        disabled: function () {
          return !o;
        },
        lock: function () {
          return (r = l = []), n || s || (o = n = ""), this;
        },
        locked: function () {
          return !!r;
        },
        fireWith: function (e, t) {
          return (
            r ||
              ((t = [e, (t = t || []).slice ? t.slice() : t]),
              l.push(t),
              s || h()),
            this
          );
        },
        fire: function () {
          return d.fireWith(this, arguments), this;
        },
        fired: function () {
          return !!a;
        },
      };
    return d;
  }),
    x.extend({
      Deferred: function (t) {
        var i = [
            [
              "notify",
              "progress",
              x.Callbacks("memory"),
              x.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              x.Callbacks("once memory"),
              x.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              x.Callbacks("once memory"),
              x.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          s = "pending",
          n = {
            state: function () {
              return s;
            },
            always: function () {
              return a.done(arguments).fail(arguments), this;
            },
            catch: function (e) {
              return n.then(null, e);
            },
            pipe: function () {
              var e = arguments;
              return x
                .Deferred(function (t) {
                  x.each(i, function (i, s) {
                    var n = f(e[s[4]]) && e[s[4]];
                    a[s[1]](function () {
                      var e = n && n.apply(this, arguments);
                      e && f(e.promise)
                        ? e
                            .promise()
                            .progress(t.notify)
                            .done(t.resolve)
                            .fail(t.reject)
                        : t[s[0] + "With"](this, n ? [e] : arguments);
                    });
                  }),
                    (e = null);
                })
                .promise();
            },
            then: function (t, s, n) {
              var a = 0;
              function r(t, i, s, n) {
                return function () {
                  var o = this,
                    l = arguments,
                    c = function () {
                      var e, c;
                      if (!(t < a)) {
                        if ((e = s.apply(o, l)) === i.promise())
                          throw new TypeError("Thenable self-resolution");
                        (c =
                          e &&
                          ("object" == typeof e || "function" == typeof e) &&
                          e.then),
                          f(c)
                            ? n
                              ? c.call(e, r(a, i, Y, n), r(a, i, V, n))
                              : (a++,
                                c.call(
                                  e,
                                  r(a, i, Y, n),
                                  r(a, i, V, n),
                                  r(a, i, Y, i.notifyWith)
                                ))
                            : (s !== Y && ((o = void 0), (l = [e])),
                              (n || i.resolveWith)(o, l));
                      }
                    },
                    h = n
                      ? c
                      : function () {
                          try {
                            c();
                          } catch (e) {
                            x.Deferred.exceptionHook &&
                              x.Deferred.exceptionHook(e, h.error),
                              a <= t + 1 &&
                                (s !== V && ((o = void 0), (l = [e])),
                                i.rejectWith(o, l));
                          }
                        };
                  t
                    ? h()
                    : (x.Deferred.getErrorHook
                        ? (h.error = x.Deferred.getErrorHook())
                        : x.Deferred.getStackHook &&
                          (h.error = x.Deferred.getStackHook()),
                      e.setTimeout(h));
                };
              }
              return x
                .Deferred(function (e) {
                  i[0][3].add(r(0, e, f(n) ? n : Y, e.notifyWith)),
                    i[1][3].add(r(0, e, f(t) ? t : Y)),
                    i[2][3].add(r(0, e, f(s) ? s : V));
                })
                .promise();
            },
            promise: function (e) {
              return null != e ? x.extend(e, n) : n;
            },
          },
          a = {};
        return (
          x.each(i, function (e, t) {
            var r = t[2],
              o = t[5];
            (n[t[1]] = r.add),
              o &&
                r.add(
                  function () {
                    s = o;
                  },
                  i[3 - e][2].disable,
                  i[3 - e][3].disable,
                  i[0][2].lock,
                  i[0][3].lock
                ),
              r.add(t[3].fire),
              (a[t[0]] = function () {
                return (
                  a[t[0] + "With"](this === a ? void 0 : this, arguments), this
                );
              }),
              (a[t[0] + "With"] = r.fireWith);
          }),
          n.promise(a),
          t && t.call(a, a),
          a
        );
      },
      when: function (e) {
        var t = arguments.length,
          i = t,
          s = Array(i),
          a = n.call(arguments),
          r = x.Deferred(),
          o = function (e) {
            return function (i) {
              (s[e] = this),
                (a[e] = 1 < arguments.length ? n.call(arguments) : i),
                --t || r.resolveWith(s, a);
            };
          };
        if (
          t <= 1 &&
          (X(e, r.done(o(i)).resolve, r.reject, !t),
          "pending" === r.state() || f(a[i] && a[i].then))
        )
          return r.then();
        for (; i--; ) X(a[i], o(i), r.reject);
        return r.promise();
      },
    });
  var G = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  (x.Deferred.exceptionHook = function (t, i) {
    e.console &&
      e.console.warn &&
      t &&
      G.test(t.name) &&
      e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, i);
  }),
    (x.readyException = function (t) {
      e.setTimeout(function () {
        throw t;
      });
    });
  var U = x.Deferred();
  function K() {
    g.removeEventListener("DOMContentLoaded", K),
      e.removeEventListener("load", K),
      x.ready();
  }
  (x.fn.ready = function (e) {
    return (
      U.then(e).catch(function (e) {
        x.readyException(e);
      }),
      this
    );
  }),
    x.extend({
      isReady: !1,
      readyWait: 1,
      ready: function (e) {
        (!0 === e ? --x.readyWait : x.isReady) ||
          ((x.isReady = !0) !== e && 0 < --x.readyWait) ||
          U.resolveWith(g, [x]);
      },
    }),
    (x.ready.then = U.then),
    "complete" === g.readyState ||
    ("loading" !== g.readyState && !g.documentElement.doScroll)
      ? e.setTimeout(x.ready)
      : (g.addEventListener("DOMContentLoaded", K),
        e.addEventListener("load", K));
  var Q = function (e, t, i, s, n, a, r) {
      var o = 0,
        l = e.length,
        c = null == i;
      if ("object" === y(i))
        for (o in ((n = !0), i)) Q(e, t, o, i[o], !0, a, r);
      else if (
        void 0 !== s &&
        ((n = !0),
        f(s) || (r = !0),
        c &&
          (r
            ? (t.call(e, s), (t = null))
            : ((c = t),
              (t = function (e, t, i) {
                return c.call(x(e), i);
              }))),
        t)
      )
        for (; o < l; o++) t(e[o], i, r ? s : s.call(e[o], o, t(e[o], i)));
      return n ? e : c ? t.call(e) : l ? t(e[0], i) : a;
    },
    J = /^-ms-/,
    Z = /-([a-z])/g;
  function ee(e, t) {
    return t.toUpperCase();
  }
  function te(e) {
    return e.replace(J, "ms-").replace(Z, ee);
  }
  var ie = function (e) {
    return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
  };
  function se() {
    this.expando = x.expando + se.uid++;
  }
  (se.uid = 1),
    (se.prototype = {
      cache: function (e) {
        var t = e[this.expando];
        return (
          t ||
            ((t = {}),
            ie(e) &&
              (e.nodeType
                ? (e[this.expando] = t)
                : Object.defineProperty(e, this.expando, {
                    value: t,
                    configurable: !0,
                  }))),
          t
        );
      },
      set: function (e, t, i) {
        var s,
          n = this.cache(e);
        if ("string" == typeof t) n[te(t)] = i;
        else for (s in t) n[te(s)] = t[s];
        return n;
      },
      get: function (e, t) {
        return void 0 === t
          ? this.cache(e)
          : e[this.expando] && e[this.expando][te(t)];
      },
      access: function (e, t, i) {
        return void 0 === t || (t && "string" == typeof t && void 0 === i)
          ? this.get(e, t)
          : (this.set(e, t, i), void 0 !== i ? i : t);
      },
      remove: function (e, t) {
        var i,
          s = e[this.expando];
        if (void 0 !== s) {
          if (void 0 !== t) {
            i = (t = Array.isArray(t)
              ? t.map(te)
              : (t = te(t)) in s
              ? [t]
              : t.match(B) || []).length;
            for (; i--; ) delete s[t[i]];
          }
          (void 0 === t || x.isEmptyObject(s)) &&
            (e.nodeType ? (e[this.expando] = void 0) : delete e[this.expando]);
        }
      },
      hasData: function (e) {
        var t = e[this.expando];
        return void 0 !== t && !x.isEmptyObject(t);
      },
    });
  var ne = new se(),
    ae = new se(),
    re = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    oe = /[A-Z]/g;
  function le(e, t, i) {
    var s, n;
    if (void 0 === i && 1 === e.nodeType)
      if (
        ((s = "data-" + t.replace(oe, "-$&").toLowerCase()),
        "string" == typeof (i = e.getAttribute(s)))
      ) {
        try {
          i =
            "true" === (n = i) ||
            ("false" !== n &&
              ("null" === n
                ? null
                : n === +n + ""
                ? +n
                : re.test(n)
                ? JSON.parse(n)
                : n));
        } catch (e) {}
        ae.set(e, t, i);
      } else i = void 0;
    return i;
  }
  x.extend({
    hasData: function (e) {
      return ae.hasData(e) || ne.hasData(e);
    },
    data: function (e, t, i) {
      return ae.access(e, t, i);
    },
    removeData: function (e, t) {
      ae.remove(e, t);
    },
    _data: function (e, t, i) {
      return ne.access(e, t, i);
    },
    _removeData: function (e, t) {
      ne.remove(e, t);
    },
  }),
    x.fn.extend({
      data: function (e, t) {
        var i,
          s,
          n,
          a = this[0],
          r = a && a.attributes;
        if (void 0 === e) {
          if (
            this.length &&
            ((n = ae.get(a)), 1 === a.nodeType && !ne.get(a, "hasDataAttrs"))
          ) {
            for (i = r.length; i--; )
              r[i] &&
                0 === (s = r[i].name).indexOf("data-") &&
                ((s = te(s.slice(5))), le(a, s, n[s]));
            ne.set(a, "hasDataAttrs", !0);
          }
          return n;
        }
        return "object" == typeof e
          ? this.each(function () {
              ae.set(this, e);
            })
          : Q(
              this,
              function (t) {
                var i;
                if (a && void 0 === t)
                  return void 0 !== (i = ae.get(a, e)) ||
                    void 0 !== (i = le(a, e))
                    ? i
                    : void 0;
                this.each(function () {
                  ae.set(this, e, t);
                });
              },
              null,
              t,
              1 < arguments.length,
              null,
              !0
            );
      },
      removeData: function (e) {
        return this.each(function () {
          ae.remove(this, e);
        });
      },
    }),
    x.extend({
      queue: function (e, t, i) {
        var s;
        if (e)
          return (
            (t = (t || "fx") + "queue"),
            (s = ne.get(e, t)),
            i &&
              (!s || Array.isArray(i)
                ? (s = ne.access(e, t, x.makeArray(i)))
                : s.push(i)),
            s || []
          );
      },
      dequeue: function (e, t) {
        t = t || "fx";
        var i = x.queue(e, t),
          s = i.length,
          n = i.shift(),
          a = x._queueHooks(e, t);
        "inprogress" === n && ((n = i.shift()), s--),
          n &&
            ("fx" === t && i.unshift("inprogress"),
            delete a.stop,
            n.call(
              e,
              function () {
                x.dequeue(e, t);
              },
              a
            )),
          !s && a && a.empty.fire();
      },
      _queueHooks: function (e, t) {
        var i = t + "queueHooks";
        return (
          ne.get(e, i) ||
          ne.access(e, i, {
            empty: x.Callbacks("once memory").add(function () {
              ne.remove(e, [t + "queue", i]);
            }),
          })
        );
      },
    }),
    x.fn.extend({
      queue: function (e, t) {
        var i = 2;
        return (
          "string" != typeof e && ((t = e), (e = "fx"), i--),
          arguments.length < i
            ? x.queue(this[0], e)
            : void 0 === t
            ? this
            : this.each(function () {
                var i = x.queue(this, e, t);
                x._queueHooks(this, e),
                  "fx" === e && "inprogress" !== i[0] && x.dequeue(this, e);
              })
        );
      },
      dequeue: function (e) {
        return this.each(function () {
          x.dequeue(this, e);
        });
      },
      clearQueue: function (e) {
        return this.queue(e || "fx", []);
      },
      promise: function (e, t) {
        var i,
          s = 1,
          n = x.Deferred(),
          a = this,
          r = this.length,
          o = function () {
            --s || n.resolveWith(a, [a]);
          };
        for (
          "string" != typeof e && ((t = e), (e = void 0)), e = e || "fx";
          r--;

        )
          (i = ne.get(a[r], e + "queueHooks")) &&
            i.empty &&
            (s++, i.empty.add(o));
        return o(), n.promise(t);
      },
    });
  var ce = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    he = new RegExp("^(?:([+-])=|)(" + ce + ")([a-z%]*)$", "i"),
    de = ["Top", "Right", "Bottom", "Left"],
    ue = g.documentElement,
    pe = function (e) {
      return x.contains(e.ownerDocument, e);
    },
    fe = { composed: !0 };
  ue.getRootNode &&
    (pe = function (e) {
      return (
        x.contains(e.ownerDocument, e) || e.getRootNode(fe) === e.ownerDocument
      );
    });
  var me = function (e, t) {
    return (
      "none" === (e = t || e).style.display ||
      ("" === e.style.display && pe(e) && "none" === x.css(e, "display"))
    );
  };
  function ge(e, t, i, s) {
    var n,
      a,
      r = 20,
      o = s
        ? function () {
            return s.cur();
          }
        : function () {
            return x.css(e, t, "");
          },
      l = o(),
      c = (i && i[3]) || (x.cssNumber[t] ? "" : "px"),
      h =
        e.nodeType &&
        (x.cssNumber[t] || ("px" !== c && +l)) &&
        he.exec(x.css(e, t));
    if (h && h[3] !== c) {
      for (l /= 2, c = c || h[3], h = +l || 1; r--; )
        x.style(e, t, h + c),
          (1 - a) * (1 - (a = o() / l || 0.5)) <= 0 && (r = 0),
          (h /= a);
      (h *= 2), x.style(e, t, h + c), (i = i || []);
    }
    return (
      i &&
        ((h = +h || +l || 0),
        (n = i[1] ? h + (i[1] + 1) * i[2] : +i[2]),
        s && ((s.unit = c), (s.start = h), (s.end = n))),
      n
    );
  }
  var ve = {};
  function be(e, t) {
    for (var i, s, n, a, r, o, l, c = [], h = 0, d = e.length; h < d; h++)
      (s = e[h]).style &&
        ((i = s.style.display),
        t
          ? ("none" === i &&
              ((c[h] = ne.get(s, "display") || null),
              c[h] || (s.style.display = "")),
            "" === s.style.display &&
              me(s) &&
              (c[h] =
                ((l = r = a = void 0),
                (r = (n = s).ownerDocument),
                (o = n.nodeName),
                (l = ve[o]) ||
                  ((a = r.body.appendChild(r.createElement(o))),
                  (l = x.css(a, "display")),
                  a.parentNode.removeChild(a),
                  "none" === l && (l = "block"),
                  (ve[o] = l)))))
          : "none" !== i && ((c[h] = "none"), ne.set(s, "display", i)));
    for (h = 0; h < d; h++) null != c[h] && (e[h].style.display = c[h]);
    return e;
  }
  x.fn.extend({
    show: function () {
      return be(this, !0);
    },
    hide: function () {
      return be(this);
    },
    toggle: function (e) {
      return "boolean" == typeof e
        ? e
          ? this.show()
          : this.hide()
        : this.each(function () {
            me(this) ? x(this).show() : x(this).hide();
          });
    },
  });
  var ye,
    _e,
    we = /^(?:checkbox|radio)$/i,
    xe = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
    Ce = /^$|^module$|\/(?:java|ecma)script/i;
  (ye = g.createDocumentFragment().appendChild(g.createElement("div"))),
    (_e = g.createElement("input")).setAttribute("type", "radio"),
    _e.setAttribute("checked", "checked"),
    _e.setAttribute("name", "t"),
    ye.appendChild(_e),
    (p.checkClone = ye.cloneNode(!0).cloneNode(!0).lastChild.checked),
    (ye.innerHTML = "<textarea>x</textarea>"),
    (p.noCloneChecked = !!ye.cloneNode(!0).lastChild.defaultValue),
    (ye.innerHTML = "<option></option>"),
    (p.option = !!ye.lastChild);
  var Te = {
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""],
  };
  function Se(e, t) {
    var i;
    return (
      (i =
        void 0 !== e.getElementsByTagName
          ? e.getElementsByTagName(t || "*")
          : void 0 !== e.querySelectorAll
          ? e.querySelectorAll(t || "*")
          : []),
      void 0 === t || (t && T(e, t)) ? x.merge([e], i) : i
    );
  }
  function ke(e, t) {
    for (var i = 0, s = e.length; i < s; i++)
      ne.set(e[i], "globalEval", !t || ne.get(t[i], "globalEval"));
  }
  (Te.tbody = Te.tfoot = Te.colgroup = Te.caption = Te.thead),
    (Te.th = Te.td),
    p.option ||
      (Te.optgroup = Te.option =
        [1, "<select multiple='multiple'>", "</select>"]);
  var Ee = /<|&#?\w+;/;
  function Me(e, t, i, s, n) {
    for (
      var a,
        r,
        o,
        l,
        c,
        h,
        d = t.createDocumentFragment(),
        u = [],
        p = 0,
        f = e.length;
      p < f;
      p++
    )
      if ((a = e[p]) || 0 === a)
        if ("object" === y(a)) x.merge(u, a.nodeType ? [a] : a);
        else if (Ee.test(a)) {
          for (
            r = r || d.appendChild(t.createElement("div")),
              o = (xe.exec(a) || ["", ""])[1].toLowerCase(),
              l = Te[o] || Te._default,
              r.innerHTML = l[1] + x.htmlPrefilter(a) + l[2],
              h = l[0];
            h--;

          )
            r = r.lastChild;
          x.merge(u, r.childNodes), ((r = d.firstChild).textContent = "");
        } else u.push(t.createTextNode(a));
    for (d.textContent = "", p = 0; (a = u[p++]); )
      if (s && -1 < x.inArray(a, s)) n && n.push(a);
      else if (
        ((c = pe(a)), (r = Se(d.appendChild(a), "script")), c && ke(r), i)
      )
        for (h = 0; (a = r[h++]); ) Ce.test(a.type || "") && i.push(a);
    return d;
  }
  var De = /^([^.]*)(?:\.(.+)|)/;
  function Pe() {
    return !0;
  }
  function Ie() {
    return !1;
  }
  function Ae(e, t, i, s, n, a) {
    var r, o;
    if ("object" == typeof t) {
      for (o in ("string" != typeof i && ((s = s || i), (i = void 0)), t))
        Ae(e, o, i, s, t[o], a);
      return e;
    }
    if (
      (null == s && null == n
        ? ((n = i), (s = i = void 0))
        : null == n &&
          ("string" == typeof i
            ? ((n = s), (s = void 0))
            : ((n = s), (s = i), (i = void 0))),
      !1 === n)
    )
      n = Ie;
    else if (!n) return e;
    return (
      1 === a &&
        ((r = n),
        ((n = function (e) {
          return x().off(e), r.apply(this, arguments);
        }).guid = r.guid || (r.guid = x.guid++))),
      e.each(function () {
        x.event.add(this, t, n, s, i);
      })
    );
  }
  function Le(e, t, i) {
    i
      ? (ne.set(e, t, !1),
        x.event.add(e, t, {
          namespace: !1,
          handler: function (e) {
            var i,
              s = ne.get(this, t);
            if (1 & e.isTrigger && this[t]) {
              if (s)
                (x.event.special[t] || {}).delegateType && e.stopPropagation();
              else if (
                ((s = n.call(arguments)),
                ne.set(this, t, s),
                this[t](),
                (i = ne.get(this, t)),
                ne.set(this, t, !1),
                s !== i)
              )
                return e.stopImmediatePropagation(), e.preventDefault(), i;
            } else
              s &&
                (ne.set(this, t, x.event.trigger(s[0], s.slice(1), this)),
                e.stopPropagation(),
                (e.isImmediatePropagationStopped = Pe));
          },
        }))
      : void 0 === ne.get(e, t) && x.event.add(e, t, Pe);
  }
  (x.event = {
    global: {},
    add: function (e, t, i, s, n) {
      var a,
        r,
        o,
        l,
        c,
        h,
        d,
        u,
        p,
        f,
        m,
        g = ne.get(e);
      if (ie(e))
        for (
          i.handler && ((i = (a = i).handler), (n = a.selector)),
            n && x.find.matchesSelector(ue, n),
            i.guid || (i.guid = x.guid++),
            (l = g.events) || (l = g.events = Object.create(null)),
            (r = g.handle) ||
              (r = g.handle =
                function (t) {
                  return void 0 !== x && x.event.triggered !== t.type
                    ? x.event.dispatch.apply(e, arguments)
                    : void 0;
                }),
            c = (t = (t || "").match(B) || [""]).length;
          c--;

        )
          (p = m = (o = De.exec(t[c]) || [])[1]),
            (f = (o[2] || "").split(".").sort()),
            p &&
              ((d = x.event.special[p] || {}),
              (p = (n ? d.delegateType : d.bindType) || p),
              (d = x.event.special[p] || {}),
              (h = x.extend(
                {
                  type: p,
                  origType: m,
                  data: s,
                  handler: i,
                  guid: i.guid,
                  selector: n,
                  needsContext: n && x.expr.match.needsContext.test(n),
                  namespace: f.join("."),
                },
                a
              )),
              (u = l[p]) ||
                (((u = l[p] = []).delegateCount = 0),
                (d.setup && !1 !== d.setup.call(e, s, f, r)) ||
                  (e.addEventListener && e.addEventListener(p, r))),
              d.add &&
                (d.add.call(e, h), h.handler.guid || (h.handler.guid = i.guid)),
              n ? u.splice(u.delegateCount++, 0, h) : u.push(h),
              (x.event.global[p] = !0));
    },
    remove: function (e, t, i, s, n) {
      var a,
        r,
        o,
        l,
        c,
        h,
        d,
        u,
        p,
        f,
        m,
        g = ne.hasData(e) && ne.get(e);
      if (g && (l = g.events)) {
        for (c = (t = (t || "").match(B) || [""]).length; c--; )
          if (
            ((p = m = (o = De.exec(t[c]) || [])[1]),
            (f = (o[2] || "").split(".").sort()),
            p)
          ) {
            for (
              d = x.event.special[p] || {},
                u = l[(p = (s ? d.delegateType : d.bindType) || p)] || [],
                o =
                  o[2] &&
                  new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                r = a = u.length;
              a--;

            )
              (h = u[a]),
                (!n && m !== h.origType) ||
                  (i && i.guid !== h.guid) ||
                  (o && !o.test(h.namespace)) ||
                  (s && s !== h.selector && ("**" !== s || !h.selector)) ||
                  (u.splice(a, 1),
                  h.selector && u.delegateCount--,
                  d.remove && d.remove.call(e, h));
            r &&
              !u.length &&
              ((d.teardown && !1 !== d.teardown.call(e, f, g.handle)) ||
                x.removeEvent(e, p, g.handle),
              delete l[p]);
          } else for (p in l) x.event.remove(e, p + t[c], i, s, !0);
        x.isEmptyObject(l) && ne.remove(e, "handle events");
      }
    },
    dispatch: function (e) {
      var t,
        i,
        s,
        n,
        a,
        r,
        o = new Array(arguments.length),
        l = x.event.fix(e),
        c = (ne.get(this, "events") || Object.create(null))[l.type] || [],
        h = x.event.special[l.type] || {};
      for (o[0] = l, t = 1; t < arguments.length; t++) o[t] = arguments[t];
      if (
        ((l.delegateTarget = this),
        !h.preDispatch || !1 !== h.preDispatch.call(this, l))
      ) {
        for (
          r = x.event.handlers.call(this, l, c), t = 0;
          (n = r[t++]) && !l.isPropagationStopped();

        )
          for (
            l.currentTarget = n.elem, i = 0;
            (a = n.handlers[i++]) && !l.isImmediatePropagationStopped();

          )
            (l.rnamespace &&
              !1 !== a.namespace &&
              !l.rnamespace.test(a.namespace)) ||
              ((l.handleObj = a),
              (l.data = a.data),
              void 0 !==
                (s = (
                  (x.event.special[a.origType] || {}).handle || a.handler
                ).apply(n.elem, o)) &&
                !1 === (l.result = s) &&
                (l.preventDefault(), l.stopPropagation()));
        return h.postDispatch && h.postDispatch.call(this, l), l.result;
      }
    },
    handlers: function (e, t) {
      var i,
        s,
        n,
        a,
        r,
        o = [],
        l = t.delegateCount,
        c = e.target;
      if (l && c.nodeType && !("click" === e.type && 1 <= e.button))
        for (; c !== this; c = c.parentNode || this)
          if (1 === c.nodeType && ("click" !== e.type || !0 !== c.disabled)) {
            for (a = [], r = {}, i = 0; i < l; i++)
              void 0 === r[(n = (s = t[i]).selector + " ")] &&
                (r[n] = s.needsContext
                  ? -1 < x(n, this).index(c)
                  : x.find(n, this, null, [c]).length),
                r[n] && a.push(s);
            a.length && o.push({ elem: c, handlers: a });
          }
      return (
        (c = this), l < t.length && o.push({ elem: c, handlers: t.slice(l) }), o
      );
    },
    addProp: function (e, t) {
      Object.defineProperty(x.Event.prototype, e, {
        enumerable: !0,
        configurable: !0,
        get: f(t)
          ? function () {
              if (this.originalEvent) return t(this.originalEvent);
            }
          : function () {
              if (this.originalEvent) return this.originalEvent[e];
            },
        set: function (t) {
          Object.defineProperty(this, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: t,
          });
        },
      });
    },
    fix: function (e) {
      return e[x.expando] ? e : new x.Event(e);
    },
    special: {
      load: { noBubble: !0 },
      click: {
        setup: function (e) {
          var t = this || e;
          return (
            we.test(t.type) && t.click && T(t, "input") && Le(t, "click", !0),
            !1
          );
        },
        trigger: function (e) {
          var t = this || e;
          return (
            we.test(t.type) && t.click && T(t, "input") && Le(t, "click"), !0
          );
        },
        _default: function (e) {
          var t = e.target;
          return (
            (we.test(t.type) &&
              t.click &&
              T(t, "input") &&
              ne.get(t, "click")) ||
            T(t, "a")
          );
        },
      },
      beforeunload: {
        postDispatch: function (e) {
          void 0 !== e.result &&
            e.originalEvent &&
            (e.originalEvent.returnValue = e.result);
        },
      },
    },
  }),
    (x.removeEvent = function (e, t, i) {
      e.removeEventListener && e.removeEventListener(t, i);
    }),
    (x.Event = function (e, t) {
      if (!(this instanceof x.Event)) return new x.Event(e, t);
      e && e.type
        ? ((this.originalEvent = e),
          (this.type = e.type),
          (this.isDefaultPrevented =
            e.defaultPrevented ||
            (void 0 === e.defaultPrevented && !1 === e.returnValue)
              ? Pe
              : Ie),
          (this.target =
            e.target && 3 === e.target.nodeType
              ? e.target.parentNode
              : e.target),
          (this.currentTarget = e.currentTarget),
          (this.relatedTarget = e.relatedTarget))
        : (this.type = e),
        t && x.extend(this, t),
        (this.timeStamp = (e && e.timeStamp) || Date.now()),
        (this[x.expando] = !0);
    }),
    (x.Event.prototype = {
      constructor: x.Event,
      isDefaultPrevented: Ie,
      isPropagationStopped: Ie,
      isImmediatePropagationStopped: Ie,
      isSimulated: !1,
      preventDefault: function () {
        var e = this.originalEvent;
        (this.isDefaultPrevented = Pe),
          e && !this.isSimulated && e.preventDefault();
      },
      stopPropagation: function () {
        var e = this.originalEvent;
        (this.isPropagationStopped = Pe),
          e && !this.isSimulated && e.stopPropagation();
      },
      stopImmediatePropagation: function () {
        var e = this.originalEvent;
        (this.isImmediatePropagationStopped = Pe),
          e && !this.isSimulated && e.stopImmediatePropagation(),
          this.stopPropagation();
      },
    }),
    x.each(
      {
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0,
      },
      x.event.addProp
    ),
    x.each({ focus: "focusin", blur: "focusout" }, function (e, t) {
      function i(e) {
        if (g.documentMode) {
          var i = ne.get(this, "handle"),
            s = x.event.fix(e);
          (s.type = "focusin" === e.type ? "focus" : "blur"),
            (s.isSimulated = !0),
            i(e),
            s.target === s.currentTarget && i(s);
        } else x.event.simulate(t, e.target, x.event.fix(e));
      }
      (x.event.special[e] = {
        setup: function () {
          var s;
          if ((Le(this, e, !0), !g.documentMode)) return !1;
          (s = ne.get(this, t)) || this.addEventListener(t, i),
            ne.set(this, t, (s || 0) + 1);
        },
        trigger: function () {
          return Le(this, e), !0;
        },
        teardown: function () {
          var e;
          if (!g.documentMode) return !1;
          (e = ne.get(this, t) - 1)
            ? ne.set(this, t, e)
            : (this.removeEventListener(t, i), ne.remove(this, t));
        },
        _default: function (t) {
          return ne.get(t.target, e);
        },
        delegateType: t,
      }),
        (x.event.special[t] = {
          setup: function () {
            var s = this.ownerDocument || this.document || this,
              n = g.documentMode ? this : s,
              a = ne.get(n, t);
            a ||
              (g.documentMode
                ? this.addEventListener(t, i)
                : s.addEventListener(e, i, !0)),
              ne.set(n, t, (a || 0) + 1);
          },
          teardown: function () {
            var s = this.ownerDocument || this.document || this,
              n = g.documentMode ? this : s,
              a = ne.get(n, t) - 1;
            a
              ? ne.set(n, t, a)
              : (g.documentMode
                  ? this.removeEventListener(t, i)
                  : s.removeEventListener(e, i, !0),
                ne.remove(n, t));
          },
        });
    }),
    x.each(
      {
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout",
      },
      function (e, t) {
        x.event.special[e] = {
          delegateType: t,
          bindType: t,
          handle: function (e) {
            var i,
              s = e.relatedTarget,
              n = e.handleObj;
            return (
              (s && (s === this || x.contains(this, s))) ||
                ((e.type = n.origType),
                (i = n.handler.apply(this, arguments)),
                (e.type = t)),
              i
            );
          },
        };
      }
    ),
    x.fn.extend({
      on: function (e, t, i, s) {
        return Ae(this, e, t, i, s);
      },
      one: function (e, t, i, s) {
        return Ae(this, e, t, i, s, 1);
      },
      off: function (e, t, i) {
        var s, n;
        if (e && e.preventDefault && e.handleObj)
          return (
            (s = e.handleObj),
            x(e.delegateTarget).off(
              s.namespace ? s.origType + "." + s.namespace : s.origType,
              s.selector,
              s.handler
            ),
            this
          );
        if ("object" == typeof e) {
          for (n in e) this.off(n, t, e[n]);
          return this;
        }
        return (
          (!1 !== t && "function" != typeof t) || ((i = t), (t = void 0)),
          !1 === i && (i = Ie),
          this.each(function () {
            x.event.remove(this, e, i, t);
          })
        );
      },
    });
  var Oe = /<script|<style|<link/i,
    ze = /checked\s*(?:[^=]|=\s*.checked.)/i,
    He = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
  function Ne(e, t) {
    return (
      (T(e, "table") &&
        T(11 !== t.nodeType ? t : t.firstChild, "tr") &&
        x(e).children("tbody")[0]) ||
      e
    );
  }
  function $e(e) {
    return (e.type = (null !== e.getAttribute("type")) + "/" + e.type), e;
  }
  function We(e) {
    return (
      "true/" === (e.type || "").slice(0, 5)
        ? (e.type = e.type.slice(5))
        : e.removeAttribute("type"),
      e
    );
  }
  function Re(e, t) {
    var i, s, n, a, r, o;
    if (1 === t.nodeType) {
      if (ne.hasData(e) && (o = ne.get(e).events))
        for (n in (ne.remove(t, "handle events"), o))
          for (i = 0, s = o[n].length; i < s; i++) x.event.add(t, n, o[n][i]);
      ae.hasData(e) &&
        ((a = ae.access(e)), (r = x.extend({}, a)), ae.set(t, r));
    }
  }
  function Fe(e, t, i, s) {
    t = a(t);
    var n,
      r,
      o,
      l,
      c,
      h,
      d = 0,
      u = e.length,
      m = u - 1,
      g = t[0],
      v = f(g);
    if (v || (1 < u && "string" == typeof g && !p.checkClone && ze.test(g)))
      return e.each(function (n) {
        var a = e.eq(n);
        v && (t[0] = g.call(this, n, a.html())), Fe(a, t, i, s);
      });
    if (
      u &&
      ((r = (n = Me(t, e[0].ownerDocument, !1, e, s)).firstChild),
      1 === n.childNodes.length && (n = r),
      r || s)
    ) {
      for (l = (o = x.map(Se(n, "script"), $e)).length; d < u; d++)
        (c = n),
          d !== m &&
            ((c = x.clone(c, !0, !0)), l && x.merge(o, Se(c, "script"))),
          i.call(e[d], c, d);
      if (l)
        for (h = o[o.length - 1].ownerDocument, x.map(o, We), d = 0; d < l; d++)
          (c = o[d]),
            Ce.test(c.type || "") &&
              !ne.access(c, "globalEval") &&
              x.contains(h, c) &&
              (c.src && "module" !== (c.type || "").toLowerCase()
                ? x._evalUrl &&
                  !c.noModule &&
                  x._evalUrl(
                    c.src,
                    { nonce: c.nonce || c.getAttribute("nonce") },
                    h
                  )
                : b(c.textContent.replace(He, ""), c, h));
    }
    return e;
  }
  function qe(e, t, i) {
    for (var s, n = t ? x.filter(t, e) : e, a = 0; null != (s = n[a]); a++)
      i || 1 !== s.nodeType || x.cleanData(Se(s)),
        s.parentNode &&
          (i && pe(s) && ke(Se(s, "script")), s.parentNode.removeChild(s));
    return e;
  }
  x.extend({
    htmlPrefilter: function (e) {
      return e;
    },
    clone: function (e, t, i) {
      var s,
        n,
        a,
        r,
        o,
        l,
        c,
        h = e.cloneNode(!0),
        d = pe(e);
      if (
        !(
          p.noCloneChecked ||
          (1 !== e.nodeType && 11 !== e.nodeType) ||
          x.isXMLDoc(e)
        )
      )
        for (r = Se(h), s = 0, n = (a = Se(e)).length; s < n; s++)
          (o = a[s]),
            "input" === (c = (l = r[s]).nodeName.toLowerCase()) &&
            we.test(o.type)
              ? (l.checked = o.checked)
              : ("input" !== c && "textarea" !== c) ||
                (l.defaultValue = o.defaultValue);
      if (t)
        if (i)
          for (a = a || Se(e), r = r || Se(h), s = 0, n = a.length; s < n; s++)
            Re(a[s], r[s]);
        else Re(e, h);
      return (
        0 < (r = Se(h, "script")).length && ke(r, !d && Se(e, "script")), h
      );
    },
    cleanData: function (e) {
      for (var t, i, s, n = x.event.special, a = 0; void 0 !== (i = e[a]); a++)
        if (ie(i)) {
          if ((t = i[ne.expando])) {
            if (t.events)
              for (s in t.events)
                n[s] ? x.event.remove(i, s) : x.removeEvent(i, s, t.handle);
            i[ne.expando] = void 0;
          }
          i[ae.expando] && (i[ae.expando] = void 0);
        }
    },
  }),
    x.fn.extend({
      detach: function (e) {
        return qe(this, e, !0);
      },
      remove: function (e) {
        return qe(this, e);
      },
      text: function (e) {
        return Q(
          this,
          function (e) {
            return void 0 === e
              ? x.text(this)
              : this.empty().each(function () {
                  (1 !== this.nodeType &&
                    11 !== this.nodeType &&
                    9 !== this.nodeType) ||
                    (this.textContent = e);
                });
          },
          null,
          e,
          arguments.length
        );
      },
      append: function () {
        return Fe(this, arguments, function (e) {
          (1 !== this.nodeType &&
            11 !== this.nodeType &&
            9 !== this.nodeType) ||
            Ne(this, e).appendChild(e);
        });
      },
      prepend: function () {
        return Fe(this, arguments, function (e) {
          if (
            1 === this.nodeType ||
            11 === this.nodeType ||
            9 === this.nodeType
          ) {
            var t = Ne(this, e);
            t.insertBefore(e, t.firstChild);
          }
        });
      },
      before: function () {
        return Fe(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this);
        });
      },
      after: function () {
        return Fe(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
        });
      },
      empty: function () {
        for (var e, t = 0; null != (e = this[t]); t++)
          1 === e.nodeType && (x.cleanData(Se(e, !1)), (e.textContent = ""));
        return this;
      },
      clone: function (e, t) {
        return (
          (e = null != e && e),
          (t = null == t ? e : t),
          this.map(function () {
            return x.clone(this, e, t);
          })
        );
      },
      html: function (e) {
        return Q(
          this,
          function (e) {
            var t = this[0] || {},
              i = 0,
              s = this.length;
            if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
            if (
              "string" == typeof e &&
              !Oe.test(e) &&
              !Te[(xe.exec(e) || ["", ""])[1].toLowerCase()]
            ) {
              e = x.htmlPrefilter(e);
              try {
                for (; i < s; i++)
                  1 === (t = this[i] || {}).nodeType &&
                    (x.cleanData(Se(t, !1)), (t.innerHTML = e));
                t = 0;
              } catch (e) {}
            }
            t && this.empty().append(e);
          },
          null,
          e,
          arguments.length
        );
      },
      replaceWith: function () {
        var e = [];
        return Fe(
          this,
          arguments,
          function (t) {
            var i = this.parentNode;
            x.inArray(this, e) < 0 &&
              (x.cleanData(Se(this)), i && i.replaceChild(t, this));
          },
          e
        );
      },
    }),
    x.each(
      {
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith",
      },
      function (e, t) {
        x.fn[e] = function (e) {
          for (var i, s = [], n = x(e), a = n.length - 1, o = 0; o <= a; o++)
            (i = o === a ? this : this.clone(!0)),
              x(n[o])[t](i),
              r.apply(s, i.get());
          return this.pushStack(s);
        };
      }
    );
  var je = new RegExp("^(" + ce + ")(?!px)[a-z%]+$", "i"),
    Be = /^--/,
    Ye = function (t) {
      var i = t.ownerDocument.defaultView;
      return (i && i.opener) || (i = e), i.getComputedStyle(t);
    },
    Ve = function (e, t, i) {
      var s,
        n,
        a = {};
      for (n in t) (a[n] = e.style[n]), (e.style[n] = t[n]);
      for (n in ((s = i.call(e)), t)) e.style[n] = a[n];
      return s;
    },
    Xe = new RegExp(de.join("|"), "i");
  function Ge(e, t, i) {
    var s,
      n,
      a,
      r,
      o = Be.test(t),
      l = e.style;
    return (
      (i = i || Ye(e)) &&
        ((r = i.getPropertyValue(t) || i[t]),
        o && r && (r = r.replace(D, "$1") || void 0),
        "" !== r || pe(e) || (r = x.style(e, t)),
        !p.pixelBoxStyles() &&
          je.test(r) &&
          Xe.test(t) &&
          ((s = l.width),
          (n = l.minWidth),
          (a = l.maxWidth),
          (l.minWidth = l.maxWidth = l.width = r),
          (r = i.width),
          (l.width = s),
          (l.minWidth = n),
          (l.maxWidth = a))),
      void 0 !== r ? r + "" : r
    );
  }
  function Ue(e, t) {
    return {
      get: function () {
        if (!e()) return (this.get = t).apply(this, arguments);
        delete this.get;
      },
    };
  }
  !(function () {
    function t() {
      if (h) {
        (c.style.cssText =
          "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
          (h.style.cssText =
            "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
          ue.appendChild(c).appendChild(h);
        var t = e.getComputedStyle(h);
        (s = "1%" !== t.top),
          (l = 12 === i(t.marginLeft)),
          (h.style.right = "60%"),
          (r = 36 === i(t.right)),
          (n = 36 === i(t.width)),
          (h.style.position = "absolute"),
          (a = 12 === i(h.offsetWidth / 3)),
          ue.removeChild(c),
          (h = null);
      }
    }
    function i(e) {
      return Math.round(parseFloat(e));
    }
    var s,
      n,
      a,
      r,
      o,
      l,
      c = g.createElement("div"),
      h = g.createElement("div");
    h.style &&
      ((h.style.backgroundClip = "content-box"),
      (h.cloneNode(!0).style.backgroundClip = ""),
      (p.clearCloneStyle = "content-box" === h.style.backgroundClip),
      x.extend(p, {
        boxSizingReliable: function () {
          return t(), n;
        },
        pixelBoxStyles: function () {
          return t(), r;
        },
        pixelPosition: function () {
          return t(), s;
        },
        reliableMarginLeft: function () {
          return t(), l;
        },
        scrollboxSize: function () {
          return t(), a;
        },
        reliableTrDimensions: function () {
          var t, i, s, n;
          return (
            null == o &&
              ((t = g.createElement("table")),
              (i = g.createElement("tr")),
              (s = g.createElement("div")),
              (t.style.cssText =
                "position:absolute;left:-11111px;border-collapse:separate"),
              (i.style.cssText = "box-sizing:content-box;border:1px solid"),
              (i.style.height = "1px"),
              (s.style.height = "9px"),
              (s.style.display = "block"),
              ue.appendChild(t).appendChild(i).appendChild(s),
              (n = e.getComputedStyle(i)),
              (o =
                parseInt(n.height, 10) +
                  parseInt(n.borderTopWidth, 10) +
                  parseInt(n.borderBottomWidth, 10) ===
                i.offsetHeight),
              ue.removeChild(t)),
            o
          );
        },
      }));
  })();
  var Ke = ["Webkit", "Moz", "ms"],
    Qe = g.createElement("div").style,
    Je = {};
  function Ze(e) {
    return (
      x.cssProps[e] ||
      Je[e] ||
      (e in Qe
        ? e
        : (Je[e] =
            (function (e) {
              for (
                var t = e[0].toUpperCase() + e.slice(1), i = Ke.length;
                i--;

              )
                if ((e = Ke[i] + t) in Qe) return e;
            })(e) || e))
    );
  }
  var et = /^(none|table(?!-c[ea]).+)/,
    tt = { position: "absolute", visibility: "hidden", display: "block" },
    it = { letterSpacing: "0", fontWeight: "400" };
  function st(e, t, i) {
    var s = he.exec(t);
    return s ? Math.max(0, s[2] - (i || 0)) + (s[3] || "px") : t;
  }
  function nt(e, t, i, s, n, a) {
    var r = "width" === t ? 1 : 0,
      o = 0,
      l = 0,
      c = 0;
    if (i === (s ? "border" : "content")) return 0;
    for (; r < 4; r += 2)
      "margin" === i && (c += x.css(e, i + de[r], !0, n)),
        s
          ? ("content" === i && (l -= x.css(e, "padding" + de[r], !0, n)),
            "margin" !== i &&
              (l -= x.css(e, "border" + de[r] + "Width", !0, n)))
          : ((l += x.css(e, "padding" + de[r], !0, n)),
            "padding" !== i
              ? (l += x.css(e, "border" + de[r] + "Width", !0, n))
              : (o += x.css(e, "border" + de[r] + "Width", !0, n)));
    return (
      !s &&
        0 <= a &&
        (l +=
          Math.max(
            0,
            Math.ceil(
              e["offset" + t[0].toUpperCase() + t.slice(1)] - a - l - o - 0.5
            )
          ) || 0),
      l + c
    );
  }
  function at(e, t, i) {
    var s = Ye(e),
      n =
        (!p.boxSizingReliable() || i) &&
        "border-box" === x.css(e, "boxSizing", !1, s),
      a = n,
      r = Ge(e, t, s),
      o = "offset" + t[0].toUpperCase() + t.slice(1);
    if (je.test(r)) {
      if (!i) return r;
      r = "auto";
    }
    return (
      ((!p.boxSizingReliable() && n) ||
        (!p.reliableTrDimensions() && T(e, "tr")) ||
        "auto" === r ||
        (!parseFloat(r) && "inline" === x.css(e, "display", !1, s))) &&
        e.getClientRects().length &&
        ((n = "border-box" === x.css(e, "boxSizing", !1, s)),
        (a = o in e) && (r = e[o])),
      (r = parseFloat(r) || 0) +
        nt(e, t, i || (n ? "border" : "content"), a, s, r) +
        "px"
    );
  }
  function rt(e, t, i, s, n) {
    return new rt.prototype.init(e, t, i, s, n);
  }
  x.extend({
    cssHooks: {
      opacity: {
        get: function (e, t) {
          if (t) {
            var i = Ge(e, "opacity");
            return "" === i ? "1" : i;
          }
        },
      },
    },
    cssNumber: {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageSlice: !0,
      columnCount: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      gridArea: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnStart: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowStart: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      scale: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
    },
    cssProps: {},
    style: function (e, t, i, s) {
      if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
        var n,
          a,
          r,
          o = te(t),
          l = Be.test(t),
          c = e.style;
        if (
          (l || (t = Ze(o)), (r = x.cssHooks[t] || x.cssHooks[o]), void 0 === i)
        )
          return r && "get" in r && void 0 !== (n = r.get(e, !1, s)) ? n : c[t];
        "string" == (a = typeof i) &&
          (n = he.exec(i)) &&
          n[1] &&
          ((i = ge(e, t, n)), (a = "number")),
          null != i &&
            i == i &&
            ("number" !== a ||
              l ||
              (i += (n && n[3]) || (x.cssNumber[o] ? "" : "px")),
            p.clearCloneStyle ||
              "" !== i ||
              0 !== t.indexOf("background") ||
              (c[t] = "inherit"),
            (r && "set" in r && void 0 === (i = r.set(e, i, s))) ||
              (l ? c.setProperty(t, i) : (c[t] = i)));
      }
    },
    css: function (e, t, i, s) {
      var n,
        a,
        r,
        o = te(t);
      return (
        Be.test(t) || (t = Ze(o)),
        (r = x.cssHooks[t] || x.cssHooks[o]) &&
          "get" in r &&
          (n = r.get(e, !0, i)),
        void 0 === n && (n = Ge(e, t, s)),
        "normal" === n && t in it && (n = it[t]),
        "" === i || i
          ? ((a = parseFloat(n)), !0 === i || isFinite(a) ? a || 0 : n)
          : n
      );
    },
  }),
    x.each(["height", "width"], function (e, t) {
      x.cssHooks[t] = {
        get: function (e, i, s) {
          if (i)
            return !et.test(x.css(e, "display")) ||
              (e.getClientRects().length && e.getBoundingClientRect().width)
              ? at(e, t, s)
              : Ve(e, tt, function () {
                  return at(e, t, s);
                });
        },
        set: function (e, i, s) {
          var n,
            a = Ye(e),
            r = !p.scrollboxSize() && "absolute" === a.position,
            o = (r || s) && "border-box" === x.css(e, "boxSizing", !1, a),
            l = s ? nt(e, t, s, o, a) : 0;
          return (
            o &&
              r &&
              (l -= Math.ceil(
                e["offset" + t[0].toUpperCase() + t.slice(1)] -
                  parseFloat(a[t]) -
                  nt(e, t, "border", !1, a) -
                  0.5
              )),
            l &&
              (n = he.exec(i)) &&
              "px" !== (n[3] || "px") &&
              ((e.style[t] = i), (i = x.css(e, t))),
            st(0, i, l)
          );
        },
      };
    }),
    (x.cssHooks.marginLeft = Ue(p.reliableMarginLeft, function (e, t) {
      if (t)
        return (
          (parseFloat(Ge(e, "marginLeft")) ||
            e.getBoundingClientRect().left -
              Ve(e, { marginLeft: 0 }, function () {
                return e.getBoundingClientRect().left;
              })) + "px"
        );
    })),
    x.each({ margin: "", padding: "", border: "Width" }, function (e, t) {
      (x.cssHooks[e + t] = {
        expand: function (i) {
          for (
            var s = 0, n = {}, a = "string" == typeof i ? i.split(" ") : [i];
            s < 4;
            s++
          )
            n[e + de[s] + t] = a[s] || a[s - 2] || a[0];
          return n;
        },
      }),
        "margin" !== e && (x.cssHooks[e + t].set = st);
    }),
    x.fn.extend({
      css: function (e, t) {
        return Q(
          this,
          function (e, t, i) {
            var s,
              n,
              a = {},
              r = 0;
            if (Array.isArray(t)) {
              for (s = Ye(e), n = t.length; r < n; r++)
                a[t[r]] = x.css(e, t[r], !1, s);
              return a;
            }
            return void 0 !== i ? x.style(e, t, i) : x.css(e, t);
          },
          e,
          t,
          1 < arguments.length
        );
      },
    }),
    (((x.Tween = rt).prototype = {
      constructor: rt,
      init: function (e, t, i, s, n, a) {
        (this.elem = e),
          (this.prop = i),
          (this.easing = n || x.easing._default),
          (this.options = t),
          (this.start = this.now = this.cur()),
          (this.end = s),
          (this.unit = a || (x.cssNumber[i] ? "" : "px"));
      },
      cur: function () {
        var e = rt.propHooks[this.prop];
        return e && e.get ? e.get(this) : rt.propHooks._default.get(this);
      },
      run: function (e) {
        var t,
          i = rt.propHooks[this.prop];
        return (
          this.options.duration
            ? (this.pos = t =
                x.easing[this.easing](
                  e,
                  this.options.duration * e,
                  0,
                  1,
                  this.options.duration
                ))
            : (this.pos = t = e),
          (this.now = (this.end - this.start) * t + this.start),
          this.options.step &&
            this.options.step.call(this.elem, this.now, this),
          i && i.set ? i.set(this) : rt.propHooks._default.set(this),
          this
        );
      },
    }).init.prototype = rt.prototype),
    ((rt.propHooks = {
      _default: {
        get: function (e) {
          var t;
          return 1 !== e.elem.nodeType ||
            (null != e.elem[e.prop] && null == e.elem.style[e.prop])
            ? e.elem[e.prop]
            : (t = x.css(e.elem, e.prop, "")) && "auto" !== t
            ? t
            : 0;
        },
        set: function (e) {
          x.fx.step[e.prop]
            ? x.fx.step[e.prop](e)
            : 1 !== e.elem.nodeType ||
              (!x.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)])
            ? (e.elem[e.prop] = e.now)
            : x.style(e.elem, e.prop, e.now + e.unit);
        },
      },
    }).scrollTop = rt.propHooks.scrollLeft =
      {
        set: function (e) {
          e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        },
      }),
    (x.easing = {
      linear: function (e) {
        return e;
      },
      swing: function (e) {
        return 0.5 - Math.cos(e * Math.PI) / 2;
      },
      _default: "swing",
    }),
    (x.fx = rt.prototype.init),
    (x.fx.step = {});
  var ot,
    lt,
    ct,
    ht,
    dt = /^(?:toggle|show|hide)$/,
    ut = /queueHooks$/;
  function pt() {
    lt &&
      (!1 === g.hidden && e.requestAnimationFrame
        ? e.requestAnimationFrame(pt)
        : e.setTimeout(pt, x.fx.interval),
      x.fx.tick());
  }
  function ft() {
    return (
      e.setTimeout(function () {
        ot = void 0;
      }),
      (ot = Date.now())
    );
  }
  function mt(e, t) {
    var i,
      s = 0,
      n = { height: e };
    for (t = t ? 1 : 0; s < 4; s += 2 - t)
      n["margin" + (i = de[s])] = n["padding" + i] = e;
    return t && (n.opacity = n.width = e), n;
  }
  function gt(e, t, i) {
    for (
      var s,
        n = (vt.tweeners[t] || []).concat(vt.tweeners["*"]),
        a = 0,
        r = n.length;
      a < r;
      a++
    )
      if ((s = n[a].call(i, t, e))) return s;
  }
  function vt(e, t, i) {
    var s,
      n,
      a = 0,
      r = vt.prefilters.length,
      o = x.Deferred().always(function () {
        delete l.elem;
      }),
      l = function () {
        if (n) return !1;
        for (
          var t = ot || ft(),
            i = Math.max(0, c.startTime + c.duration - t),
            s = 1 - (i / c.duration || 0),
            a = 0,
            r = c.tweens.length;
          a < r;
          a++
        )
          c.tweens[a].run(s);
        return (
          o.notifyWith(e, [c, s, i]),
          s < 1 && r
            ? i
            : (r || o.notifyWith(e, [c, 1, 0]), o.resolveWith(e, [c]), !1)
        );
      },
      c = o.promise({
        elem: e,
        props: x.extend({}, t),
        opts: x.extend(!0, { specialEasing: {}, easing: x.easing._default }, i),
        originalProperties: t,
        originalOptions: i,
        startTime: ot || ft(),
        duration: i.duration,
        tweens: [],
        createTween: function (t, i) {
          var s = x.Tween(
            e,
            c.opts,
            t,
            i,
            c.opts.specialEasing[t] || c.opts.easing
          );
          return c.tweens.push(s), s;
        },
        stop: function (t) {
          var i = 0,
            s = t ? c.tweens.length : 0;
          if (n) return this;
          for (n = !0; i < s; i++) c.tweens[i].run(1);
          return (
            t
              ? (o.notifyWith(e, [c, 1, 0]), o.resolveWith(e, [c, t]))
              : o.rejectWith(e, [c, t]),
            this
          );
        },
      }),
      h = c.props;
    for (
      (function (e, t) {
        var i, s, n, a, r;
        for (i in e)
          if (
            ((n = t[(s = te(i))]),
            (a = e[i]),
            Array.isArray(a) && ((n = a[1]), (a = e[i] = a[0])),
            i !== s && ((e[s] = a), delete e[i]),
            (r = x.cssHooks[s]) && ("expand" in r))
          )
            for (i in ((a = r.expand(a)), delete e[s], a))
              (i in e) || ((e[i] = a[i]), (t[i] = n));
          else t[s] = n;
      })(h, c.opts.specialEasing);
      a < r;
      a++
    )
      if ((s = vt.prefilters[a].call(c, e, h, c.opts)))
        return (
          f(s.stop) &&
            (x._queueHooks(c.elem, c.opts.queue).stop = s.stop.bind(s)),
          s
        );
    return (
      x.map(h, gt, c),
      f(c.opts.start) && c.opts.start.call(e, c),
      c
        .progress(c.opts.progress)
        .done(c.opts.done, c.opts.complete)
        .fail(c.opts.fail)
        .always(c.opts.always),
      x.fx.timer(x.extend(l, { elem: e, anim: c, queue: c.opts.queue })),
      c
    );
  }
  (x.Animation = x.extend(vt, {
    tweeners: {
      "*": [
        function (e, t) {
          var i = this.createTween(e, t);
          return ge(i.elem, e, he.exec(t), i), i;
        },
      ],
    },
    tweener: function (e, t) {
      f(e) ? ((t = e), (e = ["*"])) : (e = e.match(B));
      for (var i, s = 0, n = e.length; s < n; s++)
        (i = e[s]),
          (vt.tweeners[i] = vt.tweeners[i] || []),
          vt.tweeners[i].unshift(t);
    },
    prefilters: [
      function (e, t, i) {
        var s,
          n,
          a,
          r,
          o,
          l,
          c,
          h,
          d = "width" in t || "height" in t,
          u = this,
          p = {},
          f = e.style,
          m = e.nodeType && me(e),
          g = ne.get(e, "fxshow");
        for (s in (i.queue ||
          (null == (r = x._queueHooks(e, "fx")).unqueued &&
            ((r.unqueued = 0),
            (o = r.empty.fire),
            (r.empty.fire = function () {
              r.unqueued || o();
            })),
          r.unqueued++,
          u.always(function () {
            u.always(function () {
              r.unqueued--, x.queue(e, "fx").length || r.empty.fire();
            });
          })),
        t))
          if (((n = t[s]), dt.test(n))) {
            if (
              (delete t[s],
              (a = a || "toggle" === n),
              n === (m ? "hide" : "show"))
            ) {
              if ("show" !== n || !g || void 0 === g[s]) continue;
              m = !0;
            }
            p[s] = (g && g[s]) || x.style(e, s);
          }
        if ((l = !x.isEmptyObject(t)) || !x.isEmptyObject(p))
          for (s in (d &&
            1 === e.nodeType &&
            ((i.overflow = [f.overflow, f.overflowX, f.overflowY]),
            null == (c = g && g.display) && (c = ne.get(e, "display")),
            "none" === (h = x.css(e, "display")) &&
              (c
                ? (h = c)
                : (be([e], !0),
                  (c = e.style.display || c),
                  (h = x.css(e, "display")),
                  be([e]))),
            ("inline" === h || ("inline-block" === h && null != c)) &&
              "none" === x.css(e, "float") &&
              (l ||
                (u.done(function () {
                  f.display = c;
                }),
                null == c && ((h = f.display), (c = "none" === h ? "" : h))),
              (f.display = "inline-block"))),
          i.overflow &&
            ((f.overflow = "hidden"),
            u.always(function () {
              (f.overflow = i.overflow[0]),
                (f.overflowX = i.overflow[1]),
                (f.overflowY = i.overflow[2]);
            })),
          (l = !1),
          p))
            l ||
              (g
                ? "hidden" in g && (m = g.hidden)
                : (g = ne.access(e, "fxshow", { display: c })),
              a && (g.hidden = !m),
              m && be([e], !0),
              u.done(function () {
                for (s in (m || be([e]), ne.remove(e, "fxshow"), p))
                  x.style(e, s, p[s]);
              })),
              (l = gt(m ? g[s] : 0, s, u)),
              s in g ||
                ((g[s] = l.start), m && ((l.end = l.start), (l.start = 0)));
      },
    ],
    prefilter: function (e, t) {
      t ? vt.prefilters.unshift(e) : vt.prefilters.push(e);
    },
  })),
    (x.speed = function (e, t, i) {
      var s =
        e && "object" == typeof e
          ? x.extend({}, e)
          : {
              complete: i || (!i && t) || (f(e) && e),
              duration: e,
              easing: (i && t) || (t && !f(t) && t),
            };
      return (
        x.fx.off
          ? (s.duration = 0)
          : "number" != typeof s.duration &&
            (s.duration in x.fx.speeds
              ? (s.duration = x.fx.speeds[s.duration])
              : (s.duration = x.fx.speeds._default)),
        (null != s.queue && !0 !== s.queue) || (s.queue = "fx"),
        (s.old = s.complete),
        (s.complete = function () {
          f(s.old) && s.old.call(this), s.queue && x.dequeue(this, s.queue);
        }),
        s
      );
    }),
    x.fn.extend({
      fadeTo: function (e, t, i, s) {
        return this.filter(me)
          .css("opacity", 0)
          .show()
          .end()
          .animate({ opacity: t }, e, i, s);
      },
      animate: function (e, t, i, s) {
        var n = x.isEmptyObject(e),
          a = x.speed(t, i, s),
          r = function () {
            var t = vt(this, x.extend({}, e), a);
            (n || ne.get(this, "finish")) && t.stop(!0);
          };
        return (
          (r.finish = r),
          n || !1 === a.queue ? this.each(r) : this.queue(a.queue, r)
        );
      },
      stop: function (e, t, i) {
        var s = function (e) {
          var t = e.stop;
          delete e.stop, t(i);
        };
        return (
          "string" != typeof e && ((i = t), (t = e), (e = void 0)),
          t && this.queue(e || "fx", []),
          this.each(function () {
            var t = !0,
              n = null != e && e + "queueHooks",
              a = x.timers,
              r = ne.get(this);
            if (n) r[n] && r[n].stop && s(r[n]);
            else for (n in r) r[n] && r[n].stop && ut.test(n) && s(r[n]);
            for (n = a.length; n--; )
              a[n].elem !== this ||
                (null != e && a[n].queue !== e) ||
                (a[n].anim.stop(i), (t = !1), a.splice(n, 1));
            (!t && i) || x.dequeue(this, e);
          })
        );
      },
      finish: function (e) {
        return (
          !1 !== e && (e = e || "fx"),
          this.each(function () {
            var t,
              i = ne.get(this),
              s = i[e + "queue"],
              n = i[e + "queueHooks"],
              a = x.timers,
              r = s ? s.length : 0;
            for (
              i.finish = !0,
                x.queue(this, e, []),
                n && n.stop && n.stop.call(this, !0),
                t = a.length;
              t--;

            )
              a[t].elem === this &&
                a[t].queue === e &&
                (a[t].anim.stop(!0), a.splice(t, 1));
            for (t = 0; t < r; t++)
              s[t] && s[t].finish && s[t].finish.call(this);
            delete i.finish;
          })
        );
      },
    }),
    x.each(["toggle", "show", "hide"], function (e, t) {
      var i = x.fn[t];
      x.fn[t] = function (e, s, n) {
        return null == e || "boolean" == typeof e
          ? i.apply(this, arguments)
          : this.animate(mt(t, !0), e, s, n);
      };
    }),
    x.each(
      {
        slideDown: mt("show"),
        slideUp: mt("hide"),
        slideToggle: mt("toggle"),
        fadeIn: { opacity: "show" },
        fadeOut: { opacity: "hide" },
        fadeToggle: { opacity: "toggle" },
      },
      function (e, t) {
        x.fn[e] = function (e, i, s) {
          return this.animate(t, e, i, s);
        };
      }
    ),
    (x.timers = []),
    (x.fx.tick = function () {
      var e,
        t = 0,
        i = x.timers;
      for (ot = Date.now(); t < i.length; t++)
        (e = i[t])() || i[t] !== e || i.splice(t--, 1);
      i.length || x.fx.stop(), (ot = void 0);
    }),
    (x.fx.timer = function (e) {
      x.timers.push(e), x.fx.start();
    }),
    (x.fx.interval = 13),
    (x.fx.start = function () {
      lt || ((lt = !0), pt());
    }),
    (x.fx.stop = function () {
      lt = null;
    }),
    (x.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
    (x.fn.delay = function (t, i) {
      return (
        (t = (x.fx && x.fx.speeds[t]) || t),
        (i = i || "fx"),
        this.queue(i, function (i, s) {
          var n = e.setTimeout(i, t);
          s.stop = function () {
            e.clearTimeout(n);
          };
        })
      );
    }),
    (ct = g.createElement("input")),
    (ht = g.createElement("select").appendChild(g.createElement("option"))),
    (ct.type = "checkbox"),
    (p.checkOn = "" !== ct.value),
    (p.optSelected = ht.selected),
    ((ct = g.createElement("input")).value = "t"),
    (ct.type = "radio"),
    (p.radioValue = "t" === ct.value);
  var bt,
    yt = x.expr.attrHandle;
  x.fn.extend({
    attr: function (e, t) {
      return Q(this, x.attr, e, t, 1 < arguments.length);
    },
    removeAttr: function (e) {
      return this.each(function () {
        x.removeAttr(this, e);
      });
    },
  }),
    x.extend({
      attr: function (e, t, i) {
        var s,
          n,
          a = e.nodeType;
        if (3 !== a && 8 !== a && 2 !== a)
          return void 0 === e.getAttribute
            ? x.prop(e, t, i)
            : ((1 === a && x.isXMLDoc(e)) ||
                (n =
                  x.attrHooks[t.toLowerCase()] ||
                  (x.expr.match.bool.test(t) ? bt : void 0)),
              void 0 !== i
                ? null === i
                  ? void x.removeAttr(e, t)
                  : n && "set" in n && void 0 !== (s = n.set(e, i, t))
                  ? s
                  : (e.setAttribute(t, i + ""), i)
                : n && "get" in n && null !== (s = n.get(e, t))
                ? s
                : null == (s = x.find.attr(e, t))
                ? void 0
                : s);
      },
      attrHooks: {
        type: {
          set: function (e, t) {
            if (!p.radioValue && "radio" === t && T(e, "input")) {
              var i = e.value;
              return e.setAttribute("type", t), i && (e.value = i), t;
            }
          },
        },
      },
      removeAttr: function (e, t) {
        var i,
          s = 0,
          n = t && t.match(B);
        if (n && 1 === e.nodeType) for (; (i = n[s++]); ) e.removeAttribute(i);
      },
    }),
    (bt = {
      set: function (e, t, i) {
        return !1 === t ? x.removeAttr(e, i) : e.setAttribute(i, i), i;
      },
    }),
    x.each(x.expr.match.bool.source.match(/\w+/g), function (e, t) {
      var i = yt[t] || x.find.attr;
      yt[t] = function (e, t, s) {
        var n,
          a,
          r = t.toLowerCase();
        return (
          s ||
            ((a = yt[r]),
            (yt[r] = n),
            (n = null != i(e, t, s) ? r : null),
            (yt[r] = a)),
          n
        );
      };
    });
  var _t = /^(?:input|select|textarea|button)$/i,
    wt = /^(?:a|area)$/i;
  function xt(e) {
    return (e.match(B) || []).join(" ");
  }
  function Ct(e) {
    return (e.getAttribute && e.getAttribute("class")) || "";
  }
  function Tt(e) {
    return Array.isArray(e) ? e : ("string" == typeof e && e.match(B)) || [];
  }
  x.fn.extend({
    prop: function (e, t) {
      return Q(this, x.prop, e, t, 1 < arguments.length);
    },
    removeProp: function (e) {
      return this.each(function () {
        delete this[x.propFix[e] || e];
      });
    },
  }),
    x.extend({
      prop: function (e, t, i) {
        var s,
          n,
          a = e.nodeType;
        if (3 !== a && 8 !== a && 2 !== a)
          return (
            (1 === a && x.isXMLDoc(e)) ||
              ((t = x.propFix[t] || t), (n = x.propHooks[t])),
            void 0 !== i
              ? n && "set" in n && void 0 !== (s = n.set(e, i, t))
                ? s
                : (e[t] = i)
              : n && "get" in n && null !== (s = n.get(e, t))
              ? s
              : e[t]
          );
      },
      propHooks: {
        tabIndex: {
          get: function (e) {
            var t = x.find.attr(e, "tabindex");
            return t
              ? parseInt(t, 10)
              : _t.test(e.nodeName) || (wt.test(e.nodeName) && e.href)
              ? 0
              : -1;
          },
        },
      },
      propFix: { for: "htmlFor", class: "className" },
    }),
    p.optSelected ||
      (x.propHooks.selected = {
        get: function (e) {
          var t = e.parentNode;
          return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function (e) {
          var t = e.parentNode;
          t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        },
      }),
    x.each(
      [
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable",
      ],
      function () {
        x.propFix[this.toLowerCase()] = this;
      }
    ),
    x.fn.extend({
      addClass: function (e) {
        var t, i, s, n, a, r;
        return f(e)
          ? this.each(function (t) {
              x(this).addClass(e.call(this, t, Ct(this)));
            })
          : (t = Tt(e)).length
          ? this.each(function () {
              if (
                ((s = Ct(this)), (i = 1 === this.nodeType && " " + xt(s) + " "))
              ) {
                for (a = 0; a < t.length; a++)
                  (n = t[a]), i.indexOf(" " + n + " ") < 0 && (i += n + " ");
                (r = xt(i)), s !== r && this.setAttribute("class", r);
              }
            })
          : this;
      },
      removeClass: function (e) {
        var t, i, s, n, a, r;
        return f(e)
          ? this.each(function (t) {
              x(this).removeClass(e.call(this, t, Ct(this)));
            })
          : arguments.length
          ? (t = Tt(e)).length
            ? this.each(function () {
                if (
                  ((s = Ct(this)),
                  (i = 1 === this.nodeType && " " + xt(s) + " "))
                ) {
                  for (a = 0; a < t.length; a++)
                    for (n = t[a]; -1 < i.indexOf(" " + n + " "); )
                      i = i.replace(" " + n + " ", " ");
                  (r = xt(i)), s !== r && this.setAttribute("class", r);
                }
              })
            : this
          : this.attr("class", "");
      },
      toggleClass: function (e, t) {
        var i,
          s,
          n,
          a,
          r = typeof e,
          o = "string" === r || Array.isArray(e);
        return f(e)
          ? this.each(function (i) {
              x(this).toggleClass(e.call(this, i, Ct(this), t), t);
            })
          : "boolean" == typeof t && o
          ? t
            ? this.addClass(e)
            : this.removeClass(e)
          : ((i = Tt(e)),
            this.each(function () {
              if (o)
                for (a = x(this), n = 0; n < i.length; n++)
                  (s = i[n]), a.hasClass(s) ? a.removeClass(s) : a.addClass(s);
              else
                (void 0 !== e && "boolean" !== r) ||
                  ((s = Ct(this)) && ne.set(this, "__className__", s),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      s || !1 === e ? "" : ne.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (e) {
        var t,
          i,
          s = 0;
        for (t = " " + e + " "; (i = this[s++]); )
          if (1 === i.nodeType && -1 < (" " + xt(Ct(i)) + " ").indexOf(t))
            return !0;
        return !1;
      },
    });
  var St = /\r/g;
  x.fn.extend({
    val: function (e) {
      var t,
        i,
        s,
        n = this[0];
      return arguments.length
        ? ((s = f(e)),
          this.each(function (i) {
            var n;
            1 === this.nodeType &&
              (null == (n = s ? e.call(this, i, x(this).val()) : e)
                ? (n = "")
                : "number" == typeof n
                ? (n += "")
                : Array.isArray(n) &&
                  (n = x.map(n, function (e) {
                    return null == e ? "" : e + "";
                  })),
              ((t =
                x.valHooks[this.type] ||
                x.valHooks[this.nodeName.toLowerCase()]) &&
                "set" in t &&
                void 0 !== t.set(this, n, "value")) ||
                (this.value = n));
          }))
        : n
        ? (t = x.valHooks[n.type] || x.valHooks[n.nodeName.toLowerCase()]) &&
          "get" in t &&
          void 0 !== (i = t.get(n, "value"))
          ? i
          : "string" == typeof (i = n.value)
          ? i.replace(St, "")
          : null == i
          ? ""
          : i
        : void 0;
    },
  }),
    x.extend({
      valHooks: {
        option: {
          get: function (e) {
            var t = x.find.attr(e, "value");
            return null != t ? t : xt(x.text(e));
          },
        },
        select: {
          get: function (e) {
            var t,
              i,
              s,
              n = e.options,
              a = e.selectedIndex,
              r = "select-one" === e.type,
              o = r ? null : [],
              l = r ? a + 1 : n.length;
            for (s = a < 0 ? l : r ? a : 0; s < l; s++)
              if (
                ((i = n[s]).selected || s === a) &&
                !i.disabled &&
                (!i.parentNode.disabled || !T(i.parentNode, "optgroup"))
              ) {
                if (((t = x(i).val()), r)) return t;
                o.push(t);
              }
            return o;
          },
          set: function (e, t) {
            for (
              var i, s, n = e.options, a = x.makeArray(t), r = n.length;
              r--;

            )
              ((s = n[r]).selected =
                -1 < x.inArray(x.valHooks.option.get(s), a)) && (i = !0);
            return i || (e.selectedIndex = -1), a;
          },
        },
      },
    }),
    x.each(["radio", "checkbox"], function () {
      (x.valHooks[this] = {
        set: function (e, t) {
          if (Array.isArray(t))
            return (e.checked = -1 < x.inArray(x(e).val(), t));
        },
      }),
        p.checkOn ||
          (x.valHooks[this].get = function (e) {
            return null === e.getAttribute("value") ? "on" : e.value;
          });
    });
  var kt = e.location,
    Et = { guid: Date.now() },
    Mt = /\?/;
  x.parseXML = function (t) {
    var i, s;
    if (!t || "string" != typeof t) return null;
    try {
      i = new e.DOMParser().parseFromString(t, "text/xml");
    } catch (t) {}
    return (
      (s = i && i.getElementsByTagName("parsererror")[0]),
      (i && !s) ||
        x.error(
          "Invalid XML: " +
            (s
              ? x
                  .map(s.childNodes, function (e) {
                    return e.textContent;
                  })
                  .join("\n")
              : t)
        ),
      i
    );
  };
  var Dt = /^(?:focusinfocus|focusoutblur)$/,
    Pt = function (e) {
      e.stopPropagation();
    };
  x.extend(x.event, {
    trigger: function (t, i, s, n) {
      var a,
        r,
        o,
        l,
        c,
        d,
        u,
        p,
        v = [s || g],
        b = h.call(t, "type") ? t.type : t,
        y = h.call(t, "namespace") ? t.namespace.split(".") : [];
      if (
        ((r = p = o = s = s || g),
        3 !== s.nodeType &&
          8 !== s.nodeType &&
          !Dt.test(b + x.event.triggered) &&
          (-1 < b.indexOf(".") && ((b = (y = b.split(".")).shift()), y.sort()),
          (c = b.indexOf(":") < 0 && "on" + b),
          ((t = t[x.expando]
            ? t
            : new x.Event(b, "object" == typeof t && t)).isTrigger = n ? 2 : 3),
          (t.namespace = y.join(".")),
          (t.rnamespace = t.namespace
            ? new RegExp("(^|\\.)" + y.join("\\.(?:.*\\.|)") + "(\\.|$)")
            : null),
          (t.result = void 0),
          t.target || (t.target = s),
          (i = null == i ? [t] : x.makeArray(i, [t])),
          (u = x.event.special[b] || {}),
          n || !u.trigger || !1 !== u.trigger.apply(s, i)))
      ) {
        if (!n && !u.noBubble && !m(s)) {
          for (
            l = u.delegateType || b, Dt.test(l + b) || (r = r.parentNode);
            r;
            r = r.parentNode
          )
            v.push(r), (o = r);
          o === (s.ownerDocument || g) &&
            v.push(o.defaultView || o.parentWindow || e);
        }
        for (a = 0; (r = v[a++]) && !t.isPropagationStopped(); )
          (p = r),
            (t.type = 1 < a ? l : u.bindType || b),
            (d =
              (ne.get(r, "events") || Object.create(null))[t.type] &&
              ne.get(r, "handle")) && d.apply(r, i),
            (d = c && r[c]) &&
              d.apply &&
              ie(r) &&
              ((t.result = d.apply(r, i)),
              !1 === t.result && t.preventDefault());
        return (
          (t.type = b),
          n ||
            t.isDefaultPrevented() ||
            (u._default && !1 !== u._default.apply(v.pop(), i)) ||
            !ie(s) ||
            (c &&
              f(s[b]) &&
              !m(s) &&
              ((o = s[c]) && (s[c] = null),
              (x.event.triggered = b),
              t.isPropagationStopped() && p.addEventListener(b, Pt),
              s[b](),
              t.isPropagationStopped() && p.removeEventListener(b, Pt),
              (x.event.triggered = void 0),
              o && (s[c] = o))),
          t.result
        );
      }
    },
    simulate: function (e, t, i) {
      var s = x.extend(new x.Event(), i, { type: e, isSimulated: !0 });
      x.event.trigger(s, null, t);
    },
  }),
    x.fn.extend({
      trigger: function (e, t) {
        return this.each(function () {
          x.event.trigger(e, t, this);
        });
      },
      triggerHandler: function (e, t) {
        var i = this[0];
        if (i) return x.event.trigger(e, t, i, !0);
      },
    });
  var It = /\[\]$/,
    At = /\r?\n/g,
    Lt = /^(?:submit|button|image|reset|file)$/i,
    Ot = /^(?:input|select|textarea|keygen)/i;
  function zt(e, t, i, s) {
    var n;
    if (Array.isArray(t))
      x.each(t, function (t, n) {
        i || It.test(e)
          ? s(e, n)
          : zt(
              e + "[" + ("object" == typeof n && null != n ? t : "") + "]",
              n,
              i,
              s
            );
      });
    else if (i || "object" !== y(t)) s(e, t);
    else for (n in t) zt(e + "[" + n + "]", t[n], i, s);
  }
  (x.param = function (e, t) {
    var i,
      s = [],
      n = function (e, t) {
        var i = f(t) ? t() : t;
        s[s.length] =
          encodeURIComponent(e) + "=" + encodeURIComponent(null == i ? "" : i);
      };
    if (null == e) return "";
    if (Array.isArray(e) || (e.jquery && !x.isPlainObject(e)))
      x.each(e, function () {
        n(this.name, this.value);
      });
    else for (i in e) zt(i, e[i], t, n);
    return s.join("&");
  }),
    x.fn.extend({
      serialize: function () {
        return x.param(this.serializeArray());
      },
      serializeArray: function () {
        return this.map(function () {
          var e = x.prop(this, "elements");
          return e ? x.makeArray(e) : this;
        })
          .filter(function () {
            var e = this.type;
            return (
              this.name &&
              !x(this).is(":disabled") &&
              Ot.test(this.nodeName) &&
              !Lt.test(e) &&
              (this.checked || !we.test(e))
            );
          })
          .map(function (e, t) {
            var i = x(this).val();
            return null == i
              ? null
              : Array.isArray(i)
              ? x.map(i, function (e) {
                  return { name: t.name, value: e.replace(At, "\r\n") };
                })
              : { name: t.name, value: i.replace(At, "\r\n") };
          })
          .get();
      },
    });
  var Ht = /%20/g,
    Nt = /#.*$/,
    $t = /([?&])_=[^&]*/,
    Wt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
    Rt = /^(?:GET|HEAD)$/,
    Ft = /^\/\//,
    qt = {},
    jt = {},
    Bt = "*/".concat("*"),
    Yt = g.createElement("a");
  function Vt(e) {
    return function (t, i) {
      "string" != typeof t && ((i = t), (t = "*"));
      var s,
        n = 0,
        a = t.toLowerCase().match(B) || [];
      if (f(i))
        for (; (s = a[n++]); )
          "+" === s[0]
            ? ((s = s.slice(1) || "*"), (e[s] = e[s] || []).unshift(i))
            : (e[s] = e[s] || []).push(i);
    };
  }
  function Xt(e, t, i, s) {
    var n = {},
      a = e === jt;
    function r(o) {
      var l;
      return (
        (n[o] = !0),
        x.each(e[o] || [], function (e, o) {
          var c = o(t, i, s);
          return "string" != typeof c || a || n[c]
            ? a
              ? !(l = c)
              : void 0
            : (t.dataTypes.unshift(c), r(c), !1);
        }),
        l
      );
    }
    return r(t.dataTypes[0]) || (!n["*"] && r("*"));
  }
  function Gt(e, t) {
    var i,
      s,
      n = x.ajaxSettings.flatOptions || {};
    for (i in t) void 0 !== t[i] && ((n[i] ? e : s || (s = {}))[i] = t[i]);
    return s && x.extend(!0, e, s), e;
  }
  (Yt.href = kt.href),
    x.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: kt.href,
        type: "GET",
        isLocal:
          /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
            kt.protocol
          ),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": Bt,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": x.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (e, t) {
        return t ? Gt(Gt(e, x.ajaxSettings), t) : Gt(x.ajaxSettings, e);
      },
      ajaxPrefilter: Vt(qt),
      ajaxTransport: Vt(jt),
      ajax: function (t, i) {
        "object" == typeof t && ((i = t), (t = void 0)), (i = i || {});
        var s,
          n,
          a,
          r,
          o,
          l,
          c,
          h,
          d,
          u,
          p = x.ajaxSetup({}, i),
          f = p.context || p,
          m = p.context && (f.nodeType || f.jquery) ? x(f) : x.event,
          v = x.Deferred(),
          b = x.Callbacks("once memory"),
          y = p.statusCode || {},
          _ = {},
          w = {},
          C = "canceled",
          T = {
            readyState: 0,
            getResponseHeader: function (e) {
              var t;
              if (c) {
                if (!r)
                  for (r = {}; (t = Wt.exec(a)); )
                    r[t[1].toLowerCase() + " "] = (
                      r[t[1].toLowerCase() + " "] || []
                    ).concat(t[2]);
                t = r[e.toLowerCase() + " "];
              }
              return null == t ? null : t.join(", ");
            },
            getAllResponseHeaders: function () {
              return c ? a : null;
            },
            setRequestHeader: function (e, t) {
              return (
                null == c &&
                  ((e = w[e.toLowerCase()] = w[e.toLowerCase()] || e),
                  (_[e] = t)),
                this
              );
            },
            overrideMimeType: function (e) {
              return null == c && (p.mimeType = e), this;
            },
            statusCode: function (e) {
              var t;
              if (e)
                if (c) T.always(e[T.status]);
                else for (t in e) y[t] = [y[t], e[t]];
              return this;
            },
            abort: function (e) {
              var t = e || C;
              return s && s.abort(t), S(0, t), this;
            },
          };
        if (
          (v.promise(T),
          (p.url = ((t || p.url || kt.href) + "").replace(
            Ft,
            kt.protocol + "//"
          )),
          (p.type = i.method || i.type || p.method || p.type),
          (p.dataTypes = (p.dataType || "*").toLowerCase().match(B) || [""]),
          null == p.crossDomain)
        ) {
          l = g.createElement("a");
          try {
            (l.href = p.url),
              (l.href = l.href),
              (p.crossDomain =
                Yt.protocol + "//" + Yt.host != l.protocol + "//" + l.host);
          } catch (t) {
            p.crossDomain = !0;
          }
        }
        if (
          (p.data &&
            p.processData &&
            "string" != typeof p.data &&
            (p.data = x.param(p.data, p.traditional)),
          Xt(qt, p, i, T),
          c)
        )
          return T;
        for (d in ((h = x.event && p.global) &&
          0 == x.active++ &&
          x.event.trigger("ajaxStart"),
        (p.type = p.type.toUpperCase()),
        (p.hasContent = !Rt.test(p.type)),
        (n = p.url.replace(Nt, "")),
        p.hasContent
          ? p.data &&
            p.processData &&
            0 ===
              (p.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) &&
            (p.data = p.data.replace(Ht, "+"))
          : ((u = p.url.slice(n.length)),
            p.data &&
              (p.processData || "string" == typeof p.data) &&
              ((n += (Mt.test(n) ? "&" : "?") + p.data), delete p.data),
            !1 === p.cache &&
              ((n = n.replace($t, "$1")),
              (u = (Mt.test(n) ? "&" : "?") + "_=" + Et.guid++ + u)),
            (p.url = n + u)),
        p.ifModified &&
          (x.lastModified[n] &&
            T.setRequestHeader("If-Modified-Since", x.lastModified[n]),
          x.etag[n] && T.setRequestHeader("If-None-Match", x.etag[n])),
        ((p.data && p.hasContent && !1 !== p.contentType) || i.contentType) &&
          T.setRequestHeader("Content-Type", p.contentType),
        T.setRequestHeader(
          "Accept",
          p.dataTypes[0] && p.accepts[p.dataTypes[0]]
            ? p.accepts[p.dataTypes[0]] +
                ("*" !== p.dataTypes[0] ? ", " + Bt + "; q=0.01" : "")
            : p.accepts["*"]
        ),
        p.headers))
          T.setRequestHeader(d, p.headers[d]);
        if (p.beforeSend && (!1 === p.beforeSend.call(f, T, p) || c))
          return T.abort();
        if (
          ((C = "abort"),
          b.add(p.complete),
          T.done(p.success),
          T.fail(p.error),
          (s = Xt(jt, p, i, T)))
        ) {
          if (((T.readyState = 1), h && m.trigger("ajaxSend", [T, p]), c))
            return T;
          p.async &&
            0 < p.timeout &&
            (o = e.setTimeout(function () {
              T.abort("timeout");
            }, p.timeout));
          try {
            (c = !1), s.send(_, S);
          } catch (t) {
            if (c) throw t;
            S(-1, t);
          }
        } else S(-1, "No Transport");
        function S(t, i, r, l) {
          var d,
            u,
            g,
            _,
            w,
            C = i;
          c ||
            ((c = !0),
            o && e.clearTimeout(o),
            (s = void 0),
            (a = l || ""),
            (T.readyState = 0 < t ? 4 : 0),
            (d = (200 <= t && t < 300) || 304 === t),
            r &&
              (_ = (function (e, t, i) {
                for (
                  var s, n, a, r, o = e.contents, l = e.dataTypes;
                  "*" === l[0];

                )
                  l.shift(),
                    void 0 === s &&
                      (s = e.mimeType || t.getResponseHeader("Content-Type"));
                if (s)
                  for (n in o)
                    if (o[n] && o[n].test(s)) {
                      l.unshift(n);
                      break;
                    }
                if (l[0] in i) a = l[0];
                else {
                  for (n in i) {
                    if (!l[0] || e.converters[n + " " + l[0]]) {
                      a = n;
                      break;
                    }
                    r || (r = n);
                  }
                  a = a || r;
                }
                if (a) return a !== l[0] && l.unshift(a), i[a];
              })(p, T, r)),
            !d &&
              -1 < x.inArray("script", p.dataTypes) &&
              x.inArray("json", p.dataTypes) < 0 &&
              (p.converters["text script"] = function () {}),
            (_ = (function (e, t, i, s) {
              var n,
                a,
                r,
                o,
                l,
                c = {},
                h = e.dataTypes.slice();
              if (h[1])
                for (r in e.converters) c[r.toLowerCase()] = e.converters[r];
              for (a = h.shift(); a; )
                if (
                  (e.responseFields[a] && (i[e.responseFields[a]] = t),
                  !l && s && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                  (l = a),
                  (a = h.shift()))
                )
                  if ("*" === a) a = l;
                  else if ("*" !== l && l !== a) {
                    if (!(r = c[l + " " + a] || c["* " + a]))
                      for (n in c)
                        if (
                          (o = n.split(" "))[1] === a &&
                          (r = c[l + " " + o[0]] || c["* " + o[0]])
                        ) {
                          !0 === r
                            ? (r = c[n])
                            : !0 !== c[n] && ((a = o[0]), h.unshift(o[1]));
                          break;
                        }
                    if (!0 !== r)
                      if (r && e.throws) t = r(t);
                      else
                        try {
                          t = r(t);
                        } catch (e) {
                          return {
                            state: "parsererror",
                            error: r
                              ? e
                              : "No conversion from " + l + " to " + a,
                          };
                        }
                  }
              return { state: "success", data: t };
            })(p, _, T, d)),
            d
              ? (p.ifModified &&
                  ((w = T.getResponseHeader("Last-Modified")) &&
                    (x.lastModified[n] = w),
                  (w = T.getResponseHeader("etag")) && (x.etag[n] = w)),
                204 === t || "HEAD" === p.type
                  ? (C = "nocontent")
                  : 304 === t
                  ? (C = "notmodified")
                  : ((C = _.state), (u = _.data), (d = !(g = _.error))))
              : ((g = C), (!t && C) || ((C = "error"), t < 0 && (t = 0))),
            (T.status = t),
            (T.statusText = (i || C) + ""),
            d ? v.resolveWith(f, [u, C, T]) : v.rejectWith(f, [T, C, g]),
            T.statusCode(y),
            (y = void 0),
            h && m.trigger(d ? "ajaxSuccess" : "ajaxError", [T, p, d ? u : g]),
            b.fireWith(f, [T, C]),
            h &&
              (m.trigger("ajaxComplete", [T, p]),
              --x.active || x.event.trigger("ajaxStop")));
        }
        return T;
      },
      getJSON: function (e, t, i) {
        return x.get(e, t, i, "json");
      },
      getScript: function (e, t) {
        return x.get(e, void 0, t, "script");
      },
    }),
    x.each(["get", "post"], function (e, t) {
      x[t] = function (e, i, s, n) {
        return (
          f(i) && ((n = n || s), (s = i), (i = void 0)),
          x.ajax(
            x.extend(
              { url: e, type: t, dataType: n, data: i, success: s },
              x.isPlainObject(e) && e
            )
          )
        );
      };
    }),
    x.ajaxPrefilter(function (e) {
      var t;
      for (t in e.headers)
        "content-type" === t.toLowerCase() &&
          (e.contentType = e.headers[t] || "");
    }),
    (x._evalUrl = function (e, t, i) {
      return x.ajax({
        url: e,
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        converters: { "text script": function () {} },
        dataFilter: function (e) {
          x.globalEval(e, t, i);
        },
      });
    }),
    x.fn.extend({
      wrapAll: function (e) {
        var t;
        return (
          this[0] &&
            (f(e) && (e = e.call(this[0])),
            (t = x(e, this[0].ownerDocument).eq(0).clone(!0)),
            this[0].parentNode && t.insertBefore(this[0]),
            t
              .map(function () {
                for (var e = this; e.firstElementChild; )
                  e = e.firstElementChild;
                return e;
              })
              .append(this)),
          this
        );
      },
      wrapInner: function (e) {
        return f(e)
          ? this.each(function (t) {
              x(this).wrapInner(e.call(this, t));
            })
          : this.each(function () {
              var t = x(this),
                i = t.contents();
              i.length ? i.wrapAll(e) : t.append(e);
            });
      },
      wrap: function (e) {
        var t = f(e);
        return this.each(function (i) {
          x(this).wrapAll(t ? e.call(this, i) : e);
        });
      },
      unwrap: function (e) {
        return (
          this.parent(e)
            .not("body")
            .each(function () {
              x(this).replaceWith(this.childNodes);
            }),
          this
        );
      },
    }),
    (x.expr.pseudos.hidden = function (e) {
      return !x.expr.pseudos.visible(e);
    }),
    (x.expr.pseudos.visible = function (e) {
      return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
    }),
    (x.ajaxSettings.xhr = function () {
      try {
        return new e.XMLHttpRequest();
      } catch (e) {}
    });
  var Ut = { 0: 200, 1223: 204 },
    Kt = x.ajaxSettings.xhr();
  (p.cors = !!Kt && "withCredentials" in Kt),
    (p.ajax = Kt = !!Kt),
    x.ajaxTransport(function (t) {
      var i, s;
      if (p.cors || (Kt && !t.crossDomain))
        return {
          send: function (n, a) {
            var r,
              o = t.xhr();
            if (
              (o.open(t.type, t.url, t.async, t.username, t.password),
              t.xhrFields)
            )
              for (r in t.xhrFields) o[r] = t.xhrFields[r];
            for (r in (t.mimeType &&
              o.overrideMimeType &&
              o.overrideMimeType(t.mimeType),
            t.crossDomain ||
              n["X-Requested-With"] ||
              (n["X-Requested-With"] = "XMLHttpRequest"),
            n))
              o.setRequestHeader(r, n[r]);
            (i = function (e) {
              return function () {
                i &&
                  ((i =
                    s =
                    o.onload =
                    o.onerror =
                    o.onabort =
                    o.ontimeout =
                    o.onreadystatechange =
                      null),
                  "abort" === e
                    ? o.abort()
                    : "error" === e
                    ? "number" != typeof o.status
                      ? a(0, "error")
                      : a(o.status, o.statusText)
                    : a(
                        Ut[o.status] || o.status,
                        o.statusText,
                        "text" !== (o.responseType || "text") ||
                          "string" != typeof o.responseText
                          ? { binary: o.response }
                          : { text: o.responseText },
                        o.getAllResponseHeaders()
                      ));
              };
            }),
              (o.onload = i()),
              (s = o.onerror = o.ontimeout = i("error")),
              void 0 !== o.onabort
                ? (o.onabort = s)
                : (o.onreadystatechange = function () {
                    4 === o.readyState &&
                      e.setTimeout(function () {
                        i && s();
                      });
                  }),
              (i = i("abort"));
            try {
              o.send((t.hasContent && t.data) || null);
            } catch (n) {
              if (i) throw n;
            }
          },
          abort: function () {
            i && i();
          },
        };
    }),
    x.ajaxPrefilter(function (e) {
      e.crossDomain && (e.contents.script = !1);
    }),
    x.ajaxSetup({
      accepts: {
        script:
          "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
      },
      contents: { script: /\b(?:java|ecma)script\b/ },
      converters: {
        "text script": function (e) {
          return x.globalEval(e), e;
        },
      },
    }),
    x.ajaxPrefilter("script", function (e) {
      void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
    }),
    x.ajaxTransport("script", function (e) {
      var t, i;
      if (e.crossDomain || e.scriptAttrs)
        return {
          send: function (s, n) {
            (t = x("<script>")
              .attr(e.scriptAttrs || {})
              .prop({ charset: e.scriptCharset, src: e.url })
              .on(
                "load error",
                (i = function (e) {
                  t.remove(),
                    (i = null),
                    e && n("error" === e.type ? 404 : 200, e.type);
                })
              )),
              g.head.appendChild(t[0]);
          },
          abort: function () {
            i && i();
          },
        };
    });
  var Qt,
    Jt = [],
    Zt = /(=)\?(?=&|$)|\?\?/;
  x.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function () {
      var e = Jt.pop() || x.expando + "_" + Et.guid++;
      return (this[e] = !0), e;
    },
  }),
    x.ajaxPrefilter("json jsonp", function (t, i, s) {
      var n,
        a,
        r,
        o =
          !1 !== t.jsonp &&
          (Zt.test(t.url)
            ? "url"
            : "string" == typeof t.data &&
              0 ===
                (t.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) &&
              Zt.test(t.data) &&
              "data");
      if (o || "jsonp" === t.dataTypes[0])
        return (
          (n = t.jsonpCallback =
            f(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback),
          o
            ? (t[o] = t[o].replace(Zt, "$1" + n))
            : !1 !== t.jsonp &&
              (t.url += (Mt.test(t.url) ? "&" : "?") + t.jsonp + "=" + n),
          (t.converters["script json"] = function () {
            return r || x.error(n + " was not called"), r[0];
          }),
          (t.dataTypes[0] = "json"),
          (a = e[n]),
          (e[n] = function () {
            r = arguments;
          }),
          s.always(function () {
            void 0 === a ? x(e).removeProp(n) : (e[n] = a),
              t[n] && ((t.jsonpCallback = i.jsonpCallback), Jt.push(n)),
              r && f(a) && a(r[0]),
              (r = a = void 0);
          }),
          "script"
        );
    }),
    (p.createHTMLDocument =
      (((Qt = g.implementation.createHTMLDocument("").body).innerHTML =
        "<form></form><form></form>"),
      2 === Qt.childNodes.length)),
    (x.parseHTML = function (e, t, i) {
      return "string" != typeof e
        ? []
        : ("boolean" == typeof t && ((i = t), (t = !1)),
          t ||
            (p.createHTMLDocument
              ? (((s = (t =
                  g.implementation.createHTMLDocument("")).createElement(
                  "base"
                )).href = g.location.href),
                t.head.appendChild(s))
              : (t = g)),
          (a = !i && []),
          (n = N.exec(e))
            ? [t.createElement(n[1])]
            : ((n = Me([e], t, a)),
              a && a.length && x(a).remove(),
              x.merge([], n.childNodes)));
      var s, n, a;
    }),
    (x.fn.load = function (e, t, i) {
      var s,
        n,
        a,
        r = this,
        o = e.indexOf(" ");
      return (
        -1 < o && ((s = xt(e.slice(o))), (e = e.slice(0, o))),
        f(t)
          ? ((i = t), (t = void 0))
          : t && "object" == typeof t && (n = "POST"),
        0 < r.length &&
          x
            .ajax({ url: e, type: n || "GET", dataType: "html", data: t })
            .done(function (e) {
              (a = arguments),
                r.html(s ? x("<div>").append(x.parseHTML(e)).find(s) : e);
            })
            .always(
              i &&
                function (e, t) {
                  r.each(function () {
                    i.apply(this, a || [e.responseText, t, e]);
                  });
                }
            ),
        this
      );
    }),
    (x.expr.pseudos.animated = function (e) {
      return x.grep(x.timers, function (t) {
        return e === t.elem;
      }).length;
    }),
    (x.offset = {
      setOffset: function (e, t, i) {
        var s,
          n,
          a,
          r,
          o,
          l,
          c = x.css(e, "position"),
          h = x(e),
          d = {};
        "static" === c && (e.style.position = "relative"),
          (o = h.offset()),
          (a = x.css(e, "top")),
          (l = x.css(e, "left")),
          ("absolute" === c || "fixed" === c) && -1 < (a + l).indexOf("auto")
            ? ((r = (s = h.position()).top), (n = s.left))
            : ((r = parseFloat(a) || 0), (n = parseFloat(l) || 0)),
          f(t) && (t = t.call(e, i, x.extend({}, o))),
          null != t.top && (d.top = t.top - o.top + r),
          null != t.left && (d.left = t.left - o.left + n),
          "using" in t ? t.using.call(e, d) : h.css(d);
      },
    }),
    x.fn.extend({
      offset: function (e) {
        if (arguments.length)
          return void 0 === e
            ? this
            : this.each(function (t) {
                x.offset.setOffset(this, e, t);
              });
        var t,
          i,
          s = this[0];
        return s
          ? s.getClientRects().length
            ? ((t = s.getBoundingClientRect()),
              (i = s.ownerDocument.defaultView),
              { top: t.top + i.pageYOffset, left: t.left + i.pageXOffset })
            : { top: 0, left: 0 }
          : void 0;
      },
      position: function () {
        if (this[0]) {
          var e,
            t,
            i,
            s = this[0],
            n = { top: 0, left: 0 };
          if ("fixed" === x.css(s, "position")) t = s.getBoundingClientRect();
          else {
            for (
              t = this.offset(),
                i = s.ownerDocument,
                e = s.offsetParent || i.documentElement;
              e &&
              (e === i.body || e === i.documentElement) &&
              "static" === x.css(e, "position");

            )
              e = e.parentNode;
            e &&
              e !== s &&
              1 === e.nodeType &&
              (((n = x(e).offset()).top += x.css(e, "borderTopWidth", !0)),
              (n.left += x.css(e, "borderLeftWidth", !0)));
          }
          return {
            top: t.top - n.top - x.css(s, "marginTop", !0),
            left: t.left - n.left - x.css(s, "marginLeft", !0),
          };
        }
      },
      offsetParent: function () {
        return this.map(function () {
          for (
            var e = this.offsetParent;
            e && "static" === x.css(e, "position");

          )
            e = e.offsetParent;
          return e || ue;
        });
      },
    }),
    x.each(
      { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
      function (e, t) {
        var i = "pageYOffset" === t;
        x.fn[e] = function (s) {
          return Q(
            this,
            function (e, s, n) {
              var a;
              if (
                (m(e) ? (a = e) : 9 === e.nodeType && (a = e.defaultView),
                void 0 === n)
              )
                return a ? a[t] : e[s];
              a
                ? a.scrollTo(i ? a.pageXOffset : n, i ? n : a.pageYOffset)
                : (e[s] = n);
            },
            e,
            s,
            arguments.length
          );
        };
      }
    ),
    x.each(["top", "left"], function (e, t) {
      x.cssHooks[t] = Ue(p.pixelPosition, function (e, i) {
        if (i)
          return (i = Ge(e, t)), je.test(i) ? x(e).position()[t] + "px" : i;
      });
    }),
    x.each({ Height: "height", Width: "width" }, function (e, t) {
      x.each(
        { padding: "inner" + e, content: t, "": "outer" + e },
        function (i, s) {
          x.fn[s] = function (n, a) {
            var r = arguments.length && (i || "boolean" != typeof n),
              o = i || (!0 === n || !0 === a ? "margin" : "border");
            return Q(
              this,
              function (t, i, n) {
                var a;
                return m(t)
                  ? 0 === s.indexOf("outer")
                    ? t["inner" + e]
                    : t.document.documentElement["client" + e]
                  : 9 === t.nodeType
                  ? ((a = t.documentElement),
                    Math.max(
                      t.body["scroll" + e],
                      a["scroll" + e],
                      t.body["offset" + e],
                      a["offset" + e],
                      a["client" + e]
                    ))
                  : void 0 === n
                  ? x.css(t, i, o)
                  : x.style(t, i, n, o);
              },
              t,
              r ? n : void 0,
              r
            );
          };
        }
      );
    }),
    x.each(
      [
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend",
      ],
      function (e, t) {
        x.fn[t] = function (e) {
          return this.on(t, e);
        };
      }
    ),
    x.fn.extend({
      bind: function (e, t, i) {
        return this.on(e, null, t, i);
      },
      unbind: function (e, t) {
        return this.off(e, null, t);
      },
      delegate: function (e, t, i, s) {
        return this.on(t, e, i, s);
      },
      undelegate: function (e, t, i) {
        return 1 === arguments.length
          ? this.off(e, "**")
          : this.off(t, e || "**", i);
      },
      hover: function (e, t) {
        return this.on("mouseenter", e).on("mouseleave", t || e);
      },
    }),
    x.each(
      "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
        " "
      ),
      function (e, t) {
        x.fn[t] = function (e, i) {
          return 0 < arguments.length
            ? this.on(t, null, e, i)
            : this.trigger(t);
        };
      }
    );
  var ei = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
  (x.proxy = function (e, t) {
    var i, s, a;
    if (("string" == typeof t && ((i = e[t]), (t = e), (e = i)), f(e)))
      return (
        (s = n.call(arguments, 2)),
        ((a = function () {
          return e.apply(t || this, s.concat(n.call(arguments)));
        }).guid = e.guid =
          e.guid || x.guid++),
        a
      );
  }),
    (x.holdReady = function (e) {
      e ? x.readyWait++ : x.ready(!0);
    }),
    (x.isArray = Array.isArray),
    (x.parseJSON = JSON.parse),
    (x.nodeName = T),
    (x.isFunction = f),
    (x.isWindow = m),
    (x.camelCase = te),
    (x.type = y),
    (x.now = Date.now),
    (x.isNumeric = function (e) {
      var t = x.type(e);
      return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
    }),
    (x.trim = function (e) {
      return null == e ? "" : (e + "").replace(ei, "$1");
    }),
    "function" == typeof define &&
      define.amd &&
      define("jquery", [], function () {
        return x;
      });
  var ti = e.jQuery,
    ii = e.$;
  return (
    (x.noConflict = function (t) {
      return e.$ === x && (e.$ = ii), t && e.jQuery === x && (e.jQuery = ti), x;
    }),
    void 0 === t && (e.jQuery = e.$ = x),
    x
  );
});
var Swiper = (function () {
  "use strict";
  function e(e) {
    return (
      null !== e &&
      "object" == typeof e &&
      "constructor" in e &&
      e.constructor === Object
    );
  }
  function t(i, s) {
    void 0 === i && (i = {}),
      void 0 === s && (s = {}),
      Object.keys(s).forEach((n) => {
        void 0 === i[n]
          ? (i[n] = s[n])
          : e(s[n]) && e(i[n]) && Object.keys(s[n]).length > 0 && t(i[n], s[n]);
      });
  }
  const i = {
    body: {},
    addEventListener() {},
    removeEventListener() {},
    activeElement: { blur() {}, nodeName: "" },
    querySelector: () => null,
    querySelectorAll: () => [],
    getElementById: () => null,
    createEvent: () => ({ initEvent() {} }),
    createElement: () => ({
      children: [],
      childNodes: [],
      style: {},
      setAttribute() {},
      getElementsByTagName: () => [],
    }),
    createElementNS: () => ({}),
    importNode: () => null,
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
  };
  function s() {
    const e = "undefined" != typeof document ? document : {};
    return t(e, i), e;
  }
  const n = {
    document: i,
    navigator: { userAgent: "" },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: "",
    },
    history: { replaceState() {}, pushState() {}, go() {}, back() {} },
    CustomEvent: function () {
      return this;
    },
    addEventListener() {},
    removeEventListener() {},
    getComputedStyle: () => ({ getPropertyValue: () => "" }),
    Image() {},
    Date() {},
    screen: {},
    setTimeout() {},
    clearTimeout() {},
    matchMedia: () => ({}),
    requestAnimationFrame: (e) =>
      "undefined" == typeof setTimeout ? (e(), null) : setTimeout(e, 0),
    cancelAnimationFrame(e) {
      "undefined" != typeof setTimeout && clearTimeout(e);
    },
  };
  function a() {
    const e = "undefined" != typeof window ? window : {};
    return t(e, n), e;
  }
  function r(e) {
    return (
      void 0 === e && (e = ""),
      e
        .trim()
        .split(" ")
        .filter((e) => !!e.trim())
    );
  }
  function o(e, t) {
    return void 0 === t && (t = 0), setTimeout(e, t);
  }
  function l() {
    return Date.now();
  }
  function c(e, t) {
    void 0 === t && (t = "x");
    const i = a();
    let s, n, r;
    const o = (function (e) {
      const t = a();
      let i;
      return (
        t.getComputedStyle && (i = t.getComputedStyle(e, null)),
        !i && e.currentStyle && (i = e.currentStyle),
        i || (i = e.style),
        i
      );
    })(e);
    return (
      i.WebKitCSSMatrix
        ? ((n = o.transform || o.webkitTransform),
          n.split(",").length > 6 &&
            (n = n
              .split(", ")
              .map((e) => e.replace(",", "."))
              .join(", ")),
          (r = new i.WebKitCSSMatrix("none" === n ? "" : n)))
        : ((r =
            o.MozTransform ||
            o.OTransform ||
            o.MsTransform ||
            o.msTransform ||
            o.transform ||
            o
              .getPropertyValue("transform")
              .replace("translate(", "matrix(1, 0, 0, 1,")),
          (s = r.toString().split(","))),
      "x" === t &&
        (n = i.WebKitCSSMatrix
          ? r.m41
          : 16 === s.length
          ? parseFloat(s[12])
          : parseFloat(s[4])),
      "y" === t &&
        (n = i.WebKitCSSMatrix
          ? r.m42
          : 16 === s.length
          ? parseFloat(s[13])
          : parseFloat(s[5])),
      n || 0
    );
  }
  function h(e) {
    return (
      "object" == typeof e &&
      null !== e &&
      e.constructor &&
      "Object" === Object.prototype.toString.call(e).slice(8, -1)
    );
  }
  function d(e) {
    return "undefined" != typeof window && void 0 !== window.HTMLElement
      ? e instanceof HTMLElement
      : e && (1 === e.nodeType || 11 === e.nodeType);
  }
  function u() {
    const e = Object(arguments.length <= 0 ? void 0 : arguments[0]),
      t = ["__proto__", "constructor", "prototype"];
    for (let i = 1; i < arguments.length; i += 1) {
      const s = i < 0 || arguments.length <= i ? void 0 : arguments[i];
      if (null != s && !d(s)) {
        const i = Object.keys(Object(s)).filter((e) => t.indexOf(e) < 0);
        for (let t = 0, n = i.length; t < n; t += 1) {
          const n = i[t],
            a = Object.getOwnPropertyDescriptor(s, n);
          void 0 !== a &&
            a.enumerable &&
            (h(e[n]) && h(s[n])
              ? s[n].__swiper__
                ? (e[n] = s[n])
                : u(e[n], s[n])
              : !h(e[n]) && h(s[n])
              ? ((e[n] = {}), s[n].__swiper__ ? (e[n] = s[n]) : u(e[n], s[n]))
              : (e[n] = s[n]));
        }
      }
    }
    return e;
  }
  function p(e, t, i) {
    e.style.setProperty(t, i);
  }
  function f(e) {
    let { swiper: t, targetPosition: i, side: s } = e;
    const n = a(),
      r = -t.translate;
    let o,
      l = null;
    const c = t.params.speed;
    (t.wrapperEl.style.scrollSnapType = "none"),
      n.cancelAnimationFrame(t.cssModeFrameID);
    const h = i > r ? "next" : "prev",
      d = (e, t) => ("next" === h && e >= t) || ("prev" === h && e <= t),
      u = () => {
        (o = new Date().getTime()), null === l && (l = o);
        const e = Math.max(Math.min((o - l) / c, 1), 0),
          a = 0.5 - Math.cos(e * Math.PI) / 2;
        let h = r + a * (i - r);
        if ((d(h, i) && (h = i), t.wrapperEl.scrollTo({ [s]: h }), d(h, i)))
          return (
            (t.wrapperEl.style.overflow = "hidden"),
            (t.wrapperEl.style.scrollSnapType = ""),
            setTimeout(() => {
              (t.wrapperEl.style.overflow = ""),
                t.wrapperEl.scrollTo({ [s]: h });
            }),
            void n.cancelAnimationFrame(t.cssModeFrameID)
          );
        t.cssModeFrameID = n.requestAnimationFrame(u);
      };
    u();
  }
  function m(e) {
    return (
      e.querySelector(".swiper-slide-transform") ||
      (e.shadowRoot && e.shadowRoot.querySelector(".swiper-slide-transform")) ||
      e
    );
  }
  function g(e, t) {
    return (
      void 0 === t && (t = ""), [...e.children].filter((e) => e.matches(t))
    );
  }
  function v(e) {
    try {
      return void console.warn(e);
    } catch (e) {}
  }
  function b(e, t) {
    void 0 === t && (t = []);
    const i = document.createElement(e);
    return i.classList.add(...(Array.isArray(t) ? t : r(t))), i;
  }
  function y(e) {
    const t = a(),
      i = s(),
      n = e.getBoundingClientRect(),
      r = i.body,
      o = e.clientTop || r.clientTop || 0,
      l = e.clientLeft || r.clientLeft || 0,
      c = e === t ? t.scrollY : e.scrollTop,
      h = e === t ? t.scrollX : e.scrollLeft;
    return { top: n.top + c - o, left: n.left + h - l };
  }
  function _(e, t) {
    return a().getComputedStyle(e, null).getPropertyValue(t);
  }
  function w(e) {
    let t,
      i = e;
    if (i) {
      for (t = 0; null !== (i = i.previousSibling); )
        1 === i.nodeType && (t += 1);
      return t;
    }
  }
  function x(e, t) {
    const i = [];
    let s = e.parentElement;
    for (; s; )
      t ? s.matches(t) && i.push(s) : i.push(s), (s = s.parentElement);
    return i;
  }
  function C(e, t) {
    t &&
      e.addEventListener("transitionend", function i(s) {
        s.target === e &&
          (t.call(e, s), e.removeEventListener("transitionend", i));
      });
  }
  function T(e, t, i) {
    const s = a();
    return i
      ? e["width" === t ? "offsetWidth" : "offsetHeight"] +
          parseFloat(
            s
              .getComputedStyle(e, null)
              .getPropertyValue("width" === t ? "margin-right" : "margin-top")
          ) +
          parseFloat(
            s
              .getComputedStyle(e, null)
              .getPropertyValue("width" === t ? "margin-left" : "margin-bottom")
          )
      : e.offsetWidth;
  }
  let S, k, E;
  function M() {
    return (
      S ||
        (S = (function () {
          const e = a(),
            t = s();
          return {
            smoothScroll:
              t.documentElement &&
              t.documentElement.style &&
              "scrollBehavior" in t.documentElement.style,
            touch: !!(
              "ontouchstart" in e ||
              (e.DocumentTouch && t instanceof e.DocumentTouch)
            ),
          };
        })()),
      S
    );
  }
  function D(e) {
    return (
      void 0 === e && (e = {}),
      k ||
        (k = (function (e) {
          let { userAgent: t } = void 0 === e ? {} : e;
          const i = M(),
            s = a(),
            n = s.navigator.platform,
            r = t || s.navigator.userAgent,
            o = { ios: !1, android: !1 },
            l = s.screen.width,
            c = s.screen.height,
            h = r.match(/(Android);?[\s\/]+([\d.]+)?/);
          let d = r.match(/(iPad).*OS\s([\d_]+)/);
          const u = r.match(/(iPod)(.*OS\s([\d_]+))?/),
            p = !d && r.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
            f = "Win32" === n;
          let m = "MacIntel" === n;
          return (
            !d &&
              m &&
              i.touch &&
              [
                "1024x1366",
                "1366x1024",
                "834x1194",
                "1194x834",
                "834x1112",
                "1112x834",
                "768x1024",
                "1024x768",
                "820x1180",
                "1180x820",
                "810x1080",
                "1080x810",
              ].indexOf(`${l}x${c}`) >= 0 &&
              ((d = r.match(/(Version)\/([\d.]+)/)),
              d || (d = [0, 1, "13_0_0"]),
              (m = !1)),
            h && !f && ((o.os = "android"), (o.android = !0)),
            (d || p || u) && ((o.os = "ios"), (o.ios = !0)),
            o
          );
        })(e)),
      k
    );
  }
  function P() {
    return (
      E ||
        (E = (function () {
          const e = a();
          let t = !1;
          function i() {
            const t = e.navigator.userAgent.toLowerCase();
            return (
              t.indexOf("safari") >= 0 &&
              t.indexOf("chrome") < 0 &&
              t.indexOf("android") < 0
            );
          }
          if (i()) {
            const i = String(e.navigator.userAgent);
            if (i.includes("Version/")) {
              const [e, s] = i
                .split("Version/")[1]
                .split(" ")[0]
                .split(".")
                .map((e) => Number(e));
              t = e < 16 || (16 === e && s < 2);
            }
          }
          return {
            isSafari: t || i(),
            needPerspectiveFix: t,
            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
              e.navigator.userAgent
            ),
          };
        })()),
      E
    );
  }
  var I = {
    on(e, t, i) {
      const s = this;
      if (!s.eventsListeners || s.destroyed) return s;
      if ("function" != typeof t) return s;
      const n = i ? "unshift" : "push";
      return (
        e.split(" ").forEach((e) => {
          s.eventsListeners[e] || (s.eventsListeners[e] = []),
            s.eventsListeners[e][n](t);
        }),
        s
      );
    },
    once(e, t, i) {
      const s = this;
      if (!s.eventsListeners || s.destroyed) return s;
      if ("function" != typeof t) return s;
      function n() {
        s.off(e, n), n.__emitterProxy && delete n.__emitterProxy;
        for (var i = arguments.length, a = new Array(i), r = 0; r < i; r++)
          a[r] = arguments[r];
        t.apply(s, a);
      }
      return (n.__emitterProxy = t), s.on(e, n, i);
    },
    onAny(e, t) {
      const i = this;
      if (!i.eventsListeners || i.destroyed) return i;
      if ("function" != typeof e) return i;
      const s = t ? "unshift" : "push";
      return (
        i.eventsAnyListeners.indexOf(e) < 0 && i.eventsAnyListeners[s](e), i
      );
    },
    offAny(e) {
      const t = this;
      if (!t.eventsListeners || t.destroyed) return t;
      if (!t.eventsAnyListeners) return t;
      const i = t.eventsAnyListeners.indexOf(e);
      return i >= 0 && t.eventsAnyListeners.splice(i, 1), t;
    },
    off(e, t) {
      const i = this;
      return !i.eventsListeners || i.destroyed
        ? i
        : i.eventsListeners
        ? (e.split(" ").forEach((e) => {
            void 0 === t
              ? (i.eventsListeners[e] = [])
              : i.eventsListeners[e] &&
                i.eventsListeners[e].forEach((s, n) => {
                  (s === t || (s.__emitterProxy && s.__emitterProxy === t)) &&
                    i.eventsListeners[e].splice(n, 1);
                });
          }),
          i)
        : i;
    },
    emit() {
      const e = this;
      if (!e.eventsListeners || e.destroyed) return e;
      if (!e.eventsListeners) return e;
      let t, i, s;
      for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
        a[r] = arguments[r];
      "string" == typeof a[0] || Array.isArray(a[0])
        ? ((t = a[0]), (i = a.slice(1, a.length)), (s = e))
        : ((t = a[0].events), (i = a[0].data), (s = a[0].context || e)),
        i.unshift(s);
      return (
        (Array.isArray(t) ? t : t.split(" ")).forEach((t) => {
          e.eventsAnyListeners &&
            e.eventsAnyListeners.length &&
            e.eventsAnyListeners.forEach((e) => {
              e.apply(s, [t, ...i]);
            }),
            e.eventsListeners &&
              e.eventsListeners[t] &&
              e.eventsListeners[t].forEach((e) => {
                e.apply(s, i);
              });
        }),
        e
      );
    },
  };
  const A = (e, t) => {
      if (!e || e.destroyed || !e.params) return;
      const i = t.closest(
        e.isElement ? "swiper-slide" : `.${e.params.slideClass}`
      );
      if (i) {
        let t = i.querySelector(`.${e.params.lazyPreloaderClass}`);
        !t &&
          e.isElement &&
          (i.shadowRoot
            ? (t = i.shadowRoot.querySelector(
                `.${e.params.lazyPreloaderClass}`
              ))
            : requestAnimationFrame(() => {
                i.shadowRoot &&
                  ((t = i.shadowRoot.querySelector(
                    `.${e.params.lazyPreloaderClass}`
                  )),
                  t && t.remove());
              })),
          t && t.remove();
      }
    },
    L = (e, t) => {
      if (!e.slides[t]) return;
      const i = e.slides[t].querySelector('[loading="lazy"]');
      i && i.removeAttribute("loading");
    },
    O = (e) => {
      if (!e || e.destroyed || !e.params) return;
      let t = e.params.lazyPreloadPrevNext;
      const i = e.slides.length;
      if (!i || !t || t < 0) return;
      t = Math.min(t, i);
      const s =
          "auto" === e.params.slidesPerView
            ? e.slidesPerViewDynamic()
            : Math.ceil(e.params.slidesPerView),
        n = e.activeIndex;
      if (e.params.grid && e.params.grid.rows > 1) {
        const i = n,
          a = [i - t];
        return (
          a.push(...Array.from({ length: t }).map((e, t) => i + s + t)),
          void e.slides.forEach((t, i) => {
            a.includes(t.column) && L(e, i);
          })
        );
      }
      const a = n + s - 1;
      if (e.params.rewind || e.params.loop)
        for (let s = n - t; s <= a + t; s += 1) {
          const t = ((s % i) + i) % i;
          (t < n || t > a) && L(e, t);
        }
      else
        for (let s = Math.max(n - t, 0); s <= Math.min(a + t, i - 1); s += 1)
          s !== n && (s > a || s < n) && L(e, s);
    };
  var z = {
    updateSize: function () {
      const e = this;
      let t, i;
      const s = e.el;
      (t =
        void 0 !== e.params.width && null !== e.params.width
          ? e.params.width
          : s.clientWidth),
        (i =
          void 0 !== e.params.height && null !== e.params.height
            ? e.params.height
            : s.clientHeight),
        (0 === t && e.isHorizontal()) ||
          (0 === i && e.isVertical()) ||
          ((t =
            t -
            parseInt(_(s, "padding-left") || 0, 10) -
            parseInt(_(s, "padding-right") || 0, 10)),
          (i =
            i -
            parseInt(_(s, "padding-top") || 0, 10) -
            parseInt(_(s, "padding-bottom") || 0, 10)),
          Number.isNaN(t) && (t = 0),
          Number.isNaN(i) && (i = 0),
          Object.assign(e, {
            width: t,
            height: i,
            size: e.isHorizontal() ? t : i,
          }));
    },
    updateSlides: function () {
      const e = this;
      function t(t, i) {
        return parseFloat(t.getPropertyValue(e.getDirectionLabel(i)) || 0);
      }
      const i = e.params,
        {
          wrapperEl: s,
          slidesEl: n,
          size: a,
          rtlTranslate: r,
          wrongRTL: o,
        } = e,
        l = e.virtual && i.virtual.enabled,
        c = l ? e.virtual.slides.length : e.slides.length,
        h = g(n, `.${e.params.slideClass}, swiper-slide`),
        d = l ? e.virtual.slides.length : h.length;
      let u = [];
      const f = [],
        m = [];
      let v = i.slidesOffsetBefore;
      "function" == typeof v && (v = i.slidesOffsetBefore.call(e));
      let b = i.slidesOffsetAfter;
      "function" == typeof b && (b = i.slidesOffsetAfter.call(e));
      const y = e.snapGrid.length,
        w = e.slidesGrid.length;
      let x = i.spaceBetween,
        C = -v,
        S = 0,
        k = 0;
      if (void 0 === a) return;
      "string" == typeof x && x.indexOf("%") >= 0
        ? (x = (parseFloat(x.replace("%", "")) / 100) * a)
        : "string" == typeof x && (x = parseFloat(x)),
        (e.virtualSize = -x),
        h.forEach((e) => {
          r ? (e.style.marginLeft = "") : (e.style.marginRight = ""),
            (e.style.marginBottom = ""),
            (e.style.marginTop = "");
        }),
        i.centeredSlides &&
          i.cssMode &&
          (p(s, "--swiper-centered-offset-before", ""),
          p(s, "--swiper-centered-offset-after", ""));
      const E = i.grid && i.grid.rows > 1 && e.grid;
      let M;
      E ? e.grid.initSlides(h) : e.grid && e.grid.unsetSlides();
      const D =
        "auto" === i.slidesPerView &&
        i.breakpoints &&
        Object.keys(i.breakpoints).filter(
          (e) => void 0 !== i.breakpoints[e].slidesPerView
        ).length > 0;
      for (let s = 0; s < d; s += 1) {
        let n;
        if (
          ((M = 0),
          h[s] && (n = h[s]),
          E && e.grid.updateSlide(s, n, h),
          !h[s] || "none" !== _(n, "display"))
        ) {
          if ("auto" === i.slidesPerView) {
            D && (h[s].style[e.getDirectionLabel("width")] = "");
            const a = getComputedStyle(n),
              r = n.style.transform,
              o = n.style.webkitTransform;
            if (
              (r && (n.style.transform = "none"),
              o && (n.style.webkitTransform = "none"),
              i.roundLengths)
            )
              M = e.isHorizontal() ? T(n, "width", !0) : T(n, "height", !0);
            else {
              const e = t(a, "width"),
                i = t(a, "padding-left"),
                s = t(a, "padding-right"),
                r = t(a, "margin-left"),
                o = t(a, "margin-right"),
                l = a.getPropertyValue("box-sizing");
              if (l && "border-box" === l) M = e + r + o;
              else {
                const { clientWidth: t, offsetWidth: a } = n;
                M = e + i + s + r + o + (a - t);
              }
            }
            r && (n.style.transform = r),
              o && (n.style.webkitTransform = o),
              i.roundLengths && (M = Math.floor(M));
          } else
            (M = (a - (i.slidesPerView - 1) * x) / i.slidesPerView),
              i.roundLengths && (M = Math.floor(M)),
              h[s] && (h[s].style[e.getDirectionLabel("width")] = `${M}px`);
          h[s] && (h[s].swiperSlideSize = M),
            m.push(M),
            i.centeredSlides
              ? ((C = C + M / 2 + S / 2 + x),
                0 === S && 0 !== s && (C = C - a / 2 - x),
                0 === s && (C = C - a / 2 - x),
                Math.abs(C) < 0.001 && (C = 0),
                i.roundLengths && (C = Math.floor(C)),
                k % i.slidesPerGroup == 0 && u.push(C),
                f.push(C))
              : (i.roundLengths && (C = Math.floor(C)),
                (k - Math.min(e.params.slidesPerGroupSkip, k)) %
                  e.params.slidesPerGroup ==
                  0 && u.push(C),
                f.push(C),
                (C = C + M + x)),
            (e.virtualSize += M + x),
            (S = M),
            (k += 1);
        }
      }
      if (
        ((e.virtualSize = Math.max(e.virtualSize, a) + b),
        r &&
          o &&
          ("slide" === i.effect || "coverflow" === i.effect) &&
          (s.style.width = `${e.virtualSize + x}px`),
        i.setWrapperSize &&
          (s.style[e.getDirectionLabel("width")] = `${e.virtualSize + x}px`),
        E && e.grid.updateWrapperSize(M, u),
        !i.centeredSlides)
      ) {
        const t = [];
        for (let s = 0; s < u.length; s += 1) {
          let n = u[s];
          i.roundLengths && (n = Math.floor(n)),
            u[s] <= e.virtualSize - a && t.push(n);
        }
        (u = t),
          Math.floor(e.virtualSize - a) - Math.floor(u[u.length - 1]) > 1 &&
            u.push(e.virtualSize - a);
      }
      if (l && i.loop) {
        const t = m[0] + x;
        if (i.slidesPerGroup > 1) {
          const s = Math.ceil(
              (e.virtual.slidesBefore + e.virtual.slidesAfter) /
                i.slidesPerGroup
            ),
            n = t * i.slidesPerGroup;
          for (let e = 0; e < s; e += 1) u.push(u[u.length - 1] + n);
        }
        for (
          let s = 0;
          s < e.virtual.slidesBefore + e.virtual.slidesAfter;
          s += 1
        )
          1 === i.slidesPerGroup && u.push(u[u.length - 1] + t),
            f.push(f[f.length - 1] + t),
            (e.virtualSize += t);
      }
      if ((0 === u.length && (u = [0]), 0 !== x)) {
        const t =
          e.isHorizontal() && r
            ? "marginLeft"
            : e.getDirectionLabel("marginRight");
        h.filter(
          (e, t) => !(i.cssMode && !i.loop) || t !== h.length - 1
        ).forEach((e) => {
          e.style[t] = `${x}px`;
        });
      }
      if (i.centeredSlides && i.centeredSlidesBounds) {
        let e = 0;
        m.forEach((t) => {
          e += t + (x || 0);
        }),
          (e -= x);
        const t = e - a;
        u = u.map((e) => (e <= 0 ? -v : e > t ? t + b : e));
      }
      if (i.centerInsufficientSlides) {
        let e = 0;
        if (
          (m.forEach((t) => {
            e += t + (x || 0);
          }),
          (e -= x),
          e < a)
        ) {
          const t = (a - e) / 2;
          u.forEach((e, i) => {
            u[i] = e - t;
          }),
            f.forEach((e, i) => {
              f[i] = e + t;
            });
        }
      }
      if (
        (Object.assign(e, {
          slides: h,
          snapGrid: u,
          slidesGrid: f,
          slidesSizesGrid: m,
        }),
        i.centeredSlides && i.cssMode && !i.centeredSlidesBounds)
      ) {
        p(s, "--swiper-centered-offset-before", -u[0] + "px"),
          p(
            s,
            "--swiper-centered-offset-after",
            e.size / 2 - m[m.length - 1] / 2 + "px"
          );
        const t = -e.snapGrid[0],
          i = -e.slidesGrid[0];
        (e.snapGrid = e.snapGrid.map((e) => e + t)),
          (e.slidesGrid = e.slidesGrid.map((e) => e + i));
      }
      if (
        (d !== c && e.emit("slidesLengthChange"),
        u.length !== y &&
          (e.params.watchOverflow && e.checkOverflow(),
          e.emit("snapGridLengthChange")),
        f.length !== w && e.emit("slidesGridLengthChange"),
        i.watchSlidesProgress && e.updateSlidesOffset(),
        e.emit("slidesUpdated"),
        !(l || i.cssMode || ("slide" !== i.effect && "fade" !== i.effect)))
      ) {
        const t = `${i.containerModifierClass}backface-hidden`,
          s = e.el.classList.contains(t);
        d <= i.maxBackfaceHiddenSlides
          ? s || e.el.classList.add(t)
          : s && e.el.classList.remove(t);
      }
    },
    updateAutoHeight: function (e) {
      const t = this,
        i = [],
        s = t.virtual && t.params.virtual.enabled;
      let n,
        a = 0;
      "number" == typeof e
        ? t.setTransition(e)
        : !0 === e && t.setTransition(t.params.speed);
      const r = (e) => (s ? t.slides[t.getSlideIndexByData(e)] : t.slides[e]);
      if ("auto" !== t.params.slidesPerView && t.params.slidesPerView > 1)
        if (t.params.centeredSlides)
          (t.visibleSlides || []).forEach((e) => {
            i.push(e);
          });
        else
          for (n = 0; n < Math.ceil(t.params.slidesPerView); n += 1) {
            const e = t.activeIndex + n;
            if (e > t.slides.length && !s) break;
            i.push(r(e));
          }
      else i.push(r(t.activeIndex));
      for (n = 0; n < i.length; n += 1)
        if (void 0 !== i[n]) {
          const e = i[n].offsetHeight;
          a = e > a ? e : a;
        }
      (a || 0 === a) && (t.wrapperEl.style.height = `${a}px`);
    },
    updateSlidesOffset: function () {
      const e = this,
        t = e.slides,
        i = e.isElement
          ? e.isHorizontal()
            ? e.wrapperEl.offsetLeft
            : e.wrapperEl.offsetTop
          : 0;
      for (let s = 0; s < t.length; s += 1)
        t[s].swiperSlideOffset =
          (e.isHorizontal() ? t[s].offsetLeft : t[s].offsetTop) -
          i -
          e.cssOverflowAdjustment();
    },
    updateSlidesProgress: function (e) {
      void 0 === e && (e = (this && this.translate) || 0);
      const t = this,
        i = t.params,
        { slides: s, rtlTranslate: n, snapGrid: a } = t;
      if (0 === s.length) return;
      void 0 === s[0].swiperSlideOffset && t.updateSlidesOffset();
      let r = -e;
      n && (r = e),
        s.forEach((e) => {
          e.classList.remove(i.slideVisibleClass, i.slideFullyVisibleClass);
        }),
        (t.visibleSlidesIndexes = []),
        (t.visibleSlides = []);
      let o = i.spaceBetween;
      "string" == typeof o && o.indexOf("%") >= 0
        ? (o = (parseFloat(o.replace("%", "")) / 100) * t.size)
        : "string" == typeof o && (o = parseFloat(o));
      for (let e = 0; e < s.length; e += 1) {
        const l = s[e];
        let c = l.swiperSlideOffset;
        i.cssMode && i.centeredSlides && (c -= s[0].swiperSlideOffset);
        const h =
            (r + (i.centeredSlides ? t.minTranslate() : 0) - c) /
            (l.swiperSlideSize + o),
          d =
            (r - a[0] + (i.centeredSlides ? t.minTranslate() : 0) - c) /
            (l.swiperSlideSize + o),
          u = -(r - c),
          p = u + t.slidesSizesGrid[e],
          f = u >= 0 && u <= t.size - t.slidesSizesGrid[e];
        ((u >= 0 && u < t.size - 1) ||
          (p > 1 && p <= t.size) ||
          (u <= 0 && p >= t.size)) &&
          (t.visibleSlides.push(l),
          t.visibleSlidesIndexes.push(e),
          s[e].classList.add(i.slideVisibleClass)),
          f && s[e].classList.add(i.slideFullyVisibleClass),
          (l.progress = n ? -h : h),
          (l.originalProgress = n ? -d : d);
      }
    },
    updateProgress: function (e) {
      const t = this;
      if (void 0 === e) {
        const i = t.rtlTranslate ? -1 : 1;
        e = (t && t.translate && t.translate * i) || 0;
      }
      const i = t.params,
        s = t.maxTranslate() - t.minTranslate();
      let { progress: n, isBeginning: a, isEnd: r, progressLoop: o } = t;
      const l = a,
        c = r;
      if (0 === s) (n = 0), (a = !0), (r = !0);
      else {
        n = (e - t.minTranslate()) / s;
        const i = Math.abs(e - t.minTranslate()) < 1,
          o = Math.abs(e - t.maxTranslate()) < 1;
        (a = i || n <= 0), (r = o || n >= 1), i && (n = 0), o && (n = 1);
      }
      if (i.loop) {
        const i = t.getSlideIndexByData(0),
          s = t.getSlideIndexByData(t.slides.length - 1),
          n = t.slidesGrid[i],
          a = t.slidesGrid[s],
          r = t.slidesGrid[t.slidesGrid.length - 1],
          l = Math.abs(e);
        (o = l >= n ? (l - n) / r : (l + r - a) / r), o > 1 && (o -= 1);
      }
      Object.assign(t, {
        progress: n,
        progressLoop: o,
        isBeginning: a,
        isEnd: r,
      }),
        (i.watchSlidesProgress || (i.centeredSlides && i.autoHeight)) &&
          t.updateSlidesProgress(e),
        a && !l && t.emit("reachBeginning toEdge"),
        r && !c && t.emit("reachEnd toEdge"),
        ((l && !a) || (c && !r)) && t.emit("fromEdge"),
        t.emit("progress", n);
    },
    updateSlidesClasses: function () {
      const e = this,
        { slides: t, params: i, slidesEl: s, activeIndex: n } = e,
        a = e.virtual && i.virtual.enabled,
        r = e.grid && i.grid && i.grid.rows > 1,
        o = (e) => g(s, `.${i.slideClass}${e}, swiper-slide${e}`)[0];
      let l, c, h;
      if (
        (t.forEach((e) => {
          e.classList.remove(
            i.slideActiveClass,
            i.slideNextClass,
            i.slidePrevClass
          );
        }),
        a)
      )
        if (i.loop) {
          let t = n - e.virtual.slidesBefore;
          t < 0 && (t = e.virtual.slides.length + t),
            t >= e.virtual.slides.length && (t -= e.virtual.slides.length),
            (l = o(`[data-swiper-slide-index="${t}"]`));
        } else l = o(`[data-swiper-slide-index="${n}"]`);
      else
        r
          ? ((l = t.filter((e) => e.column === n)[0]),
            (h = t.filter((e) => e.column === n + 1)[0]),
            (c = t.filter((e) => e.column === n - 1)[0]))
          : (l = t[n]);
      l &&
        (l.classList.add(i.slideActiveClass),
        r
          ? (h && h.classList.add(i.slideNextClass),
            c && c.classList.add(i.slidePrevClass))
          : ((h = (function (e, t) {
              const i = [];
              for (; e.nextElementSibling; ) {
                const s = e.nextElementSibling;
                t ? s.matches(t) && i.push(s) : i.push(s), (e = s);
              }
              return i;
            })(l, `.${i.slideClass}, swiper-slide`)[0]),
            i.loop && !h && (h = t[0]),
            h && h.classList.add(i.slideNextClass),
            (c = (function (e, t) {
              const i = [];
              for (; e.previousElementSibling; ) {
                const s = e.previousElementSibling;
                t ? s.matches(t) && i.push(s) : i.push(s), (e = s);
              }
              return i;
            })(l, `.${i.slideClass}, swiper-slide`)[0]),
            i.loop && 0 === !c && (c = t[t.length - 1]),
            c && c.classList.add(i.slidePrevClass))),
        e.emitSlidesClasses();
    },
    updateActiveIndex: function (e) {
      const t = this,
        i = t.rtlTranslate ? t.translate : -t.translate,
        {
          snapGrid: s,
          params: n,
          activeIndex: a,
          realIndex: r,
          snapIndex: o,
        } = t;
      let l,
        c = e;
      const h = (e) => {
        let i = e - t.virtual.slidesBefore;
        return (
          i < 0 && (i = t.virtual.slides.length + i),
          i >= t.virtual.slides.length && (i -= t.virtual.slides.length),
          i
        );
      };
      if (
        (void 0 === c &&
          (c = (function (e) {
            const { slidesGrid: t, params: i } = e,
              s = e.rtlTranslate ? e.translate : -e.translate;
            let n;
            for (let e = 0; e < t.length; e += 1)
              void 0 !== t[e + 1]
                ? s >= t[e] && s < t[e + 1] - (t[e + 1] - t[e]) / 2
                  ? (n = e)
                  : s >= t[e] && s < t[e + 1] && (n = e + 1)
                : s >= t[e] && (n = e);
            return (
              i.normalizeSlideIndex && (n < 0 || void 0 === n) && (n = 0), n
            );
          })(t)),
        s.indexOf(i) >= 0)
      )
        l = s.indexOf(i);
      else {
        const e = Math.min(n.slidesPerGroupSkip, c);
        l = e + Math.floor((c - e) / n.slidesPerGroup);
      }
      if ((l >= s.length && (l = s.length - 1), c === a && !t.params.loop))
        return void (l !== o && ((t.snapIndex = l), t.emit("snapIndexChange")));
      if (c === a && t.params.loop && t.virtual && t.params.virtual.enabled)
        return void (t.realIndex = h(c));
      const d = t.grid && n.grid && n.grid.rows > 1;
      let u;
      if (t.virtual && n.virtual.enabled && n.loop) u = h(c);
      else if (d) {
        const e = t.slides.filter((e) => e.column === c)[0];
        let i = parseInt(e.getAttribute("data-swiper-slide-index"), 10);
        Number.isNaN(i) && (i = Math.max(t.slides.indexOf(e), 0)),
          (u = Math.floor(i / n.grid.rows));
      } else if (t.slides[c]) {
        const e = t.slides[c].getAttribute("data-swiper-slide-index");
        u = e ? parseInt(e, 10) : c;
      } else u = c;
      Object.assign(t, {
        previousSnapIndex: o,
        snapIndex: l,
        previousRealIndex: r,
        realIndex: u,
        previousIndex: a,
        activeIndex: c,
      }),
        t.initialized && O(t),
        t.emit("activeIndexChange"),
        t.emit("snapIndexChange"),
        (t.initialized || t.params.runCallbacksOnInit) &&
          (r !== u && t.emit("realIndexChange"), t.emit("slideChange"));
    },
    updateClickedSlide: function (e, t) {
      const i = this,
        s = i.params;
      let n = e.closest(`.${s.slideClass}, swiper-slide`);
      !n &&
        i.isElement &&
        t &&
        t.length > 1 &&
        t.includes(e) &&
        [...t.slice(t.indexOf(e) + 1, t.length)].forEach((e) => {
          !n &&
            e.matches &&
            e.matches(`.${s.slideClass}, swiper-slide`) &&
            (n = e);
        });
      let a,
        r = !1;
      if (n)
        for (let e = 0; e < i.slides.length; e += 1)
          if (i.slides[e] === n) {
            (r = !0), (a = e);
            break;
          }
      if (!n || !r)
        return (i.clickedSlide = void 0), void (i.clickedIndex = void 0);
      (i.clickedSlide = n),
        i.virtual && i.params.virtual.enabled
          ? (i.clickedIndex = parseInt(
              n.getAttribute("data-swiper-slide-index"),
              10
            ))
          : (i.clickedIndex = a),
        s.slideToClickedSlide &&
          void 0 !== i.clickedIndex &&
          i.clickedIndex !== i.activeIndex &&
          i.slideToClickedSlide();
    },
  };
  var H = {
    getTranslate: function (e) {
      void 0 === e && (e = this.isHorizontal() ? "x" : "y");
      const { params: t, rtlTranslate: i, translate: s, wrapperEl: n } = this;
      if (t.virtualTranslate) return i ? -s : s;
      if (t.cssMode) return s;
      let a = c(n, e);
      return (a += this.cssOverflowAdjustment()), i && (a = -a), a || 0;
    },
    setTranslate: function (e, t) {
      const i = this,
        { rtlTranslate: s, params: n, wrapperEl: a, progress: r } = i;
      let o,
        l = 0,
        c = 0;
      i.isHorizontal() ? (l = s ? -e : e) : (c = e),
        n.roundLengths && ((l = Math.floor(l)), (c = Math.floor(c))),
        (i.previousTranslate = i.translate),
        (i.translate = i.isHorizontal() ? l : c),
        n.cssMode
          ? (a[i.isHorizontal() ? "scrollLeft" : "scrollTop"] = i.isHorizontal()
              ? -l
              : -c)
          : n.virtualTranslate ||
            (i.isHorizontal()
              ? (l -= i.cssOverflowAdjustment())
              : (c -= i.cssOverflowAdjustment()),
            (a.style.transform = `translate3d(${l}px, ${c}px, 0px)`));
      const h = i.maxTranslate() - i.minTranslate();
      (o = 0 === h ? 0 : (e - i.minTranslate()) / h),
        o !== r && i.updateProgress(e),
        i.emit("setTranslate", i.translate, t);
    },
    minTranslate: function () {
      return -this.snapGrid[0];
    },
    maxTranslate: function () {
      return -this.snapGrid[this.snapGrid.length - 1];
    },
    translateTo: function (e, t, i, s, n) {
      void 0 === e && (e = 0),
        void 0 === t && (t = this.params.speed),
        void 0 === i && (i = !0),
        void 0 === s && (s = !0);
      const a = this,
        { params: r, wrapperEl: o } = a;
      if (a.animating && r.preventInteractionOnTransition) return !1;
      const l = a.minTranslate(),
        c = a.maxTranslate();
      let h;
      if (
        ((h = s && e > l ? l : s && e < c ? c : e),
        a.updateProgress(h),
        r.cssMode)
      ) {
        const e = a.isHorizontal();
        if (0 === t) o[e ? "scrollLeft" : "scrollTop"] = -h;
        else {
          if (!a.support.smoothScroll)
            return (
              f({ swiper: a, targetPosition: -h, side: e ? "left" : "top" }), !0
            );
          o.scrollTo({ [e ? "left" : "top"]: -h, behavior: "smooth" });
        }
        return !0;
      }
      return (
        0 === t
          ? (a.setTransition(0),
            a.setTranslate(h),
            i &&
              (a.emit("beforeTransitionStart", t, n), a.emit("transitionEnd")))
          : (a.setTransition(t),
            a.setTranslate(h),
            i &&
              (a.emit("beforeTransitionStart", t, n),
              a.emit("transitionStart")),
            a.animating ||
              ((a.animating = !0),
              a.onTranslateToWrapperTransitionEnd ||
                (a.onTranslateToWrapperTransitionEnd = function (e) {
                  a &&
                    !a.destroyed &&
                    e.target === this &&
                    (a.wrapperEl.removeEventListener(
                      "transitionend",
                      a.onTranslateToWrapperTransitionEnd
                    ),
                    (a.onTranslateToWrapperTransitionEnd = null),
                    delete a.onTranslateToWrapperTransitionEnd,
                    i && a.emit("transitionEnd"));
                }),
              a.wrapperEl.addEventListener(
                "transitionend",
                a.onTranslateToWrapperTransitionEnd
              ))),
        !0
      );
    },
  };
  function N(e) {
    let { swiper: t, runCallbacks: i, direction: s, step: n } = e;
    const { activeIndex: a, previousIndex: r } = t;
    let o = s;
    if (
      (o || (o = a > r ? "next" : a < r ? "prev" : "reset"),
      t.emit(`transition${n}`),
      i && a !== r)
    ) {
      if ("reset" === o) return void t.emit(`slideResetTransition${n}`);
      t.emit(`slideChangeTransition${n}`),
        "next" === o
          ? t.emit(`slideNextTransition${n}`)
          : t.emit(`slidePrevTransition${n}`);
    }
  }
  var $ = {
    slideTo: function (e, t, i, s, n) {
      void 0 === e && (e = 0),
        void 0 === t && (t = this.params.speed),
        void 0 === i && (i = !0),
        "string" == typeof e && (e = parseInt(e, 10));
      const a = this;
      let r = e;
      r < 0 && (r = 0);
      const {
        params: o,
        snapGrid: l,
        slidesGrid: c,
        previousIndex: h,
        activeIndex: d,
        rtlTranslate: u,
        wrapperEl: p,
        enabled: m,
      } = a;
      if ((a.animating && o.preventInteractionOnTransition) || (!m && !s && !n))
        return !1;
      const g = Math.min(a.params.slidesPerGroupSkip, r);
      let v = g + Math.floor((r - g) / a.params.slidesPerGroup);
      v >= l.length && (v = l.length - 1);
      const b = -l[v];
      if (o.normalizeSlideIndex)
        for (let e = 0; e < c.length; e += 1) {
          const t = -Math.floor(100 * b),
            i = Math.floor(100 * c[e]),
            s = Math.floor(100 * c[e + 1]);
          void 0 !== c[e + 1]
            ? t >= i && t < s - (s - i) / 2
              ? (r = e)
              : t >= i && t < s && (r = e + 1)
            : t >= i && (r = e);
        }
      if (a.initialized && r !== d) {
        if (
          !a.allowSlideNext &&
          (u
            ? b > a.translate && b > a.minTranslate()
            : b < a.translate && b < a.minTranslate())
        )
          return !1;
        if (
          !a.allowSlidePrev &&
          b > a.translate &&
          b > a.maxTranslate() &&
          (d || 0) !== r
        )
          return !1;
      }
      let y;
      if (
        (r !== (h || 0) && i && a.emit("beforeSlideChangeStart"),
        a.updateProgress(b),
        (y = r > d ? "next" : r < d ? "prev" : "reset"),
        (u && -b === a.translate) || (!u && b === a.translate))
      )
        return (
          a.updateActiveIndex(r),
          o.autoHeight && a.updateAutoHeight(),
          a.updateSlidesClasses(),
          "slide" !== o.effect && a.setTranslate(b),
          "reset" !== y && (a.transitionStart(i, y), a.transitionEnd(i, y)),
          !1
        );
      if (o.cssMode) {
        const e = a.isHorizontal(),
          i = u ? b : -b;
        if (0 === t) {
          const t = a.virtual && a.params.virtual.enabled;
          t &&
            ((a.wrapperEl.style.scrollSnapType = "none"),
            (a._immediateVirtual = !0)),
            t && !a._cssModeVirtualInitialSet && a.params.initialSlide > 0
              ? ((a._cssModeVirtualInitialSet = !0),
                requestAnimationFrame(() => {
                  p[e ? "scrollLeft" : "scrollTop"] = i;
                }))
              : (p[e ? "scrollLeft" : "scrollTop"] = i),
            t &&
              requestAnimationFrame(() => {
                (a.wrapperEl.style.scrollSnapType = ""),
                  (a._immediateVirtual = !1);
              });
        } else {
          if (!a.support.smoothScroll)
            return (
              f({ swiper: a, targetPosition: i, side: e ? "left" : "top" }), !0
            );
          p.scrollTo({ [e ? "left" : "top"]: i, behavior: "smooth" });
        }
        return !0;
      }
      return (
        a.setTransition(t),
        a.setTranslate(b),
        a.updateActiveIndex(r),
        a.updateSlidesClasses(),
        a.emit("beforeTransitionStart", t, s),
        a.transitionStart(i, y),
        0 === t
          ? a.transitionEnd(i, y)
          : a.animating ||
            ((a.animating = !0),
            a.onSlideToWrapperTransitionEnd ||
              (a.onSlideToWrapperTransitionEnd = function (e) {
                a &&
                  !a.destroyed &&
                  e.target === this &&
                  (a.wrapperEl.removeEventListener(
                    "transitionend",
                    a.onSlideToWrapperTransitionEnd
                  ),
                  (a.onSlideToWrapperTransitionEnd = null),
                  delete a.onSlideToWrapperTransitionEnd,
                  a.transitionEnd(i, y));
              }),
            a.wrapperEl.addEventListener(
              "transitionend",
              a.onSlideToWrapperTransitionEnd
            )),
        !0
      );
    },
    slideToLoop: function (e, t, i, s) {
      if (
        (void 0 === e && (e = 0),
        void 0 === t && (t = this.params.speed),
        void 0 === i && (i = !0),
        "string" == typeof e)
      ) {
        e = parseInt(e, 10);
      }
      const n = this,
        a = n.grid && n.params.grid && n.params.grid.rows > 1;
      let r = e;
      if (n.params.loop)
        if (n.virtual && n.params.virtual.enabled) r += n.virtual.slidesBefore;
        else {
          let e;
          if (a) {
            const t = r * n.params.grid.rows;
            e = n.slides.filter(
              (e) => 1 * e.getAttribute("data-swiper-slide-index") === t
            )[0].column;
          } else e = n.getSlideIndexByData(r);
          const t = a
              ? Math.ceil(n.slides.length / n.params.grid.rows)
              : n.slides.length,
            { centeredSlides: i } = n.params;
          let s = n.params.slidesPerView;
          "auto" === s
            ? (s = n.slidesPerViewDynamic())
            : ((s = Math.ceil(parseFloat(n.params.slidesPerView, 10))),
              i && s % 2 == 0 && (s += 1));
          let o = t - e < s;
          if ((i && (o = o || e < Math.ceil(s / 2)), o)) {
            const s = i
              ? e < n.activeIndex
                ? "prev"
                : "next"
              : e - n.activeIndex - 1 < n.params.slidesPerView
              ? "next"
              : "prev";
            n.loopFix({
              direction: s,
              slideTo: !0,
              activeSlideIndex: "next" === s ? e + 1 : e - t + 1,
              slideRealIndex: "next" === s ? n.realIndex : void 0,
            });
          }
          if (a) {
            const e = r * n.params.grid.rows;
            r = n.slides.filter(
              (t) => 1 * t.getAttribute("data-swiper-slide-index") === e
            )[0].column;
          } else r = n.getSlideIndexByData(r);
        }
      return (
        requestAnimationFrame(() => {
          n.slideTo(r, t, i, s);
        }),
        n
      );
    },
    slideNext: function (e, t, i) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      const s = this,
        { enabled: n, params: a, animating: r } = s;
      if (!n) return s;
      let o = a.slidesPerGroup;
      "auto" === a.slidesPerView &&
        1 === a.slidesPerGroup &&
        a.slidesPerGroupAuto &&
        (o = Math.max(s.slidesPerViewDynamic("current", !0), 1));
      const l = s.activeIndex < a.slidesPerGroupSkip ? 1 : o,
        c = s.virtual && a.virtual.enabled;
      if (a.loop) {
        if (r && !c && a.loopPreventsSliding) return !1;
        if (
          (s.loopFix({ direction: "next" }),
          (s._clientLeft = s.wrapperEl.clientLeft),
          s.activeIndex === s.slides.length - 1 && a.cssMode)
        )
          return (
            requestAnimationFrame(() => {
              s.slideTo(s.activeIndex + l, e, t, i);
            }),
            !0
          );
      }
      return a.rewind && s.isEnd
        ? s.slideTo(0, e, t, i)
        : s.slideTo(s.activeIndex + l, e, t, i);
    },
    slidePrev: function (e, t, i) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      const s = this,
        {
          params: n,
          snapGrid: a,
          slidesGrid: r,
          rtlTranslate: o,
          enabled: l,
          animating: c,
        } = s;
      if (!l) return s;
      const h = s.virtual && n.virtual.enabled;
      if (n.loop) {
        if (c && !h && n.loopPreventsSliding) return !1;
        s.loopFix({ direction: "prev" }),
          (s._clientLeft = s.wrapperEl.clientLeft);
      }
      function d(e) {
        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
      }
      const u = d(o ? s.translate : -s.translate),
        p = a.map((e) => d(e));
      let f = a[p.indexOf(u) - 1];
      if (void 0 === f && n.cssMode) {
        let e;
        a.forEach((t, i) => {
          u >= t && (e = i);
        }),
          void 0 !== e && (f = a[e > 0 ? e - 1 : e]);
      }
      let m = 0;
      if (
        (void 0 !== f &&
          ((m = r.indexOf(f)),
          m < 0 && (m = s.activeIndex - 1),
          "auto" === n.slidesPerView &&
            1 === n.slidesPerGroup &&
            n.slidesPerGroupAuto &&
            ((m = m - s.slidesPerViewDynamic("previous", !0) + 1),
            (m = Math.max(m, 0)))),
        n.rewind && s.isBeginning)
      ) {
        const n =
          s.params.virtual && s.params.virtual.enabled && s.virtual
            ? s.virtual.slides.length - 1
            : s.slides.length - 1;
        return s.slideTo(n, e, t, i);
      }
      return n.loop && 0 === s.activeIndex && n.cssMode
        ? (requestAnimationFrame(() => {
            s.slideTo(m, e, t, i);
          }),
          !0)
        : s.slideTo(m, e, t, i);
    },
    slideReset: function (e, t, i) {
      return (
        void 0 === e && (e = this.params.speed),
        void 0 === t && (t = !0),
        this.slideTo(this.activeIndex, e, t, i)
      );
    },
    slideToClosest: function (e, t, i, s) {
      void 0 === e && (e = this.params.speed),
        void 0 === t && (t = !0),
        void 0 === s && (s = 0.5);
      const n = this;
      let a = n.activeIndex;
      const r = Math.min(n.params.slidesPerGroupSkip, a),
        o = r + Math.floor((a - r) / n.params.slidesPerGroup),
        l = n.rtlTranslate ? n.translate : -n.translate;
      if (l >= n.snapGrid[o]) {
        const e = n.snapGrid[o];
        l - e > (n.snapGrid[o + 1] - e) * s && (a += n.params.slidesPerGroup);
      } else {
        const e = n.snapGrid[o - 1];
        l - e <= (n.snapGrid[o] - e) * s && (a -= n.params.slidesPerGroup);
      }
      return (
        (a = Math.max(a, 0)),
        (a = Math.min(a, n.slidesGrid.length - 1)),
        n.slideTo(a, e, t, i)
      );
    },
    slideToClickedSlide: function () {
      const e = this,
        { params: t, slidesEl: i } = e,
        s =
          "auto" === t.slidesPerView
            ? e.slidesPerViewDynamic()
            : t.slidesPerView;
      let n,
        a = e.clickedIndex;
      const r = e.isElement ? "swiper-slide" : `.${t.slideClass}`;
      if (t.loop) {
        if (e.animating) return;
        (n = parseInt(
          e.clickedSlide.getAttribute("data-swiper-slide-index"),
          10
        )),
          t.centeredSlides
            ? a < e.loopedSlides - s / 2 ||
              a > e.slides.length - e.loopedSlides + s / 2
              ? (e.loopFix(),
                (a = e.getSlideIndex(
                  g(i, `${r}[data-swiper-slide-index="${n}"]`)[0]
                )),
                o(() => {
                  e.slideTo(a);
                }))
              : e.slideTo(a)
            : a > e.slides.length - s
            ? (e.loopFix(),
              (a = e.getSlideIndex(
                g(i, `${r}[data-swiper-slide-index="${n}"]`)[0]
              )),
              o(() => {
                e.slideTo(a);
              }))
            : e.slideTo(a);
      } else e.slideTo(a);
    },
  };
  var W = {
    loopCreate: function (e) {
      const t = this,
        { params: i, slidesEl: s } = t;
      if (!i.loop || (t.virtual && t.params.virtual.enabled)) return;
      const n = () => {
          g(s, `.${i.slideClass}, swiper-slide`).forEach((e, t) => {
            e.setAttribute("data-swiper-slide-index", t);
          });
        },
        a = t.grid && i.grid && i.grid.rows > 1,
        r = i.slidesPerGroup * (a ? i.grid.rows : 1),
        o = t.slides.length % r != 0,
        l = a && t.slides.length % i.grid.rows != 0,
        c = (e) => {
          for (let s = 0; s < e; s += 1) {
            const e = t.isElement
              ? b("swiper-slide", [i.slideBlankClass])
              : b("div", [i.slideClass, i.slideBlankClass]);
            t.slidesEl.append(e);
          }
        };
      if (o) {
        if (i.loopAddBlankSlides) {
          c(r - (t.slides.length % r)), t.recalcSlides(), t.updateSlides();
        } else
          v(
            "Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
          );
        n();
      } else if (l) {
        if (i.loopAddBlankSlides) {
          c(i.grid.rows - (t.slides.length % i.grid.rows)),
            t.recalcSlides(),
            t.updateSlides();
        } else
          v(
            "Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
          );
        n();
      } else n();
      t.loopFix({
        slideRealIndex: e,
        direction: i.centeredSlides ? void 0 : "next",
      });
    },
    loopFix: function (e) {
      let {
        slideRealIndex: t,
        slideTo: i = !0,
        direction: s,
        setTranslate: n,
        activeSlideIndex: a,
        byController: r,
        byMousewheel: o,
      } = void 0 === e ? {} : e;
      const l = this;
      if (!l.params.loop) return;
      l.emit("beforeLoopFix");
      const {
          slides: c,
          allowSlidePrev: h,
          allowSlideNext: d,
          slidesEl: u,
          params: p,
        } = l,
        { centeredSlides: f } = p;
      if (
        ((l.allowSlidePrev = !0),
        (l.allowSlideNext = !0),
        l.virtual && p.virtual.enabled)
      )
        return (
          i &&
            (p.centeredSlides || 0 !== l.snapIndex
              ? p.centeredSlides && l.snapIndex < p.slidesPerView
                ? l.slideTo(l.virtual.slides.length + l.snapIndex, 0, !1, !0)
                : l.snapIndex === l.snapGrid.length - 1 &&
                  l.slideTo(l.virtual.slidesBefore, 0, !1, !0)
              : l.slideTo(l.virtual.slides.length, 0, !1, !0)),
          (l.allowSlidePrev = h),
          (l.allowSlideNext = d),
          void l.emit("loopFix")
        );
      let m = p.slidesPerView;
      "auto" === m
        ? (m = l.slidesPerViewDynamic())
        : ((m = Math.ceil(parseFloat(p.slidesPerView, 10))),
          f && m % 2 == 0 && (m += 1));
      const g = p.slidesPerGroupAuto ? m : p.slidesPerGroup;
      let b = g;
      b % g != 0 && (b += g - (b % g)),
        (b += p.loopAdditionalSlides),
        (l.loopedSlides = b);
      const y = l.grid && p.grid && p.grid.rows > 1;
      c.length < m + b
        ? v(
            "Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"
          )
        : y &&
          "row" === p.grid.fill &&
          v(
            "Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`"
          );
      const _ = [],
        w = [];
      let x = l.activeIndex;
      void 0 === a
        ? (a = l.getSlideIndex(
            c.filter((e) => e.classList.contains(p.slideActiveClass))[0]
          ))
        : (x = a);
      const C = "next" === s || !s,
        T = "prev" === s || !s;
      let S = 0,
        k = 0;
      const E = y ? Math.ceil(c.length / p.grid.rows) : c.length,
        M = (y ? c[a].column : a) + (f && void 0 === n ? -m / 2 + 0.5 : 0);
      if (M < b) {
        S = Math.max(b - M, g);
        for (let e = 0; e < b - M; e += 1) {
          const t = e - Math.floor(e / E) * E;
          if (y) {
            const e = E - t - 1;
            for (let t = c.length - 1; t >= 0; t -= 1)
              c[t].column === e && _.push(t);
          } else _.push(E - t - 1);
        }
      } else if (M + m > E - b) {
        k = Math.max(M - (E - 2 * b), g);
        for (let e = 0; e < k; e += 1) {
          const t = e - Math.floor(e / E) * E;
          y
            ? c.forEach((e, i) => {
                e.column === t && w.push(i);
              })
            : w.push(t);
        }
      }
      if (
        ((l.__preventObserver__ = !0),
        requestAnimationFrame(() => {
          l.__preventObserver__ = !1;
        }),
        T &&
          _.forEach((e) => {
            (c[e].swiperLoopMoveDOM = !0),
              u.prepend(c[e]),
              (c[e].swiperLoopMoveDOM = !1);
          }),
        C &&
          w.forEach((e) => {
            (c[e].swiperLoopMoveDOM = !0),
              u.append(c[e]),
              (c[e].swiperLoopMoveDOM = !1);
          }),
        l.recalcSlides(),
        "auto" === p.slidesPerView
          ? l.updateSlides()
          : y &&
            ((_.length > 0 && T) || (w.length > 0 && C)) &&
            l.slides.forEach((e, t) => {
              l.grid.updateSlide(t, e, l.slides);
            }),
        p.watchSlidesProgress && l.updateSlidesOffset(),
        i)
      )
        if (_.length > 0 && T) {
          if (void 0 === t) {
            const e = l.slidesGrid[x],
              t = l.slidesGrid[x + S] - e;
            o
              ? l.setTranslate(l.translate - t)
              : (l.slideTo(x + S, 0, !1, !0),
                n &&
                  ((l.touchEventsData.startTranslate =
                    l.touchEventsData.startTranslate - t),
                  (l.touchEventsData.currentTranslate =
                    l.touchEventsData.currentTranslate - t)));
          } else if (n) {
            const e = y ? _.length / p.grid.rows : _.length;
            l.slideTo(l.activeIndex + e, 0, !1, !0),
              (l.touchEventsData.currentTranslate = l.translate);
          }
        } else if (w.length > 0 && C)
          if (void 0 === t) {
            const e = l.slidesGrid[x],
              t = l.slidesGrid[x - k] - e;
            o
              ? l.setTranslate(l.translate - t)
              : (l.slideTo(x - k, 0, !1, !0),
                n &&
                  ((l.touchEventsData.startTranslate =
                    l.touchEventsData.startTranslate - t),
                  (l.touchEventsData.currentTranslate =
                    l.touchEventsData.currentTranslate - t)));
          } else {
            const e = y ? w.length / p.grid.rows : w.length;
            l.slideTo(l.activeIndex - e, 0, !1, !0);
          }
      if (
        ((l.allowSlidePrev = h),
        (l.allowSlideNext = d),
        l.controller && l.controller.control && !r)
      ) {
        const e = {
          slideRealIndex: t,
          direction: s,
          setTranslate: n,
          activeSlideIndex: a,
          byController: !0,
        };
        Array.isArray(l.controller.control)
          ? l.controller.control.forEach((t) => {
              !t.destroyed &&
                t.params.loop &&
                t.loopFix({
                  ...e,
                  slideTo: t.params.slidesPerView === p.slidesPerView && i,
                });
            })
          : l.controller.control instanceof l.constructor &&
            l.controller.control.params.loop &&
            l.controller.control.loopFix({
              ...e,
              slideTo:
                l.controller.control.params.slidesPerView === p.slidesPerView &&
                i,
            });
      }
      l.emit("loopFix");
    },
    loopDestroy: function () {
      const e = this,
        { params: t, slidesEl: i } = e;
      if (!t.loop || (e.virtual && e.params.virtual.enabled)) return;
      e.recalcSlides();
      const s = [];
      e.slides.forEach((e) => {
        const t =
          void 0 === e.swiperSlideIndex
            ? 1 * e.getAttribute("data-swiper-slide-index")
            : e.swiperSlideIndex;
        s[t] = e;
      }),
        e.slides.forEach((e) => {
          e.removeAttribute("data-swiper-slide-index");
        }),
        s.forEach((e) => {
          i.append(e);
        }),
        e.recalcSlides(),
        e.slideTo(e.realIndex, 0);
    },
  };
  function R(e, t, i) {
    const s = a(),
      { params: n } = e,
      r = n.edgeSwipeDetection,
      o = n.edgeSwipeThreshold;
    return (
      !r ||
      !(i <= o || i >= s.innerWidth - o) ||
      ("prevent" === r && (t.preventDefault(), !0))
    );
  }
  function F(e) {
    const t = this,
      i = s();
    let n = e;
    n.originalEvent && (n = n.originalEvent);
    const r = t.touchEventsData;
    if ("pointerdown" === n.type) {
      if (null !== r.pointerId && r.pointerId !== n.pointerId) return;
      r.pointerId = n.pointerId;
    } else
      "touchstart" === n.type &&
        1 === n.targetTouches.length &&
        (r.touchId = n.targetTouches[0].identifier);
    if ("touchstart" === n.type) return void R(t, n, n.targetTouches[0].pageX);
    const { params: o, touches: c, enabled: h } = t;
    if (!h) return;
    if (!o.simulateTouch && "mouse" === n.pointerType) return;
    if (t.animating && o.preventInteractionOnTransition) return;
    !t.animating && o.cssMode && o.loop && t.loopFix();
    let d = n.target;
    if ("wrapper" === o.touchEventsTarget && !t.wrapperEl.contains(d)) return;
    if ("which" in n && 3 === n.which) return;
    if ("button" in n && n.button > 0) return;
    if (r.isTouched && r.isMoved) return;
    const u = !!o.noSwipingClass && "" !== o.noSwipingClass,
      p = n.composedPath ? n.composedPath() : n.path;
    u && n.target && n.target.shadowRoot && p && (d = p[0]);
    const f = o.noSwipingSelector
        ? o.noSwipingSelector
        : `.${o.noSwipingClass}`,
      m = !(!n.target || !n.target.shadowRoot);
    if (
      o.noSwiping &&
      (m
        ? (function (e, t) {
            return (
              void 0 === t && (t = this),
              (function t(i) {
                if (!i || i === s() || i === a()) return null;
                i.assignedSlot && (i = i.assignedSlot);
                const n = i.closest(e);
                return n || i.getRootNode ? n || t(i.getRootNode().host) : null;
              })(t)
            );
          })(f, d)
        : d.closest(f))
    )
      return void (t.allowClick = !0);
    if (o.swipeHandler && !d.closest(o.swipeHandler)) return;
    (c.currentX = n.pageX), (c.currentY = n.pageY);
    const g = c.currentX,
      v = c.currentY;
    if (!R(t, n, g)) return;
    Object.assign(r, {
      isTouched: !0,
      isMoved: !1,
      allowTouchCallbacks: !0,
      isScrolling: void 0,
      startMoving: void 0,
    }),
      (c.startX = g),
      (c.startY = v),
      (r.touchStartTime = l()),
      (t.allowClick = !0),
      t.updateSize(),
      (t.swipeDirection = void 0),
      o.threshold > 0 && (r.allowThresholdMove = !1);
    let b = !0;
    d.matches(r.focusableElements) &&
      ((b = !1), "SELECT" === d.nodeName && (r.isTouched = !1)),
      i.activeElement &&
        i.activeElement.matches(r.focusableElements) &&
        i.activeElement !== d &&
        i.activeElement.blur();
    const y = b && t.allowTouchMove && o.touchStartPreventDefault;
    (!o.touchStartForcePreventDefault && !y) ||
      d.isContentEditable ||
      n.preventDefault(),
      o.freeMode &&
        o.freeMode.enabled &&
        t.freeMode &&
        t.animating &&
        !o.cssMode &&
        t.freeMode.onTouchStart(),
      t.emit("touchStart", n);
  }
  function q(e) {
    const t = s(),
      i = this,
      n = i.touchEventsData,
      { params: a, touches: r, rtlTranslate: o, enabled: c } = i;
    if (!c) return;
    if (!a.simulateTouch && "mouse" === e.pointerType) return;
    let h,
      d = e;
    if ((d.originalEvent && (d = d.originalEvent), "pointermove" === d.type)) {
      if (null !== n.touchId) return;
      if (d.pointerId !== n.pointerId) return;
    }
    if ("touchmove" === d.type) {
      if (
        ((h = [...d.changedTouches].filter(
          (e) => e.identifier === n.touchId
        )[0]),
        !h || h.identifier !== n.touchId)
      )
        return;
    } else h = d;
    if (!n.isTouched)
      return void (
        n.startMoving &&
        n.isScrolling &&
        i.emit("touchMoveOpposite", d)
      );
    const u = h.pageX,
      p = h.pageY;
    if (d.preventedByNestedSwiper) return (r.startX = u), void (r.startY = p);
    if (!i.allowTouchMove)
      return (
        d.target.matches(n.focusableElements) || (i.allowClick = !1),
        void (
          n.isTouched &&
          (Object.assign(r, { startX: u, startY: p, currentX: u, currentY: p }),
          (n.touchStartTime = l()))
        )
      );
    if (a.touchReleaseOnEdges && !a.loop)
      if (i.isVertical()) {
        if (
          (p < r.startY && i.translate <= i.maxTranslate()) ||
          (p > r.startY && i.translate >= i.minTranslate())
        )
          return (n.isTouched = !1), void (n.isMoved = !1);
      } else if (
        (u < r.startX && i.translate <= i.maxTranslate()) ||
        (u > r.startX && i.translate >= i.minTranslate())
      )
        return;
    if (
      t.activeElement &&
      d.target === t.activeElement &&
      d.target.matches(n.focusableElements)
    )
      return (n.isMoved = !0), void (i.allowClick = !1);
    n.allowTouchCallbacks && i.emit("touchMove", d),
      (r.previousX = r.currentX),
      (r.previousY = r.currentY),
      (r.currentX = u),
      (r.currentY = p);
    const f = r.currentX - r.startX,
      m = r.currentY - r.startY;
    if (i.params.threshold && Math.sqrt(f ** 2 + m ** 2) < i.params.threshold)
      return;
    if (void 0 === n.isScrolling) {
      let e;
      (i.isHorizontal() && r.currentY === r.startY) ||
      (i.isVertical() && r.currentX === r.startX)
        ? (n.isScrolling = !1)
        : f * f + m * m >= 25 &&
          ((e = (180 * Math.atan2(Math.abs(m), Math.abs(f))) / Math.PI),
          (n.isScrolling = i.isHorizontal()
            ? e > a.touchAngle
            : 90 - e > a.touchAngle));
    }
    if (
      (n.isScrolling && i.emit("touchMoveOpposite", d),
      void 0 === n.startMoving &&
        ((r.currentX === r.startX && r.currentY === r.startY) ||
          (n.startMoving = !0)),
      n.isScrolling)
    )
      return void (n.isTouched = !1);
    if (!n.startMoving) return;
    (i.allowClick = !1),
      !a.cssMode && d.cancelable && d.preventDefault(),
      a.touchMoveStopPropagation && !a.nested && d.stopPropagation();
    let g = i.isHorizontal() ? f : m,
      v = i.isHorizontal()
        ? r.currentX - r.previousX
        : r.currentY - r.previousY;
    a.oneWayMovement &&
      ((g = Math.abs(g) * (o ? 1 : -1)), (v = Math.abs(v) * (o ? 1 : -1))),
      (r.diff = g),
      (g *= a.touchRatio),
      o && ((g = -g), (v = -v));
    const b = i.touchesDirection;
    (i.swipeDirection = g > 0 ? "prev" : "next"),
      (i.touchesDirection = v > 0 ? "prev" : "next");
    const y = i.params.loop && !a.cssMode,
      _ =
        ("next" === i.touchesDirection && i.allowSlideNext) ||
        ("prev" === i.touchesDirection && i.allowSlidePrev);
    if (!n.isMoved) {
      if (
        (y && _ && i.loopFix({ direction: i.swipeDirection }),
        (n.startTranslate = i.getTranslate()),
        i.setTransition(0),
        i.animating)
      ) {
        const e = new window.CustomEvent("transitionend", {
          bubbles: !0,
          cancelable: !0,
        });
        i.wrapperEl.dispatchEvent(e);
      }
      (n.allowMomentumBounce = !1),
        !a.grabCursor ||
          (!0 !== i.allowSlideNext && !0 !== i.allowSlidePrev) ||
          i.setGrabCursor(!0),
        i.emit("sliderFirstMove", d);
    }
    if (
      (new Date().getTime(),
      n.isMoved &&
        n.allowThresholdMove &&
        b !== i.touchesDirection &&
        y &&
        _ &&
        Math.abs(g) >= 1)
    )
      return (
        Object.assign(r, {
          startX: u,
          startY: p,
          currentX: u,
          currentY: p,
          startTranslate: n.currentTranslate,
        }),
        (n.loopSwapReset = !0),
        void (n.startTranslate = n.currentTranslate)
      );
    i.emit("sliderMove", d),
      (n.isMoved = !0),
      (n.currentTranslate = g + n.startTranslate);
    let w = !0,
      x = a.resistanceRatio;
    if (
      (a.touchReleaseOnEdges && (x = 0),
      g > 0
        ? (y &&
            _ &&
            n.allowThresholdMove &&
            n.currentTranslate >
              (a.centeredSlides
                ? i.minTranslate() - i.slidesSizesGrid[i.activeIndex + 1]
                : i.minTranslate()) &&
            i.loopFix({
              direction: "prev",
              setTranslate: !0,
              activeSlideIndex: 0,
            }),
          n.currentTranslate > i.minTranslate() &&
            ((w = !1),
            a.resistance &&
              (n.currentTranslate =
                i.minTranslate() -
                1 +
                (-i.minTranslate() + n.startTranslate + g) ** x)))
        : g < 0 &&
          (y &&
            _ &&
            n.allowThresholdMove &&
            n.currentTranslate <
              (a.centeredSlides
                ? i.maxTranslate() +
                  i.slidesSizesGrid[i.slidesSizesGrid.length - 1]
                : i.maxTranslate()) &&
            i.loopFix({
              direction: "next",
              setTranslate: !0,
              activeSlideIndex:
                i.slides.length -
                ("auto" === a.slidesPerView
                  ? i.slidesPerViewDynamic()
                  : Math.ceil(parseFloat(a.slidesPerView, 10))),
            }),
          n.currentTranslate < i.maxTranslate() &&
            ((w = !1),
            a.resistance &&
              (n.currentTranslate =
                i.maxTranslate() +
                1 -
                (i.maxTranslate() - n.startTranslate - g) ** x))),
      w && (d.preventedByNestedSwiper = !0),
      !i.allowSlideNext &&
        "next" === i.swipeDirection &&
        n.currentTranslate < n.startTranslate &&
        (n.currentTranslate = n.startTranslate),
      !i.allowSlidePrev &&
        "prev" === i.swipeDirection &&
        n.currentTranslate > n.startTranslate &&
        (n.currentTranslate = n.startTranslate),
      i.allowSlidePrev ||
        i.allowSlideNext ||
        (n.currentTranslate = n.startTranslate),
      a.threshold > 0)
    ) {
      if (!(Math.abs(g) > a.threshold || n.allowThresholdMove))
        return void (n.currentTranslate = n.startTranslate);
      if (!n.allowThresholdMove)
        return (
          (n.allowThresholdMove = !0),
          (r.startX = r.currentX),
          (r.startY = r.currentY),
          (n.currentTranslate = n.startTranslate),
          void (r.diff = i.isHorizontal()
            ? r.currentX - r.startX
            : r.currentY - r.startY)
        );
    }
    a.followFinger &&
      !a.cssMode &&
      (((a.freeMode && a.freeMode.enabled && i.freeMode) ||
        a.watchSlidesProgress) &&
        (i.updateActiveIndex(), i.updateSlidesClasses()),
      a.freeMode &&
        a.freeMode.enabled &&
        i.freeMode &&
        i.freeMode.onTouchMove(),
      i.updateProgress(n.currentTranslate),
      i.setTranslate(n.currentTranslate));
  }
  function j(e) {
    const t = this,
      i = t.touchEventsData;
    let s,
      n = e;
    n.originalEvent && (n = n.originalEvent);
    if ("touchend" === n.type || "touchcancel" === n.type) {
      if (
        ((s = [...n.changedTouches].filter(
          (e) => e.identifier === i.touchId
        )[0]),
        !s || s.identifier !== i.touchId)
      )
        return;
    } else {
      if (null !== i.touchId) return;
      if (n.pointerId !== i.pointerId) return;
      s = n;
    }
    if (
      ["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(
        n.type
      )
    ) {
      if (
        !(
          ["pointercancel", "contextmenu"].includes(n.type) &&
          (t.browser.isSafari || t.browser.isWebView)
        )
      )
        return;
    }
    (i.pointerId = null), (i.touchId = null);
    const {
      params: a,
      touches: r,
      rtlTranslate: c,
      slidesGrid: h,
      enabled: d,
    } = t;
    if (!d) return;
    if (!a.simulateTouch && "mouse" === n.pointerType) return;
    if (
      (i.allowTouchCallbacks && t.emit("touchEnd", n),
      (i.allowTouchCallbacks = !1),
      !i.isTouched)
    )
      return (
        i.isMoved && a.grabCursor && t.setGrabCursor(!1),
        (i.isMoved = !1),
        void (i.startMoving = !1)
      );
    a.grabCursor &&
      i.isMoved &&
      i.isTouched &&
      (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) &&
      t.setGrabCursor(!1);
    const u = l(),
      p = u - i.touchStartTime;
    if (t.allowClick) {
      const e = n.path || (n.composedPath && n.composedPath());
      t.updateClickedSlide((e && e[0]) || n.target, e),
        t.emit("tap click", n),
        p < 300 &&
          u - i.lastClickTime < 300 &&
          t.emit("doubleTap doubleClick", n);
    }
    if (
      ((i.lastClickTime = l()),
      o(() => {
        t.destroyed || (t.allowClick = !0);
      }),
      !i.isTouched ||
        !i.isMoved ||
        !t.swipeDirection ||
        (0 === r.diff && !i.loopSwapReset) ||
        (i.currentTranslate === i.startTranslate && !i.loopSwapReset))
    )
      return (i.isTouched = !1), (i.isMoved = !1), void (i.startMoving = !1);
    let f;
    if (
      ((i.isTouched = !1),
      (i.isMoved = !1),
      (i.startMoving = !1),
      (f = a.followFinger
        ? c
          ? t.translate
          : -t.translate
        : -i.currentTranslate),
      a.cssMode)
    )
      return;
    if (a.freeMode && a.freeMode.enabled)
      return void t.freeMode.onTouchEnd({ currentPos: f });
    const m = f >= -t.maxTranslate() && !t.params.loop;
    let g = 0,
      v = t.slidesSizesGrid[0];
    for (
      let e = 0;
      e < h.length;
      e += e < a.slidesPerGroupSkip ? 1 : a.slidesPerGroup
    ) {
      const t = e < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;
      void 0 !== h[e + t]
        ? (m || (f >= h[e] && f < h[e + t])) && ((g = e), (v = h[e + t] - h[e]))
        : (m || f >= h[e]) &&
          ((g = e), (v = h[h.length - 1] - h[h.length - 2]));
    }
    let b = null,
      y = null;
    a.rewind &&
      (t.isBeginning
        ? (y =
            a.virtual && a.virtual.enabled && t.virtual
              ? t.virtual.slides.length - 1
              : t.slides.length - 1)
        : t.isEnd && (b = 0));
    const _ = (f - h[g]) / v,
      w = g < a.slidesPerGroupSkip - 1 ? 1 : a.slidesPerGroup;
    if (p > a.longSwipesMs) {
      if (!a.longSwipes) return void t.slideTo(t.activeIndex);
      "next" === t.swipeDirection &&
        (_ >= a.longSwipesRatio
          ? t.slideTo(a.rewind && t.isEnd ? b : g + w)
          : t.slideTo(g)),
        "prev" === t.swipeDirection &&
          (_ > 1 - a.longSwipesRatio
            ? t.slideTo(g + w)
            : null !== y && _ < 0 && Math.abs(_) > a.longSwipesRatio
            ? t.slideTo(y)
            : t.slideTo(g));
    } else {
      if (!a.shortSwipes) return void t.slideTo(t.activeIndex);
      t.navigation &&
      (n.target === t.navigation.nextEl || n.target === t.navigation.prevEl)
        ? n.target === t.navigation.nextEl
          ? t.slideTo(g + w)
          : t.slideTo(g)
        : ("next" === t.swipeDirection && t.slideTo(null !== b ? b : g + w),
          "prev" === t.swipeDirection && t.slideTo(null !== y ? y : g));
    }
  }
  function B() {
    const e = this,
      { params: t, el: i } = e;
    if (i && 0 === i.offsetWidth) return;
    t.breakpoints && e.setBreakpoint();
    const { allowSlideNext: s, allowSlidePrev: n, snapGrid: a } = e,
      r = e.virtual && e.params.virtual.enabled;
    (e.allowSlideNext = !0),
      (e.allowSlidePrev = !0),
      e.updateSize(),
      e.updateSlides(),
      e.updateSlidesClasses();
    const o = r && t.loop;
    !("auto" === t.slidesPerView || t.slidesPerView > 1) ||
    !e.isEnd ||
    e.isBeginning ||
    e.params.centeredSlides ||
    o
      ? e.params.loop && !r
        ? e.slideToLoop(e.realIndex, 0, !1, !0)
        : e.slideTo(e.activeIndex, 0, !1, !0)
      : e.slideTo(e.slides.length - 1, 0, !1, !0),
      e.autoplay &&
        e.autoplay.running &&
        e.autoplay.paused &&
        (clearTimeout(e.autoplay.resizeTimeout),
        (e.autoplay.resizeTimeout = setTimeout(() => {
          e.autoplay &&
            e.autoplay.running &&
            e.autoplay.paused &&
            e.autoplay.resume();
        }, 500))),
      (e.allowSlidePrev = n),
      (e.allowSlideNext = s),
      e.params.watchOverflow && a !== e.snapGrid && e.checkOverflow();
  }
  function Y(e) {
    const t = this;
    t.enabled &&
      (t.allowClick ||
        (t.params.preventClicks && e.preventDefault(),
        t.params.preventClicksPropagation &&
          t.animating &&
          (e.stopPropagation(), e.stopImmediatePropagation())));
  }
  function V() {
    const e = this,
      { wrapperEl: t, rtlTranslate: i, enabled: s } = e;
    if (!s) return;
    let n;
    (e.previousTranslate = e.translate),
      e.isHorizontal()
        ? (e.translate = -t.scrollLeft)
        : (e.translate = -t.scrollTop),
      0 === e.translate && (e.translate = 0),
      e.updateActiveIndex(),
      e.updateSlidesClasses();
    const a = e.maxTranslate() - e.minTranslate();
    (n = 0 === a ? 0 : (e.translate - e.minTranslate()) / a),
      n !== e.progress && e.updateProgress(i ? -e.translate : e.translate),
      e.emit("setTranslate", e.translate, !1);
  }
  function X(e) {
    const t = this;
    A(t, e.target),
      t.params.cssMode ||
        ("auto" !== t.params.slidesPerView && !t.params.autoHeight) ||
        t.update();
  }
  function G() {
    const e = this;
    e.documentTouchHandlerProceeded ||
      ((e.documentTouchHandlerProceeded = !0),
      e.params.touchReleaseOnEdges && (e.el.style.touchAction = "auto"));
  }
  const U = (e, t) => {
    const i = s(),
      { params: n, el: a, wrapperEl: r, device: o } = e,
      l = !!n.nested,
      c = "on" === t ? "addEventListener" : "removeEventListener",
      h = t;
    i[c]("touchstart", e.onDocumentTouchStart, { passive: !1, capture: l }),
      a[c]("touchstart", e.onTouchStart, { passive: !1 }),
      a[c]("pointerdown", e.onTouchStart, { passive: !1 }),
      i[c]("touchmove", e.onTouchMove, { passive: !1, capture: l }),
      i[c]("pointermove", e.onTouchMove, { passive: !1, capture: l }),
      i[c]("touchend", e.onTouchEnd, { passive: !0 }),
      i[c]("pointerup", e.onTouchEnd, { passive: !0 }),
      i[c]("pointercancel", e.onTouchEnd, { passive: !0 }),
      i[c]("touchcancel", e.onTouchEnd, { passive: !0 }),
      i[c]("pointerout", e.onTouchEnd, { passive: !0 }),
      i[c]("pointerleave", e.onTouchEnd, { passive: !0 }),
      i[c]("contextmenu", e.onTouchEnd, { passive: !0 }),
      (n.preventClicks || n.preventClicksPropagation) &&
        a[c]("click", e.onClick, !0),
      n.cssMode && r[c]("scroll", e.onScroll),
      n.updateOnWindowResize
        ? e[h](
            o.ios || o.android
              ? "resize orientationchange observerUpdate"
              : "resize observerUpdate",
            B,
            !0
          )
        : e[h]("observerUpdate", B, !0),
      a[c]("load", e.onLoad, { capture: !0 });
  };
  const K = (e, t) => e.grid && t.grid && t.grid.rows > 1;
  var Q = {
    init: !0,
    direction: "horizontal",
    oneWayMovement: !1,
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: !1,
    updateOnWindowResize: !0,
    resizeObserver: !0,
    nested: !1,
    createElements: !1,
    eventsPrefix: "swiper",
    enabled: !0,
    focusableElements: "input, select, option, textarea, button, video, label",
    width: null,
    height: null,
    preventInteractionOnTransition: !1,
    userAgent: null,
    url: null,
    edgeSwipeDetection: !1,
    edgeSwipeThreshold: 20,
    autoHeight: !1,
    setWrapperSize: !1,
    virtualTranslate: !1,
    effect: "slide",
    breakpoints: void 0,
    breakpointsBase: "window",
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: !1,
    centeredSlides: !1,
    centeredSlidesBounds: !1,
    slidesOffsetBefore: 0,
    slidesOffsetAfter: 0,
    normalizeSlideIndex: !0,
    centerInsufficientSlides: !1,
    watchOverflow: !0,
    roundLengths: !1,
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: !0,
    shortSwipes: !0,
    longSwipes: !0,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: !0,
    allowTouchMove: !0,
    threshold: 5,
    touchMoveStopPropagation: !1,
    touchStartPreventDefault: !0,
    touchStartForcePreventDefault: !1,
    touchReleaseOnEdges: !1,
    uniqueNavElements: !0,
    resistance: !0,
    resistanceRatio: 0.85,
    watchSlidesProgress: !1,
    grabCursor: !1,
    preventClicks: !0,
    preventClicksPropagation: !0,
    slideToClickedSlide: !1,
    loop: !1,
    loopAddBlankSlides: !0,
    loopAdditionalSlides: 0,
    loopPreventsSliding: !0,
    rewind: !1,
    allowSlidePrev: !0,
    allowSlideNext: !0,
    swipeHandler: null,
    noSwiping: !0,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    passiveListeners: !0,
    maxBackfaceHiddenSlides: 10,
    containerModifierClass: "swiper-",
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-blank",
    slideActiveClass: "swiper-slide-active",
    slideVisibleClass: "swiper-slide-visible",
    slideFullyVisibleClass: "swiper-slide-fully-visible",
    slideNextClass: "swiper-slide-next",
    slidePrevClass: "swiper-slide-prev",
    wrapperClass: "swiper-wrapper",
    lazyPreloaderClass: "swiper-lazy-preloader",
    lazyPreloadPrevNext: 0,
    runCallbacksOnInit: !0,
    _emitClasses: !1,
  };
  function J(e, t) {
    return function (i) {
      void 0 === i && (i = {});
      const s = Object.keys(i)[0],
        n = i[s];
      "object" == typeof n && null !== n
        ? (!0 === e[s] && (e[s] = { enabled: !0 }),
          "navigation" === s &&
            e[s] &&
            e[s].enabled &&
            !e[s].prevEl &&
            !e[s].nextEl &&
            (e[s].auto = !0),
          ["pagination", "scrollbar"].indexOf(s) >= 0 &&
            e[s] &&
            e[s].enabled &&
            !e[s].el &&
            (e[s].auto = !0),
          s in e && "enabled" in n
            ? ("object" != typeof e[s] ||
                "enabled" in e[s] ||
                (e[s].enabled = !0),
              e[s] || (e[s] = { enabled: !1 }),
              u(t, i))
            : u(t, i))
        : u(t, i);
    };
  }
  const Z = {
      eventsEmitter: I,
      update: z,
      translate: H,
      transition: {
        setTransition: function (e, t) {
          const i = this;
          i.params.cssMode ||
            ((i.wrapperEl.style.transitionDuration = `${e}ms`),
            (i.wrapperEl.style.transitionDelay = 0 === e ? "0ms" : "")),
            i.emit("setTransition", e, t);
        },
        transitionStart: function (e, t) {
          void 0 === e && (e = !0);
          const i = this,
            { params: s } = i;
          s.cssMode ||
            (s.autoHeight && i.updateAutoHeight(),
            N({ swiper: i, runCallbacks: e, direction: t, step: "Start" }));
        },
        transitionEnd: function (e, t) {
          void 0 === e && (e = !0);
          const i = this,
            { params: s } = i;
          (i.animating = !1),
            s.cssMode ||
              (i.setTransition(0),
              N({ swiper: i, runCallbacks: e, direction: t, step: "End" }));
        },
      },
      slide: $,
      loop: W,
      grabCursor: {
        setGrabCursor: function (e) {
          const t = this;
          if (
            !t.params.simulateTouch ||
            (t.params.watchOverflow && t.isLocked) ||
            t.params.cssMode
          )
            return;
          const i =
            "container" === t.params.touchEventsTarget ? t.el : t.wrapperEl;
          t.isElement && (t.__preventObserver__ = !0),
            (i.style.cursor = "move"),
            (i.style.cursor = e ? "grabbing" : "grab"),
            t.isElement &&
              requestAnimationFrame(() => {
                t.__preventObserver__ = !1;
              });
        },
        unsetGrabCursor: function () {
          const e = this;
          (e.params.watchOverflow && e.isLocked) ||
            e.params.cssMode ||
            (e.isElement && (e.__preventObserver__ = !0),
            (e[
              "container" === e.params.touchEventsTarget ? "el" : "wrapperEl"
            ].style.cursor = ""),
            e.isElement &&
              requestAnimationFrame(() => {
                e.__preventObserver__ = !1;
              }));
        },
      },
      events: {
        attachEvents: function () {
          const e = this,
            { params: t } = e;
          (e.onTouchStart = F.bind(e)),
            (e.onTouchMove = q.bind(e)),
            (e.onTouchEnd = j.bind(e)),
            (e.onDocumentTouchStart = G.bind(e)),
            t.cssMode && (e.onScroll = V.bind(e)),
            (e.onClick = Y.bind(e)),
            (e.onLoad = X.bind(e)),
            U(e, "on");
        },
        detachEvents: function () {
          U(this, "off");
        },
      },
      breakpoints: {
        setBreakpoint: function () {
          const e = this,
            { realIndex: t, initialized: i, params: s, el: n } = e,
            a = s.breakpoints;
          if (!a || (a && 0 === Object.keys(a).length)) return;
          const r = e.getBreakpoint(a, e.params.breakpointsBase, e.el);
          if (!r || e.currentBreakpoint === r) return;
          const o = (r in a ? a[r] : void 0) || e.originalParams,
            l = K(e, s),
            c = K(e, o),
            h = s.enabled;
          l && !c
            ? (n.classList.remove(
                `${s.containerModifierClass}grid`,
                `${s.containerModifierClass}grid-column`
              ),
              e.emitContainerClasses())
            : !l &&
              c &&
              (n.classList.add(`${s.containerModifierClass}grid`),
              ((o.grid.fill && "column" === o.grid.fill) ||
                (!o.grid.fill && "column" === s.grid.fill)) &&
                n.classList.add(`${s.containerModifierClass}grid-column`),
              e.emitContainerClasses()),
            ["navigation", "pagination", "scrollbar"].forEach((t) => {
              if (void 0 === o[t]) return;
              const i = s[t] && s[t].enabled,
                n = o[t] && o[t].enabled;
              i && !n && e[t].disable(), !i && n && e[t].enable();
            });
          const d = o.direction && o.direction !== s.direction,
            p = s.loop && (o.slidesPerView !== s.slidesPerView || d),
            f = s.loop;
          d && i && e.changeDirection(), u(e.params, o);
          const m = e.params.enabled,
            g = e.params.loop;
          Object.assign(e, {
            allowTouchMove: e.params.allowTouchMove,
            allowSlideNext: e.params.allowSlideNext,
            allowSlidePrev: e.params.allowSlidePrev,
          }),
            h && !m ? e.disable() : !h && m && e.enable(),
            (e.currentBreakpoint = r),
            e.emit("_beforeBreakpoint", o),
            i &&
              (p
                ? (e.loopDestroy(), e.loopCreate(t), e.updateSlides())
                : !f && g
                ? (e.loopCreate(t), e.updateSlides())
                : f && !g && e.loopDestroy()),
            e.emit("breakpoint", o);
        },
        getBreakpoint: function (e, t, i) {
          if ((void 0 === t && (t = "window"), !e || ("container" === t && !i)))
            return;
          let s = !1;
          const n = a(),
            r = "window" === t ? n.innerHeight : i.clientHeight,
            o = Object.keys(e).map((e) => {
              if ("string" == typeof e && 0 === e.indexOf("@")) {
                const t = parseFloat(e.substr(1));
                return { value: r * t, point: e };
              }
              return { value: e, point: e };
            });
          o.sort((e, t) => parseInt(e.value, 10) - parseInt(t.value, 10));
          for (let e = 0; e < o.length; e += 1) {
            const { point: a, value: r } = o[e];
            "window" === t
              ? n.matchMedia(`(min-width: ${r}px)`).matches && (s = a)
              : r <= i.clientWidth && (s = a);
          }
          return s || "max";
        },
      },
      checkOverflow: {
        checkOverflow: function () {
          const e = this,
            { isLocked: t, params: i } = e,
            { slidesOffsetBefore: s } = i;
          if (s) {
            const t = e.slides.length - 1,
              i = e.slidesGrid[t] + e.slidesSizesGrid[t] + 2 * s;
            e.isLocked = e.size > i;
          } else e.isLocked = 1 === e.snapGrid.length;
          !0 === i.allowSlideNext && (e.allowSlideNext = !e.isLocked),
            !0 === i.allowSlidePrev && (e.allowSlidePrev = !e.isLocked),
            t && t !== e.isLocked && (e.isEnd = !1),
            t !== e.isLocked && e.emit(e.isLocked ? "lock" : "unlock");
        },
      },
      classes: {
        addClasses: function () {
          const e = this,
            { classNames: t, params: i, rtl: s, el: n, device: a } = e,
            r = (function (e, t) {
              const i = [];
              return (
                e.forEach((e) => {
                  "object" == typeof e
                    ? Object.keys(e).forEach((s) => {
                        e[s] && i.push(t + s);
                      })
                    : "string" == typeof e && i.push(t + e);
                }),
                i
              );
            })(
              [
                "initialized",
                i.direction,
                { "free-mode": e.params.freeMode && i.freeMode.enabled },
                { autoheight: i.autoHeight },
                { rtl: s },
                { grid: i.grid && i.grid.rows > 1 },
                {
                  "grid-column":
                    i.grid && i.grid.rows > 1 && "column" === i.grid.fill,
                },
                { android: a.android },
                { ios: a.ios },
                { "css-mode": i.cssMode },
                { centered: i.cssMode && i.centeredSlides },
                { "watch-progress": i.watchSlidesProgress },
              ],
              i.containerModifierClass
            );
          t.push(...r), n.classList.add(...t), e.emitContainerClasses();
        },
        removeClasses: function () {
          const { el: e, classNames: t } = this;
          e.classList.remove(...t), this.emitContainerClasses();
        },
      },
    },
    ee = {};
  class te {
    constructor() {
      let e, t;
      for (var i = arguments.length, n = new Array(i), a = 0; a < i; a++)
        n[a] = arguments[a];
      1 === n.length &&
      n[0].constructor &&
      "Object" === Object.prototype.toString.call(n[0]).slice(8, -1)
        ? (t = n[0])
        : ([e, t] = n),
        t || (t = {}),
        (t = u({}, t)),
        e && !t.el && (t.el = e);
      const r = s();
      if (
        t.el &&
        "string" == typeof t.el &&
        r.querySelectorAll(t.el).length > 1
      ) {
        const e = [];
        return (
          r.querySelectorAll(t.el).forEach((i) => {
            const s = u({}, t, { el: i });
            e.push(new te(s));
          }),
          e
        );
      }
      const o = this;
      (o.__swiper__ = !0),
        (o.support = M()),
        (o.device = D({ userAgent: t.userAgent })),
        (o.browser = P()),
        (o.eventsListeners = {}),
        (o.eventsAnyListeners = []),
        (o.modules = [...o.__modules__]),
        t.modules && Array.isArray(t.modules) && o.modules.push(...t.modules);
      const l = {};
      o.modules.forEach((e) => {
        e({
          params: t,
          swiper: o,
          extendParams: J(t, l),
          on: o.on.bind(o),
          once: o.once.bind(o),
          off: o.off.bind(o),
          emit: o.emit.bind(o),
        });
      });
      const c = u({}, Q, l);
      return (
        (o.params = u({}, c, ee, t)),
        (o.originalParams = u({}, o.params)),
        (o.passedParams = u({}, t)),
        o.params &&
          o.params.on &&
          Object.keys(o.params.on).forEach((e) => {
            o.on(e, o.params.on[e]);
          }),
        o.params && o.params.onAny && o.onAny(o.params.onAny),
        Object.assign(o, {
          enabled: o.params.enabled,
          el: e,
          classNames: [],
          slides: [],
          slidesGrid: [],
          snapGrid: [],
          slidesSizesGrid: [],
          isHorizontal: () => "horizontal" === o.params.direction,
          isVertical: () => "vertical" === o.params.direction,
          activeIndex: 0,
          realIndex: 0,
          isBeginning: !0,
          isEnd: !1,
          translate: 0,
          previousTranslate: 0,
          progress: 0,
          velocity: 0,
          animating: !1,
          cssOverflowAdjustment() {
            return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
          },
          allowSlideNext: o.params.allowSlideNext,
          allowSlidePrev: o.params.allowSlidePrev,
          touchEventsData: {
            isTouched: void 0,
            isMoved: void 0,
            allowTouchCallbacks: void 0,
            touchStartTime: void 0,
            isScrolling: void 0,
            currentTranslate: void 0,
            startTranslate: void 0,
            allowThresholdMove: void 0,
            focusableElements: o.params.focusableElements,
            lastClickTime: 0,
            clickTimeout: void 0,
            velocities: [],
            allowMomentumBounce: void 0,
            startMoving: void 0,
            pointerId: null,
            touchId: null,
          },
          allowClick: !0,
          allowTouchMove: o.params.allowTouchMove,
          touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
          imagesToLoad: [],
          imagesLoaded: 0,
        }),
        o.emit("_swiper"),
        o.params.init && o.init(),
        o
      );
    }
    getDirectionLabel(e) {
      return this.isHorizontal()
        ? e
        : {
            width: "height",
            "margin-top": "margin-left",
            "margin-bottom ": "margin-right",
            "margin-left": "margin-top",
            "margin-right": "margin-bottom",
            "padding-left": "padding-top",
            "padding-right": "padding-bottom",
            marginRight: "marginBottom",
          }[e];
    }
    getSlideIndex(e) {
      const { slidesEl: t, params: i } = this,
        s = w(g(t, `.${i.slideClass}, swiper-slide`)[0]);
      return w(e) - s;
    }
    getSlideIndexByData(e) {
      return this.getSlideIndex(
        this.slides.filter(
          (t) => 1 * t.getAttribute("data-swiper-slide-index") === e
        )[0]
      );
    }
    recalcSlides() {
      const { slidesEl: e, params: t } = this;
      this.slides = g(e, `.${t.slideClass}, swiper-slide`);
    }
    enable() {
      const e = this;
      e.enabled ||
        ((e.enabled = !0),
        e.params.grabCursor && e.setGrabCursor(),
        e.emit("enable"));
    }
    disable() {
      const e = this;
      e.enabled &&
        ((e.enabled = !1),
        e.params.grabCursor && e.unsetGrabCursor(),
        e.emit("disable"));
    }
    setProgress(e, t) {
      const i = this;
      e = Math.min(Math.max(e, 0), 1);
      const s = i.minTranslate(),
        n = (i.maxTranslate() - s) * e + s;
      i.translateTo(n, void 0 === t ? 0 : t),
        i.updateActiveIndex(),
        i.updateSlidesClasses();
    }
    emitContainerClasses() {
      const e = this;
      if (!e.params._emitClasses || !e.el) return;
      const t = e.el.className
        .split(" ")
        .filter(
          (t) =>
            0 === t.indexOf("swiper") ||
            0 === t.indexOf(e.params.containerModifierClass)
        );
      e.emit("_containerClasses", t.join(" "));
    }
    getSlideClasses(e) {
      const t = this;
      return t.destroyed
        ? ""
        : e.className
            .split(" ")
            .filter(
              (e) =>
                0 === e.indexOf("swiper-slide") ||
                0 === e.indexOf(t.params.slideClass)
            )
            .join(" ");
    }
    emitSlidesClasses() {
      const e = this;
      if (!e.params._emitClasses || !e.el) return;
      const t = [];
      e.slides.forEach((i) => {
        const s = e.getSlideClasses(i);
        t.push({ slideEl: i, classNames: s }), e.emit("_slideClass", i, s);
      }),
        e.emit("_slideClasses", t);
    }
    slidesPerViewDynamic(e, t) {
      void 0 === e && (e = "current"), void 0 === t && (t = !1);
      const {
        params: i,
        slides: s,
        slidesGrid: n,
        slidesSizesGrid: a,
        size: r,
        activeIndex: o,
      } = this;
      let l = 1;
      if ("number" == typeof i.slidesPerView) return i.slidesPerView;
      if (i.centeredSlides) {
        let e,
          t = s[o] ? s[o].swiperSlideSize : 0;
        for (let i = o + 1; i < s.length; i += 1)
          s[i] &&
            !e &&
            ((t += s[i].swiperSlideSize), (l += 1), t > r && (e = !0));
        for (let i = o - 1; i >= 0; i -= 1)
          s[i] &&
            !e &&
            ((t += s[i].swiperSlideSize), (l += 1), t > r && (e = !0));
      } else if ("current" === e)
        for (let e = o + 1; e < s.length; e += 1) {
          (t ? n[e] + a[e] - n[o] < r : n[e] - n[o] < r) && (l += 1);
        }
      else
        for (let e = o - 1; e >= 0; e -= 1) {
          n[o] - n[e] < r && (l += 1);
        }
      return l;
    }
    update() {
      const e = this;
      if (!e || e.destroyed) return;
      const { snapGrid: t, params: i } = e;
      function s() {
        const t = e.rtlTranslate ? -1 * e.translate : e.translate,
          i = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
        e.setTranslate(i), e.updateActiveIndex(), e.updateSlidesClasses();
      }
      let n;
      if (
        (i.breakpoints && e.setBreakpoint(),
        [...e.el.querySelectorAll('[loading="lazy"]')].forEach((t) => {
          t.complete && A(e, t);
        }),
        e.updateSize(),
        e.updateSlides(),
        e.updateProgress(),
        e.updateSlidesClasses(),
        i.freeMode && i.freeMode.enabled && !i.cssMode)
      )
        s(), i.autoHeight && e.updateAutoHeight();
      else {
        if (
          ("auto" === i.slidesPerView || i.slidesPerView > 1) &&
          e.isEnd &&
          !i.centeredSlides
        ) {
          const t =
            e.virtual && i.virtual.enabled ? e.virtual.slides : e.slides;
          n = e.slideTo(t.length - 1, 0, !1, !0);
        } else n = e.slideTo(e.activeIndex, 0, !1, !0);
        n || s();
      }
      i.watchOverflow && t !== e.snapGrid && e.checkOverflow(),
        e.emit("update");
    }
    changeDirection(e, t) {
      void 0 === t && (t = !0);
      const i = this,
        s = i.params.direction;
      return (
        e || (e = "horizontal" === s ? "vertical" : "horizontal"),
        e === s ||
          ("horizontal" !== e && "vertical" !== e) ||
          (i.el.classList.remove(`${i.params.containerModifierClass}${s}`),
          i.el.classList.add(`${i.params.containerModifierClass}${e}`),
          i.emitContainerClasses(),
          (i.params.direction = e),
          i.slides.forEach((t) => {
            "vertical" === e ? (t.style.width = "") : (t.style.height = "");
          }),
          i.emit("changeDirection"),
          t && i.update()),
        i
      );
    }
    changeLanguageDirection(e) {
      const t = this;
      (t.rtl && "rtl" === e) ||
        (!t.rtl && "ltr" === e) ||
        ((t.rtl = "rtl" === e),
        (t.rtlTranslate = "horizontal" === t.params.direction && t.rtl),
        t.rtl
          ? (t.el.classList.add(`${t.params.containerModifierClass}rtl`),
            (t.el.dir = "rtl"))
          : (t.el.classList.remove(`${t.params.containerModifierClass}rtl`),
            (t.el.dir = "ltr")),
        t.update());
    }
    mount(e) {
      const t = this;
      if (t.mounted) return !0;
      let i = e || t.params.el;
      if (("string" == typeof i && (i = document.querySelector(i)), !i))
        return !1;
      (i.swiper = t),
        i.parentNode &&
          i.parentNode.host &&
          "SWIPER-CONTAINER" === i.parentNode.host.nodeName &&
          (t.isElement = !0);
      const s = () =>
        `.${(t.params.wrapperClass || "").trim().split(" ").join(".")}`;
      let n = (() => {
        if (i && i.shadowRoot && i.shadowRoot.querySelector) {
          return i.shadowRoot.querySelector(s());
        }
        return g(i, s())[0];
      })();
      return (
        !n &&
          t.params.createElements &&
          ((n = b("div", t.params.wrapperClass)),
          i.append(n),
          g(i, `.${t.params.slideClass}`).forEach((e) => {
            n.append(e);
          })),
        Object.assign(t, {
          el: i,
          wrapperEl: n,
          slidesEl:
            t.isElement && !i.parentNode.host.slideSlots
              ? i.parentNode.host
              : n,
          hostEl: t.isElement ? i.parentNode.host : i,
          mounted: !0,
          rtl: "rtl" === i.dir.toLowerCase() || "rtl" === _(i, "direction"),
          rtlTranslate:
            "horizontal" === t.params.direction &&
            ("rtl" === i.dir.toLowerCase() || "rtl" === _(i, "direction")),
          wrongRTL: "-webkit-box" === _(n, "display"),
        }),
        !0
      );
    }
    init(e) {
      const t = this;
      if (t.initialized) return t;
      if (!1 === t.mount(e)) return t;
      t.emit("beforeInit"),
        t.params.breakpoints && t.setBreakpoint(),
        t.addClasses(),
        t.updateSize(),
        t.updateSlides(),
        t.params.watchOverflow && t.checkOverflow(),
        t.params.grabCursor && t.enabled && t.setGrabCursor(),
        t.params.loop && t.virtual && t.params.virtual.enabled
          ? t.slideTo(
              t.params.initialSlide + t.virtual.slidesBefore,
              0,
              t.params.runCallbacksOnInit,
              !1,
              !0
            )
          : t.slideTo(
              t.params.initialSlide,
              0,
              t.params.runCallbacksOnInit,
              !1,
              !0
            ),
        t.params.loop && t.loopCreate(),
        t.attachEvents();
      const i = [...t.el.querySelectorAll('[loading="lazy"]')];
      return (
        t.isElement && i.push(...t.hostEl.querySelectorAll('[loading="lazy"]')),
        i.forEach((e) => {
          e.complete
            ? A(t, e)
            : e.addEventListener("load", (e) => {
                A(t, e.target);
              });
        }),
        O(t),
        (t.initialized = !0),
        O(t),
        t.emit("init"),
        t.emit("afterInit"),
        t
      );
    }
    destroy(e, t) {
      void 0 === e && (e = !0), void 0 === t && (t = !0);
      const i = this,
        { params: s, el: n, wrapperEl: a, slides: r } = i;
      return (
        void 0 === i.params ||
          i.destroyed ||
          (i.emit("beforeDestroy"),
          (i.initialized = !1),
          i.detachEvents(),
          s.loop && i.loopDestroy(),
          t &&
            (i.removeClasses(),
            n.removeAttribute("style"),
            a.removeAttribute("style"),
            r &&
              r.length &&
              r.forEach((e) => {
                e.classList.remove(
                  s.slideVisibleClass,
                  s.slideFullyVisibleClass,
                  s.slideActiveClass,
                  s.slideNextClass,
                  s.slidePrevClass
                ),
                  e.removeAttribute("style"),
                  e.removeAttribute("data-swiper-slide-index");
              })),
          i.emit("destroy"),
          Object.keys(i.eventsListeners).forEach((e) => {
            i.off(e);
          }),
          !1 !== e &&
            ((i.el.swiper = null),
            (function (e) {
              const t = e;
              Object.keys(t).forEach((e) => {
                try {
                  t[e] = null;
                } catch (e) {}
                try {
                  delete t[e];
                } catch (e) {}
              });
            })(i)),
          (i.destroyed = !0)),
        null
      );
    }
    static extendDefaults(e) {
      u(ee, e);
    }
    static get extendedDefaults() {
      return ee;
    }
    static get defaults() {
      return Q;
    }
    static installModule(e) {
      te.prototype.__modules__ || (te.prototype.__modules__ = []);
      const t = te.prototype.__modules__;
      "function" == typeof e && t.indexOf(e) < 0 && t.push(e);
    }
    static use(e) {
      return Array.isArray(e)
        ? (e.forEach((e) => te.installModule(e)), te)
        : (te.installModule(e), te);
    }
  }
  function ie(e, t, i, s) {
    return (
      e.params.createElements &&
        Object.keys(s).forEach((n) => {
          if (!i[n] && !0 === i.auto) {
            let a = g(e.el, `.${s[n]}`)[0];
            a || ((a = b("div", s[n])), (a.className = s[n]), e.el.append(a)),
              (i[n] = a),
              (t[n] = a);
          }
        }),
      i
    );
  }
  function se(e) {
    return (
      void 0 === e && (e = ""),
      `.${e
        .trim()
        .replace(/([\.:!+\/])/g, "\\$1")
        .replace(/ /g, ".")}`
    );
  }
  function ne(e) {
    const t = this,
      { params: i, slidesEl: s } = t;
    i.loop && t.loopDestroy();
    const n = (e) => {
      if ("string" == typeof e) {
        const t = document.createElement("div");
        (t.innerHTML = e), s.append(t.children[0]), (t.innerHTML = "");
      } else s.append(e);
    };
    if ("object" == typeof e && "length" in e)
      for (let t = 0; t < e.length; t += 1) e[t] && n(e[t]);
    else n(e);
    t.recalcSlides(),
      i.loop && t.loopCreate(),
      (i.observer && !t.isElement) || t.update();
  }
  function ae(e) {
    const t = this,
      { params: i, activeIndex: s, slidesEl: n } = t;
    i.loop && t.loopDestroy();
    let a = s + 1;
    const r = (e) => {
      if ("string" == typeof e) {
        const t = document.createElement("div");
        (t.innerHTML = e), n.prepend(t.children[0]), (t.innerHTML = "");
      } else n.prepend(e);
    };
    if ("object" == typeof e && "length" in e) {
      for (let t = 0; t < e.length; t += 1) e[t] && r(e[t]);
      a = s + e.length;
    } else r(e);
    t.recalcSlides(),
      i.loop && t.loopCreate(),
      (i.observer && !t.isElement) || t.update(),
      t.slideTo(a, 0, !1);
  }
  function re(e, t) {
    const i = this,
      { params: s, activeIndex: n, slidesEl: a } = i;
    let r = n;
    s.loop && ((r -= i.loopedSlides), i.loopDestroy(), i.recalcSlides());
    const o = i.slides.length;
    if (e <= 0) return void i.prependSlide(t);
    if (e >= o) return void i.appendSlide(t);
    let l = r > e ? r + 1 : r;
    const c = [];
    for (let t = o - 1; t >= e; t -= 1) {
      const e = i.slides[t];
      e.remove(), c.unshift(e);
    }
    if ("object" == typeof t && "length" in t) {
      for (let e = 0; e < t.length; e += 1) t[e] && a.append(t[e]);
      l = r > e ? r + t.length : r;
    } else a.append(t);
    for (let e = 0; e < c.length; e += 1) a.append(c[e]);
    i.recalcSlides(),
      s.loop && i.loopCreate(),
      (s.observer && !i.isElement) || i.update(),
      s.loop ? i.slideTo(l + i.loopedSlides, 0, !1) : i.slideTo(l, 0, !1);
  }
  function oe(e) {
    const t = this,
      { params: i, activeIndex: s } = t;
    let n = s;
    i.loop && ((n -= t.loopedSlides), t.loopDestroy());
    let a,
      r = n;
    if ("object" == typeof e && "length" in e) {
      for (let i = 0; i < e.length; i += 1)
        (a = e[i]), t.slides[a] && t.slides[a].remove(), a < r && (r -= 1);
      r = Math.max(r, 0);
    } else
      (a = e),
        t.slides[a] && t.slides[a].remove(),
        a < r && (r -= 1),
        (r = Math.max(r, 0));
    t.recalcSlides(),
      i.loop && t.loopCreate(),
      (i.observer && !t.isElement) || t.update(),
      i.loop ? t.slideTo(r + t.loopedSlides, 0, !1) : t.slideTo(r, 0, !1);
  }
  function le() {
    const e = this,
      t = [];
    for (let i = 0; i < e.slides.length; i += 1) t.push(i);
    e.removeSlide(t);
  }
  function ce(e) {
    const {
      effect: t,
      swiper: i,
      on: s,
      setTranslate: n,
      setTransition: a,
      overwriteParams: r,
      perspective: o,
      recreateShadows: l,
      getEffectParams: c,
    } = e;
    let h;
    s("beforeInit", () => {
      if (i.params.effect !== t) return;
      i.classNames.push(`${i.params.containerModifierClass}${t}`),
        o && o() && i.classNames.push(`${i.params.containerModifierClass}3d`);
      const e = r ? r() : {};
      Object.assign(i.params, e), Object.assign(i.originalParams, e);
    }),
      s("setTranslate", () => {
        i.params.effect === t && n();
      }),
      s("setTransition", (e, s) => {
        i.params.effect === t && a(s);
      }),
      s("transitionEnd", () => {
        if (i.params.effect === t && l) {
          if (!c || !c().slideShadows) return;
          i.slides.forEach((e) => {
            e.querySelectorAll(
              ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
            ).forEach((e) => e.remove());
          }),
            l();
        }
      }),
      s("virtualUpdate", () => {
        i.params.effect === t &&
          (i.slides.length || (h = !0),
          requestAnimationFrame(() => {
            h && i.slides && i.slides.length && (n(), (h = !1));
          }));
      });
  }
  function he(e, t) {
    const i = m(t);
    return (
      i !== t &&
        ((i.style.backfaceVisibility = "hidden"),
        (i.style["-webkit-backface-visibility"] = "hidden")),
      i
    );
  }
  function de(e) {
    let { swiper: t, duration: i, transformElements: s, allSlides: n } = e;
    const { activeIndex: a } = t;
    if (t.params.virtualTranslate && 0 !== i) {
      let e,
        i = !1;
      (e = n
        ? s
        : s.filter((e) => {
            const i = e.classList.contains("swiper-slide-transform")
              ? ((e) => {
                  if (!e.parentElement)
                    return t.slides.filter(
                      (t) => t.shadowRoot && t.shadowRoot === e.parentNode
                    )[0];
                  return e.parentElement;
                })(e)
              : e;
            return t.getSlideIndex(i) === a;
          })),
        e.forEach((e) => {
          C(e, () => {
            if (i) return;
            if (!t || t.destroyed) return;
            (i = !0), (t.animating = !1);
            const e = new window.CustomEvent("transitionend", {
              bubbles: !0,
              cancelable: !0,
            });
            t.wrapperEl.dispatchEvent(e);
          });
        });
    }
  }
  function ue(e, t, i) {
    const s = `swiper-slide-shadow${i ? `-${i}` : ""}${
        e ? ` swiper-slide-shadow-${e}` : ""
      }`,
      n = m(t);
    let a = n.querySelector(`.${s.split(" ").join(".")}`);
    return a || ((a = b("div", s.split(" "))), n.append(a)), a;
  }
  Object.keys(Z).forEach((e) => {
    Object.keys(Z[e]).forEach((t) => {
      te.prototype[t] = Z[e][t];
    });
  }),
    te.use([
      function (e) {
        let { swiper: t, on: i, emit: s } = e;
        const n = a();
        let r = null,
          o = null;
        const l = () => {
            t &&
              !t.destroyed &&
              t.initialized &&
              (s("beforeResize"), s("resize"));
          },
          c = () => {
            t && !t.destroyed && t.initialized && s("orientationchange");
          };
        i("init", () => {
          t.params.resizeObserver && void 0 !== n.ResizeObserver
            ? t &&
              !t.destroyed &&
              t.initialized &&
              ((r = new ResizeObserver((e) => {
                o = n.requestAnimationFrame(() => {
                  const { width: i, height: s } = t;
                  let n = i,
                    a = s;
                  e.forEach((e) => {
                    let { contentBoxSize: i, contentRect: s, target: r } = e;
                    (r && r !== t.el) ||
                      ((n = s ? s.width : (i[0] || i).inlineSize),
                      (a = s ? s.height : (i[0] || i).blockSize));
                  }),
                    (n === i && a === s) || l();
                });
              })),
              r.observe(t.el))
            : (n.addEventListener("resize", l),
              n.addEventListener("orientationchange", c));
        }),
          i("destroy", () => {
            o && n.cancelAnimationFrame(o),
              r && r.unobserve && t.el && (r.unobserve(t.el), (r = null)),
              n.removeEventListener("resize", l),
              n.removeEventListener("orientationchange", c);
          });
      },
      function (e) {
        let { swiper: t, extendParams: i, on: s, emit: n } = e;
        const r = [],
          o = a(),
          l = function (e, i) {
            void 0 === i && (i = {});
            const s = new (o.MutationObserver || o.WebkitMutationObserver)(
              (e) => {
                if (t.__preventObserver__) return;
                if (1 === e.length) return void n("observerUpdate", e[0]);
                const i = function () {
                  n("observerUpdate", e[0]);
                };
                o.requestAnimationFrame
                  ? o.requestAnimationFrame(i)
                  : o.setTimeout(i, 0);
              }
            );
            s.observe(e, {
              attributes: void 0 === i.attributes || i.attributes,
              childList: void 0 === i.childList || i.childList,
              characterData: void 0 === i.characterData || i.characterData,
            }),
              r.push(s);
          };
        i({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
          s("init", () => {
            if (t.params.observer) {
              if (t.params.observeParents) {
                const e = x(t.hostEl);
                for (let t = 0; t < e.length; t += 1) l(e[t]);
              }
              l(t.hostEl, { childList: t.params.observeSlideChildren }),
                l(t.wrapperEl, { attributes: !1 });
            }
          }),
          s("destroy", () => {
            r.forEach((e) => {
              e.disconnect();
            }),
              r.splice(0, r.length);
          });
      },
    ]);
  const pe = [
    function (e) {
      let t,
        { swiper: i, extendParams: n, on: a, emit: r } = e;
      n({
        virtual: {
          enabled: !1,
          slides: [],
          cache: !0,
          renderSlide: null,
          renderExternal: null,
          renderExternalUpdate: !0,
          addSlidesBefore: 0,
          addSlidesAfter: 0,
        },
      });
      const o = s();
      i.virtual = {
        cache: {},
        from: void 0,
        to: void 0,
        slides: [],
        offset: 0,
        slidesGrid: [],
      };
      const l = o.createElement("div");
      function c(e, t) {
        const s = i.params.virtual;
        if (s.cache && i.virtual.cache[t]) return i.virtual.cache[t];
        let n;
        return (
          s.renderSlide
            ? ((n = s.renderSlide.call(i, e, t)),
              "string" == typeof n && ((l.innerHTML = n), (n = l.children[0])))
            : (n = i.isElement
                ? b("swiper-slide")
                : b("div", i.params.slideClass)),
          n.setAttribute("data-swiper-slide-index", t),
          s.renderSlide || (n.innerHTML = e),
          s.cache && (i.virtual.cache[t] = n),
          n
        );
      }
      function h(e) {
        const {
            slidesPerView: t,
            slidesPerGroup: s,
            centeredSlides: n,
            loop: a,
          } = i.params,
          { addSlidesBefore: o, addSlidesAfter: l } = i.params.virtual,
          { from: h, to: d, slides: u, slidesGrid: p, offset: f } = i.virtual;
        i.params.cssMode || i.updateActiveIndex();
        const m = i.activeIndex || 0;
        let v, b, y;
        (v = i.rtlTranslate ? "right" : i.isHorizontal() ? "left" : "top"),
          n
            ? ((b = Math.floor(t / 2) + s + l), (y = Math.floor(t / 2) + s + o))
            : ((b = t + (s - 1) + l), (y = (a ? t : s) + o));
        let _ = m - y,
          w = m + b;
        a || ((_ = Math.max(_, 0)), (w = Math.min(w, u.length - 1)));
        let x = (i.slidesGrid[_] || 0) - (i.slidesGrid[0] || 0);
        function C() {
          i.updateSlides(),
            i.updateProgress(),
            i.updateSlidesClasses(),
            r("virtualUpdate");
        }
        if (
          (a && m >= y
            ? ((_ -= y), n || (x += i.slidesGrid[0]))
            : a && m < y && ((_ = -y), n && (x += i.slidesGrid[0])),
          Object.assign(i.virtual, {
            from: _,
            to: w,
            offset: x,
            slidesGrid: i.slidesGrid,
            slidesBefore: y,
            slidesAfter: b,
          }),
          h === _ && d === w && !e)
        )
          return (
            i.slidesGrid !== p &&
              x !== f &&
              i.slides.forEach((e) => {
                e.style[v] = x - Math.abs(i.cssOverflowAdjustment()) + "px";
              }),
            i.updateProgress(),
            void r("virtualUpdate")
          );
        if (i.params.virtual.renderExternal)
          return (
            i.params.virtual.renderExternal.call(i, {
              offset: x,
              from: _,
              to: w,
              slides: (function () {
                const e = [];
                for (let t = _; t <= w; t += 1) e.push(u[t]);
                return e;
              })(),
            }),
            void (i.params.virtual.renderExternalUpdate
              ? C()
              : r("virtualUpdate"))
          );
        const T = [],
          S = [],
          k = (e) => {
            let t = e;
            return (
              e < 0 ? (t = u.length + e) : t >= u.length && (t -= u.length), t
            );
          };
        if (e)
          i.slides
            .filter((e) => e.matches(`.${i.params.slideClass}, swiper-slide`))
            .forEach((e) => {
              e.remove();
            });
        else
          for (let e = h; e <= d; e += 1)
            if (e < _ || e > w) {
              const t = k(e);
              i.slides
                .filter((e) =>
                  e.matches(
                    `.${i.params.slideClass}[data-swiper-slide-index="${t}"], swiper-slide[data-swiper-slide-index="${t}"]`
                  )
                )
                .forEach((e) => {
                  e.remove();
                });
            }
        const E = a ? -u.length : 0,
          M = a ? 2 * u.length : u.length;
        for (let t = E; t < M; t += 1)
          if (t >= _ && t <= w) {
            const i = k(t);
            void 0 === d || e
              ? S.push(i)
              : (t > d && S.push(i), t < h && T.push(i));
          }
        if (
          (S.forEach((e) => {
            i.slidesEl.append(c(u[e], e));
          }),
          a)
        )
          for (let e = T.length - 1; e >= 0; e -= 1) {
            const t = T[e];
            i.slidesEl.prepend(c(u[t], t));
          }
        else
          T.sort((e, t) => t - e),
            T.forEach((e) => {
              i.slidesEl.prepend(c(u[e], e));
            });
        g(i.slidesEl, ".swiper-slide, swiper-slide").forEach((e) => {
          e.style[v] = x - Math.abs(i.cssOverflowAdjustment()) + "px";
        }),
          C();
      }
      a("beforeInit", () => {
        if (!i.params.virtual.enabled) return;
        let e;
        if (void 0 === i.passedParams.virtual.slides) {
          const t = [...i.slidesEl.children].filter((e) =>
            e.matches(`.${i.params.slideClass}, swiper-slide`)
          );
          t &&
            t.length &&
            ((i.virtual.slides = [...t]),
            (e = !0),
            t.forEach((e, t) => {
              e.setAttribute("data-swiper-slide-index", t),
                (i.virtual.cache[t] = e),
                e.remove();
            }));
        }
        e || (i.virtual.slides = i.params.virtual.slides),
          i.classNames.push(`${i.params.containerModifierClass}virtual`),
          (i.params.watchSlidesProgress = !0),
          (i.originalParams.watchSlidesProgress = !0),
          h();
      }),
        a("setTranslate", () => {
          i.params.virtual.enabled &&
            (i.params.cssMode && !i._immediateVirtual
              ? (clearTimeout(t),
                (t = setTimeout(() => {
                  h();
                }, 100)))
              : h());
        }),
        a("init update resize", () => {
          i.params.virtual.enabled &&
            i.params.cssMode &&
            p(i.wrapperEl, "--swiper-virtual-size", `${i.virtualSize}px`);
        }),
        Object.assign(i.virtual, {
          appendSlide: function (e) {
            if ("object" == typeof e && "length" in e)
              for (let t = 0; t < e.length; t += 1)
                e[t] && i.virtual.slides.push(e[t]);
            else i.virtual.slides.push(e);
            h(!0);
          },
          prependSlide: function (e) {
            const t = i.activeIndex;
            let s = t + 1,
              n = 1;
            if (Array.isArray(e)) {
              for (let t = 0; t < e.length; t += 1)
                e[t] && i.virtual.slides.unshift(e[t]);
              (s = t + e.length), (n = e.length);
            } else i.virtual.slides.unshift(e);
            if (i.params.virtual.cache) {
              const e = i.virtual.cache,
                t = {};
              Object.keys(e).forEach((i) => {
                const s = e[i],
                  a = s.getAttribute("data-swiper-slide-index");
                a &&
                  s.setAttribute(
                    "data-swiper-slide-index",
                    parseInt(a, 10) + n
                  ),
                  (t[parseInt(i, 10) + n] = s);
              }),
                (i.virtual.cache = t);
            }
            h(!0), i.slideTo(s, 0);
          },
          removeSlide: function (e) {
            if (null == e) return;
            let t = i.activeIndex;
            if (Array.isArray(e))
              for (let s = e.length - 1; s >= 0; s -= 1)
                i.params.virtual.cache &&
                  (delete i.virtual.cache[e[s]],
                  Object.keys(i.virtual.cache).forEach((t) => {
                    t > e &&
                      ((i.virtual.cache[t - 1] = i.virtual.cache[t]),
                      i.virtual.cache[t - 1].setAttribute(
                        "data-swiper-slide-index",
                        t - 1
                      ),
                      delete i.virtual.cache[t]);
                  })),
                  i.virtual.slides.splice(e[s], 1),
                  e[s] < t && (t -= 1),
                  (t = Math.max(t, 0));
            else
              i.params.virtual.cache &&
                (delete i.virtual.cache[e],
                Object.keys(i.virtual.cache).forEach((t) => {
                  t > e &&
                    ((i.virtual.cache[t - 1] = i.virtual.cache[t]),
                    i.virtual.cache[t - 1].setAttribute(
                      "data-swiper-slide-index",
                      t - 1
                    ),
                    delete i.virtual.cache[t]);
                })),
                i.virtual.slides.splice(e, 1),
                e < t && (t -= 1),
                (t = Math.max(t, 0));
            h(!0), i.slideTo(t, 0);
          },
          removeAllSlides: function () {
            (i.virtual.slides = []),
              i.params.virtual.cache && (i.virtual.cache = {}),
              h(!0),
              i.slideTo(0, 0);
          },
          update: h,
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: n, emit: r } = e;
      const o = s(),
        l = a();
      function c(e) {
        if (!t.enabled) return;
        const { rtlTranslate: i } = t;
        let s = e;
        s.originalEvent && (s = s.originalEvent);
        const n = s.keyCode || s.charCode,
          a = t.params.keyboard.pageUpDown,
          c = a && 33 === n,
          h = a && 34 === n,
          d = 37 === n,
          u = 39 === n,
          p = 38 === n,
          f = 40 === n;
        if (
          !t.allowSlideNext &&
          ((t.isHorizontal() && u) || (t.isVertical() && f) || h)
        )
          return !1;
        if (
          !t.allowSlidePrev &&
          ((t.isHorizontal() && d) || (t.isVertical() && p) || c)
        )
          return !1;
        if (
          !(
            s.shiftKey ||
            s.altKey ||
            s.ctrlKey ||
            s.metaKey ||
            (o.activeElement &&
              o.activeElement.nodeName &&
              ("input" === o.activeElement.nodeName.toLowerCase() ||
                "textarea" === o.activeElement.nodeName.toLowerCase()))
          )
        ) {
          if (
            t.params.keyboard.onlyInViewport &&
            (c || h || d || u || p || f)
          ) {
            let e = !1;
            if (
              x(t.el, `.${t.params.slideClass}, swiper-slide`).length > 0 &&
              0 === x(t.el, `.${t.params.slideActiveClass}`).length
            )
              return;
            const s = t.el,
              n = s.clientWidth,
              a = s.clientHeight,
              r = l.innerWidth,
              o = l.innerHeight,
              c = y(s);
            i && (c.left -= s.scrollLeft);
            const h = [
              [c.left, c.top],
              [c.left + n, c.top],
              [c.left, c.top + a],
              [c.left + n, c.top + a],
            ];
            for (let t = 0; t < h.length; t += 1) {
              const i = h[t];
              if (i[0] >= 0 && i[0] <= r && i[1] >= 0 && i[1] <= o) {
                if (0 === i[0] && 0 === i[1]) continue;
                e = !0;
              }
            }
            if (!e) return;
          }
          t.isHorizontal()
            ? ((c || h || d || u) &&
                (s.preventDefault ? s.preventDefault() : (s.returnValue = !1)),
              (((h || u) && !i) || ((c || d) && i)) && t.slideNext(),
              (((c || d) && !i) || ((h || u) && i)) && t.slidePrev())
            : ((c || h || p || f) &&
                (s.preventDefault ? s.preventDefault() : (s.returnValue = !1)),
              (h || f) && t.slideNext(),
              (c || p) && t.slidePrev()),
            r("keyPress", n);
        }
      }
      function h() {
        t.keyboard.enabled ||
          (o.addEventListener("keydown", c), (t.keyboard.enabled = !0));
      }
      function d() {
        t.keyboard.enabled &&
          (o.removeEventListener("keydown", c), (t.keyboard.enabled = !1));
      }
      (t.keyboard = { enabled: !1 }),
        i({ keyboard: { enabled: !1, onlyInViewport: !0, pageUpDown: !0 } }),
        n("init", () => {
          t.params.keyboard.enabled && h();
        }),
        n("destroy", () => {
          t.keyboard.enabled && d();
        }),
        Object.assign(t.keyboard, { enable: h, disable: d });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s, emit: n } = e;
      const r = a();
      let c;
      i({
        mousewheel: {
          enabled: !1,
          releaseOnEdges: !1,
          invert: !1,
          forceToAxis: !1,
          sensitivity: 1,
          eventsTarget: "container",
          thresholdDelta: null,
          thresholdTime: null,
          noMousewheelClass: "swiper-no-mousewheel",
        },
      }),
        (t.mousewheel = { enabled: !1 });
      let h,
        d = l();
      const u = [];
      function p() {
        t.enabled && (t.mouseEntered = !0);
      }
      function f() {
        t.enabled && (t.mouseEntered = !1);
      }
      function m(e) {
        return (
          !(
            t.params.mousewheel.thresholdDelta &&
            e.delta < t.params.mousewheel.thresholdDelta
          ) &&
          !(
            t.params.mousewheel.thresholdTime &&
            l() - d < t.params.mousewheel.thresholdTime
          ) &&
          ((e.delta >= 6 && l() - d < 60) ||
            (e.direction < 0
              ? (t.isEnd && !t.params.loop) ||
                t.animating ||
                (t.slideNext(), n("scroll", e.raw))
              : (t.isBeginning && !t.params.loop) ||
                t.animating ||
                (t.slidePrev(), n("scroll", e.raw)),
            (d = new r.Date().getTime()),
            !1))
        );
      }
      function g(e) {
        let i = e,
          s = !0;
        if (!t.enabled) return;
        if (e.target.closest(`.${t.params.mousewheel.noMousewheelClass}`))
          return;
        const a = t.params.mousewheel;
        t.params.cssMode && i.preventDefault();
        let r = t.el;
        "container" !== t.params.mousewheel.eventsTarget &&
          (r = document.querySelector(t.params.mousewheel.eventsTarget));
        const d = r && r.contains(i.target);
        if (!t.mouseEntered && !d && !a.releaseOnEdges) return !0;
        i.originalEvent && (i = i.originalEvent);
        let p = 0;
        const f = t.rtlTranslate ? -1 : 1,
          g = (function (e) {
            let t = 0,
              i = 0,
              s = 0,
              n = 0;
            return (
              "detail" in e && (i = e.detail),
              "wheelDelta" in e && (i = -e.wheelDelta / 120),
              "wheelDeltaY" in e && (i = -e.wheelDeltaY / 120),
              "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120),
              "axis" in e && e.axis === e.HORIZONTAL_AXIS && ((t = i), (i = 0)),
              (s = 10 * t),
              (n = 10 * i),
              "deltaY" in e && (n = e.deltaY),
              "deltaX" in e && (s = e.deltaX),
              e.shiftKey && !s && ((s = n), (n = 0)),
              (s || n) &&
                e.deltaMode &&
                (1 === e.deltaMode
                  ? ((s *= 40), (n *= 40))
                  : ((s *= 800), (n *= 800))),
              s && !t && (t = s < 1 ? -1 : 1),
              n && !i && (i = n < 1 ? -1 : 1),
              { spinX: t, spinY: i, pixelX: s, pixelY: n }
            );
          })(i);
        if (a.forceToAxis)
          if (t.isHorizontal()) {
            if (!(Math.abs(g.pixelX) > Math.abs(g.pixelY))) return !0;
            p = -g.pixelX * f;
          } else {
            if (!(Math.abs(g.pixelY) > Math.abs(g.pixelX))) return !0;
            p = -g.pixelY;
          }
        else
          p =
            Math.abs(g.pixelX) > Math.abs(g.pixelY) ? -g.pixelX * f : -g.pixelY;
        if (0 === p) return !0;
        a.invert && (p = -p);
        let v = t.getTranslate() + p * a.sensitivity;
        if (
          (v >= t.minTranslate() && (v = t.minTranslate()),
          v <= t.maxTranslate() && (v = t.maxTranslate()),
          (s =
            !!t.params.loop ||
            !(v === t.minTranslate() || v === t.maxTranslate())),
          s && t.params.nested && i.stopPropagation(),
          t.params.freeMode && t.params.freeMode.enabled)
        ) {
          const e = { time: l(), delta: Math.abs(p), direction: Math.sign(p) },
            s =
              h &&
              e.time < h.time + 500 &&
              e.delta <= h.delta &&
              e.direction === h.direction;
          if (!s) {
            h = void 0;
            let r = t.getTranslate() + p * a.sensitivity;
            const l = t.isBeginning,
              d = t.isEnd;
            if (
              (r >= t.minTranslate() && (r = t.minTranslate()),
              r <= t.maxTranslate() && (r = t.maxTranslate()),
              t.setTransition(0),
              t.setTranslate(r),
              t.updateProgress(),
              t.updateActiveIndex(),
              t.updateSlidesClasses(),
              ((!l && t.isBeginning) || (!d && t.isEnd)) &&
                t.updateSlidesClasses(),
              t.params.loop &&
                t.loopFix({
                  direction: e.direction < 0 ? "next" : "prev",
                  byMousewheel: !0,
                }),
              t.params.freeMode.sticky)
            ) {
              clearTimeout(c), (c = void 0), u.length >= 15 && u.shift();
              const i = u.length ? u[u.length - 1] : void 0,
                s = u[0];
              if (
                (u.push(e),
                i && (e.delta > i.delta || e.direction !== i.direction))
              )
                u.splice(0);
              else if (
                u.length >= 15 &&
                e.time - s.time < 500 &&
                s.delta - e.delta >= 1 &&
                e.delta <= 6
              ) {
                const i = p > 0 ? 0.8 : 0.2;
                (h = e),
                  u.splice(0),
                  (c = o(() => {
                    t.slideToClosest(t.params.speed, !0, void 0, i);
                  }, 0));
              }
              c ||
                (c = o(() => {
                  (h = e),
                    u.splice(0),
                    t.slideToClosest(t.params.speed, !0, void 0, 0.5);
                }, 500));
            }
            if (
              (s || n("scroll", i),
              t.params.autoplay &&
                t.params.autoplayDisableOnInteraction &&
                t.autoplay.stop(),
              a.releaseOnEdges &&
                (r === t.minTranslate() || r === t.maxTranslate()))
            )
              return !0;
          }
        } else {
          const i = {
            time: l(),
            delta: Math.abs(p),
            direction: Math.sign(p),
            raw: e,
          };
          u.length >= 2 && u.shift();
          const s = u.length ? u[u.length - 1] : void 0;
          if (
            (u.push(i),
            s
              ? (i.direction !== s.direction ||
                  i.delta > s.delta ||
                  i.time > s.time + 150) &&
                m(i)
              : m(i),
            (function (e) {
              const i = t.params.mousewheel;
              if (e.direction < 0) {
                if (t.isEnd && !t.params.loop && i.releaseOnEdges) return !0;
              } else if (t.isBeginning && !t.params.loop && i.releaseOnEdges)
                return !0;
              return !1;
            })(i))
          )
            return !0;
        }
        return i.preventDefault ? i.preventDefault() : (i.returnValue = !1), !1;
      }
      function v(e) {
        let i = t.el;
        "container" !== t.params.mousewheel.eventsTarget &&
          (i = document.querySelector(t.params.mousewheel.eventsTarget)),
          i[e]("mouseenter", p),
          i[e]("mouseleave", f),
          i[e]("wheel", g);
      }
      function b() {
        return t.params.cssMode
          ? (t.wrapperEl.removeEventListener("wheel", g), !0)
          : !t.mousewheel.enabled &&
              (v("addEventListener"), (t.mousewheel.enabled = !0), !0);
      }
      function y() {
        return t.params.cssMode
          ? (t.wrapperEl.addEventListener(event, g), !0)
          : !!t.mousewheel.enabled &&
              (v("removeEventListener"), (t.mousewheel.enabled = !1), !0);
      }
      s("init", () => {
        !t.params.mousewheel.enabled && t.params.cssMode && y(),
          t.params.mousewheel.enabled && b();
      }),
        s("destroy", () => {
          t.params.cssMode && b(), t.mousewheel.enabled && y();
        }),
        Object.assign(t.mousewheel, { enable: b, disable: y });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s, emit: n } = e;
      i({
        navigation: {
          nextEl: null,
          prevEl: null,
          hideOnClick: !1,
          disabledClass: "swiper-button-disabled",
          hiddenClass: "swiper-button-hidden",
          lockClass: "swiper-button-lock",
          navigationDisabledClass: "swiper-navigation-disabled",
        },
      }),
        (t.navigation = { nextEl: null, prevEl: null });
      const a = (e) => (Array.isArray(e) ? e : [e]).filter((e) => !!e);
      function r(e) {
        let i;
        return e &&
          "string" == typeof e &&
          t.isElement &&
          ((i = t.el.querySelector(e)), i)
          ? i
          : (e &&
              ("string" == typeof e && (i = [...document.querySelectorAll(e)]),
              t.params.uniqueNavElements &&
                "string" == typeof e &&
                i.length > 1 &&
                1 === t.el.querySelectorAll(e).length &&
                (i = t.el.querySelector(e))),
            e && !i ? e : i);
      }
      function o(e, i) {
        const s = t.params.navigation;
        (e = a(e)).forEach((e) => {
          e &&
            (e.classList[i ? "add" : "remove"](...s.disabledClass.split(" ")),
            "BUTTON" === e.tagName && (e.disabled = i),
            t.params.watchOverflow &&
              t.enabled &&
              e.classList[t.isLocked ? "add" : "remove"](s.lockClass));
        });
      }
      function l() {
        const { nextEl: e, prevEl: i } = t.navigation;
        if (t.params.loop) return o(i, !1), void o(e, !1);
        o(i, t.isBeginning && !t.params.rewind),
          o(e, t.isEnd && !t.params.rewind);
      }
      function c(e) {
        e.preventDefault(),
          (!t.isBeginning || t.params.loop || t.params.rewind) &&
            (t.slidePrev(), n("navigationPrev"));
      }
      function h(e) {
        e.preventDefault(),
          (!t.isEnd || t.params.loop || t.params.rewind) &&
            (t.slideNext(), n("navigationNext"));
      }
      function d() {
        const e = t.params.navigation;
        if (
          ((t.params.navigation = ie(
            t,
            t.originalParams.navigation,
            t.params.navigation,
            { nextEl: "swiper-button-next", prevEl: "swiper-button-prev" }
          )),
          !e.nextEl && !e.prevEl)
        )
          return;
        let i = r(e.nextEl),
          s = r(e.prevEl);
        Object.assign(t.navigation, { nextEl: i, prevEl: s }),
          (i = a(i)),
          (s = a(s));
        const n = (i, s) => {
          i && i.addEventListener("click", "next" === s ? h : c),
            !t.enabled && i && i.classList.add(...e.lockClass.split(" "));
        };
        i.forEach((e) => n(e, "next")), s.forEach((e) => n(e, "prev"));
      }
      function u() {
        let { nextEl: e, prevEl: i } = t.navigation;
        (e = a(e)), (i = a(i));
        const s = (e, i) => {
          e.removeEventListener("click", "next" === i ? h : c),
            e.classList.remove(...t.params.navigation.disabledClass.split(" "));
        };
        e.forEach((e) => s(e, "next")), i.forEach((e) => s(e, "prev"));
      }
      s("init", () => {
        !1 === t.params.navigation.enabled ? p() : (d(), l());
      }),
        s("toEdge fromEdge lock unlock", () => {
          l();
        }),
        s("destroy", () => {
          u();
        }),
        s("enable disable", () => {
          let { nextEl: e, prevEl: i } = t.navigation;
          (e = a(e)),
            (i = a(i)),
            t.enabled
              ? l()
              : [...e, ...i]
                  .filter((e) => !!e)
                  .forEach((e) =>
                    e.classList.add(t.params.navigation.lockClass)
                  );
        }),
        s("click", (e, i) => {
          let { nextEl: s, prevEl: r } = t.navigation;
          (s = a(s)), (r = a(r));
          const o = i.target;
          if (
            t.params.navigation.hideOnClick &&
            !r.includes(o) &&
            !s.includes(o)
          ) {
            if (
              t.pagination &&
              t.params.pagination &&
              t.params.pagination.clickable &&
              (t.pagination.el === o || t.pagination.el.contains(o))
            )
              return;
            let e;
            s.length
              ? (e = s[0].classList.contains(t.params.navigation.hiddenClass))
              : r.length &&
                (e = r[0].classList.contains(t.params.navigation.hiddenClass)),
              n(!0 === e ? "navigationShow" : "navigationHide"),
              [...s, ...r]
                .filter((e) => !!e)
                .forEach((e) =>
                  e.classList.toggle(t.params.navigation.hiddenClass)
                );
          }
        });
      const p = () => {
        t.el.classList.add(
          ...t.params.navigation.navigationDisabledClass.split(" ")
        ),
          u();
      };
      Object.assign(t.navigation, {
        enable: () => {
          t.el.classList.remove(
            ...t.params.navigation.navigationDisabledClass.split(" ")
          ),
            d(),
            l();
        },
        disable: p,
        update: l,
        init: d,
        destroy: u,
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s, emit: n } = e;
      const a = "swiper-pagination";
      let r;
      i({
        pagination: {
          el: null,
          bulletElement: "span",
          clickable: !1,
          hideOnClick: !1,
          renderBullet: null,
          renderProgressbar: null,
          renderFraction: null,
          renderCustom: null,
          progressbarOpposite: !1,
          type: "bullets",
          dynamicBullets: !1,
          dynamicMainBullets: 1,
          formatFractionCurrent: (e) => e,
          formatFractionTotal: (e) => e,
          bulletClass: `${a}-bullet`,
          bulletActiveClass: `${a}-bullet-active`,
          modifierClass: `${a}-`,
          currentClass: `${a}-current`,
          totalClass: `${a}-total`,
          hiddenClass: `${a}-hidden`,
          progressbarFillClass: `${a}-progressbar-fill`,
          progressbarOppositeClass: `${a}-progressbar-opposite`,
          clickableClass: `${a}-clickable`,
          lockClass: `${a}-lock`,
          horizontalClass: `${a}-horizontal`,
          verticalClass: `${a}-vertical`,
          paginationDisabledClass: `${a}-disabled`,
        },
      }),
        (t.pagination = { el: null, bullets: [] });
      let o = 0;
      const l = (e) => (Array.isArray(e) ? e : [e]).filter((e) => !!e);
      function c() {
        return (
          !t.params.pagination.el ||
          !t.pagination.el ||
          (Array.isArray(t.pagination.el) && 0 === t.pagination.el.length)
        );
      }
      function h(e, i) {
        const { bulletActiveClass: s } = t.params.pagination;
        e &&
          (e = e[("prev" === i ? "previous" : "next") + "ElementSibling"]) &&
          (e.classList.add(`${s}-${i}`),
          (e = e[("prev" === i ? "previous" : "next") + "ElementSibling"]) &&
            e.classList.add(`${s}-${i}-${i}`));
      }
      function d(e) {
        const i = e.target.closest(se(t.params.pagination.bulletClass));
        if (!i) return;
        e.preventDefault();
        const s = w(i) * t.params.slidesPerGroup;
        if (t.params.loop) {
          if (t.realIndex === s) return;
          t.slideToLoop(s);
        } else t.slideTo(s);
      }
      function u() {
        const e = t.rtl,
          i = t.params.pagination;
        if (c()) return;
        let s,
          a,
          d = t.pagination.el;
        d = l(d);
        const u =
            t.virtual && t.params.virtual.enabled
              ? t.virtual.slides.length
              : t.slides.length,
          p = t.params.loop
            ? Math.ceil(u / t.params.slidesPerGroup)
            : t.snapGrid.length;
        if (
          (t.params.loop
            ? ((a = t.previousRealIndex || 0),
              (s =
                t.params.slidesPerGroup > 1
                  ? Math.floor(t.realIndex / t.params.slidesPerGroup)
                  : t.realIndex))
            : void 0 !== t.snapIndex
            ? ((s = t.snapIndex), (a = t.previousSnapIndex))
            : ((a = t.previousIndex || 0), (s = t.activeIndex || 0)),
          "bullets" === i.type &&
            t.pagination.bullets &&
            t.pagination.bullets.length > 0)
        ) {
          const n = t.pagination.bullets;
          let l, c, u;
          if (
            (i.dynamicBullets &&
              ((r = T(n[0], t.isHorizontal() ? "width" : "height", !0)),
              d.forEach((e) => {
                e.style[t.isHorizontal() ? "width" : "height"] =
                  r * (i.dynamicMainBullets + 4) + "px";
              }),
              i.dynamicMainBullets > 1 &&
                void 0 !== a &&
                ((o += s - (a || 0)),
                o > i.dynamicMainBullets - 1
                  ? (o = i.dynamicMainBullets - 1)
                  : o < 0 && (o = 0)),
              (l = Math.max(s - o, 0)),
              (c = l + (Math.min(n.length, i.dynamicMainBullets) - 1)),
              (u = (c + l) / 2)),
            n.forEach((e) => {
              const t = [
                ...[
                  "",
                  "-next",
                  "-next-next",
                  "-prev",
                  "-prev-prev",
                  "-main",
                ].map((e) => `${i.bulletActiveClass}${e}`),
              ]
                .map((e) =>
                  "string" == typeof e && e.includes(" ") ? e.split(" ") : e
                )
                .flat();
              e.classList.remove(...t);
            }),
            d.length > 1)
          )
            n.forEach((e) => {
              const n = w(e);
              n === s
                ? e.classList.add(...i.bulletActiveClass.split(" "))
                : t.isElement && e.setAttribute("part", "bullet"),
                i.dynamicBullets &&
                  (n >= l &&
                    n <= c &&
                    e.classList.add(
                      ...`${i.bulletActiveClass}-main`.split(" ")
                    ),
                  n === l && h(e, "prev"),
                  n === c && h(e, "next"));
            });
          else {
            const e = n[s];
            if (
              (e && e.classList.add(...i.bulletActiveClass.split(" ")),
              t.isElement &&
                n.forEach((e, t) => {
                  e.setAttribute("part", t === s ? "bullet-active" : "bullet");
                }),
              i.dynamicBullets)
            ) {
              const e = n[l],
                t = n[c];
              for (let e = l; e <= c; e += 1)
                n[e] &&
                  n[e].classList.add(
                    ...`${i.bulletActiveClass}-main`.split(" ")
                  );
              h(e, "prev"), h(t, "next");
            }
          }
          if (i.dynamicBullets) {
            const s = Math.min(n.length, i.dynamicMainBullets + 4),
              a = (r * s - r) / 2 - u * r,
              o = e ? "right" : "left";
            n.forEach((e) => {
              e.style[t.isHorizontal() ? o : "top"] = `${a}px`;
            });
          }
        }
        d.forEach((e, a) => {
          if (
            ("fraction" === i.type &&
              (e.querySelectorAll(se(i.currentClass)).forEach((e) => {
                e.textContent = i.formatFractionCurrent(s + 1);
              }),
              e.querySelectorAll(se(i.totalClass)).forEach((e) => {
                e.textContent = i.formatFractionTotal(p);
              })),
            "progressbar" === i.type)
          ) {
            let n;
            n = i.progressbarOpposite
              ? t.isHorizontal()
                ? "vertical"
                : "horizontal"
              : t.isHorizontal()
              ? "horizontal"
              : "vertical";
            const a = (s + 1) / p;
            let r = 1,
              o = 1;
            "horizontal" === n ? (r = a) : (o = a),
              e.querySelectorAll(se(i.progressbarFillClass)).forEach((e) => {
                (e.style.transform = `translate3d(0,0,0) scaleX(${r}) scaleY(${o})`),
                  (e.style.transitionDuration = `${t.params.speed}ms`);
              });
          }
          "custom" === i.type && i.renderCustom
            ? ((e.innerHTML = i.renderCustom(t, s + 1, p)),
              0 === a && n("paginationRender", e))
            : (0 === a && n("paginationRender", e), n("paginationUpdate", e)),
            t.params.watchOverflow &&
              t.enabled &&
              e.classList[t.isLocked ? "add" : "remove"](i.lockClass);
        });
      }
      function p() {
        const e = t.params.pagination;
        if (c()) return;
        const i =
          t.virtual && t.params.virtual.enabled
            ? t.virtual.slides.length
            : t.grid && t.params.grid.rows > 1
            ? t.slides.length / Math.ceil(t.params.grid.rows)
            : t.slides.length;
        let s = t.pagination.el;
        s = l(s);
        let a = "";
        if ("bullets" === e.type) {
          let s = t.params.loop
            ? Math.ceil(i / t.params.slidesPerGroup)
            : t.snapGrid.length;
          t.params.freeMode && t.params.freeMode.enabled && s > i && (s = i);
          for (let i = 0; i < s; i += 1)
            e.renderBullet
              ? (a += e.renderBullet.call(t, i, e.bulletClass))
              : (a += `<${e.bulletElement} ${
                  t.isElement ? 'part="bullet"' : ""
                } class="${e.bulletClass}"></${e.bulletElement}>`);
        }
        "fraction" === e.type &&
          (a = e.renderFraction
            ? e.renderFraction.call(t, e.currentClass, e.totalClass)
            : `<span class="${e.currentClass}"></span> / <span class="${e.totalClass}"></span>`),
          "progressbar" === e.type &&
            (a = e.renderProgressbar
              ? e.renderProgressbar.call(t, e.progressbarFillClass)
              : `<span class="${e.progressbarFillClass}"></span>`),
          (t.pagination.bullets = []),
          s.forEach((i) => {
            "custom" !== e.type && (i.innerHTML = a || ""),
              "bullets" === e.type &&
                t.pagination.bullets.push(
                  ...i.querySelectorAll(se(e.bulletClass))
                );
          }),
          "custom" !== e.type && n("paginationRender", s[0]);
      }
      function f() {
        t.params.pagination = ie(
          t,
          t.originalParams.pagination,
          t.params.pagination,
          { el: "swiper-pagination" }
        );
        const e = t.params.pagination;
        if (!e.el) return;
        let i;
        "string" == typeof e.el &&
          t.isElement &&
          (i = t.el.querySelector(e.el)),
          i ||
            "string" != typeof e.el ||
            (i = [...document.querySelectorAll(e.el)]),
          i || (i = e.el),
          i &&
            0 !== i.length &&
            (t.params.uniqueNavElements &&
              "string" == typeof e.el &&
              Array.isArray(i) &&
              i.length > 1 &&
              ((i = [...t.el.querySelectorAll(e.el)]),
              i.length > 1 &&
                (i = i.filter((e) => x(e, ".swiper")[0] === t.el)[0])),
            Array.isArray(i) && 1 === i.length && (i = i[0]),
            Object.assign(t.pagination, { el: i }),
            (i = l(i)),
            i.forEach((i) => {
              "bullets" === e.type &&
                e.clickable &&
                i.classList.add(...(e.clickableClass || "").split(" ")),
                i.classList.add(e.modifierClass + e.type),
                i.classList.add(
                  t.isHorizontal() ? e.horizontalClass : e.verticalClass
                ),
                "bullets" === e.type &&
                  e.dynamicBullets &&
                  (i.classList.add(`${e.modifierClass}${e.type}-dynamic`),
                  (o = 0),
                  e.dynamicMainBullets < 1 && (e.dynamicMainBullets = 1)),
                "progressbar" === e.type &&
                  e.progressbarOpposite &&
                  i.classList.add(e.progressbarOppositeClass),
                e.clickable && i.addEventListener("click", d),
                t.enabled || i.classList.add(e.lockClass);
            }));
      }
      function m() {
        const e = t.params.pagination;
        if (c()) return;
        let i = t.pagination.el;
        i &&
          ((i = l(i)),
          i.forEach((i) => {
            i.classList.remove(e.hiddenClass),
              i.classList.remove(e.modifierClass + e.type),
              i.classList.remove(
                t.isHorizontal() ? e.horizontalClass : e.verticalClass
              ),
              e.clickable &&
                (i.classList.remove(...(e.clickableClass || "").split(" ")),
                i.removeEventListener("click", d));
          })),
          t.pagination.bullets &&
            t.pagination.bullets.forEach((t) =>
              t.classList.remove(...e.bulletActiveClass.split(" "))
            );
      }
      s("changeDirection", () => {
        if (!t.pagination || !t.pagination.el) return;
        const e = t.params.pagination;
        let { el: i } = t.pagination;
        (i = l(i)),
          i.forEach((i) => {
            i.classList.remove(e.horizontalClass, e.verticalClass),
              i.classList.add(
                t.isHorizontal() ? e.horizontalClass : e.verticalClass
              );
          });
      }),
        s("init", () => {
          !1 === t.params.pagination.enabled ? g() : (f(), p(), u());
        }),
        s("activeIndexChange", () => {
          void 0 === t.snapIndex && u();
        }),
        s("snapIndexChange", () => {
          u();
        }),
        s("snapGridLengthChange", () => {
          p(), u();
        }),
        s("destroy", () => {
          m();
        }),
        s("enable disable", () => {
          let { el: e } = t.pagination;
          e &&
            ((e = l(e)),
            e.forEach((e) =>
              e.classList[t.enabled ? "remove" : "add"](
                t.params.pagination.lockClass
              )
            ));
        }),
        s("lock unlock", () => {
          u();
        }),
        s("click", (e, i) => {
          const s = i.target,
            a = l(t.pagination.el);
          if (
            t.params.pagination.el &&
            t.params.pagination.hideOnClick &&
            a &&
            a.length > 0 &&
            !s.classList.contains(t.params.pagination.bulletClass)
          ) {
            if (
              t.navigation &&
              ((t.navigation.nextEl && s === t.navigation.nextEl) ||
                (t.navigation.prevEl && s === t.navigation.prevEl))
            )
              return;
            const e = a[0].classList.contains(t.params.pagination.hiddenClass);
            n(!0 === e ? "paginationShow" : "paginationHide"),
              a.forEach((e) =>
                e.classList.toggle(t.params.pagination.hiddenClass)
              );
          }
        });
      const g = () => {
        t.el.classList.add(t.params.pagination.paginationDisabledClass);
        let { el: e } = t.pagination;
        e &&
          ((e = l(e)),
          e.forEach((e) =>
            e.classList.add(t.params.pagination.paginationDisabledClass)
          )),
          m();
      };
      Object.assign(t.pagination, {
        enable: () => {
          t.el.classList.remove(t.params.pagination.paginationDisabledClass);
          let { el: e } = t.pagination;
          e &&
            ((e = l(e)),
            e.forEach((e) =>
              e.classList.remove(t.params.pagination.paginationDisabledClass)
            )),
            f(),
            p(),
            u();
        },
        disable: g,
        render: p,
        update: u,
        init: f,
        destroy: m,
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: n, emit: a } = e;
      const l = s();
      let c,
        h,
        d,
        u,
        p = !1,
        f = null,
        m = null;
      function g() {
        if (!t.params.scrollbar.el || !t.scrollbar.el) return;
        const { scrollbar: e, rtlTranslate: i } = t,
          { dragEl: s, el: n } = e,
          a = t.params.scrollbar,
          r = t.params.loop ? t.progressLoop : t.progress;
        let o = h,
          l = (d - h) * r;
        i
          ? ((l = -l),
            l > 0 ? ((o = h - l), (l = 0)) : -l + h > d && (o = d + l))
          : l < 0
          ? ((o = h + l), (l = 0))
          : l + h > d && (o = d - l),
          t.isHorizontal()
            ? ((s.style.transform = `translate3d(${l}px, 0, 0)`),
              (s.style.width = `${o}px`))
            : ((s.style.transform = `translate3d(0px, ${l}px, 0)`),
              (s.style.height = `${o}px`)),
          a.hide &&
            (clearTimeout(f),
            (n.style.opacity = 1),
            (f = setTimeout(() => {
              (n.style.opacity = 0), (n.style.transitionDuration = "400ms");
            }, 1e3)));
      }
      function v() {
        if (!t.params.scrollbar.el || !t.scrollbar.el) return;
        const { scrollbar: e } = t,
          { dragEl: i, el: s } = e;
        (i.style.width = ""),
          (i.style.height = ""),
          (d = t.isHorizontal() ? s.offsetWidth : s.offsetHeight),
          (u =
            t.size /
            (t.virtualSize +
              t.params.slidesOffsetBefore -
              (t.params.centeredSlides ? t.snapGrid[0] : 0))),
          (h =
            "auto" === t.params.scrollbar.dragSize
              ? d * u
              : parseInt(t.params.scrollbar.dragSize, 10)),
          t.isHorizontal()
            ? (i.style.width = `${h}px`)
            : (i.style.height = `${h}px`),
          (s.style.display = u >= 1 ? "none" : ""),
          t.params.scrollbar.hide && (s.style.opacity = 0),
          t.params.watchOverflow &&
            t.enabled &&
            e.el.classList[t.isLocked ? "add" : "remove"](
              t.params.scrollbar.lockClass
            );
      }
      function _(e) {
        return t.isHorizontal() ? e.clientX : e.clientY;
      }
      function w(e) {
        const { scrollbar: i, rtlTranslate: s } = t,
          { el: n } = i;
        let a;
        (a =
          (_(e) -
            y(n)[t.isHorizontal() ? "left" : "top"] -
            (null !== c ? c : h / 2)) /
          (d - h)),
          (a = Math.max(Math.min(a, 1), 0)),
          s && (a = 1 - a);
        const r = t.minTranslate() + (t.maxTranslate() - t.minTranslate()) * a;
        t.updateProgress(r),
          t.setTranslate(r),
          t.updateActiveIndex(),
          t.updateSlidesClasses();
      }
      function x(e) {
        const i = t.params.scrollbar,
          { scrollbar: s, wrapperEl: n } = t,
          { el: r, dragEl: o } = s;
        (p = !0),
          (c =
            e.target === o
              ? _(e) -
                e.target.getBoundingClientRect()[
                  t.isHorizontal() ? "left" : "top"
                ]
              : null),
          e.preventDefault(),
          e.stopPropagation(),
          (n.style.transitionDuration = "100ms"),
          (o.style.transitionDuration = "100ms"),
          w(e),
          clearTimeout(m),
          (r.style.transitionDuration = "0ms"),
          i.hide && (r.style.opacity = 1),
          t.params.cssMode && (t.wrapperEl.style["scroll-snap-type"] = "none"),
          a("scrollbarDragStart", e);
      }
      function C(e) {
        const { scrollbar: i, wrapperEl: s } = t,
          { el: n, dragEl: r } = i;
        p &&
          (e.preventDefault ? e.preventDefault() : (e.returnValue = !1),
          w(e),
          (s.style.transitionDuration = "0ms"),
          (n.style.transitionDuration = "0ms"),
          (r.style.transitionDuration = "0ms"),
          a("scrollbarDragMove", e));
      }
      function T(e) {
        const i = t.params.scrollbar,
          { scrollbar: s, wrapperEl: n } = t,
          { el: r } = s;
        p &&
          ((p = !1),
          t.params.cssMode &&
            ((t.wrapperEl.style["scroll-snap-type"] = ""),
            (n.style.transitionDuration = "")),
          i.hide &&
            (clearTimeout(m),
            (m = o(() => {
              (r.style.opacity = 0), (r.style.transitionDuration = "400ms");
            }, 1e3))),
          a("scrollbarDragEnd", e),
          i.snapOnRelease && t.slideToClosest());
      }
      function S(e) {
        const { scrollbar: i, params: s } = t,
          n = i.el;
        if (!n) return;
        const a = n,
          r = !!s.passiveListeners && { passive: !1, capture: !1 },
          o = !!s.passiveListeners && { passive: !0, capture: !1 };
        if (!a) return;
        const c = "on" === e ? "addEventListener" : "removeEventListener";
        a[c]("pointerdown", x, r),
          l[c]("pointermove", C, r),
          l[c]("pointerup", T, o);
      }
      function k() {
        const { scrollbar: e, el: i } = t;
        t.params.scrollbar = ie(
          t,
          t.originalParams.scrollbar,
          t.params.scrollbar,
          { el: "swiper-scrollbar" }
        );
        const s = t.params.scrollbar;
        if (!s.el) return;
        let n, a;
        if (
          ("string" == typeof s.el &&
            t.isElement &&
            (n = t.el.querySelector(s.el)),
          n || "string" != typeof s.el)
        )
          n || (n = s.el);
        else if (((n = l.querySelectorAll(s.el)), !n.length)) return;
        t.params.uniqueNavElements &&
          "string" == typeof s.el &&
          n.length > 1 &&
          1 === i.querySelectorAll(s.el).length &&
          (n = i.querySelector(s.el)),
          n.length > 0 && (n = n[0]),
          n.classList.add(
            t.isHorizontal() ? s.horizontalClass : s.verticalClass
          ),
          n &&
            ((a = n.querySelector(se(t.params.scrollbar.dragClass))),
            a || ((a = b("div", t.params.scrollbar.dragClass)), n.append(a))),
          Object.assign(e, { el: n, dragEl: a }),
          s.draggable && t.params.scrollbar.el && t.scrollbar.el && S("on"),
          n &&
            n.classList[t.enabled ? "remove" : "add"](
              ...r(t.params.scrollbar.lockClass)
            );
      }
      function E() {
        const e = t.params.scrollbar,
          i = t.scrollbar.el;
        i &&
          i.classList.remove(
            ...r(t.isHorizontal() ? e.horizontalClass : e.verticalClass)
          ),
          t.params.scrollbar.el && t.scrollbar.el && S("off");
      }
      i({
        scrollbar: {
          el: null,
          dragSize: "auto",
          hide: !1,
          draggable: !1,
          snapOnRelease: !0,
          lockClass: "swiper-scrollbar-lock",
          dragClass: "swiper-scrollbar-drag",
          scrollbarDisabledClass: "swiper-scrollbar-disabled",
          horizontalClass: "swiper-scrollbar-horizontal",
          verticalClass: "swiper-scrollbar-vertical",
        },
      }),
        (t.scrollbar = { el: null, dragEl: null }),
        n("init", () => {
          !1 === t.params.scrollbar.enabled ? M() : (k(), v(), g());
        }),
        n("update resize observerUpdate lock unlock", () => {
          v();
        }),
        n("setTranslate", () => {
          g();
        }),
        n("setTransition", (e, i) => {
          !(function (e) {
            t.params.scrollbar.el &&
              t.scrollbar.el &&
              (t.scrollbar.dragEl.style.transitionDuration = `${e}ms`);
          })(i);
        }),
        n("enable disable", () => {
          const { el: e } = t.scrollbar;
          e &&
            e.classList[t.enabled ? "remove" : "add"](
              ...r(t.params.scrollbar.lockClass)
            );
        }),
        n("destroy", () => {
          E();
        });
      const M = () => {
        t.el.classList.add(...r(t.params.scrollbar.scrollbarDisabledClass)),
          t.scrollbar.el &&
            t.scrollbar.el.classList.add(
              ...r(t.params.scrollbar.scrollbarDisabledClass)
            ),
          E();
      };
      Object.assign(t.scrollbar, {
        enable: () => {
          t.el.classList.remove(
            ...r(t.params.scrollbar.scrollbarDisabledClass)
          ),
            t.scrollbar.el &&
              t.scrollbar.el.classList.remove(
                ...r(t.params.scrollbar.scrollbarDisabledClass)
              ),
            k(),
            v(),
            g();
        },
        disable: M,
        updateSize: v,
        setTranslate: g,
        init: k,
        destroy: E,
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({ parallax: { enabled: !1 } });
      const n =
          "[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]",
        a = (e, i) => {
          const { rtl: s } = t,
            n = s ? -1 : 1,
            a = e.getAttribute("data-swiper-parallax") || "0";
          let r = e.getAttribute("data-swiper-parallax-x"),
            o = e.getAttribute("data-swiper-parallax-y");
          const l = e.getAttribute("data-swiper-parallax-scale"),
            c = e.getAttribute("data-swiper-parallax-opacity"),
            h = e.getAttribute("data-swiper-parallax-rotate");
          if (
            (r || o
              ? ((r = r || "0"), (o = o || "0"))
              : t.isHorizontal()
              ? ((r = a), (o = "0"))
              : ((o = a), (r = "0")),
            (r =
              r.indexOf("%") >= 0
                ? parseInt(r, 10) * i * n + "%"
                : r * i * n + "px"),
            (o =
              o.indexOf("%") >= 0 ? parseInt(o, 10) * i + "%" : o * i + "px"),
            null != c)
          ) {
            const t = c - (c - 1) * (1 - Math.abs(i));
            e.style.opacity = t;
          }
          let d = `translate3d(${r}, ${o}, 0px)`;
          if (null != l) {
            d += ` scale(${l - (l - 1) * (1 - Math.abs(i))})`;
          }
          if (h && null != h) {
            d += ` rotate(${h * i * -1}deg)`;
          }
          e.style.transform = d;
        },
        r = () => {
          const {
              el: e,
              slides: i,
              progress: s,
              snapGrid: r,
              isElement: o,
            } = t,
            l = g(e, n);
          t.isElement && l.push(...g(t.hostEl, n)),
            l.forEach((e) => {
              a(e, s);
            }),
            i.forEach((e, i) => {
              let o = e.progress;
              t.params.slidesPerGroup > 1 &&
                "auto" !== t.params.slidesPerView &&
                (o += Math.ceil(i / 2) - s * (r.length - 1)),
                (o = Math.min(Math.max(o, -1), 1)),
                e
                  .querySelectorAll(`${n}, [data-swiper-parallax-rotate]`)
                  .forEach((e) => {
                    a(e, o);
                  });
            });
        };
      s("beforeInit", () => {
        t.params.parallax.enabled &&
          ((t.params.watchSlidesProgress = !0),
          (t.originalParams.watchSlidesProgress = !0));
      }),
        s("init", () => {
          t.params.parallax.enabled && r();
        }),
        s("setTranslate", () => {
          t.params.parallax.enabled && r();
        }),
        s("setTransition", (e, i) => {
          t.params.parallax.enabled &&
            (function (e) {
              void 0 === e && (e = t.params.speed);
              const { el: i, hostEl: s } = t,
                a = [...i.querySelectorAll(n)];
              t.isElement && a.push(...s.querySelectorAll(n)),
                a.forEach((t) => {
                  let i =
                    parseInt(
                      t.getAttribute("data-swiper-parallax-duration"),
                      10
                    ) || e;
                  0 === e && (i = 0), (t.style.transitionDuration = `${i}ms`);
                });
            })(i);
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s, emit: n } = e;
      const r = a();
      i({
        zoom: {
          enabled: !1,
          maxRatio: 3,
          minRatio: 1,
          toggle: !0,
          containerClass: "swiper-zoom-container",
          zoomedSlideClass: "swiper-slide-zoomed",
        },
      }),
        (t.zoom = { enabled: !1 });
      let o,
        l,
        h = 1,
        d = !1;
      const u = [],
        p = {
          originX: 0,
          originY: 0,
          slideEl: void 0,
          slideWidth: void 0,
          slideHeight: void 0,
          imageEl: void 0,
          imageWrapEl: void 0,
          maxRatio: 3,
        },
        f = {
          isTouched: void 0,
          isMoved: void 0,
          currentX: void 0,
          currentY: void 0,
          minX: void 0,
          minY: void 0,
          maxX: void 0,
          maxY: void 0,
          width: void 0,
          height: void 0,
          startX: void 0,
          startY: void 0,
          touchesStart: {},
          touchesCurrent: {},
        },
        m = {
          x: void 0,
          y: void 0,
          prevPositionX: void 0,
          prevPositionY: void 0,
          prevTime: void 0,
        };
      let v = 1;
      function b() {
        if (u.length < 2) return 1;
        const e = u[0].pageX,
          t = u[0].pageY,
          i = u[1].pageX,
          s = u[1].pageY;
        return Math.sqrt((i - e) ** 2 + (s - t) ** 2);
      }
      function _(e) {
        const i = t.isElement ? "swiper-slide" : `.${t.params.slideClass}`;
        return (
          !!e.target.matches(i) ||
          t.slides.filter((t) => t.contains(e.target)).length > 0
        );
      }
      function w(e) {
        if (("mouse" === e.pointerType && u.splice(0, u.length), !_(e))) return;
        const i = t.params.zoom;
        if (((o = !1), (l = !1), u.push(e), !(u.length < 2))) {
          if (((o = !0), (p.scaleStart = b()), !p.slideEl)) {
            (p.slideEl = e.target.closest(
              `.${t.params.slideClass}, swiper-slide`
            )),
              p.slideEl || (p.slideEl = t.slides[t.activeIndex]);
            let s = p.slideEl.querySelector(`.${i.containerClass}`);
            if (
              (s &&
                (s = s.querySelectorAll(
                  "picture, img, svg, canvas, .swiper-zoom-target"
                )[0]),
              (p.imageEl = s),
              (p.imageWrapEl = s
                ? x(p.imageEl, `.${i.containerClass}`)[0]
                : void 0),
              !p.imageWrapEl)
            )
              return void (p.imageEl = void 0);
            p.maxRatio =
              p.imageWrapEl.getAttribute("data-swiper-zoom") || i.maxRatio;
          }
          if (p.imageEl) {
            const [e, t] = (function () {
              if (u.length < 2) return { x: null, y: null };
              const e = p.imageEl.getBoundingClientRect();
              return [
                (u[0].pageX + (u[1].pageX - u[0].pageX) / 2 - e.x - r.scrollX) /
                  h,
                (u[0].pageY + (u[1].pageY - u[0].pageY) / 2 - e.y - r.scrollY) /
                  h,
              ];
            })();
            (p.originX = e),
              (p.originY = t),
              (p.imageEl.style.transitionDuration = "0ms");
          }
          d = !0;
        }
      }
      function C(e) {
        if (!_(e)) return;
        const i = t.params.zoom,
          s = t.zoom,
          n = u.findIndex((t) => t.pointerId === e.pointerId);
        n >= 0 && (u[n] = e),
          u.length < 2 ||
            ((l = !0),
            (p.scaleMove = b()),
            p.imageEl &&
              ((s.scale = (p.scaleMove / p.scaleStart) * h),
              s.scale > p.maxRatio &&
                (s.scale = p.maxRatio - 1 + (s.scale - p.maxRatio + 1) ** 0.5),
              s.scale < i.minRatio &&
                (s.scale = i.minRatio + 1 - (i.minRatio - s.scale + 1) ** 0.5),
              (p.imageEl.style.transform = `translate3d(0,0,0) scale(${s.scale})`)));
      }
      function T(e) {
        if (!_(e)) return;
        if ("mouse" === e.pointerType && "pointerout" === e.type) return;
        const i = t.params.zoom,
          s = t.zoom,
          n = u.findIndex((t) => t.pointerId === e.pointerId);
        n >= 0 && u.splice(n, 1),
          o &&
            l &&
            ((o = !1),
            (l = !1),
            p.imageEl &&
              ((s.scale = Math.max(Math.min(s.scale, p.maxRatio), i.minRatio)),
              (p.imageEl.style.transitionDuration = `${t.params.speed}ms`),
              (p.imageEl.style.transform = `translate3d(0,0,0) scale(${s.scale})`),
              (h = s.scale),
              (d = !1),
              s.scale > 1 && p.slideEl
                ? p.slideEl.classList.add(`${i.zoomedSlideClass}`)
                : s.scale <= 1 &&
                  p.slideEl &&
                  p.slideEl.classList.remove(`${i.zoomedSlideClass}`),
              1 === s.scale &&
                ((p.originX = 0), (p.originY = 0), (p.slideEl = void 0))));
      }
      function S(e) {
        if (
          !_(e) ||
          !(function (e) {
            const i = `.${t.params.zoom.containerClass}`;
            return (
              !!e.target.matches(i) ||
              [...t.hostEl.querySelectorAll(i)].filter((t) =>
                t.contains(e.target)
              ).length > 0
            );
          })(e)
        )
          return;
        const i = t.zoom;
        if (!p.imageEl) return;
        if (!f.isTouched || !p.slideEl) return;
        f.isMoved ||
          ((f.width = p.imageEl.offsetWidth),
          (f.height = p.imageEl.offsetHeight),
          (f.startX = c(p.imageWrapEl, "x") || 0),
          (f.startY = c(p.imageWrapEl, "y") || 0),
          (p.slideWidth = p.slideEl.offsetWidth),
          (p.slideHeight = p.slideEl.offsetHeight),
          (p.imageWrapEl.style.transitionDuration = "0ms"));
        const s = f.width * i.scale,
          n = f.height * i.scale;
        if (s < p.slideWidth && n < p.slideHeight) return;
        (f.minX = Math.min(p.slideWidth / 2 - s / 2, 0)),
          (f.maxX = -f.minX),
          (f.minY = Math.min(p.slideHeight / 2 - n / 2, 0)),
          (f.maxY = -f.minY),
          (f.touchesCurrent.x = u.length > 0 ? u[0].pageX : e.pageX),
          (f.touchesCurrent.y = u.length > 0 ? u[0].pageY : e.pageY);
        if (
          (Math.max(
            Math.abs(f.touchesCurrent.x - f.touchesStart.x),
            Math.abs(f.touchesCurrent.y - f.touchesStart.y)
          ) > 5 && (t.allowClick = !1),
          !f.isMoved && !d)
        ) {
          if (
            t.isHorizontal() &&
            ((Math.floor(f.minX) === Math.floor(f.startX) &&
              f.touchesCurrent.x < f.touchesStart.x) ||
              (Math.floor(f.maxX) === Math.floor(f.startX) &&
                f.touchesCurrent.x > f.touchesStart.x))
          )
            return void (f.isTouched = !1);
          if (
            !t.isHorizontal() &&
            ((Math.floor(f.minY) === Math.floor(f.startY) &&
              f.touchesCurrent.y < f.touchesStart.y) ||
              (Math.floor(f.maxY) === Math.floor(f.startY) &&
                f.touchesCurrent.y > f.touchesStart.y))
          )
            return void (f.isTouched = !1);
        }
        e.cancelable && e.preventDefault(),
          e.stopPropagation(),
          (f.isMoved = !0);
        const a = (i.scale - h) / (p.maxRatio - t.params.zoom.minRatio),
          { originX: r, originY: o } = p;
        (f.currentX =
          f.touchesCurrent.x -
          f.touchesStart.x +
          f.startX +
          a * (f.width - 2 * r)),
          (f.currentY =
            f.touchesCurrent.y -
            f.touchesStart.y +
            f.startY +
            a * (f.height - 2 * o)),
          f.currentX < f.minX &&
            (f.currentX = f.minX + 1 - (f.minX - f.currentX + 1) ** 0.8),
          f.currentX > f.maxX &&
            (f.currentX = f.maxX - 1 + (f.currentX - f.maxX + 1) ** 0.8),
          f.currentY < f.minY &&
            (f.currentY = f.minY + 1 - (f.minY - f.currentY + 1) ** 0.8),
          f.currentY > f.maxY &&
            (f.currentY = f.maxY - 1 + (f.currentY - f.maxY + 1) ** 0.8),
          m.prevPositionX || (m.prevPositionX = f.touchesCurrent.x),
          m.prevPositionY || (m.prevPositionY = f.touchesCurrent.y),
          m.prevTime || (m.prevTime = Date.now()),
          (m.x =
            (f.touchesCurrent.x - m.prevPositionX) /
            (Date.now() - m.prevTime) /
            2),
          (m.y =
            (f.touchesCurrent.y - m.prevPositionY) /
            (Date.now() - m.prevTime) /
            2),
          Math.abs(f.touchesCurrent.x - m.prevPositionX) < 2 && (m.x = 0),
          Math.abs(f.touchesCurrent.y - m.prevPositionY) < 2 && (m.y = 0),
          (m.prevPositionX = f.touchesCurrent.x),
          (m.prevPositionY = f.touchesCurrent.y),
          (m.prevTime = Date.now()),
          (p.imageWrapEl.style.transform = `translate3d(${f.currentX}px, ${f.currentY}px,0)`);
      }
      function k() {
        const e = t.zoom;
        p.slideEl &&
          t.activeIndex !== t.slides.indexOf(p.slideEl) &&
          (p.imageEl &&
            (p.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
          p.imageWrapEl &&
            (p.imageWrapEl.style.transform = "translate3d(0,0,0)"),
          p.slideEl.classList.remove(`${t.params.zoom.zoomedSlideClass}`),
          (e.scale = 1),
          (h = 1),
          (p.slideEl = void 0),
          (p.imageEl = void 0),
          (p.imageWrapEl = void 0),
          (p.originX = 0),
          (p.originY = 0));
      }
      function E(e) {
        const i = t.zoom,
          s = t.params.zoom;
        if (!p.slideEl) {
          e &&
            e.target &&
            (p.slideEl = e.target.closest(
              `.${t.params.slideClass}, swiper-slide`
            )),
            p.slideEl ||
              (t.params.virtual && t.params.virtual.enabled && t.virtual
                ? (p.slideEl = g(
                    t.slidesEl,
                    `.${t.params.slideActiveClass}`
                  )[0])
                : (p.slideEl = t.slides[t.activeIndex]));
          let i = p.slideEl.querySelector(`.${s.containerClass}`);
          i &&
            (i = i.querySelectorAll(
              "picture, img, svg, canvas, .swiper-zoom-target"
            )[0]),
            (p.imageEl = i),
            (p.imageWrapEl = i
              ? x(p.imageEl, `.${s.containerClass}`)[0]
              : void 0);
        }
        if (!p.imageEl || !p.imageWrapEl) return;
        let n, a, o, l, c, d, u, m, v, b, _, w, C, T, S, k, E, M;
        t.params.cssMode &&
          ((t.wrapperEl.style.overflow = "hidden"),
          (t.wrapperEl.style.touchAction = "none")),
          p.slideEl.classList.add(`${s.zoomedSlideClass}`),
          void 0 === f.touchesStart.x && e
            ? ((n = e.pageX), (a = e.pageY))
            : ((n = f.touchesStart.x), (a = f.touchesStart.y));
        const D = "number" == typeof e ? e : null;
        1 === h && D && ((n = void 0), (a = void 0)),
          (i.scale =
            D || p.imageWrapEl.getAttribute("data-swiper-zoom") || s.maxRatio),
          (h =
            D || p.imageWrapEl.getAttribute("data-swiper-zoom") || s.maxRatio),
          !e || (1 === h && D)
            ? ((u = 0), (m = 0))
            : ((E = p.slideEl.offsetWidth),
              (M = p.slideEl.offsetHeight),
              (o = y(p.slideEl).left + r.scrollX),
              (l = y(p.slideEl).top + r.scrollY),
              (c = o + E / 2 - n),
              (d = l + M / 2 - a),
              (v = p.imageEl.offsetWidth),
              (b = p.imageEl.offsetHeight),
              (_ = v * i.scale),
              (w = b * i.scale),
              (C = Math.min(E / 2 - _ / 2, 0)),
              (T = Math.min(M / 2 - w / 2, 0)),
              (S = -C),
              (k = -T),
              (u = c * i.scale),
              (m = d * i.scale),
              u < C && (u = C),
              u > S && (u = S),
              m < T && (m = T),
              m > k && (m = k)),
          D && 1 === i.scale && ((p.originX = 0), (p.originY = 0)),
          (p.imageWrapEl.style.transitionDuration = "300ms"),
          (p.imageWrapEl.style.transform = `translate3d(${u}px, ${m}px,0)`),
          (p.imageEl.style.transitionDuration = "300ms"),
          (p.imageEl.style.transform = `translate3d(0,0,0) scale(${i.scale})`);
      }
      function M() {
        const e = t.zoom,
          i = t.params.zoom;
        if (!p.slideEl) {
          t.params.virtual && t.params.virtual.enabled && t.virtual
            ? (p.slideEl = g(t.slidesEl, `.${t.params.slideActiveClass}`)[0])
            : (p.slideEl = t.slides[t.activeIndex]);
          let e = p.slideEl.querySelector(`.${i.containerClass}`);
          e &&
            (e = e.querySelectorAll(
              "picture, img, svg, canvas, .swiper-zoom-target"
            )[0]),
            (p.imageEl = e),
            (p.imageWrapEl = e
              ? x(p.imageEl, `.${i.containerClass}`)[0]
              : void 0);
        }
        p.imageEl &&
          p.imageWrapEl &&
          (t.params.cssMode &&
            ((t.wrapperEl.style.overflow = ""),
            (t.wrapperEl.style.touchAction = "")),
          (e.scale = 1),
          (h = 1),
          (p.imageWrapEl.style.transitionDuration = "300ms"),
          (p.imageWrapEl.style.transform = "translate3d(0,0,0)"),
          (p.imageEl.style.transitionDuration = "300ms"),
          (p.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
          p.slideEl.classList.remove(`${i.zoomedSlideClass}`),
          (p.slideEl = void 0),
          (p.originX = 0),
          (p.originY = 0));
      }
      function D(e) {
        const i = t.zoom;
        i.scale && 1 !== i.scale ? M() : E(e);
      }
      function P() {
        return {
          passiveListener: !!t.params.passiveListeners && {
            passive: !0,
            capture: !1,
          },
          activeListenerWithCapture: !t.params.passiveListeners || {
            passive: !1,
            capture: !0,
          },
        };
      }
      function I() {
        const e = t.zoom;
        if (e.enabled) return;
        e.enabled = !0;
        const { passiveListener: i, activeListenerWithCapture: s } = P();
        t.wrapperEl.addEventListener("pointerdown", w, i),
          t.wrapperEl.addEventListener("pointermove", C, s),
          ["pointerup", "pointercancel", "pointerout"].forEach((e) => {
            t.wrapperEl.addEventListener(e, T, i);
          }),
          t.wrapperEl.addEventListener("pointermove", S, s);
      }
      function A() {
        const e = t.zoom;
        if (!e.enabled) return;
        e.enabled = !1;
        const { passiveListener: i, activeListenerWithCapture: s } = P();
        t.wrapperEl.removeEventListener("pointerdown", w, i),
          t.wrapperEl.removeEventListener("pointermove", C, s),
          ["pointerup", "pointercancel", "pointerout"].forEach((e) => {
            t.wrapperEl.removeEventListener(e, T, i);
          }),
          t.wrapperEl.removeEventListener("pointermove", S, s);
      }
      Object.defineProperty(t.zoom, "scale", {
        get: () => v,
        set(e) {
          if (v !== e) {
            const t = p.imageEl,
              i = p.slideEl;
            n("zoomChange", e, t, i);
          }
          v = e;
        },
      }),
        s("init", () => {
          t.params.zoom.enabled && I();
        }),
        s("destroy", () => {
          A();
        }),
        s("touchStart", (e, i) => {
          t.zoom.enabled &&
            (function (e) {
              const i = t.device;
              if (!p.imageEl) return;
              if (f.isTouched) return;
              i.android && e.cancelable && e.preventDefault(),
                (f.isTouched = !0);
              const s = u.length > 0 ? u[0] : e;
              (f.touchesStart.x = s.pageX), (f.touchesStart.y = s.pageY);
            })(i);
        }),
        s("touchEnd", (e, i) => {
          t.zoom.enabled &&
            (function () {
              const e = t.zoom;
              if (!p.imageEl) return;
              if (!f.isTouched || !f.isMoved)
                return (f.isTouched = !1), void (f.isMoved = !1);
              (f.isTouched = !1), (f.isMoved = !1);
              let i = 300,
                s = 300;
              const n = m.x * i,
                a = f.currentX + n,
                r = m.y * s,
                o = f.currentY + r;
              0 !== m.x && (i = Math.abs((a - f.currentX) / m.x)),
                0 !== m.y && (s = Math.abs((o - f.currentY) / m.y));
              const l = Math.max(i, s);
              (f.currentX = a), (f.currentY = o);
              const c = f.width * e.scale,
                h = f.height * e.scale;
              (f.minX = Math.min(p.slideWidth / 2 - c / 2, 0)),
                (f.maxX = -f.minX),
                (f.minY = Math.min(p.slideHeight / 2 - h / 2, 0)),
                (f.maxY = -f.minY),
                (f.currentX = Math.max(Math.min(f.currentX, f.maxX), f.minX)),
                (f.currentY = Math.max(Math.min(f.currentY, f.maxY), f.minY)),
                (p.imageWrapEl.style.transitionDuration = `${l}ms`),
                (p.imageWrapEl.style.transform = `translate3d(${f.currentX}px, ${f.currentY}px,0)`);
            })();
        }),
        s("doubleTap", (e, i) => {
          !t.animating &&
            t.params.zoom.enabled &&
            t.zoom.enabled &&
            t.params.zoom.toggle &&
            D(i);
        }),
        s("transitionEnd", () => {
          t.zoom.enabled && t.params.zoom.enabled && k();
        }),
        s("slideChange", () => {
          t.zoom.enabled && t.params.zoom.enabled && t.params.cssMode && k();
        }),
        Object.assign(t.zoom, {
          enable: I,
          disable: A,
          in: E,
          out: M,
          toggle: D,
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      function n(e, t) {
        const i = (function () {
          let e, t, i;
          return (s, n) => {
            for (t = -1, e = s.length; e - t > 1; )
              (i = (e + t) >> 1), s[i] <= n ? (t = i) : (e = i);
            return e;
          };
        })();
        let s, n;
        return (
          (this.x = e),
          (this.y = t),
          (this.lastIndex = e.length - 1),
          (this.interpolate = function (e) {
            return e
              ? ((n = i(this.x, e)),
                (s = n - 1),
                ((e - this.x[s]) * (this.y[n] - this.y[s])) /
                  (this.x[n] - this.x[s]) +
                  this.y[s])
              : 0;
          }),
          this
        );
      }
      function a() {
        t.controller.control &&
          t.controller.spline &&
          ((t.controller.spline = void 0), delete t.controller.spline);
      }
      i({ controller: { control: void 0, inverse: !1, by: "slide" } }),
        (t.controller = { control: void 0 }),
        s("beforeInit", () => {
          if (
            "undefined" != typeof window &&
            ("string" == typeof t.params.controller.control ||
              t.params.controller.control instanceof HTMLElement)
          ) {
            const e = document.querySelector(t.params.controller.control);
            if (e && e.swiper) t.controller.control = e.swiper;
            else if (e) {
              const i = (s) => {
                (t.controller.control = s.detail[0]),
                  t.update(),
                  e.removeEventListener("init", i);
              };
              e.addEventListener("init", i);
            }
          } else t.controller.control = t.params.controller.control;
        }),
        s("update", () => {
          a();
        }),
        s("resize", () => {
          a();
        }),
        s("observerUpdate", () => {
          a();
        }),
        s("setTranslate", (e, i, s) => {
          t.controller.control &&
            !t.controller.control.destroyed &&
            t.controller.setTranslate(i, s);
        }),
        s("setTransition", (e, i, s) => {
          t.controller.control &&
            !t.controller.control.destroyed &&
            t.controller.setTransition(i, s);
        }),
        Object.assign(t.controller, {
          setTranslate: function (e, i) {
            const s = t.controller.control;
            let a, r;
            const o = t.constructor;
            function l(e) {
              if (e.destroyed) return;
              const i = t.rtlTranslate ? -t.translate : t.translate;
              "slide" === t.params.controller.by &&
                (!(function (e) {
                  t.controller.spline = t.params.loop
                    ? new n(t.slidesGrid, e.slidesGrid)
                    : new n(t.snapGrid, e.snapGrid);
                })(e),
                (r = -t.controller.spline.interpolate(-i))),
                (r && "container" !== t.params.controller.by) ||
                  ((a =
                    (e.maxTranslate() - e.minTranslate()) /
                    (t.maxTranslate() - t.minTranslate())),
                  (!Number.isNaN(a) && Number.isFinite(a)) || (a = 1),
                  (r = (i - t.minTranslate()) * a + e.minTranslate())),
                t.params.controller.inverse && (r = e.maxTranslate() - r),
                e.updateProgress(r),
                e.setTranslate(r, t),
                e.updateActiveIndex(),
                e.updateSlidesClasses();
            }
            if (Array.isArray(s))
              for (let e = 0; e < s.length; e += 1)
                s[e] !== i && s[e] instanceof o && l(s[e]);
            else s instanceof o && i !== s && l(s);
          },
          setTransition: function (e, i) {
            const s = t.constructor,
              n = t.controller.control;
            let a;
            function r(i) {
              i.destroyed ||
                (i.setTransition(e, t),
                0 !== e &&
                  (i.transitionStart(),
                  i.params.autoHeight &&
                    o(() => {
                      i.updateAutoHeight();
                    }),
                  C(i.wrapperEl, () => {
                    n && i.transitionEnd();
                  })));
            }
            if (Array.isArray(n))
              for (a = 0; a < n.length; a += 1)
                n[a] !== i && n[a] instanceof s && r(n[a]);
            else n instanceof s && i !== n && r(n);
          },
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        a11y: {
          enabled: !0,
          notificationClass: "swiper-notification",
          prevSlideMessage: "Previous slide",
          nextSlideMessage: "Next slide",
          firstSlideMessage: "This is the first slide",
          lastSlideMessage: "This is the last slide",
          paginationBulletMessage: "Go to slide {{index}}",
          slideLabelMessage: "{{index}} / {{slidesLength}}",
          containerMessage: null,
          containerRoleDescriptionMessage: null,
          itemRoleDescriptionMessage: null,
          slideRole: "group",
          id: null,
        },
      }),
        (t.a11y = { clicked: !1 });
      let n = null;
      function a(e) {
        const t = n;
        0 !== t.length && ((t.innerHTML = ""), (t.innerHTML = e));
      }
      const r = (e) => (Array.isArray(e) ? e : [e]).filter((e) => !!e);
      function o(e) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("tabIndex", "0");
        });
      }
      function l(e) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("tabIndex", "-1");
        });
      }
      function c(e, t) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("role", t);
        });
      }
      function h(e, t) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("aria-roledescription", t);
        });
      }
      function d(e, t) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("aria-label", t);
        });
      }
      function u(e) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("aria-disabled", !0);
        });
      }
      function p(e) {
        (e = r(e)).forEach((e) => {
          e.setAttribute("aria-disabled", !1);
        });
      }
      function f(e) {
        if (13 !== e.keyCode && 32 !== e.keyCode) return;
        const i = t.params.a11y,
          s = e.target;
        (t.pagination &&
          t.pagination.el &&
          (s === t.pagination.el || t.pagination.el.contains(e.target)) &&
          !e.target.matches(se(t.params.pagination.bulletClass))) ||
          (t.navigation &&
            t.navigation.nextEl &&
            s === t.navigation.nextEl &&
            ((t.isEnd && !t.params.loop) || t.slideNext(),
            t.isEnd ? a(i.lastSlideMessage) : a(i.nextSlideMessage)),
          t.navigation &&
            t.navigation.prevEl &&
            s === t.navigation.prevEl &&
            ((t.isBeginning && !t.params.loop) || t.slidePrev(),
            t.isBeginning ? a(i.firstSlideMessage) : a(i.prevSlideMessage)),
          t.pagination &&
            s.matches(se(t.params.pagination.bulletClass)) &&
            s.click());
      }
      function m() {
        return (
          t.pagination && t.pagination.bullets && t.pagination.bullets.length
        );
      }
      function g() {
        return m() && t.params.pagination.clickable;
      }
      const v = (e, t, i) => {
          o(e),
            "BUTTON" !== e.tagName &&
              (c(e, "button"), e.addEventListener("keydown", f)),
            d(e, i),
            (function (e, t) {
              (e = r(e)).forEach((e) => {
                e.setAttribute("aria-controls", t);
              });
            })(e, t);
        },
        y = () => {
          t.a11y.clicked = !0;
        },
        _ = () => {
          requestAnimationFrame(() => {
            requestAnimationFrame(() => {
              t.destroyed || (t.a11y.clicked = !1);
            });
          });
        },
        x = (e) => {
          if (t.a11y.clicked) return;
          const i = e.target.closest(`.${t.params.slideClass}, swiper-slide`);
          if (!i || !t.slides.includes(i)) return;
          const s = t.slides.indexOf(i) === t.activeIndex,
            n =
              t.params.watchSlidesProgress &&
              t.visibleSlides &&
              t.visibleSlides.includes(i);
          s ||
            n ||
            (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) ||
            (t.isHorizontal() ? (t.el.scrollLeft = 0) : (t.el.scrollTop = 0),
            t.slideTo(t.slides.indexOf(i), 0));
        },
        C = () => {
          const e = t.params.a11y;
          e.itemRoleDescriptionMessage &&
            h(t.slides, e.itemRoleDescriptionMessage),
            e.slideRole && c(t.slides, e.slideRole);
          const i = t.slides.length;
          e.slideLabelMessage &&
            t.slides.forEach((s, n) => {
              const a = t.params.loop
                ? parseInt(s.getAttribute("data-swiper-slide-index"), 10)
                : n;
              d(
                s,
                e.slideLabelMessage
                  .replace(/\{\{index\}\}/, a + 1)
                  .replace(/\{\{slidesLength\}\}/, i)
              );
            });
        },
        T = () => {
          const e = t.params.a11y;
          t.el.append(n);
          const i = t.el;
          e.containerRoleDescriptionMessage &&
            h(i, e.containerRoleDescriptionMessage),
            e.containerMessage && d(i, e.containerMessage);
          const s = t.wrapperEl,
            a =
              e.id ||
              s.getAttribute("id") ||
              `swiper-wrapper-${
                ((o = 16),
                void 0 === o && (o = 16),
                "x"
                  .repeat(o)
                  .replace(/x/g, () =>
                    Math.round(16 * Math.random()).toString(16)
                  ))
              }`;
          var o;
          const l =
            t.params.autoplay && t.params.autoplay.enabled ? "off" : "polite";
          var c;
          (c = a),
            r(s).forEach((e) => {
              e.setAttribute("id", c);
            }),
            (function (e, t) {
              (e = r(e)).forEach((e) => {
                e.setAttribute("aria-live", t);
              });
            })(s, l),
            C();
          let { nextEl: u, prevEl: p } = t.navigation ? t.navigation : {};
          if (
            ((u = r(u)),
            (p = r(p)),
            u && u.forEach((t) => v(t, a, e.nextSlideMessage)),
            p && p.forEach((t) => v(t, a, e.prevSlideMessage)),
            g())
          ) {
            r(t.pagination.el).forEach((e) => {
              e.addEventListener("keydown", f);
            });
          }
          t.el.addEventListener("focus", x, !0),
            t.el.addEventListener("pointerdown", y, !0),
            t.el.addEventListener("pointerup", _, !0);
        };
      s("beforeInit", () => {
        (n = b("span", t.params.a11y.notificationClass)),
          n.setAttribute("aria-live", "assertive"),
          n.setAttribute("aria-atomic", "true");
      }),
        s("afterInit", () => {
          t.params.a11y.enabled && T();
        }),
        s(
          "slidesLengthChange snapGridLengthChange slidesGridLengthChange",
          () => {
            t.params.a11y.enabled && C();
          }
        ),
        s("fromEdge toEdge afterInit lock unlock", () => {
          t.params.a11y.enabled &&
            (function () {
              if (t.params.loop || t.params.rewind || !t.navigation) return;
              const { nextEl: e, prevEl: i } = t.navigation;
              i && (t.isBeginning ? (u(i), l(i)) : (p(i), o(i))),
                e && (t.isEnd ? (u(e), l(e)) : (p(e), o(e)));
            })();
        }),
        s("paginationUpdate", () => {
          t.params.a11y.enabled &&
            (function () {
              const e = t.params.a11y;
              m() &&
                t.pagination.bullets.forEach((i) => {
                  t.params.pagination.clickable &&
                    (o(i),
                    t.params.pagination.renderBullet ||
                      (c(i, "button"),
                      d(
                        i,
                        e.paginationBulletMessage.replace(
                          /\{\{index\}\}/,
                          w(i) + 1
                        )
                      ))),
                    i.matches(se(t.params.pagination.bulletActiveClass))
                      ? i.setAttribute("aria-current", "true")
                      : i.removeAttribute("aria-current");
                });
            })();
        }),
        s("destroy", () => {
          t.params.a11y.enabled &&
            (function () {
              n && n.remove();
              let { nextEl: e, prevEl: i } = t.navigation ? t.navigation : {};
              (e = r(e)),
                (i = r(i)),
                e && e.forEach((e) => e.removeEventListener("keydown", f)),
                i && i.forEach((e) => e.removeEventListener("keydown", f)),
                g() &&
                  r(t.pagination.el).forEach((e) => {
                    e.removeEventListener("keydown", f);
                  });
              t.el.removeEventListener("focus", x, !0),
                t.el.removeEventListener("pointerdown", y, !0),
                t.el.removeEventListener("pointerup", _, !0);
            })();
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        history: {
          enabled: !1,
          root: "",
          replaceState: !1,
          key: "slides",
          keepQuery: !1,
        },
      });
      let n = !1,
        r = {};
      const o = (e) =>
          e
            .toString()
            .replace(/\s+/g, "-")
            .replace(/[^\w-]+/g, "")
            .replace(/--+/g, "-")
            .replace(/^-+/, "")
            .replace(/-+$/, ""),
        l = (e) => {
          const t = a();
          let i;
          i = e ? new URL(e) : t.location;
          const s = i.pathname
              .slice(1)
              .split("/")
              .filter((e) => "" !== e),
            n = s.length;
          return { key: s[n - 2], value: s[n - 1] };
        },
        c = (e, i) => {
          const s = a();
          if (!n || !t.params.history.enabled) return;
          let r;
          r = t.params.url ? new URL(t.params.url) : s.location;
          const l = t.slides[i];
          let c = o(l.getAttribute("data-history"));
          if (t.params.history.root.length > 0) {
            let i = t.params.history.root;
            "/" === i[i.length - 1] && (i = i.slice(0, i.length - 1)),
              (c = `${i}/${e ? `${e}/` : ""}${c}`);
          } else r.pathname.includes(e) || (c = `${e ? `${e}/` : ""}${c}`);
          t.params.history.keepQuery && (c += r.search);
          const h = s.history.state;
          (h && h.value === c) ||
            (t.params.history.replaceState
              ? s.history.replaceState({ value: c }, null, c)
              : s.history.pushState({ value: c }, null, c));
        },
        h = (e, i, s) => {
          if (i)
            for (let n = 0, a = t.slides.length; n < a; n += 1) {
              const a = t.slides[n];
              if (o(a.getAttribute("data-history")) === i) {
                const i = t.getSlideIndex(a);
                t.slideTo(i, e, s);
              }
            }
          else t.slideTo(0, e, s);
        },
        d = () => {
          (r = l(t.params.url)), h(t.params.speed, r.value, !1);
        };
      s("init", () => {
        t.params.history.enabled &&
          (() => {
            const e = a();
            if (t.params.history) {
              if (!e.history || !e.history.pushState)
                return (
                  (t.params.history.enabled = !1),
                  void (t.params.hashNavigation.enabled = !0)
                );
              (n = !0),
                (r = l(t.params.url)),
                r.key || r.value
                  ? (h(0, r.value, t.params.runCallbacksOnInit),
                    t.params.history.replaceState ||
                      e.addEventListener("popstate", d))
                  : t.params.history.replaceState ||
                    e.addEventListener("popstate", d);
            }
          })();
      }),
        s("destroy", () => {
          t.params.history.enabled &&
            (() => {
              const e = a();
              t.params.history.replaceState ||
                e.removeEventListener("popstate", d);
            })();
        }),
        s("transitionEnd _freeModeNoMomentumRelease", () => {
          n && c(t.params.history.key, t.activeIndex);
        }),
        s("slideChange", () => {
          n && t.params.cssMode && c(t.params.history.key, t.activeIndex);
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, emit: n, on: r } = e,
        o = !1;
      const l = s(),
        c = a();
      i({
        hashNavigation: {
          enabled: !1,
          replaceState: !1,
          watchState: !1,
          getSlideIndex(e, i) {
            if (t.virtual && t.params.virtual.enabled) {
              const e = t.slides.filter(
                (e) => e.getAttribute("data-hash") === i
              )[0];
              if (!e) return 0;
              return parseInt(e.getAttribute("data-swiper-slide-index"), 10);
            }
            return t.getSlideIndex(
              g(
                t.slidesEl,
                `.${t.params.slideClass}[data-hash="${i}"], swiper-slide[data-hash="${i}"]`
              )[0]
            );
          },
        },
      });
      const h = () => {
          n("hashChange");
          const e = l.location.hash.replace("#", ""),
            i =
              t.virtual && t.params.virtual.enabled
                ? t.slidesEl.querySelector(
                    `[data-swiper-slide-index="${t.activeIndex}"]`
                  )
                : t.slides[t.activeIndex];
          if (e !== (i ? i.getAttribute("data-hash") : "")) {
            const i = t.params.hashNavigation.getSlideIndex(t, e);
            if (void 0 === i || Number.isNaN(i)) return;
            t.slideTo(i);
          }
        },
        d = () => {
          if (!o || !t.params.hashNavigation.enabled) return;
          const e =
              t.virtual && t.params.virtual.enabled
                ? t.slidesEl.querySelector(
                    `[data-swiper-slide-index="${t.activeIndex}"]`
                  )
                : t.slides[t.activeIndex],
            i = e
              ? e.getAttribute("data-hash") || e.getAttribute("data-history")
              : "";
          t.params.hashNavigation.replaceState &&
          c.history &&
          c.history.replaceState
            ? (c.history.replaceState(null, null, `#${i}` || ""), n("hashSet"))
            : ((l.location.hash = i || ""), n("hashSet"));
        };
      r("init", () => {
        t.params.hashNavigation.enabled &&
          (() => {
            if (
              !t.params.hashNavigation.enabled ||
              (t.params.history && t.params.history.enabled)
            )
              return;
            o = !0;
            const e = l.location.hash.replace("#", "");
            if (e) {
              const i = 0,
                s = t.params.hashNavigation.getSlideIndex(t, e);
              t.slideTo(s || 0, i, t.params.runCallbacksOnInit, !0);
            }
            t.params.hashNavigation.watchState &&
              c.addEventListener("hashchange", h);
          })();
      }),
        r("destroy", () => {
          t.params.hashNavigation.enabled &&
            t.params.hashNavigation.watchState &&
            c.removeEventListener("hashchange", h);
        }),
        r("transitionEnd _freeModeNoMomentumRelease", () => {
          o && d();
        }),
        r("slideChange", () => {
          o && t.params.cssMode && d();
        });
    },
    function (e) {
      let t,
        i,
        { swiper: n, extendParams: a, on: r, emit: o, params: l } = e;
      (n.autoplay = { running: !1, paused: !1, timeLeft: 0 }),
        a({
          autoplay: {
            enabled: !1,
            delay: 3e3,
            waitForTransition: !0,
            disableOnInteraction: !1,
            stopOnLastSlide: !1,
            reverseDirection: !1,
            pauseOnMouseEnter: !1,
          },
        });
      let c,
        h,
        d,
        u,
        p,
        f,
        m,
        g,
        v = l && l.autoplay ? l.autoplay.delay : 3e3,
        b = l && l.autoplay ? l.autoplay.delay : 3e3,
        y = new Date().getTime();
      function _(e) {
        n &&
          !n.destroyed &&
          n.wrapperEl &&
          e.target === n.wrapperEl &&
          (n.wrapperEl.removeEventListener("transitionend", _), g || k());
      }
      const w = () => {
          if (n.destroyed || !n.autoplay.running) return;
          n.autoplay.paused ? (h = !0) : h && ((b = c), (h = !1));
          const e = n.autoplay.paused ? c : y + b - new Date().getTime();
          (n.autoplay.timeLeft = e),
            o("autoplayTimeLeft", e, e / v),
            (i = requestAnimationFrame(() => {
              w();
            }));
        },
        x = (e) => {
          if (n.destroyed || !n.autoplay.running) return;
          cancelAnimationFrame(i), w();
          let s = void 0 === e ? n.params.autoplay.delay : e;
          (v = n.params.autoplay.delay), (b = n.params.autoplay.delay);
          const a = (() => {
            let e;
            if (
              ((e =
                n.virtual && n.params.virtual.enabled
                  ? n.slides.filter((e) =>
                      e.classList.contains("swiper-slide-active")
                    )[0]
                  : n.slides[n.activeIndex]),
              !e)
            )
              return;
            return parseInt(e.getAttribute("data-swiper-autoplay"), 10);
          })();
          !Number.isNaN(a) &&
            a > 0 &&
            void 0 === e &&
            ((s = a), (v = a), (b = a)),
            (c = s);
          const r = n.params.speed,
            l = () => {
              n &&
                !n.destroyed &&
                (n.params.autoplay.reverseDirection
                  ? !n.isBeginning || n.params.loop || n.params.rewind
                    ? (n.slidePrev(r, !0, !0), o("autoplay"))
                    : n.params.autoplay.stopOnLastSlide ||
                      (n.slideTo(n.slides.length - 1, r, !0, !0), o("autoplay"))
                  : !n.isEnd || n.params.loop || n.params.rewind
                  ? (n.slideNext(r, !0, !0), o("autoplay"))
                  : n.params.autoplay.stopOnLastSlide ||
                    (n.slideTo(0, r, !0, !0), o("autoplay")),
                n.params.cssMode &&
                  ((y = new Date().getTime()),
                  requestAnimationFrame(() => {
                    x();
                  })));
            };
          return (
            s > 0
              ? (clearTimeout(t),
                (t = setTimeout(() => {
                  l();
                }, s)))
              : requestAnimationFrame(() => {
                  l();
                }),
            s
          );
        },
        C = () => {
          (y = new Date().getTime()),
            (n.autoplay.running = !0),
            x(),
            o("autoplayStart");
        },
        T = () => {
          (n.autoplay.running = !1),
            clearTimeout(t),
            cancelAnimationFrame(i),
            o("autoplayStop");
        },
        S = (e, i) => {
          if (n.destroyed || !n.autoplay.running) return;
          clearTimeout(t), e || (m = !0);
          const s = () => {
            o("autoplayPause"),
              n.params.autoplay.waitForTransition
                ? n.wrapperEl.addEventListener("transitionend", _)
                : k();
          };
          if (((n.autoplay.paused = !0), i))
            return f && (c = n.params.autoplay.delay), (f = !1), void s();
          const a = c || n.params.autoplay.delay;
          (c = a - (new Date().getTime() - y)),
            (n.isEnd && c < 0 && !n.params.loop) || (c < 0 && (c = 0), s());
        },
        k = () => {
          (n.isEnd && c < 0 && !n.params.loop) ||
            n.destroyed ||
            !n.autoplay.running ||
            ((y = new Date().getTime()),
            m ? ((m = !1), x(c)) : x(),
            (n.autoplay.paused = !1),
            o("autoplayResume"));
        },
        E = () => {
          if (n.destroyed || !n.autoplay.running) return;
          const e = s();
          "hidden" === e.visibilityState && ((m = !0), S(!0)),
            "visible" === e.visibilityState && k();
        },
        M = (e) => {
          "mouse" === e.pointerType &&
            ((m = !0), (g = !0), n.animating || n.autoplay.paused || S(!0));
        },
        D = (e) => {
          "mouse" === e.pointerType && ((g = !1), n.autoplay.paused && k());
        };
      r("init", () => {
        n.params.autoplay.enabled &&
          (n.params.autoplay.pauseOnMouseEnter &&
            (n.el.addEventListener("pointerenter", M),
            n.el.addEventListener("pointerleave", D)),
          s().addEventListener("visibilitychange", E),
          C());
      }),
        r("destroy", () => {
          n.el.removeEventListener("pointerenter", M),
            n.el.removeEventListener("pointerleave", D),
            s().removeEventListener("visibilitychange", E),
            n.autoplay.running && T();
        }),
        r("_freeModeStaticRelease", () => {
          (u || m) && k();
        }),
        r("_freeModeNoMomentumRelease", () => {
          n.params.autoplay.disableOnInteraction ? T() : S(!0, !0);
        }),
        r("beforeTransitionStart", (e, t, i) => {
          !n.destroyed &&
            n.autoplay.running &&
            (i || !n.params.autoplay.disableOnInteraction ? S(!0, !0) : T());
        }),
        r("sliderFirstMove", () => {
          !n.destroyed &&
            n.autoplay.running &&
            (n.params.autoplay.disableOnInteraction
              ? T()
              : ((d = !0),
                (u = !1),
                (m = !1),
                (p = setTimeout(() => {
                  (m = !0), (u = !0), S(!0);
                }, 200))));
        }),
        r("touchEnd", () => {
          if (!n.destroyed && n.autoplay.running && d) {
            if (
              (clearTimeout(p),
              clearTimeout(t),
              n.params.autoplay.disableOnInteraction)
            )
              return (u = !1), void (d = !1);
            u && n.params.cssMode && k(), (u = !1), (d = !1);
          }
        }),
        r("slideChange", () => {
          !n.destroyed && n.autoplay.running && (f = !0);
        }),
        Object.assign(n.autoplay, { start: C, stop: T, pause: S, resume: k });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: n } = e;
      i({
        thumbs: {
          swiper: null,
          multipleActiveThumbs: !0,
          autoScrollOffset: 0,
          slideThumbActiveClass: "swiper-slide-thumb-active",
          thumbsContainerClass: "swiper-thumbs",
        },
      });
      let a = !1,
        r = !1;
      function o() {
        const e = t.thumbs.swiper;
        if (!e || e.destroyed) return;
        const i = e.clickedIndex,
          s = e.clickedSlide;
        if (s && s.classList.contains(t.params.thumbs.slideThumbActiveClass))
          return;
        if (null == i) return;
        let n;
        (n = e.params.loop
          ? parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"), 10)
          : i),
          t.params.loop ? t.slideToLoop(n) : t.slideTo(n);
      }
      function l() {
        const { thumbs: e } = t.params;
        if (a) return !1;
        a = !0;
        const i = t.constructor;
        if (e.swiper instanceof i)
          (t.thumbs.swiper = e.swiper),
            Object.assign(t.thumbs.swiper.originalParams, {
              watchSlidesProgress: !0,
              slideToClickedSlide: !1,
            }),
            Object.assign(t.thumbs.swiper.params, {
              watchSlidesProgress: !0,
              slideToClickedSlide: !1,
            }),
            t.thumbs.swiper.update();
        else if (h(e.swiper)) {
          const s = Object.assign({}, e.swiper);
          Object.assign(s, {
            watchSlidesProgress: !0,
            slideToClickedSlide: !1,
          }),
            (t.thumbs.swiper = new i(s)),
            (r = !0);
        }
        return (
          t.thumbs.swiper.el.classList.add(
            t.params.thumbs.thumbsContainerClass
          ),
          t.thumbs.swiper.on("tap", o),
          !0
        );
      }
      function c(e) {
        const i = t.thumbs.swiper;
        if (!i || i.destroyed) return;
        const s =
          "auto" === i.params.slidesPerView
            ? i.slidesPerViewDynamic()
            : i.params.slidesPerView;
        let n = 1;
        const a = t.params.thumbs.slideThumbActiveClass;
        if (
          (t.params.slidesPerView > 1 &&
            !t.params.centeredSlides &&
            (n = t.params.slidesPerView),
          t.params.thumbs.multipleActiveThumbs || (n = 1),
          (n = Math.floor(n)),
          i.slides.forEach((e) => e.classList.remove(a)),
          i.params.loop || (i.params.virtual && i.params.virtual.enabled))
        )
          for (let e = 0; e < n; e += 1)
            g(
              i.slidesEl,
              `[data-swiper-slide-index="${t.realIndex + e}"]`
            ).forEach((e) => {
              e.classList.add(a);
            });
        else
          for (let e = 0; e < n; e += 1)
            i.slides[t.realIndex + e] &&
              i.slides[t.realIndex + e].classList.add(a);
        const r = t.params.thumbs.autoScrollOffset,
          o = r && !i.params.loop;
        if (t.realIndex !== i.realIndex || o) {
          const n = i.activeIndex;
          let a, l;
          if (i.params.loop) {
            const e = i.slides.filter(
              (e) =>
                e.getAttribute("data-swiper-slide-index") === `${t.realIndex}`
            )[0];
            (a = i.slides.indexOf(e)),
              (l = t.activeIndex > t.previousIndex ? "next" : "prev");
          } else (a = t.realIndex), (l = a > t.previousIndex ? "next" : "prev");
          o && (a += "next" === l ? r : -1 * r),
            i.visibleSlidesIndexes &&
              i.visibleSlidesIndexes.indexOf(a) < 0 &&
              (i.params.centeredSlides
                ? (a =
                    a > n
                      ? a - Math.floor(s / 2) + 1
                      : a + Math.floor(s / 2) - 1)
                : a > n && i.params.slidesPerGroup,
              i.slideTo(a, e ? 0 : void 0));
        }
      }
      (t.thumbs = { swiper: null }),
        n("beforeInit", () => {
          const { thumbs: e } = t.params;
          if (e && e.swiper)
            if (
              "string" == typeof e.swiper ||
              e.swiper instanceof HTMLElement
            ) {
              const i = s(),
                n = () => {
                  const s =
                    "string" == typeof e.swiper
                      ? i.querySelector(e.swiper)
                      : e.swiper;
                  if (s && s.swiper) (e.swiper = s.swiper), l(), c(!0);
                  else if (s) {
                    const i = (n) => {
                      (e.swiper = n.detail[0]),
                        s.removeEventListener("init", i),
                        l(),
                        c(!0),
                        e.swiper.update(),
                        t.update();
                    };
                    s.addEventListener("init", i);
                  }
                  return s;
                },
                a = () => {
                  if (t.destroyed) return;
                  n() || requestAnimationFrame(a);
                };
              requestAnimationFrame(a);
            } else l(), c(!0);
        }),
        n("slideChange update resize observerUpdate", () => {
          c();
        }),
        n("setTransition", (e, i) => {
          const s = t.thumbs.swiper;
          s && !s.destroyed && s.setTransition(i);
        }),
        n("beforeDestroy", () => {
          const e = t.thumbs.swiper;
          e && !e.destroyed && r && e.destroy();
        }),
        Object.assign(t.thumbs, { init: l, update: c });
    },
    function (e) {
      let { swiper: t, extendParams: i, emit: s, once: n } = e;
      i({
        freeMode: {
          enabled: !1,
          momentum: !0,
          momentumRatio: 1,
          momentumBounce: !0,
          momentumBounceRatio: 1,
          momentumVelocityRatio: 1,
          sticky: !1,
          minimumVelocity: 0.02,
        },
      }),
        Object.assign(t, {
          freeMode: {
            onTouchStart: function () {
              if (t.params.cssMode) return;
              const e = t.getTranslate();
              t.setTranslate(e),
                t.setTransition(0),
                (t.touchEventsData.velocities.length = 0),
                t.freeMode.onTouchEnd({
                  currentPos: t.rtl ? t.translate : -t.translate,
                });
            },
            onTouchMove: function () {
              if (t.params.cssMode) return;
              const { touchEventsData: e, touches: i } = t;
              0 === e.velocities.length &&
                e.velocities.push({
                  position: i[t.isHorizontal() ? "startX" : "startY"],
                  time: e.touchStartTime,
                }),
                e.velocities.push({
                  position: i[t.isHorizontal() ? "currentX" : "currentY"],
                  time: l(),
                });
            },
            onTouchEnd: function (e) {
              let { currentPos: i } = e;
              if (t.params.cssMode) return;
              const {
                  params: a,
                  wrapperEl: r,
                  rtlTranslate: o,
                  snapGrid: c,
                  touchEventsData: h,
                } = t,
                d = l() - h.touchStartTime;
              if (i < -t.minTranslate()) t.slideTo(t.activeIndex);
              else if (i > -t.maxTranslate())
                t.slides.length < c.length
                  ? t.slideTo(c.length - 1)
                  : t.slideTo(t.slides.length - 1);
              else {
                if (a.freeMode.momentum) {
                  if (h.velocities.length > 1) {
                    const e = h.velocities.pop(),
                      i = h.velocities.pop(),
                      s = e.position - i.position,
                      n = e.time - i.time;
                    (t.velocity = s / n),
                      (t.velocity /= 2),
                      Math.abs(t.velocity) < a.freeMode.minimumVelocity &&
                        (t.velocity = 0),
                      (n > 150 || l() - e.time > 300) && (t.velocity = 0);
                  } else t.velocity = 0;
                  (t.velocity *= a.freeMode.momentumVelocityRatio),
                    (h.velocities.length = 0);
                  let e = 1e3 * a.freeMode.momentumRatio;
                  const i = t.velocity * e;
                  let d = t.translate + i;
                  o && (d = -d);
                  let u,
                    p = !1;
                  const f =
                    20 * Math.abs(t.velocity) * a.freeMode.momentumBounceRatio;
                  let m;
                  if (d < t.maxTranslate())
                    a.freeMode.momentumBounce
                      ? (d + t.maxTranslate() < -f &&
                          (d = t.maxTranslate() - f),
                        (u = t.maxTranslate()),
                        (p = !0),
                        (h.allowMomentumBounce = !0))
                      : (d = t.maxTranslate()),
                      a.loop && a.centeredSlides && (m = !0);
                  else if (d > t.minTranslate())
                    a.freeMode.momentumBounce
                      ? (d - t.minTranslate() > f && (d = t.minTranslate() + f),
                        (u = t.minTranslate()),
                        (p = !0),
                        (h.allowMomentumBounce = !0))
                      : (d = t.minTranslate()),
                      a.loop && a.centeredSlides && (m = !0);
                  else if (a.freeMode.sticky) {
                    let e;
                    for (let t = 0; t < c.length; t += 1)
                      if (c[t] > -d) {
                        e = t;
                        break;
                      }
                    (d =
                      Math.abs(c[e] - d) < Math.abs(c[e - 1] - d) ||
                      "next" === t.swipeDirection
                        ? c[e]
                        : c[e - 1]),
                      (d = -d);
                  }
                  if (
                    (m &&
                      n("transitionEnd", () => {
                        t.loopFix();
                      }),
                    0 !== t.velocity)
                  ) {
                    if (
                      ((e = o
                        ? Math.abs((-d - t.translate) / t.velocity)
                        : Math.abs((d - t.translate) / t.velocity)),
                      a.freeMode.sticky)
                    ) {
                      const i = Math.abs((o ? -d : d) - t.translate),
                        s = t.slidesSizesGrid[t.activeIndex];
                      e =
                        i < s
                          ? a.speed
                          : i < 2 * s
                          ? 1.5 * a.speed
                          : 2.5 * a.speed;
                    }
                  } else if (a.freeMode.sticky) return void t.slideToClosest();
                  a.freeMode.momentumBounce && p
                    ? (t.updateProgress(u),
                      t.setTransition(e),
                      t.setTranslate(d),
                      t.transitionStart(!0, t.swipeDirection),
                      (t.animating = !0),
                      C(r, () => {
                        t &&
                          !t.destroyed &&
                          h.allowMomentumBounce &&
                          (s("momentumBounce"),
                          t.setTransition(a.speed),
                          setTimeout(() => {
                            t.setTranslate(u),
                              C(r, () => {
                                t && !t.destroyed && t.transitionEnd();
                              });
                          }, 0));
                      }))
                    : t.velocity
                    ? (s("_freeModeNoMomentumRelease"),
                      t.updateProgress(d),
                      t.setTransition(e),
                      t.setTranslate(d),
                      t.transitionStart(!0, t.swipeDirection),
                      t.animating ||
                        ((t.animating = !0),
                        C(r, () => {
                          t && !t.destroyed && t.transitionEnd();
                        })))
                    : t.updateProgress(d),
                    t.updateActiveIndex(),
                    t.updateSlidesClasses();
                } else {
                  if (a.freeMode.sticky) return void t.slideToClosest();
                  a.freeMode && s("_freeModeNoMomentumRelease");
                }
                (!a.freeMode.momentum || d >= a.longSwipesMs) &&
                  (s("_freeModeStaticRelease"),
                  t.updateProgress(),
                  t.updateActiveIndex(),
                  t.updateSlidesClasses());
              }
            },
          },
        });
    },
    function (e) {
      let t,
        i,
        s,
        n,
        { swiper: a, extendParams: r, on: o } = e;
      r({ grid: { rows: 1, fill: "column" } });
      const l = () => {
        let e = a.params.spaceBetween;
        return (
          "string" == typeof e && e.indexOf("%") >= 0
            ? (e = (parseFloat(e.replace("%", "")) / 100) * a.size)
            : "string" == typeof e && (e = parseFloat(e)),
          e
        );
      };
      o("init", () => {
        n = a.params.grid && a.params.grid.rows > 1;
      }),
        o("update", () => {
          const { params: e, el: t } = a,
            i = e.grid && e.grid.rows > 1;
          n && !i
            ? (t.classList.remove(
                `${e.containerModifierClass}grid`,
                `${e.containerModifierClass}grid-column`
              ),
              (s = 1),
              a.emitContainerClasses())
            : !n &&
              i &&
              (t.classList.add(`${e.containerModifierClass}grid`),
              "column" === e.grid.fill &&
                t.classList.add(`${e.containerModifierClass}grid-column`),
              a.emitContainerClasses()),
            (n = i);
        }),
        (a.grid = {
          initSlides: (e) => {
            const { slidesPerView: n } = a.params,
              { rows: r, fill: o } = a.params.grid,
              l =
                a.virtual && a.params.virtual.enabled
                  ? a.virtual.slides.length
                  : e.length;
            (s = Math.floor(l / r)),
              (t = Math.floor(l / r) === l / r ? l : Math.ceil(l / r) * r),
              "auto" !== n && "row" === o && (t = Math.max(t, n * r)),
              (i = t / r);
          },
          unsetSlides: () => {
            a.slides &&
              a.slides.forEach((e) => {
                e.swiperSlideGridSet &&
                  ((e.style.height = ""),
                  (e.style[a.getDirectionLabel("margin-top")] = ""));
              });
          },
          updateSlide: (e, n, r) => {
            const { slidesPerGroup: o } = a.params,
              c = l(),
              { rows: h, fill: d } = a.params.grid,
              u =
                a.virtual && a.params.virtual.enabled
                  ? a.virtual.slides.length
                  : r.length;
            let p, f, m;
            if ("row" === d && o > 1) {
              const i = Math.floor(e / (o * h)),
                s = e - h * o * i,
                a = 0 === i ? o : Math.min(Math.ceil((u - i * h * o) / h), o);
              (m = Math.floor(s / a)),
                (f = s - m * a + i * o),
                (p = f + (m * t) / h),
                (n.style.order = p);
            } else
              "column" === d
                ? ((f = Math.floor(e / h)),
                  (m = e - f * h),
                  (f > s || (f === s && m === h - 1)) &&
                    ((m += 1), m >= h && ((m = 0), (f += 1))))
                : ((m = Math.floor(e / i)), (f = e - m * i));
            (n.row = m),
              (n.column = f),
              (n.style.height = `calc((100% - ${(h - 1) * c}px) / ${h})`),
              (n.style[a.getDirectionLabel("margin-top")] =
                0 !== m ? c && `${c}px` : ""),
              (n.swiperSlideGridSet = !0);
          },
          updateWrapperSize: (e, i) => {
            const { centeredSlides: s, roundLengths: n } = a.params,
              r = l(),
              { rows: o } = a.params.grid;
            if (
              ((a.virtualSize = (e + r) * t),
              (a.virtualSize = Math.ceil(a.virtualSize / o) - r),
              a.params.cssMode ||
                (a.wrapperEl.style[a.getDirectionLabel("width")] = `${
                  a.virtualSize + r
                }px`),
              s)
            ) {
              const e = [];
              for (let t = 0; t < i.length; t += 1) {
                let s = i[t];
                n && (s = Math.floor(s)),
                  i[t] < a.virtualSize + i[0] && e.push(s);
              }
              i.splice(0, i.length), i.push(...e);
            }
          },
        });
    },
    function (e) {
      let { swiper: t } = e;
      Object.assign(t, {
        appendSlide: ne.bind(t),
        prependSlide: ae.bind(t),
        addSlide: re.bind(t),
        removeSlide: oe.bind(t),
        removeAllSlides: le.bind(t),
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({ fadeEffect: { crossFade: !1 } }),
        ce({
          effect: "fade",
          swiper: t,
          on: s,
          setTranslate: () => {
            const { slides: e } = t;
            t.params.fadeEffect;
            for (let i = 0; i < e.length; i += 1) {
              const e = t.slides[i];
              let s = -e.swiperSlideOffset;
              t.params.virtualTranslate || (s -= t.translate);
              let n = 0;
              t.isHorizontal() || ((n = s), (s = 0));
              const a = t.params.fadeEffect.crossFade
                  ? Math.max(1 - Math.abs(e.progress), 0)
                  : 1 + Math.min(Math.max(e.progress, -1), 0),
                r = he(0, e);
              (r.style.opacity = a),
                (r.style.transform = `translate3d(${s}px, ${n}px, 0px)`);
            }
          },
          setTransition: (e) => {
            const i = t.slides.map((e) => m(e));
            i.forEach((t) => {
              t.style.transitionDuration = `${e}ms`;
            }),
              de({
                swiper: t,
                duration: e,
                transformElements: i,
                allSlides: !0,
              });
          },
          overwriteParams: () => ({
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            spaceBetween: 0,
            virtualTranslate: !t.params.cssMode,
          }),
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        cubeEffect: {
          slideShadows: !0,
          shadow: !0,
          shadowOffset: 20,
          shadowScale: 0.94,
        },
      });
      const n = (e, t, i) => {
        let s = i
            ? e.querySelector(".swiper-slide-shadow-left")
            : e.querySelector(".swiper-slide-shadow-top"),
          n = i
            ? e.querySelector(".swiper-slide-shadow-right")
            : e.querySelector(".swiper-slide-shadow-bottom");
        s ||
          ((s = b(
            "div",
            (
              "swiper-slide-shadow-cube swiper-slide-shadow-" +
              (i ? "left" : "top")
            ).split(" ")
          )),
          e.append(s)),
          n ||
            ((n = b(
              "div",
              (
                "swiper-slide-shadow-cube swiper-slide-shadow-" +
                (i ? "right" : "bottom")
              ).split(" ")
            )),
            e.append(n)),
          s && (s.style.opacity = Math.max(-t, 0)),
          n && (n.style.opacity = Math.max(t, 0));
      };
      ce({
        effect: "cube",
        swiper: t,
        on: s,
        setTranslate: () => {
          const {
              el: e,
              wrapperEl: i,
              slides: s,
              width: a,
              height: r,
              rtlTranslate: o,
              size: l,
              browser: c,
            } = t,
            h = t.params.cubeEffect,
            d = t.isHorizontal(),
            u = t.virtual && t.params.virtual.enabled;
          let p,
            f = 0;
          h.shadow &&
            (d
              ? ((p = t.wrapperEl.querySelector(".swiper-cube-shadow")),
                p ||
                  ((p = b("div", "swiper-cube-shadow")), t.wrapperEl.append(p)),
                (p.style.height = `${a}px`))
              : ((p = e.querySelector(".swiper-cube-shadow")),
                p || ((p = b("div", "swiper-cube-shadow")), e.append(p))));
          for (let e = 0; e < s.length; e += 1) {
            const i = s[e];
            let a = e;
            u && (a = parseInt(i.getAttribute("data-swiper-slide-index"), 10));
            let r = 90 * a,
              c = Math.floor(r / 360);
            o && ((r = -r), (c = Math.floor(-r / 360)));
            const p = Math.max(Math.min(i.progress, 1), -1);
            let m = 0,
              g = 0,
              v = 0;
            a % 4 == 0
              ? ((m = 4 * -c * l), (v = 0))
              : (a - 1) % 4 == 0
              ? ((m = 0), (v = 4 * -c * l))
              : (a - 2) % 4 == 0
              ? ((m = l + 4 * c * l), (v = l))
              : (a - 3) % 4 == 0 && ((m = -l), (v = 3 * l + 4 * l * c)),
              o && (m = -m),
              d || ((g = m), (m = 0));
            const b = `rotateX(${d ? 0 : -r}deg) rotateY(${
              d ? r : 0
            }deg) translate3d(${m}px, ${g}px, ${v}px)`;
            p <= 1 &&
              p > -1 &&
              ((f = 90 * a + 90 * p),
              o && (f = 90 * -a - 90 * p),
              t.browser &&
                t.browser.isSafari &&
                (Math.abs(f) / 90) % 2 == 1 &&
                (f += 0.001)),
              (i.style.transform = b),
              h.slideShadows && n(i, p, d);
          }
          if (
            ((i.style.transformOrigin = `50% 50% -${l / 2}px`),
            (i.style["-webkit-transform-origin"] = `50% 50% -${l / 2}px`),
            h.shadow)
          )
            if (d)
              p.style.transform = `translate3d(0px, ${
                a / 2 + h.shadowOffset
              }px, ${-a / 2}px) rotateX(89.99deg) rotateZ(0deg) scale(${
                h.shadowScale
              })`;
            else {
              const e = Math.abs(f) - 90 * Math.floor(Math.abs(f) / 90),
                t =
                  1.5 -
                  (Math.sin((2 * e * Math.PI) / 360) / 2 +
                    Math.cos((2 * e * Math.PI) / 360) / 2),
                i = h.shadowScale,
                s = h.shadowScale / t,
                n = h.shadowOffset;
              p.style.transform = `scale3d(${i}, 1, ${s}) translate3d(0px, ${
                r / 2 + n
              }px, ${-r / 2 / s}px) rotateX(-89.99deg)`;
            }
          const m =
            (c.isSafari || c.isWebView) && c.needPerspectiveFix ? -l / 2 : 0;
          (i.style.transform = `translate3d(0px,0,${m}px) rotateX(${
            t.isHorizontal() ? 0 : f
          }deg) rotateY(${t.isHorizontal() ? -f : 0}deg)`),
            i.style.setProperty("--swiper-cube-translate-z", `${m}px`);
        },
        setTransition: (e) => {
          const { el: i, slides: s } = t;
          if (
            (s.forEach((t) => {
              (t.style.transitionDuration = `${e}ms`),
                t
                  .querySelectorAll(
                    ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                  )
                  .forEach((t) => {
                    t.style.transitionDuration = `${e}ms`;
                  });
            }),
            t.params.cubeEffect.shadow && !t.isHorizontal())
          ) {
            const t = i.querySelector(".swiper-cube-shadow");
            t && (t.style.transitionDuration = `${e}ms`);
          }
        },
        recreateShadows: () => {
          const e = t.isHorizontal();
          t.slides.forEach((t) => {
            const i = Math.max(Math.min(t.progress, 1), -1);
            n(t, i, e);
          });
        },
        getEffectParams: () => t.params.cubeEffect,
        perspective: () => !0,
        overwriteParams: () => ({
          slidesPerView: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: !0,
          resistanceRatio: 0,
          spaceBetween: 0,
          centeredSlides: !1,
          virtualTranslate: !0,
        }),
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({ flipEffect: { slideShadows: !0, limitRotation: !0 } });
      const n = (e, i) => {
        let s = t.isHorizontal()
            ? e.querySelector(".swiper-slide-shadow-left")
            : e.querySelector(".swiper-slide-shadow-top"),
          n = t.isHorizontal()
            ? e.querySelector(".swiper-slide-shadow-right")
            : e.querySelector(".swiper-slide-shadow-bottom");
        s || (s = ue("flip", e, t.isHorizontal() ? "left" : "top")),
          n || (n = ue("flip", e, t.isHorizontal() ? "right" : "bottom")),
          s && (s.style.opacity = Math.max(-i, 0)),
          n && (n.style.opacity = Math.max(i, 0));
      };
      ce({
        effect: "flip",
        swiper: t,
        on: s,
        setTranslate: () => {
          const { slides: e, rtlTranslate: i } = t,
            s = t.params.flipEffect;
          for (let a = 0; a < e.length; a += 1) {
            const r = e[a];
            let o = r.progress;
            t.params.flipEffect.limitRotation &&
              (o = Math.max(Math.min(r.progress, 1), -1));
            const l = r.swiperSlideOffset;
            let c = -180 * o,
              h = 0,
              d = t.params.cssMode ? -l - t.translate : -l,
              u = 0;
            t.isHorizontal()
              ? i && (c = -c)
              : ((u = d), (d = 0), (h = -c), (c = 0)),
              t.browser &&
                t.browser.isSafari &&
                ((Math.abs(c) / 90) % 2 == 1 && (c += 0.001),
                (Math.abs(h) / 90) % 2 == 1 && (h += 0.001)),
              (r.style.zIndex = -Math.abs(Math.round(o)) + e.length),
              s.slideShadows && n(r, o);
            const p = `translate3d(${d}px, ${u}px, 0px) rotateX(${h}deg) rotateY(${c}deg)`;
            he(0, r).style.transform = p;
          }
        },
        setTransition: (e) => {
          const i = t.slides.map((e) => m(e));
          i.forEach((t) => {
            (t.style.transitionDuration = `${e}ms`),
              t
                .querySelectorAll(
                  ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                )
                .forEach((t) => {
                  t.style.transitionDuration = `${e}ms`;
                });
          }),
            de({ swiper: t, duration: e, transformElements: i });
        },
        recreateShadows: () => {
          t.params.flipEffect,
            t.slides.forEach((e) => {
              let i = e.progress;
              t.params.flipEffect.limitRotation &&
                (i = Math.max(Math.min(e.progress, 1), -1)),
                n(e, i);
            });
        },
        getEffectParams: () => t.params.flipEffect,
        perspective: () => !0,
        overwriteParams: () => ({
          slidesPerView: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: !0,
          spaceBetween: 0,
          virtualTranslate: !t.params.cssMode,
        }),
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        coverflowEffect: {
          rotate: 50,
          stretch: 0,
          depth: 100,
          scale: 1,
          modifier: 1,
          slideShadows: !0,
        },
      }),
        ce({
          effect: "coverflow",
          swiper: t,
          on: s,
          setTranslate: () => {
            const { width: e, height: i, slides: s, slidesSizesGrid: n } = t,
              a = t.params.coverflowEffect,
              r = t.isHorizontal(),
              o = t.translate,
              l = r ? e / 2 - o : i / 2 - o,
              c = r ? a.rotate : -a.rotate,
              h = a.depth;
            for (let e = 0, i = s.length; e < i; e += 1) {
              const i = s[e],
                o = n[e],
                d = (l - i.swiperSlideOffset - o / 2) / o,
                u =
                  "function" == typeof a.modifier
                    ? a.modifier(d)
                    : d * a.modifier;
              let p = r ? c * u : 0,
                f = r ? 0 : c * u,
                m = -h * Math.abs(u),
                g = a.stretch;
              "string" == typeof g &&
                -1 !== g.indexOf("%") &&
                (g = (parseFloat(a.stretch) / 100) * o);
              let v = r ? 0 : g * u,
                b = r ? g * u : 0,
                y = 1 - (1 - a.scale) * Math.abs(u);
              Math.abs(b) < 0.001 && (b = 0),
                Math.abs(v) < 0.001 && (v = 0),
                Math.abs(m) < 0.001 && (m = 0),
                Math.abs(p) < 0.001 && (p = 0),
                Math.abs(f) < 0.001 && (f = 0),
                Math.abs(y) < 0.001 && (y = 0),
                t.browser &&
                  t.browser.isSafari &&
                  ((Math.abs(p) / 90) % 2 == 1 && (p += 0.001),
                  (Math.abs(f) / 90) % 2 == 1 && (f += 0.001));
              const _ = `translate3d(${b}px,${v}px,${m}px)  rotateX(${f}deg) rotateY(${p}deg) scale(${y})`;
              if (
                ((he(0, i).style.transform = _),
                (i.style.zIndex = 1 - Math.abs(Math.round(u))),
                a.slideShadows)
              ) {
                let e = r
                    ? i.querySelector(".swiper-slide-shadow-left")
                    : i.querySelector(".swiper-slide-shadow-top"),
                  t = r
                    ? i.querySelector(".swiper-slide-shadow-right")
                    : i.querySelector(".swiper-slide-shadow-bottom");
                e || (e = ue("coverflow", i, r ? "left" : "top")),
                  t || (t = ue("coverflow", i, r ? "right" : "bottom")),
                  e && (e.style.opacity = u > 0 ? u : 0),
                  t && (t.style.opacity = -u > 0 ? -u : 0);
              }
            }
          },
          setTransition: (e) => {
            t.slides
              .map((e) => m(e))
              .forEach((t) => {
                (t.style.transitionDuration = `${e}ms`),
                  t
                    .querySelectorAll(
                      ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                    )
                    .forEach((t) => {
                      t.style.transitionDuration = `${e}ms`;
                    });
              });
          },
          perspective: () => !0,
          overwriteParams: () => ({ watchSlidesProgress: !0 }),
        });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        creativeEffect: {
          limitProgress: 1,
          shadowPerProgress: !1,
          progressMultiplier: 1,
          perspective: !0,
          prev: {
            translate: [0, 0, 0],
            rotate: [0, 0, 0],
            opacity: 1,
            scale: 1,
          },
          next: {
            translate: [0, 0, 0],
            rotate: [0, 0, 0],
            opacity: 1,
            scale: 1,
          },
        },
      });
      const n = (e) => ("string" == typeof e ? e : `${e}px`);
      ce({
        effect: "creative",
        swiper: t,
        on: s,
        setTranslate: () => {
          const { slides: e, wrapperEl: i, slidesSizesGrid: s } = t,
            a = t.params.creativeEffect,
            { progressMultiplier: r } = a,
            o = t.params.centeredSlides;
          if (o) {
            const e = s[0] / 2 - t.params.slidesOffsetBefore || 0;
            i.style.transform = `translateX(calc(50% - ${e}px))`;
          }
          for (let i = 0; i < e.length; i += 1) {
            const s = e[i],
              l = s.progress,
              c = Math.min(
                Math.max(s.progress, -a.limitProgress),
                a.limitProgress
              );
            let h = c;
            o ||
              (h = Math.min(
                Math.max(s.originalProgress, -a.limitProgress),
                a.limitProgress
              ));
            const d = s.swiperSlideOffset,
              u = [t.params.cssMode ? -d - t.translate : -d, 0, 0],
              p = [0, 0, 0];
            let f = !1;
            t.isHorizontal() || ((u[1] = u[0]), (u[0] = 0));
            let m = {
              translate: [0, 0, 0],
              rotate: [0, 0, 0],
              scale: 1,
              opacity: 1,
            };
            c < 0
              ? ((m = a.next), (f = !0))
              : c > 0 && ((m = a.prev), (f = !0)),
              u.forEach((e, t) => {
                u[t] = `calc(${e}px + (${n(m.translate[t])} * ${Math.abs(
                  c * r
                )}))`;
              }),
              p.forEach((e, i) => {
                let s = m.rotate[i] * Math.abs(c * r);
                t.browser &&
                  t.browser.isSafari &&
                  (Math.abs(s) / 90) % 2 == 1 &&
                  (s += 0.001),
                  (p[i] = s);
              }),
              (s.style.zIndex = -Math.abs(Math.round(l)) + e.length);
            const g = u.join(", "),
              v = `rotateX(${p[0]}deg) rotateY(${p[1]}deg) rotateZ(${p[2]}deg)`,
              b =
                h < 0
                  ? `scale(${1 + (1 - m.scale) * h * r})`
                  : `scale(${1 - (1 - m.scale) * h * r})`,
              y =
                h < 0
                  ? 1 + (1 - m.opacity) * h * r
                  : 1 - (1 - m.opacity) * h * r,
              _ = `translate3d(${g}) ${v} ${b}`;
            if ((f && m.shadow) || !f) {
              let e = s.querySelector(".swiper-slide-shadow");
              if ((!e && m.shadow && (e = ue("creative", s)), e)) {
                const t = a.shadowPerProgress ? c * (1 / a.limitProgress) : c;
                e.style.opacity = Math.min(Math.max(Math.abs(t), 0), 1);
              }
            }
            const w = he(0, s);
            (w.style.transform = _),
              (w.style.opacity = y),
              m.origin && (w.style.transformOrigin = m.origin);
          }
        },
        setTransition: (e) => {
          const i = t.slides.map((e) => m(e));
          i.forEach((t) => {
            (t.style.transitionDuration = `${e}ms`),
              t.querySelectorAll(".swiper-slide-shadow").forEach((t) => {
                t.style.transitionDuration = `${e}ms`;
              });
          }),
            de({ swiper: t, duration: e, transformElements: i, allSlides: !0 });
        },
        perspective: () => t.params.creativeEffect.perspective,
        overwriteParams: () => ({
          watchSlidesProgress: !0,
          virtualTranslate: !t.params.cssMode,
        }),
      });
    },
    function (e) {
      let { swiper: t, extendParams: i, on: s } = e;
      i({
        cardsEffect: {
          slideShadows: !0,
          rotate: !0,
          perSlideRotate: 2,
          perSlideOffset: 8,
        },
      }),
        ce({
          effect: "cards",
          swiper: t,
          on: s,
          setTranslate: () => {
            const { slides: e, activeIndex: i, rtlTranslate: s } = t,
              n = t.params.cardsEffect,
              { startTranslate: a, isTouched: r } = t.touchEventsData,
              o = s ? -t.translate : t.translate;
            for (let l = 0; l < e.length; l += 1) {
              const c = e[l],
                h = c.progress,
                d = Math.min(Math.max(h, -4), 4);
              let u = c.swiperSlideOffset;
              t.params.centeredSlides &&
                !t.params.cssMode &&
                (t.wrapperEl.style.transform = `translateX(${t.minTranslate()}px)`),
                t.params.centeredSlides &&
                  t.params.cssMode &&
                  (u -= e[0].swiperSlideOffset);
              let p = t.params.cssMode ? -u - t.translate : -u,
                f = 0;
              const m = -100 * Math.abs(d);
              let g = 1,
                v = -n.perSlideRotate * d,
                b = n.perSlideOffset - 0.75 * Math.abs(d);
              const y =
                  t.virtual && t.params.virtual.enabled
                    ? t.virtual.from + l
                    : l,
                _ =
                  (y === i || y === i - 1) &&
                  d > 0 &&
                  d < 1 &&
                  (r || t.params.cssMode) &&
                  o < a,
                w =
                  (y === i || y === i + 1) &&
                  d < 0 &&
                  d > -1 &&
                  (r || t.params.cssMode) &&
                  o > a;
              if (_ || w) {
                const e = (1 - Math.abs((Math.abs(d) - 0.5) / 0.5)) ** 0.5;
                (v += -28 * d * e),
                  (g += -0.5 * e),
                  (b += 96 * e),
                  (f = -25 * e * Math.abs(d) + "%");
              }
              if (
                ((p =
                  d < 0
                    ? `calc(${p}px ${s ? "-" : "+"} (${b * Math.abs(d)}%))`
                    : d > 0
                    ? `calc(${p}px ${s ? "-" : "+"} (-${b * Math.abs(d)}%))`
                    : `${p}px`),
                !t.isHorizontal())
              ) {
                const e = f;
                (f = p), (p = e);
              }
              const x = d < 0 ? "" + (1 + (1 - g) * d) : "" + (1 - (1 - g) * d),
                C = `\n          translate3d(${p}, ${f}, ${m}px)\n          rotateZ(${
                  n.rotate ? (s ? -v : v) : 0
                }deg)\n          scale(${x})\n        `;
              if (n.slideShadows) {
                let e = c.querySelector(".swiper-slide-shadow");
                e || (e = ue("cards", c)),
                  e &&
                    (e.style.opacity = Math.min(
                      Math.max((Math.abs(d) - 0.5) / 0.5, 0),
                      1
                    ));
              }
              c.style.zIndex = -Math.abs(Math.round(h)) + e.length;
              he(0, c).style.transform = C;
            }
          },
          setTransition: (e) => {
            const i = t.slides.map((e) => m(e));
            i.forEach((t) => {
              (t.style.transitionDuration = `${e}ms`),
                t.querySelectorAll(".swiper-slide-shadow").forEach((t) => {
                  t.style.transitionDuration = `${e}ms`;
                });
            }),
              de({ swiper: t, duration: e, transformElements: i });
          },
          perspective: () => !0,
          overwriteParams: () => ({
            watchSlidesProgress: !0,
            virtualTranslate: !t.params.cssMode,
          }),
        });
    },
  ];
  return te.use(pe), te;
})();
/*! jQuery UI - v1.13.2 - 2022-07-14
 * http://jqueryui.com
 * Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-patch.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */ function removeActiveClass(
  e,
  t
) {
  e.forEach((e) => {
    e.classList.remove(t);
  });
}
function tabs(e, t, i) {
  function s(s) {
    removeActiveClass(e, i),
      removeActiveClass(t, i),
      this.classList.add(i),
      t[e.indexOf(this)].classList.add(i);
  }
  e.forEach((e) => {
    e.addEventListener("click", s);
  }),
    e[0].classList.add(i),
    t[0].classList.add(i);
}
function openClickPopup(e, t, i) {
  $(t).click(function (e) {
    $(i).toggleClass("active"),
      $(this).toggleClass("active"),
      $("body").css({ overflow: "hidden" }),
      $(document).bind("scroll", function () {
        window.scrollTo(0, 0);
      });
  }),
    $(".close").click(function (e) {
      $(i).removeClass("active"),
        $(t).removeClass("active"),
        $(document).unbind("scroll"),
        $("body").css({ overflow: "visible" });
    }),
    $(document).mouseup(function (s) {
      0 === $(e).has(s.target).length &&
        ($(i).removeClass("active"),
        $(t).removeClass("active"),
        $(document).unbind("scroll"),
        $("body").css({ overflow: "visible" }));
    });
}
function clickForCustomSelect(e) {
  const t = e.querySelector(".custom-select__header"),
    i = e.querySelector(".custom-select__body"),
    s = Array.from(i.querySelectorAll(".custom-select__option"));
  t.addEventListener("click", (e) => {
    t.classList.toggle("active"), i.classList.toggle("active");
  }),
    s.forEach((s) => {
      s.addEventListener("click", () => {
        (e.dataset.curroption = s.textContent),
          (t.textContent = s.textContent),
          t.classList.remove("active"),
          i.classList.remove("active");
      });
    });
}
!(function (e) {
  "use strict";
  "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery);
})(function (e) {
  "use strict";
  (e.ui = e.ui || {}), (e.ui.version = "1.13.2");
  var t,
    i,
    s,
    n,
    a,
    r,
    o,
    l,
    c,
    h,
    d = 0,
    u = Array.prototype.hasOwnProperty,
    p = Array.prototype.slice;
  function f(e, t, i) {
    return [
      parseFloat(e[0]) * (c.test(e[0]) ? t / 100 : 1),
      parseFloat(e[1]) * (c.test(e[1]) ? i / 100 : 1),
    ];
  }
  function m(t, i) {
    return parseInt(e.css(t, i), 10) || 0;
  }
  function g(e) {
    return null != e && e === e.window;
  }
  (e.cleanData =
    ((t = e.cleanData),
    function (i) {
      for (var s, n, a = 0; null != (n = i[a]); a++)
        (s = e._data(n, "events")) && s.remove && e(n).triggerHandler("remove");
      t(i);
    })),
    (e.widget = function (t, i, s) {
      var n,
        a,
        r,
        o = {},
        l = t.split(".")[0],
        c = l + "-" + (t = t.split(".")[1]);
      return (
        s || ((s = i), (i = e.Widget)),
        Array.isArray(s) && (s = e.extend.apply(null, [{}].concat(s))),
        (e.expr.pseudos[c.toLowerCase()] = function (t) {
          return !!e.data(t, c);
        }),
        (e[l] = e[l] || {}),
        (n = e[l][t]),
        (a = e[l][t] =
          function (e, t) {
            if (!this || !this._createWidget) return new a(e, t);
            arguments.length && this._createWidget(e, t);
          }),
        e.extend(a, n, {
          version: s.version,
          _proto: e.extend({}, s),
          _childConstructors: [],
        }),
        ((r = new i()).options = e.widget.extend({}, r.options)),
        e.each(s, function (e, t) {
          function s() {
            return i.prototype[e].apply(this, arguments);
          }
          function n(t) {
            return i.prototype[e].apply(this, t);
          }
          o[e] =
            "function" == typeof t
              ? function () {
                  var e,
                    i = this._super,
                    a = this._superApply;
                  return (
                    (this._super = s),
                    (this._superApply = n),
                    (e = t.apply(this, arguments)),
                    (this._super = i),
                    (this._superApply = a),
                    e
                  );
                }
              : t;
        }),
        (a.prototype = e.widget.extend(
          r,
          { widgetEventPrefix: (n && r.widgetEventPrefix) || t },
          o,
          { constructor: a, namespace: l, widgetName: t, widgetFullName: c }
        )),
        n
          ? (e.each(n._childConstructors, function (t, i) {
              var s = i.prototype;
              e.widget(s.namespace + "." + s.widgetName, a, i._proto);
            }),
            delete n._childConstructors)
          : i._childConstructors.push(a),
        e.widget.bridge(t, a),
        a
      );
    }),
    (e.widget.extend = function (t) {
      for (var i, s, n = p.call(arguments, 1), a = 0, r = n.length; a < r; a++)
        for (i in n[a])
          (s = n[a][i]),
            u.call(n[a], i) &&
              void 0 !== s &&
              (e.isPlainObject(s)
                ? (t[i] = e.isPlainObject(t[i])
                    ? e.widget.extend({}, t[i], s)
                    : e.widget.extend({}, s))
                : (t[i] = s));
      return t;
    }),
    (e.widget.bridge = function (t, i) {
      var s = i.prototype.widgetFullName || t;
      e.fn[t] = function (n) {
        var a = "string" == typeof n,
          r = p.call(arguments, 1),
          o = this;
        return (
          a
            ? this.length || "instance" !== n
              ? this.each(function () {
                  var i,
                    a = e.data(this, s);
                  return "instance" === n
                    ? ((o = a), !1)
                    : a
                    ? "function" != typeof a[n] || "_" === n.charAt(0)
                      ? e.error(
                          "no such method '" +
                            n +
                            "' for " +
                            t +
                            " widget instance"
                        )
                      : (i = a[n].apply(a, r)) !== a && void 0 !== i
                      ? ((o = i && i.jquery ? o.pushStack(i.get()) : i), !1)
                      : void 0
                    : e.error(
                        "cannot call methods on " +
                          t +
                          " prior to initialization; attempted to call method '" +
                          n +
                          "'"
                      );
                })
              : (o = void 0)
            : (r.length && (n = e.widget.extend.apply(null, [n].concat(r))),
              this.each(function () {
                var t = e.data(this, s);
                t
                  ? (t.option(n || {}), t._init && t._init())
                  : e.data(this, s, new i(n, this));
              })),
          o
        );
      };
    }),
    (e.Widget = function () {}),
    (e.Widget._childConstructors = []),
    (e.Widget.prototype = {
      widgetName: "widget",
      widgetEventPrefix: "",
      defaultElement: "<div>",
      options: { classes: {}, disabled: !1, create: null },
      _createWidget: function (t, i) {
        (i = e(i || this.defaultElement || this)[0]),
          (this.element = e(i)),
          (this.uuid = d++),
          (this.eventNamespace = "." + this.widgetName + this.uuid),
          (this.bindings = e()),
          (this.hoverable = e()),
          (this.focusable = e()),
          (this.classesElementLookup = {}),
          i !== this &&
            (e.data(i, this.widgetFullName, this),
            this._on(!0, this.element, {
              remove: function (e) {
                e.target === i && this.destroy();
              },
            }),
            (this.document = e(i.style ? i.ownerDocument : i.document || i)),
            (this.window = e(
              this.document[0].defaultView || this.document[0].parentWindow
            ))),
          (this.options = e.widget.extend(
            {},
            this.options,
            this._getCreateOptions(),
            t
          )),
          this._create(),
          this.options.disabled &&
            this._setOptionDisabled(this.options.disabled),
          this._trigger("create", null, this._getCreateEventData()),
          this._init();
      },
      _getCreateOptions: function () {
        return {};
      },
      _getCreateEventData: e.noop,
      _create: e.noop,
      _init: e.noop,
      destroy: function () {
        var t = this;
        this._destroy(),
          e.each(this.classesElementLookup, function (e, i) {
            t._removeClass(i, e);
          }),
          this.element.off(this.eventNamespace).removeData(this.widgetFullName),
          this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
          this.bindings.off(this.eventNamespace);
      },
      _destroy: e.noop,
      widget: function () {
        return this.element;
      },
      option: function (t, i) {
        var s,
          n,
          a,
          r = t;
        if (0 === arguments.length) return e.widget.extend({}, this.options);
        if ("string" == typeof t)
          if (((r = {}), (t = (s = t.split(".")).shift()), s.length)) {
            for (
              n = r[t] = e.widget.extend({}, this.options[t]), a = 0;
              a < s.length - 1;
              a++
            )
              (n[s[a]] = n[s[a]] || {}), (n = n[s[a]]);
            if (((t = s.pop()), 1 === arguments.length))
              return void 0 === n[t] ? null : n[t];
            n[t] = i;
          } else {
            if (1 === arguments.length)
              return void 0 === this.options[t] ? null : this.options[t];
            r[t] = i;
          }
        return this._setOptions(r), this;
      },
      _setOptions: function (e) {
        for (var t in e) this._setOption(t, e[t]);
        return this;
      },
      _setOption: function (e, t) {
        return (
          "classes" === e && this._setOptionClasses(t),
          (this.options[e] = t),
          "disabled" === e && this._setOptionDisabled(t),
          this
        );
      },
      _setOptionClasses: function (t) {
        var i, s, n;
        for (i in t)
          (n = this.classesElementLookup[i]),
            t[i] !== this.options.classes[i] &&
              n &&
              n.length &&
              ((s = e(n.get())),
              this._removeClass(n, i),
              s.addClass(
                this._classes({ element: s, keys: i, classes: t, add: !0 })
              ));
      },
      _setOptionDisabled: function (e) {
        this._toggleClass(
          this.widget(),
          this.widgetFullName + "-disabled",
          null,
          !!e
        ),
          e &&
            (this._removeClass(this.hoverable, null, "ui-state-hover"),
            this._removeClass(this.focusable, null, "ui-state-focus"));
      },
      enable: function () {
        return this._setOptions({ disabled: !1 });
      },
      disable: function () {
        return this._setOptions({ disabled: !0 });
      },
      _classes: function (t) {
        var i = [],
          s = this;
        function n(n, a) {
          for (var r, o = 0; o < n.length; o++)
            (r = s.classesElementLookup[n[o]] || e()),
              (r = t.add
                ? ((function () {
                    var i = [];
                    t.element.each(function (t, n) {
                      e
                        .map(s.classesElementLookup, function (e) {
                          return e;
                        })
                        .some(function (e) {
                          return e.is(n);
                        }) || i.push(n);
                    }),
                      s._on(e(i), { remove: "_untrackClassesElement" });
                  })(),
                  e(e.uniqueSort(r.get().concat(t.element.get()))))
                : e(r.not(t.element).get())),
              (s.classesElementLookup[n[o]] = r),
              i.push(n[o]),
              a && t.classes[n[o]] && i.push(t.classes[n[o]]);
        }
        return (
          (t = e.extend(
            { element: this.element, classes: this.options.classes || {} },
            t
          )).keys && n(t.keys.match(/\S+/g) || [], !0),
          t.extra && n(t.extra.match(/\S+/g) || []),
          i.join(" ")
        );
      },
      _untrackClassesElement: function (t) {
        var i = this;
        e.each(i.classesElementLookup, function (s, n) {
          -1 !== e.inArray(t.target, n) &&
            (i.classesElementLookup[s] = e(n.not(t.target).get()));
        }),
          this._off(e(t.target));
      },
      _removeClass: function (e, t, i) {
        return this._toggleClass(e, t, i, !1);
      },
      _addClass: function (e, t, i) {
        return this._toggleClass(e, t, i, !0);
      },
      _toggleClass: function (e, t, i, s) {
        var n = "string" == typeof e || null === e;
        return (
          (i = {
            extra: n ? t : i,
            keys: n ? e : t,
            element: n ? this.element : e,
            add: (s = "boolean" == typeof s ? s : i),
          }).element.toggleClass(this._classes(i), s),
          this
        );
      },
      _on: function (t, i, s) {
        var n,
          a = this;
        "boolean" != typeof t && ((s = i), (i = t), (t = !1)),
          s
            ? ((i = n = e(i)), (this.bindings = this.bindings.add(i)))
            : ((s = i), (i = this.element), (n = this.widget())),
          e.each(s, function (s, r) {
            function o() {
              if (
                t ||
                (!0 !== a.options.disabled &&
                  !e(this).hasClass("ui-state-disabled"))
              )
                return ("string" == typeof r ? a[r] : r).apply(a, arguments);
            }
            "string" != typeof r &&
              (o.guid = r.guid = r.guid || o.guid || e.guid++);
            var l;
            s = (l = s.match(/^([\w:-]*)\s*(.*)$/))[1] + a.eventNamespace;
            (l = l[2]) ? n.on(s, l, o) : i.on(s, o);
          });
      },
      _off: function (t, i) {
        (i =
          (i || "").split(" ").join(this.eventNamespace + " ") +
          this.eventNamespace),
          t.off(i),
          (this.bindings = e(this.bindings.not(t).get())),
          (this.focusable = e(this.focusable.not(t).get())),
          (this.hoverable = e(this.hoverable.not(t).get()));
      },
      _delay: function (e, t) {
        var i = this;
        return setTimeout(function () {
          return ("string" == typeof e ? i[e] : e).apply(i, arguments);
        }, t || 0);
      },
      _hoverable: function (t) {
        (this.hoverable = this.hoverable.add(t)),
          this._on(t, {
            mouseenter: function (t) {
              this._addClass(e(t.currentTarget), null, "ui-state-hover");
            },
            mouseleave: function (t) {
              this._removeClass(e(t.currentTarget), null, "ui-state-hover");
            },
          });
      },
      _focusable: function (t) {
        (this.focusable = this.focusable.add(t)),
          this._on(t, {
            focusin: function (t) {
              this._addClass(e(t.currentTarget), null, "ui-state-focus");
            },
            focusout: function (t) {
              this._removeClass(e(t.currentTarget), null, "ui-state-focus");
            },
          });
      },
      _trigger: function (t, i, s) {
        var n,
          a,
          r = this.options[t];
        if (
          ((s = s || {}),
          ((i = e.Event(i)).type = (
            t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
          ).toLowerCase()),
          (i.target = this.element[0]),
          (a = i.originalEvent))
        )
          for (n in a) n in i || (i[n] = a[n]);
        return (
          this.element.trigger(i, s),
          !(
            ("function" == typeof r &&
              !1 === r.apply(this.element[0], [i].concat(s))) ||
            i.isDefaultPrevented()
          )
        );
      },
    }),
    e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) {
      e.Widget.prototype["_" + t] = function (s, n, a) {
        var r,
          o = (n = "string" == typeof n ? { effect: n } : n)
            ? (!0 !== n && "number" != typeof n && n.effect) || i
            : t;
        "number" == typeof (n = n || {})
          ? (n = { duration: n })
          : !0 === n && (n = {}),
          (r = !e.isEmptyObject(n)),
          (n.complete = a),
          n.delay && s.delay(n.delay),
          r && e.effects && e.effects.effect[o]
            ? s[t](n)
            : o !== t && s[o]
            ? s[o](n.duration, n.easing, a)
            : s.queue(function (i) {
                e(this)[t](), a && a.call(s[0]), i();
              });
      };
    }),
    e.widget,
    (s = Math.max),
    (n = Math.abs),
    (a = /left|center|right/),
    (r = /top|center|bottom/),
    (o = /[\+\-]\d+(\.[\d]+)?%?/),
    (l = /^\w+/),
    (c = /%$/),
    (h = e.fn.position),
    (e.position = {
      scrollbarWidth: function () {
        if (void 0 !== i) return i;
        var t,
          s = e(
            "<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>"
          ),
          n = s.children()[0];
        return (
          e("body").append(s),
          (t = n.offsetWidth),
          s.css("overflow", "scroll"),
          t === (n = n.offsetWidth) && (n = s[0].clientWidth),
          s.remove(),
          (i = t - n)
        );
      },
      getScrollInfo: function (t) {
        var i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
          s = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y");
        i =
          "scroll" === i ||
          ("auto" === i && t.width < t.element[0].scrollWidth);
        return {
          width:
            "scroll" === s ||
            ("auto" === s && t.height < t.element[0].scrollHeight)
              ? e.position.scrollbarWidth()
              : 0,
          height: i ? e.position.scrollbarWidth() : 0,
        };
      },
      getWithinInfo: function (t) {
        var i = e(t || window),
          s = g(i[0]),
          n = !!i[0] && 9 === i[0].nodeType;
        return {
          element: i,
          isWindow: s,
          isDocument: n,
          offset: s || n ? { left: 0, top: 0 } : e(t).offset(),
          scrollLeft: i.scrollLeft(),
          scrollTop: i.scrollTop(),
          width: i.outerWidth(),
          height: i.outerHeight(),
        };
      },
    }),
    (e.fn.position = function (t) {
      if (!t || !t.of) return h.apply(this, arguments);
      var i,
        c,
        d,
        u,
        p,
        v,
        b =
          "string" == typeof (t = e.extend({}, t)).of
            ? e(document).find(t.of)
            : e(t.of),
        y = e.position.getWithinInfo(t.within),
        _ = e.position.getScrollInfo(y),
        w = (t.collision || "flip").split(" "),
        x = {},
        C =
          9 === (v = (C = b)[0]).nodeType
            ? {
                width: C.width(),
                height: C.height(),
                offset: { top: 0, left: 0 },
              }
            : g(v)
            ? {
                width: C.width(),
                height: C.height(),
                offset: { top: C.scrollTop(), left: C.scrollLeft() },
              }
            : v.preventDefault
            ? { width: 0, height: 0, offset: { top: v.pageY, left: v.pageX } }
            : {
                width: C.outerWidth(),
                height: C.outerHeight(),
                offset: C.offset(),
              };
      return (
        b[0].preventDefault && (t.at = "left top"),
        (c = C.width),
        (d = C.height),
        (p = e.extend({}, (u = C.offset))),
        e.each(["my", "at"], function () {
          var e,
            i,
            s = (t[this] || "").split(" ");
          ((s =
            1 === s.length
              ? a.test(s[0])
                ? s.concat(["center"])
                : r.test(s[0])
                ? ["center"].concat(s)
                : ["center", "center"]
              : s)[0] = a.test(s[0]) ? s[0] : "center"),
            (s[1] = r.test(s[1]) ? s[1] : "center"),
            (e = o.exec(s[0])),
            (i = o.exec(s[1])),
            (x[this] = [e ? e[0] : 0, i ? i[0] : 0]),
            (t[this] = [l.exec(s[0])[0], l.exec(s[1])[0]]);
        }),
        1 === w.length && (w[1] = w[0]),
        "right" === t.at[0]
          ? (p.left += c)
          : "center" === t.at[0] && (p.left += c / 2),
        "bottom" === t.at[1]
          ? (p.top += d)
          : "center" === t.at[1] && (p.top += d / 2),
        (i = f(x.at, c, d)),
        (p.left += i[0]),
        (p.top += i[1]),
        this.each(function () {
          var a,
            r,
            o = e(this),
            l = o.outerWidth(),
            h = o.outerHeight(),
            g = m(this, "marginLeft"),
            v = m(this, "marginTop"),
            C = l + g + m(this, "marginRight") + _.width,
            T = h + v + m(this, "marginBottom") + _.height,
            S = e.extend({}, p),
            k = f(x.my, o.outerWidth(), o.outerHeight());
          "right" === t.my[0]
            ? (S.left -= l)
            : "center" === t.my[0] && (S.left -= l / 2),
            "bottom" === t.my[1]
              ? (S.top -= h)
              : "center" === t.my[1] && (S.top -= h / 2),
            (S.left += k[0]),
            (S.top += k[1]),
            (a = { marginLeft: g, marginTop: v }),
            e.each(["left", "top"], function (s, n) {
              e.ui.position[w[s]] &&
                e.ui.position[w[s]][n](S, {
                  targetWidth: c,
                  targetHeight: d,
                  elemWidth: l,
                  elemHeight: h,
                  collisionPosition: a,
                  collisionWidth: C,
                  collisionHeight: T,
                  offset: [i[0] + k[0], i[1] + k[1]],
                  my: t.my,
                  at: t.at,
                  within: y,
                  elem: o,
                });
            }),
            t.using &&
              (r = function (e) {
                var i = u.left - S.left,
                  a = i + c - l,
                  r = u.top - S.top,
                  p = r + d - h,
                  f = {
                    target: {
                      element: b,
                      left: u.left,
                      top: u.top,
                      width: c,
                      height: d,
                    },
                    element: {
                      element: o,
                      left: S.left,
                      top: S.top,
                      width: l,
                      height: h,
                    },
                    horizontal: a < 0 ? "left" : 0 < i ? "right" : "center",
                    vertical: p < 0 ? "top" : 0 < r ? "bottom" : "middle",
                  };
                c < l && n(i + a) < c && (f.horizontal = "center"),
                  d < h && n(r + p) < d && (f.vertical = "middle"),
                  s(n(i), n(a)) > s(n(r), n(p))
                    ? (f.important = "horizontal")
                    : (f.important = "vertical"),
                  t.using.call(this, e, f);
              }),
            o.offset(e.extend(S, { using: r }));
        })
      );
    }),
    (e.ui.position = {
      fit: {
        left: function (e, t) {
          var i = t.within,
            n = i.isWindow ? i.scrollLeft : i.offset.left,
            a = i.width,
            r = e.left - t.collisionPosition.marginLeft,
            o = n - r,
            l = r + t.collisionWidth - a - n;
          t.collisionWidth > a
            ? 0 < o && l <= 0
              ? ((i = e.left + o + t.collisionWidth - a - n), (e.left += o - i))
              : (e.left =
                  !(0 < l && o <= 0) && l < o ? n + a - t.collisionWidth : n)
            : 0 < o
            ? (e.left += o)
            : 0 < l
            ? (e.left -= l)
            : (e.left = s(e.left - r, e.left));
        },
        top: function (e, t) {
          var i = t.within,
            n = i.isWindow ? i.scrollTop : i.offset.top,
            a = t.within.height,
            r = e.top - t.collisionPosition.marginTop,
            o = n - r,
            l = r + t.collisionHeight - a - n;
          t.collisionHeight > a
            ? 0 < o && l <= 0
              ? ((i = e.top + o + t.collisionHeight - a - n), (e.top += o - i))
              : (e.top =
                  !(0 < l && o <= 0) && l < o ? n + a - t.collisionHeight : n)
            : 0 < o
            ? (e.top += o)
            : 0 < l
            ? (e.top -= l)
            : (e.top = s(e.top - r, e.top));
        },
      },
      flip: {
        left: function (e, t) {
          var i = (c = t.within).offset.left + c.scrollLeft,
            s = c.width,
            a = c.isWindow ? c.scrollLeft : c.offset.left,
            r = (h = e.left - t.collisionPosition.marginLeft) - a,
            o = h + t.collisionWidth - s - a,
            l =
              "left" === t.my[0]
                ? -t.elemWidth
                : "right" === t.my[0]
                ? t.elemWidth
                : 0,
            c =
              "left" === t.at[0]
                ? t.targetWidth
                : "right" === t.at[0]
                ? -t.targetWidth
                : 0,
            h = -2 * t.offset[0];
          r < 0
            ? ((i = e.left + l + c + h + t.collisionWidth - s - i) < 0 ||
                i < n(r)) &&
              (e.left += l + c + h)
            : 0 < o &&
              (0 <
                (a = e.left - t.collisionPosition.marginLeft + l + c + h - a) ||
                n(a) < o) &&
              (e.left += l + c + h);
        },
        top: function (e, t) {
          var i = (c = t.within).offset.top + c.scrollTop,
            s = c.height,
            a = c.isWindow ? c.scrollTop : c.offset.top,
            r = (h = e.top - t.collisionPosition.marginTop) - a,
            o = h + t.collisionHeight - s - a,
            l =
              "top" === t.my[1]
                ? -t.elemHeight
                : "bottom" === t.my[1]
                ? t.elemHeight
                : 0,
            c =
              "top" === t.at[1]
                ? t.targetHeight
                : "bottom" === t.at[1]
                ? -t.targetHeight
                : 0,
            h = -2 * t.offset[1];
          r < 0
            ? ((i = e.top + l + c + h + t.collisionHeight - s - i) < 0 ||
                i < n(r)) &&
              (e.top += l + c + h)
            : 0 < o &&
              (0 <
                (a = e.top - t.collisionPosition.marginTop + l + c + h - a) ||
                n(a) < o) &&
              (e.top += l + c + h);
        },
      },
      flipfit: {
        left: function () {
          e.ui.position.flip.left.apply(this, arguments),
            e.ui.position.fit.left.apply(this, arguments);
        },
        top: function () {
          e.ui.position.flip.top.apply(this, arguments),
            e.ui.position.fit.top.apply(this, arguments);
        },
      },
    }),
    e.ui.position,
    e.extend(e.expr.pseudos, {
      data: e.expr.createPseudo
        ? e.expr.createPseudo(function (t) {
            return function (i) {
              return !!e.data(i, t);
            };
          })
        : function (t, i, s) {
            return !!e.data(t, s[3]);
          },
    }),
    e.fn.extend({
      disableSelection:
        ((v =
          "onselectstart" in document.createElement("div")
            ? "selectstart"
            : "mousedown"),
        function () {
          return this.on(v + ".ui-disableSelection", function (e) {
            e.preventDefault();
          });
        }),
      enableSelection: function () {
        return this.off(".ui-disableSelection");
      },
    });
  var v,
    b = e,
    y = {},
    _ = y.toString,
    w = /^([\-+])=\s*(\d+\.?\d*)/,
    x = [
      {
        re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (e) {
          return [e[1], e[2], e[3], e[4]];
        },
      },
      {
        re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (e) {
          return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]];
        },
      },
      {
        re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,
        parse: function (e) {
          return [
            parseInt(e[1], 16),
            parseInt(e[2], 16),
            parseInt(e[3], 16),
            e[4] ? (parseInt(e[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,
        parse: function (e) {
          return [
            parseInt(e[1] + e[1], 16),
            parseInt(e[2] + e[2], 16),
            parseInt(e[3] + e[3], 16),
            e[4] ? (parseInt(e[4] + e[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        space: "hsla",
        parse: function (e) {
          return [e[1], e[2] / 100, e[3] / 100, e[4]];
        },
      },
    ],
    C = (b.Color = function (e, t, i, s) {
      return new b.Color.fn.parse(e, t, i, s);
    }),
    T = {
      rgba: {
        props: {
          red: { idx: 0, type: "byte" },
          green: { idx: 1, type: "byte" },
          blue: { idx: 2, type: "byte" },
        },
      },
      hsla: {
        props: {
          hue: { idx: 0, type: "degrees" },
          saturation: { idx: 1, type: "percent" },
          lightness: { idx: 2, type: "percent" },
        },
      },
    },
    S = {
      byte: { floor: !0, max: 255 },
      percent: { max: 1 },
      degrees: { mod: 360, floor: !0 },
    },
    k = (C.support = {}),
    E = b("<p>")[0],
    M = b.each;
  function D(e) {
    return null == e
      ? e + ""
      : "object" == typeof e
      ? y[_.call(e)] || "object"
      : typeof e;
  }
  function P(e, t, i) {
    var s = S[t.type] || {};
    return null == e
      ? i || !t.def
        ? null
        : t.def
      : ((e = s.floor ? ~~e : parseFloat(e)),
        isNaN(e)
          ? t.def
          : s.mod
          ? (e + s.mod) % s.mod
          : Math.min(s.max, Math.max(0, e)));
  }
  function I(e) {
    var t = C(),
      i = (t._rgba = []);
    return (
      (e = e.toLowerCase()),
      M(x, function (s, n) {
        var a = (a = n.re.exec(e)) && n.parse(a);
        n = n.space || "rgba";
        if (a)
          return (
            (a = t[n](a)),
            (t[T[n].cache] = a[T[n].cache]),
            (i = t._rgba = a._rgba),
            !1
          );
      }),
      i.length
        ? ("0,0,0,0" === i.join() && b.extend(i, V.transparent), t)
        : V[e]
    );
  }
  function A(e, t, i) {
    return 6 * (i = (i + 1) % 1) < 1
      ? e + (t - e) * i * 6
      : 2 * i < 1
      ? t
      : 3 * i < 2
      ? e + (t - e) * (2 / 3 - i) * 6
      : e;
  }
  (E.style.cssText = "background-color:rgba(1,1,1,.5)"),
    (k.rgba = -1 < E.style.backgroundColor.indexOf("rgba")),
    M(T, function (e, t) {
      (t.cache = "_" + e),
        (t.props.alpha = { idx: 3, type: "percent", def: 1 });
    }),
    b.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " "
      ),
      function (e, t) {
        y["[object " + t + "]"] = t.toLowerCase();
      }
    ),
    ((C.fn = b.extend(C.prototype, {
      parse: function (e, t, i, s) {
        if (void 0 === e) return (this._rgba = [null, null, null, null]), this;
        (e.jquery || e.nodeType) && ((e = b(e).css(t)), (t = void 0));
        var n = this,
          a = D(e),
          r = (this._rgba = []);
        return (
          void 0 !== t && ((e = [e, t, i, s]), (a = "array")),
          "string" === a
            ? this.parse(I(e) || V._default)
            : "array" === a
            ? (M(T.rgba.props, function (t, i) {
                r[i.idx] = P(e[i.idx], i);
              }),
              this)
            : "object" === a
            ? (M(
                T,
                e instanceof C
                  ? function (t, i) {
                      e[i.cache] && (n[i.cache] = e[i.cache].slice());
                    }
                  : function (t, i) {
                      var s = i.cache;
                      M(i.props, function (t, a) {
                        if (!n[s] && i.to) {
                          if ("alpha" === t || null == e[t]) return;
                          n[s] = i.to(n._rgba);
                        }
                        n[s][a.idx] = P(e[t], a, !0);
                      }),
                        n[s] &&
                          b.inArray(null, n[s].slice(0, 3)) < 0 &&
                          (null == n[s][3] && (n[s][3] = 1),
                          i.from && (n._rgba = i.from(n[s])));
                    }
              ),
              this)
            : void 0
        );
      },
      is: function (e) {
        var t = C(e),
          i = !0,
          s = this;
        return (
          M(T, function (e, n) {
            var a,
              r = t[n.cache];
            return (
              r &&
                ((a = s[n.cache] || (n.to && n.to(s._rgba)) || []),
                M(n.props, function (e, t) {
                  if (null != r[t.idx]) return (i = r[t.idx] === a[t.idx]);
                })),
              i
            );
          }),
          i
        );
      },
      _space: function () {
        var e = [],
          t = this;
        return (
          M(T, function (i, s) {
            t[s.cache] && e.push(i);
          }),
          e.pop()
        );
      },
      transition: function (e, t) {
        var i = (r = C(e))._space(),
          s = T[i],
          n =
            (e = 0 === this.alpha() ? C("transparent") : this)[s.cache] ||
            s.to(e._rgba),
          a = n.slice(),
          r = r[s.cache];
        return (
          M(s.props, function (e, i) {
            var s = i.idx,
              o = n[s],
              l = r[s],
              c = S[i.type] || {};
            null !== l &&
              (null === o
                ? (a[s] = l)
                : (c.mod &&
                    (l - o > c.mod / 2
                      ? (o += c.mod)
                      : o - l > c.mod / 2 && (o -= c.mod)),
                  (a[s] = P((l - o) * t + o, i))));
          }),
          this[i](a)
        );
      },
      blend: function (e) {
        if (1 === this._rgba[3]) return this;
        var t = this._rgba.slice(),
          i = t.pop(),
          s = C(e)._rgba;
        return C(
          b.map(t, function (e, t) {
            return (1 - i) * s[t] + i * e;
          })
        );
      },
      toRgbaString: function () {
        var e = "rgba(",
          t = b.map(this._rgba, function (e, t) {
            return null != e ? e : 2 < t ? 1 : 0;
          });
        return 1 === t[3] && (t.pop(), (e = "rgb(")), e + t.join() + ")";
      },
      toHslaString: function () {
        var e = "hsla(",
          t = b.map(this.hsla(), function (e, t) {
            return (
              null == e && (e = 2 < t ? 1 : 0),
              t && t < 3 ? Math.round(100 * e) + "%" : e
            );
          });
        return 1 === t[3] && (t.pop(), (e = "hsl(")), e + t.join() + ")";
      },
      toHexString: function (e) {
        var t = this._rgba.slice(),
          i = t.pop();
        return (
          e && t.push(~~(255 * i)),
          "#" +
            b
              .map(t, function (e) {
                return 1 === (e = (e || 0).toString(16)).length ? "0" + e : e;
              })
              .join("")
        );
      },
      toString: function () {
        return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
      },
    })).parse.prototype = C.fn),
    (T.hsla.to = function (e) {
      if (null == e[0] || null == e[1] || null == e[2])
        return [null, null, null, e[3]];
      var t = e[0] / 255,
        i = e[1] / 255,
        s = e[2] / 255,
        n = e[3],
        a = Math.max(t, i, s),
        r = Math.min(t, i, s),
        o = a - r,
        l =
          ((e = 0.5 * (l = a + r)),
          (i =
            r === a
              ? 0
              : t === a
              ? (60 * (i - s)) / o + 360
              : i === a
              ? (60 * (s - t)) / o + 120
              : (60 * (t - i)) / o + 240),
          0 == o ? 0 : e <= 0.5 ? o / l : o / (2 - l));
      return [Math.round(i) % 360, l, e, null == n ? 1 : n];
    }),
    (T.hsla.from = function (e) {
      if (null == e[0] || null == e[1] || null == e[2])
        return [null, null, null, e[3]];
      var t = e[0] / 360,
        i = e[1],
        s = e[2];
      (e = e[3]), (s = 2 * s - (i = s <= 0.5 ? s * (1 + i) : s + i - s * i));
      return [
        Math.round(255 * A(s, i, t + 1 / 3)),
        Math.round(255 * A(s, i, t)),
        Math.round(255 * A(s, i, t - 1 / 3)),
        e,
      ];
    }),
    M(T, function (e, t) {
      var i = t.props,
        s = t.cache,
        n = t.to,
        a = t.from;
      (C.fn[e] = function (e) {
        if ((n && !this[s] && (this[s] = n(this._rgba)), void 0 === e))
          return this[s].slice();
        var t = D(e),
          r = "array" === t || "object" === t ? e : arguments,
          o = this[s].slice();
        return (
          M(i, function (e, i) {
            null == (e = r["object" === t ? e : i.idx]) && (e = o[i.idx]),
              (o[i.idx] = P(e, i));
          }),
          a ? (((e = C(a(o)))[s] = o), e) : C(o)
        );
      }),
        M(i, function (t, i) {
          C.fn[t] ||
            (C.fn[t] = function (s) {
              var n,
                a = D(s),
                r = "alpha" === t ? (this._hsla ? "hsla" : "rgba") : e,
                o = this[r](),
                l = o[i.idx];
              return "undefined" === a
                ? l
                : ("function" === a && (a = D((s = s.call(this, l)))),
                  null == s && i.empty
                    ? this
                    : ("string" === a &&
                        (n = w.exec(s)) &&
                        (s = l + parseFloat(n[2]) * ("+" === n[1] ? 1 : -1)),
                      (o[i.idx] = s),
                      this[r](o)));
            });
        });
    }),
    (C.hook = function (e) {
      (e = e.split(" ")),
        M(e, function (e, t) {
          (b.cssHooks[t] = {
            set: function (e, i) {
              var s,
                n,
                a = "";
              if ("transparent" !== i && ("string" !== D(i) || (s = I(i)))) {
                if (((i = C(s || i)), !k.rgba && 1 !== i._rgba[3])) {
                  for (
                    n = "backgroundColor" === t ? e.parentNode : e;
                    ("" === a || "transparent" === a) && n && n.style;

                  )
                    try {
                      (a = b.css(n, "backgroundColor")), (n = n.parentNode);
                    } catch (e) {}
                  i = i.blend(a && "transparent" !== a ? a : "_default");
                }
                i = i.toRgbaString();
              }
              try {
                e.style[t] = i;
              } catch (e) {}
            },
          }),
            (b.fx.step[t] = function (e) {
              e.colorInit ||
                ((e.start = C(e.elem, t)),
                (e.end = C(e.end)),
                (e.colorInit = !0)),
                b.cssHooks[t].set(e.elem, e.start.transition(e.end, e.pos));
            });
        });
    })(
      "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"
    ),
    (b.cssHooks.borderColor = {
      expand: function (e) {
        var t = {};
        return (
          M(["Top", "Right", "Bottom", "Left"], function (i, s) {
            t["border" + s + "Color"] = e;
          }),
          t
        );
      },
    });
  var L,
    O,
    z,
    H,
    N,
    $,
    W,
    R,
    F,
    q,
    j,
    B,
    Y,
    V = (b.Color.names = {
      aqua: "#00ffff",
      black: "#000000",
      blue: "#0000ff",
      fuchsia: "#ff00ff",
      gray: "#808080",
      green: "#008000",
      lime: "#00ff00",
      maroon: "#800000",
      navy: "#000080",
      olive: "#808000",
      purple: "#800080",
      red: "#ff0000",
      silver: "#c0c0c0",
      teal: "#008080",
      white: "#ffffff",
      yellow: "#ffff00",
      transparent: [null, null, null, 0],
      _default: "#ffffff",
    }),
    X = "ui-effects-",
    G = "ui-effects-style",
    U = "ui-effects-animated";
  function K(e) {
    var t,
      i,
      s = e.ownerDocument.defaultView
        ? e.ownerDocument.defaultView.getComputedStyle(e, null)
        : e.currentStyle,
      n = {};
    if (s && s.length && s[0] && s[s[0]])
      for (i = s.length; i--; )
        "string" == typeof s[(t = s[i])] &&
          (n[
            t.replace(/-([\da-z])/gi, function (e, t) {
              return t.toUpperCase();
            })
          ] = s[t]);
    else for (t in s) "string" == typeof s[t] && (n[t] = s[t]);
    return n;
  }
  function Q(t, i, s, n) {
    return (
      (t = { effect: (t = e.isPlainObject(t) ? (i = t).effect : t) }),
      "function" == typeof (i = null == i ? {} : i) &&
        ((n = i), (s = null), (i = {})),
      ("number" != typeof i && !e.fx.speeds[i]) || ((n = s), (s = i), (i = {})),
      "function" == typeof s && ((n = s), (s = null)),
      i && e.extend(t, i),
      (s = s || i.duration),
      (t.duration = e.fx.off
        ? 0
        : "number" == typeof s
        ? s
        : s in e.fx.speeds
        ? e.fx.speeds[s]
        : e.fx.speeds._default),
      (t.complete = n || i.complete),
      t
    );
  }
  function J(t) {
    return (
      !t ||
      "number" == typeof t ||
      e.fx.speeds[t] ||
      ("string" == typeof t && !e.effects.effect[t]) ||
      "function" == typeof t ||
      ("object" == typeof t && !t.effect)
    );
  }
  function Z(e, t) {
    var i = t.outerWidth();
    (t = t.outerHeight()),
      (e =
        /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(
          e
        ) || ["", 0, i, t, 0]);
    return {
      top: parseFloat(e[1]) || 0,
      right: "auto" === e[2] ? i : parseFloat(e[2]),
      bottom: "auto" === e[3] ? t : parseFloat(e[3]),
      left: parseFloat(e[4]) || 0,
    };
  }
  (e.effects = { effect: {} }),
    (H = ["add", "remove", "toggle"]),
    (N = {
      border: 1,
      borderBottom: 1,
      borderColor: 1,
      borderLeft: 1,
      borderRight: 1,
      borderTop: 1,
      borderWidth: 1,
      margin: 1,
      padding: 1,
    }),
    e.each(
      [
        "borderLeftStyle",
        "borderRightStyle",
        "borderBottomStyle",
        "borderTopStyle",
      ],
      function (t, i) {
        e.fx.step[i] = function (e) {
          (("none" !== e.end && !e.setAttr) || (1 === e.pos && !e.setAttr)) &&
            (b.style(e.elem, i, e.end), (e.setAttr = !0));
        };
      }
    ),
    e.fn.addBack ||
      (e.fn.addBack = function (e) {
        return this.add(
          null == e ? this.prevObject : this.prevObject.filter(e)
        );
      }),
    (e.effects.animateClass = function (t, i, s, n) {
      var a = e.speed(i, s, n);
      return this.queue(function () {
        var i = e(this),
          s = i.attr("class") || "",
          n = (n = a.children ? i.find("*").addBack() : i).map(function () {
            return { el: e(this), start: K(this) };
          }),
          r = function () {
            e.each(H, function (e, s) {
              t[s] && i[s + "Class"](t[s]);
            });
          };
        r(),
          (n = n.map(function () {
            return (
              (this.end = K(this.el[0])),
              (this.diff = (function (t, i) {
                var s,
                  n,
                  a = {};
                for (s in i)
                  (n = i[s]),
                    t[s] !== n &&
                      (N[s] ||
                        (!e.fx.step[s] && isNaN(parseFloat(n))) ||
                        (a[s] = n));
                return a;
              })(this.start, this.end)),
              this
            );
          })),
          i.attr("class", s),
          (n = n.map(function () {
            var t = this,
              i = e.Deferred(),
              s = e.extend({}, a, {
                queue: !1,
                complete: function () {
                  i.resolve(t);
                },
              });
            return this.el.animate(this.diff, s), i.promise();
          })),
          e.when.apply(e, n.get()).done(function () {
            r(),
              e.each(arguments, function () {
                var t = this.el;
                e.each(this.diff, function (e) {
                  t.css(e, "");
                });
              }),
              a.complete.call(i[0]);
          });
      });
    }),
    e.fn.extend({
      addClass:
        ((z = e.fn.addClass),
        function (t, i, s, n) {
          return i
            ? e.effects.animateClass.call(this, { add: t }, i, s, n)
            : z.apply(this, arguments);
        }),
      removeClass:
        ((O = e.fn.removeClass),
        function (t, i, s, n) {
          return 1 < arguments.length
            ? e.effects.animateClass.call(this, { remove: t }, i, s, n)
            : O.apply(this, arguments);
        }),
      toggleClass:
        ((L = e.fn.toggleClass),
        function (t, i, s, n, a) {
          return "boolean" == typeof i || void 0 === i
            ? s
              ? e.effects.animateClass.call(
                  this,
                  i ? { add: t } : { remove: t },
                  s,
                  n,
                  a
                )
              : L.apply(this, arguments)
            : e.effects.animateClass.call(this, { toggle: t }, i, s, n);
        }),
      switchClass: function (t, i, s, n, a) {
        return e.effects.animateClass.call(
          this,
          { add: i, remove: t },
          s,
          n,
          a
        );
      },
    }),
    e.expr &&
      e.expr.pseudos &&
      e.expr.pseudos.animated &&
      (e.expr.pseudos.animated =
        (($ = e.expr.pseudos.animated),
        function (t) {
          return !!e(t).data(U) || $(t);
        })),
    !1 !== e.uiBackCompat &&
      e.extend(e.effects, {
        save: function (e, t) {
          for (var i = 0, s = t.length; i < s; i++)
            null !== t[i] && e.data(X + t[i], e[0].style[t[i]]);
        },
        restore: function (e, t) {
          for (var i, s = 0, n = t.length; s < n; s++)
            null !== t[s] && ((i = e.data(X + t[s])), e.css(t[s], i));
        },
        setMode: function (e, t) {
          return "toggle" === t ? (e.is(":hidden") ? "show" : "hide") : t;
        },
        createWrapper: function (t) {
          if (t.parent().is(".ui-effects-wrapper")) return t.parent();
          var i = {
              width: t.outerWidth(!0),
              height: t.outerHeight(!0),
              float: t.css("float"),
            },
            s = e("<div></div>").addClass("ui-effects-wrapper").css({
              fontSize: "100%",
              background: "transparent",
              border: "none",
              margin: 0,
              padding: 0,
            }),
            n = { width: t.width(), height: t.height() },
            a = document.activeElement;
          try {
            a.id;
          } catch (s) {
            a = document.body;
          }
          return (
            t.wrap(s),
            (t[0] !== a && !e.contains(t[0], a)) || e(a).trigger("focus"),
            (s = t.parent()),
            "static" === t.css("position")
              ? (s.css({ position: "relative" }),
                t.css({ position: "relative" }))
              : (e.extend(i, {
                  position: t.css("position"),
                  zIndex: t.css("z-index"),
                }),
                e.each(["top", "left", "bottom", "right"], function (e, s) {
                  (i[s] = t.css(s)),
                    isNaN(parseInt(i[s], 10)) && (i[s] = "auto");
                }),
                t.css({
                  position: "relative",
                  top: 0,
                  left: 0,
                  right: "auto",
                  bottom: "auto",
                })),
            t.css(n),
            s.css(i).show()
          );
        },
        removeWrapper: function (t) {
          var i = document.activeElement;
          return (
            t.parent().is(".ui-effects-wrapper") &&
              (t.parent().replaceWith(t),
              (t[0] !== i && !e.contains(t[0], i)) || e(i).trigger("focus")),
            t
          );
        },
      }),
    e.extend(e.effects, {
      version: "1.13.2",
      define: function (t, i, s) {
        return (
          s || ((s = i), (i = "effect")),
          (e.effects.effect[t] = s),
          (e.effects.effect[t].mode = i),
          s
        );
      },
      scaledDimensions: function (e, t, i) {
        if (0 === t)
          return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
        var s = "horizontal" !== i ? (t || 100) / 100 : 1;
        t = "vertical" !== i ? (t || 100) / 100 : 1;
        return {
          height: e.height() * t,
          width: e.width() * s,
          outerHeight: e.outerHeight() * t,
          outerWidth: e.outerWidth() * s,
        };
      },
      clipToBox: function (e) {
        return {
          width: e.clip.right - e.clip.left,
          height: e.clip.bottom - e.clip.top,
          left: e.clip.left,
          top: e.clip.top,
        };
      },
      unshift: function (e, t, i) {
        var s = e.queue();
        1 < t && s.splice.apply(s, [1, 0].concat(s.splice(t, i))), e.dequeue();
      },
      saveStyle: function (e) {
        e.data(G, e[0].style.cssText);
      },
      restoreStyle: function (e) {
        (e[0].style.cssText = e.data(G) || ""), e.removeData(G);
      },
      mode: function (e, t) {
        return (
          (e = e.is(":hidden")),
          "toggle" === t && (t = e ? "show" : "hide"),
          (e ? "hide" === t : "show" === t) ? "none" : t
        );
      },
      getBaseline: function (e, t) {
        var i, s;
        switch (e[0]) {
          case "top":
            i = 0;
            break;
          case "middle":
            i = 0.5;
            break;
          case "bottom":
            i = 1;
            break;
          default:
            i = e[0] / t.height;
        }
        switch (e[1]) {
          case "left":
            s = 0;
            break;
          case "center":
            s = 0.5;
            break;
          case "right":
            s = 1;
            break;
          default:
            s = e[1] / t.width;
        }
        return { x: s, y: i };
      },
      createPlaceholder: function (t) {
        var i,
          s = t.css("position"),
          n = t.position();
        return (
          t
            .css({
              marginTop: t.css("marginTop"),
              marginBottom: t.css("marginBottom"),
              marginLeft: t.css("marginLeft"),
              marginRight: t.css("marginRight"),
            })
            .outerWidth(t.outerWidth())
            .outerHeight(t.outerHeight()),
          /^(static|relative)/.test(s) &&
            ((s = "absolute"),
            (i = e("<" + t[0].nodeName + ">")
              .insertAfter(t)
              .css({
                display: /^(inline|ruby)/.test(t.css("display"))
                  ? "inline-block"
                  : "block",
                visibility: "hidden",
                marginTop: t.css("marginTop"),
                marginBottom: t.css("marginBottom"),
                marginLeft: t.css("marginLeft"),
                marginRight: t.css("marginRight"),
                float: t.css("float"),
              })
              .outerWidth(t.outerWidth())
              .outerHeight(t.outerHeight())
              .addClass("ui-effects-placeholder")),
            t.data(X + "placeholder", i)),
          t.css({ position: s, left: n.left, top: n.top }),
          i
        );
      },
      removePlaceholder: function (e) {
        var t = X + "placeholder",
          i = e.data(t);
        i && (i.remove(), e.removeData(t));
      },
      cleanUp: function (t) {
        e.effects.restoreStyle(t), e.effects.removePlaceholder(t);
      },
      setTransition: function (t, i, s, n) {
        return (
          (n = n || {}),
          e.each(i, function (e, i) {
            var a = t.cssUnit(i);
            0 < a[0] && (n[i] = a[0] * s + a[1]);
          }),
          n
        );
      },
    }),
    e.fn.extend({
      effect: function () {
        function t(t) {
          var i = e(this),
            s = e.effects.mode(i, l) || n;
          i.data(U, !0),
            c.push(s),
            n && ("show" === s || (s === n && "hide" === s)) && i.show(),
            (n && "none" === s) || e.effects.saveStyle(i),
            "function" == typeof t && t();
        }
        var i = Q.apply(this, arguments),
          s = e.effects.effect[i.effect],
          n = s.mode,
          a = i.queue,
          r = a || "fx",
          o = i.complete,
          l = i.mode,
          c = [];
        return e.fx.off || !s
          ? l
            ? this[l](i.duration, o)
            : this.each(function () {
                o && o.call(this);
              })
          : !1 === a
          ? this.each(t).each(h)
          : this.queue(r, t).queue(r, h);
        function h(t) {
          var a = e(this);
          function r() {
            "function" == typeof o && o.call(a[0]),
              "function" == typeof t && t();
          }
          (i.mode = c.shift()),
            !1 === e.uiBackCompat || n
              ? "none" === i.mode
                ? (a[l](), r())
                : s.call(a[0], i, function () {
                    a.removeData(U),
                      e.effects.cleanUp(a),
                      "hide" === i.mode && a.hide(),
                      r();
                  })
              : (a.is(":hidden") ? "hide" === l : "show" === l)
              ? (a[l](), r())
              : s.call(a[0], i, r);
        }
      },
      show:
        ((F = e.fn.show),
        function (e) {
          return J(e)
            ? F.apply(this, arguments)
            : (((e = Q.apply(this, arguments)).mode = "show"),
              this.effect.call(this, e));
        }),
      hide:
        ((R = e.fn.hide),
        function (e) {
          return J(e)
            ? R.apply(this, arguments)
            : (((e = Q.apply(this, arguments)).mode = "hide"),
              this.effect.call(this, e));
        }),
      toggle:
        ((W = e.fn.toggle),
        function (e) {
          return J(e) || "boolean" == typeof e
            ? W.apply(this, arguments)
            : (((e = Q.apply(this, arguments)).mode = "toggle"),
              this.effect.call(this, e));
        }),
      cssUnit: function (t) {
        var i = this.css(t),
          s = [];
        return (
          e.each(["em", "px", "%", "pt"], function (e, t) {
            0 < i.indexOf(t) && (s = [parseFloat(i), t]);
          }),
          s
        );
      },
      cssClip: function (e) {
        return e
          ? this.css(
              "clip",
              "rect(" +
                e.top +
                "px " +
                e.right +
                "px " +
                e.bottom +
                "px " +
                e.left +
                "px)"
            )
          : Z(this.css("clip"), this);
      },
      transfer: function (t, i) {
        var s = e(this),
          n = "fixed" === (l = e(t.to)).css("position"),
          a = e("body"),
          r = n ? a.scrollTop() : 0,
          o = n ? a.scrollLeft() : 0,
          l =
            ((a = {
              top: (a = l.offset()).top - r,
              left: a.left - o,
              height: l.innerHeight(),
              width: l.innerWidth(),
            }),
            s.offset()),
          c = e("<div class='ui-effects-transfer'></div>");
        c.appendTo("body")
          .addClass(t.className)
          .css({
            top: l.top - r,
            left: l.left - o,
            height: s.innerHeight(),
            width: s.innerWidth(),
            position: n ? "fixed" : "absolute",
          })
          .animate(a, t.duration, t.easing, function () {
            c.remove(), "function" == typeof i && i();
          });
      },
    }),
    (e.fx.step.clip = function (t) {
      t.clipInit ||
        ((t.start = e(t.elem).cssClip()),
        "string" == typeof t.end && (t.end = Z(t.end, t.elem)),
        (t.clipInit = !0)),
        e(t.elem).cssClip({
          top: t.pos * (t.end.top - t.start.top) + t.start.top,
          right: t.pos * (t.end.right - t.start.right) + t.start.right,
          bottom: t.pos * (t.end.bottom - t.start.bottom) + t.start.bottom,
          left: t.pos * (t.end.left - t.start.left) + t.start.left,
        });
    }),
    (q = {}),
    e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, t) {
      q[t] = function (t) {
        return Math.pow(t, e + 2);
      };
    }),
    e.extend(q, {
      Sine: function (e) {
        return 1 - Math.cos((e * Math.PI) / 2);
      },
      Circ: function (e) {
        return 1 - Math.sqrt(1 - e * e);
      },
      Elastic: function (e) {
        return 0 === e || 1 === e
          ? e
          : -Math.pow(2, 8 * (e - 1)) *
              Math.sin(((80 * (e - 1) - 7.5) * Math.PI) / 15);
      },
      Back: function (e) {
        return e * e * (3 * e - 2);
      },
      Bounce: function (e) {
        for (var t, i = 4; e < ((t = Math.pow(2, --i)) - 1) / 11; );
        return (
          1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
        );
      },
    }),
    e.each(q, function (t, i) {
      (e.easing["easeIn" + t] = i),
        (e.easing["easeOut" + t] = function (e) {
          return 1 - i(1 - e);
        }),
        (e.easing["easeInOut" + t] = function (e) {
          return e < 0.5 ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2;
        });
    }),
    (E = e.effects),
    e.effects.define("blind", "hide", function (t, i) {
      var s = {
          up: ["bottom", "top"],
          vertical: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          horizontal: ["right", "left"],
          right: ["left", "right"],
        },
        n = e(this),
        a = t.direction || "up",
        r = n.cssClip(),
        o = { clip: e.extend({}, r) },
        l = e.effects.createPlaceholder(n);
      (o.clip[s[a][0]] = o.clip[s[a][1]]),
        "show" === t.mode &&
          (n.cssClip(o.clip), l && l.css(e.effects.clipToBox(o)), (o.clip = r)),
        l && l.animate(e.effects.clipToBox(o), t.duration, t.easing),
        n.animate(o, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    e.effects.define("bounce", function (t, i) {
      var s,
        n,
        a = e(this),
        r = "hide" === (d = t.mode),
        o = "show" === d,
        l = t.direction || "up",
        c = t.distance,
        h = t.times || 5,
        d = 2 * h + (o || r ? 1 : 0),
        u = t.duration / d,
        p = t.easing,
        f = "up" === l || "down" === l ? "top" : "left",
        m = "up" === l || "left" === l,
        g = 0;
      t = a.queue().length;
      for (
        e.effects.createPlaceholder(a),
          l = a.css(f),
          c = c || a["top" == f ? "outerHeight" : "outerWidth"]() / 3,
          o &&
            (((n = { opacity: 1 })[f] = l),
            a
              .css("opacity", 0)
              .css(f, m ? 2 * -c : 2 * c)
              .animate(n, u, p)),
          r && (c /= Math.pow(2, h - 1)),
          (n = {})[f] = l;
        g < h;
        g++
      )
        ((s = {})[f] = (m ? "-=" : "+=") + c),
          a.animate(s, u, p).animate(n, u, p),
          (c = r ? 2 * c : c / 2);
      r &&
        (((s = { opacity: 0 })[f] = (m ? "-=" : "+=") + c), a.animate(s, u, p)),
        a.queue(i),
        e.effects.unshift(a, t, 1 + d);
    }),
    e.effects.define("clip", "hide", function (t, i) {
      var s = {},
        n = e(this),
        a =
          (r = "both" === (o = t.direction || "vertical")) ||
          "horizontal" === o,
        r = r || "vertical" === o,
        o = n.cssClip();
      (s.clip = {
        top: r ? (o.bottom - o.top) / 2 : o.top,
        right: a ? (o.right - o.left) / 2 : o.right,
        bottom: r ? (o.bottom - o.top) / 2 : o.bottom,
        left: a ? (o.right - o.left) / 2 : o.left,
      }),
        e.effects.createPlaceholder(n),
        "show" === t.mode && (n.cssClip(s.clip), (s.clip = o)),
        n.animate(s, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    e.effects.define("drop", "hide", function (t, i) {
      var s = e(this),
        n = "show" === t.mode,
        a = t.direction || "left",
        r = "up" === a || "down" === a ? "top" : "left",
        o = "up" === a || "left" === a ? "-=" : "+=",
        l = "+=" == o ? "-=" : "+=",
        c = { opacity: 0 };
      e.effects.createPlaceholder(s),
        (a =
          t.distance || s["top" == r ? "outerHeight" : "outerWidth"](!0) / 2),
        (c[r] = o + a),
        n && (s.css(c), (c[r] = l + a), (c.opacity = 1)),
        s.animate(c, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    e.effects.define("explode", "hide", function (t, i) {
      var s,
        n,
        a,
        r,
        o,
        l,
        c = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
        h = c,
        d = e(this),
        u = "show" === t.mode,
        p = d.show().css("visibility", "hidden").offset(),
        f = Math.ceil(d.outerWidth() / h),
        m = Math.ceil(d.outerHeight() / c),
        g = [];
      function v() {
        g.push(this),
          g.length === c * h &&
            (d.css({ visibility: "visible" }), e(g).remove(), i());
      }
      for (s = 0; s < c; s++)
        for (r = p.top + s * m, l = s - (c - 1) / 2, n = 0; n < h; n++)
          (a = p.left + n * f),
            (o = n - (h - 1) / 2),
            d
              .clone()
              .appendTo("body")
              .wrap("<div></div>")
              .css({
                position: "absolute",
                visibility: "visible",
                left: -n * f,
                top: -s * m,
              })
              .parent()
              .addClass("ui-effects-explode")
              .css({
                position: "absolute",
                overflow: "hidden",
                width: f,
                height: m,
                left: a + (u ? o * f : 0),
                top: r + (u ? l * m : 0),
                opacity: u ? 0 : 1,
              })
              .animate(
                {
                  left: a + (u ? 0 : o * f),
                  top: r + (u ? 0 : l * m),
                  opacity: u ? 1 : 0,
                },
                t.duration || 500,
                t.easing,
                v
              );
    }),
    e.effects.define("fade", "toggle", function (t, i) {
      var s = "show" === t.mode;
      e(this)
        .css("opacity", s ? 0 : 1)
        .animate(
          { opacity: s ? 1 : 0 },
          { queue: !1, duration: t.duration, easing: t.easing, complete: i }
        );
    }),
    e.effects.define("fold", "hide", function (t, i) {
      var s = e(this),
        n = "show" === (m = t.mode),
        a = "hide" === m,
        r = t.size || 15,
        o = /([0-9]+)%/.exec(r),
        l = t.horizFirst ? ["right", "bottom"] : ["bottom", "right"],
        c = t.duration / 2,
        h = e.effects.createPlaceholder(s),
        d = s.cssClip(),
        u = { clip: e.extend({}, d) },
        p = { clip: e.extend({}, d) },
        f = [d[l[0]], d[l[1]]],
        m = s.queue().length;
      o && (r = (parseInt(o[1], 10) / 100) * f[a ? 0 : 1]),
        (u.clip[l[0]] = r),
        (p.clip[l[0]] = r),
        (p.clip[l[1]] = 0),
        n &&
          (s.cssClip(p.clip), h && h.css(e.effects.clipToBox(p)), (p.clip = d)),
        s
          .queue(function (i) {
            h &&
              h
                .animate(e.effects.clipToBox(u), c, t.easing)
                .animate(e.effects.clipToBox(p), c, t.easing),
              i();
          })
          .animate(u, c, t.easing)
          .animate(p, c, t.easing)
          .queue(i),
        e.effects.unshift(s, m, 4);
    }),
    e.effects.define("highlight", "show", function (t, i) {
      var s = e(this),
        n = { backgroundColor: s.css("backgroundColor") };
      "hide" === t.mode && (n.opacity = 0),
        e.effects.saveStyle(s),
        s
          .css({
            backgroundImage: "none",
            backgroundColor: t.color || "#ffff99",
          })
          .animate(n, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: i,
          });
    }),
    e.effects.define("size", function (t, i) {
      var s,
        n = e(this),
        a = ["fontSize"],
        r = [
          "borderTopWidth",
          "borderBottomWidth",
          "paddingTop",
          "paddingBottom",
        ],
        o = [
          "borderLeftWidth",
          "borderRightWidth",
          "paddingLeft",
          "paddingRight",
        ],
        l = t.mode,
        c = "effect" !== l,
        h = t.scale || "both",
        d = t.origin || ["middle", "center"],
        u = n.css("position"),
        p = n.position(),
        f = e.effects.scaledDimensions(n),
        m = t.from || f,
        g = t.to || e.effects.scaledDimensions(n, 0);
      e.effects.createPlaceholder(n),
        "show" === l && ((l = m), (m = g), (g = l)),
        (s = {
          from: { y: m.height / f.height, x: m.width / f.width },
          to: { y: g.height / f.height, x: g.width / f.width },
        }),
        ("box" !== h && "both" !== h) ||
          (s.from.y !== s.to.y &&
            ((m = e.effects.setTransition(n, r, s.from.y, m)),
            (g = e.effects.setTransition(n, r, s.to.y, g))),
          s.from.x !== s.to.x &&
            ((m = e.effects.setTransition(n, o, s.from.x, m)),
            (g = e.effects.setTransition(n, o, s.to.x, g)))),
        ("content" !== h && "both" !== h) ||
          (s.from.y !== s.to.y &&
            ((m = e.effects.setTransition(n, a, s.from.y, m)),
            (g = e.effects.setTransition(n, a, s.to.y, g)))),
        d &&
          ((d = e.effects.getBaseline(d, f)),
          (m.top = (f.outerHeight - m.outerHeight) * d.y + p.top),
          (m.left = (f.outerWidth - m.outerWidth) * d.x + p.left),
          (g.top = (f.outerHeight - g.outerHeight) * d.y + p.top),
          (g.left = (f.outerWidth - g.outerWidth) * d.x + p.left)),
        delete m.outerHeight,
        delete m.outerWidth,
        n.css(m),
        ("content" !== h && "both" !== h) ||
          ((r = r.concat(["marginTop", "marginBottom"]).concat(a)),
          (o = o.concat(["marginLeft", "marginRight"])),
          n.find("*[width]").each(function () {
            var i = e(this),
              n = {
                height: (a = e.effects.scaledDimensions(i)).height * s.from.y,
                width: a.width * s.from.x,
                outerHeight: a.outerHeight * s.from.y,
                outerWidth: a.outerWidth * s.from.x,
              },
              a = {
                height: a.height * s.to.y,
                width: a.width * s.to.x,
                outerHeight: a.height * s.to.y,
                outerWidth: a.width * s.to.x,
              };
            s.from.y !== s.to.y &&
              ((n = e.effects.setTransition(i, r, s.from.y, n)),
              (a = e.effects.setTransition(i, r, s.to.y, a))),
              s.from.x !== s.to.x &&
                ((n = e.effects.setTransition(i, o, s.from.x, n)),
                (a = e.effects.setTransition(i, o, s.to.x, a))),
              c && e.effects.saveStyle(i),
              i.css(n),
              i.animate(a, t.duration, t.easing, function () {
                c && e.effects.restoreStyle(i);
              });
          })),
        n.animate(g, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: function () {
            var t = n.offset();
            0 === g.opacity && n.css("opacity", m.opacity),
              c ||
                (n.css("position", "static" === u ? "relative" : u).offset(t),
                e.effects.saveStyle(n)),
              i();
          },
        });
    }),
    e.effects.define("scale", function (t, i) {
      var s = e(this),
        n = t.mode;
      (n =
        parseInt(t.percent, 10) ||
        (0 === parseInt(t.percent, 10) || "effect" !== n ? 0 : 100)),
        (n = e.extend(
          !0,
          {
            from: e.effects.scaledDimensions(s),
            to: e.effects.scaledDimensions(s, n, t.direction || "both"),
            origin: t.origin || ["middle", "center"],
          },
          t
        ));
      t.fade && ((n.from.opacity = 1), (n.to.opacity = 0)),
        e.effects.effect.size.call(this, n, i);
    }),
    e.effects.define("puff", "hide", function (t, i) {
      (t = e.extend(!0, {}, t, {
        fade: !0,
        percent: parseInt(t.percent, 10) || 150,
      })),
        e.effects.effect.scale.call(this, t, i);
    }),
    e.effects.define("pulsate", "show", function (t, i) {
      var s = e(this),
        n = "show" === (c = t.mode),
        a = 2 * (t.times || 5) + (n || "hide" === c ? 1 : 0),
        r = t.duration / a,
        o = 0,
        l = 1,
        c = s.queue().length;
      for (
        (!n && s.is(":visible")) || (s.css("opacity", 0).show(), (o = 1));
        l < a;
        l++
      )
        s.animate({ opacity: o }, r, t.easing), (o = 1 - o);
      s.animate({ opacity: o }, r, t.easing),
        s.queue(i),
        e.effects.unshift(s, c, 1 + a);
    }),
    e.effects.define("shake", function (t, i) {
      var s = 1,
        n = e(this),
        a = t.direction || "left",
        r = t.distance || 20,
        o = t.times || 3,
        l = 2 * o + 1,
        c = Math.round(t.duration / l),
        h = "up" === a || "down" === a ? "top" : "left",
        d = "up" === a || "left" === a,
        u = {},
        p = {},
        f = {};
      a = n.queue().length;
      for (
        e.effects.createPlaceholder(n),
          u[h] = (d ? "-=" : "+=") + r,
          p[h] = (d ? "+=" : "-=") + 2 * r,
          f[h] = (d ? "-=" : "+=") + 2 * r,
          n.animate(u, c, t.easing);
        s < o;
        s++
      )
        n.animate(p, c, t.easing).animate(f, c, t.easing);
      n
        .animate(p, c, t.easing)
        .animate(u, c / 2, t.easing)
        .queue(i),
        e.effects.unshift(n, a, 1 + l);
    }),
    e.effects.define("slide", "show", function (t, i) {
      var s,
        n,
        a = e(this),
        r = {
          up: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          right: ["left", "right"],
        },
        o = t.mode,
        l = t.direction || "left",
        c = "up" === l || "down" === l ? "top" : "left",
        h = "up" === l || "left" === l,
        d = t.distance || a["top" == c ? "outerHeight" : "outerWidth"](!0),
        u = {};
      e.effects.createPlaceholder(a),
        (s = a.cssClip()),
        (n = a.position()[c]),
        (u[c] = (h ? -1 : 1) * d + n),
        (u.clip = a.cssClip()),
        (u.clip[r[l][1]] = u.clip[r[l][0]]),
        "show" === o &&
          (a.cssClip(u.clip), a.css(c, u[c]), (u.clip = s), (u[c] = n)),
        a.animate(u, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    (E =
      !1 !== e.uiBackCompat
        ? e.effects.define("transfer", function (t, i) {
            e(this).transfer(t, i);
          })
        : E),
    (e.ui.focusable = function (t, i) {
      var s,
        n,
        a,
        r,
        o = t.nodeName.toLowerCase();
      return "area" === o
        ? ((n = (s = t.parentNode).name),
          !(!t.href || !n || "map" !== s.nodeName.toLowerCase()) &&
            0 < (n = e("img[usemap='#" + n + "']")).length &&
            n.is(":visible"))
        : (/^(input|select|textarea|button|object)$/.test(o)
            ? (a = !t.disabled) &&
              (r = e(t).closest("fieldset")[0]) &&
              (a = !r.disabled)
            : (a = ("a" === o && t.href) || i),
          a &&
            e(t).is(":visible") &&
            (function (e) {
              for (var t = e.css("visibility"); "inherit" === t; )
                t = (e = e.parent()).css("visibility");
              return "visible" === t;
            })(e(t)));
    }),
    e.extend(e.expr.pseudos, {
      focusable: function (t) {
        return e.ui.focusable(t, null != e.attr(t, "tabindex"));
      },
    }),
    e.ui.focusable,
    (e.fn._form = function () {
      return "string" == typeof this[0].form
        ? this.closest("form")
        : e(this[0].form);
    }),
    (e.ui.formResetMixin = {
      _formResetHandler: function () {
        var t = e(this);
        setTimeout(function () {
          var i = t.data("ui-form-reset-instances");
          e.each(i, function () {
            this.refresh();
          });
        });
      },
      _bindFormResetHandler: function () {
        var e;
        (this.form = this.element._form()),
          this.form.length &&
            ((e = this.form.data("ui-form-reset-instances") || []).length ||
              this.form.on("reset.ui-form-reset", this._formResetHandler),
            e.push(this),
            this.form.data("ui-form-reset-instances", e));
      },
      _unbindFormResetHandler: function () {
        var t;
        this.form.length &&
          ((t = this.form.data("ui-form-reset-instances")).splice(
            e.inArray(this, t),
            1
          ),
          t.length
            ? this.form.data("ui-form-reset-instances", t)
            : this.form
                .removeData("ui-form-reset-instances")
                .off("reset.ui-form-reset"));
      },
    }),
    e.expr.pseudos || (e.expr.pseudos = e.expr[":"]),
    e.uniqueSort || (e.uniqueSort = e.unique),
    e.escapeSelector ||
      ((j = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g),
      (B = function (e, t) {
        return t
          ? "\0" === e
            ? "�"
            : e.slice(0, -1) +
              "\\" +
              e.charCodeAt(e.length - 1).toString(16) +
              " "
          : "\\" + e;
      }),
      (e.escapeSelector = function (e) {
        return (e + "").replace(j, B);
      })),
    (e.fn.even && e.fn.odd) ||
      e.fn.extend({
        even: function () {
          return this.filter(function (e) {
            return e % 2 == 0;
          });
        },
        odd: function () {
          return this.filter(function (e) {
            return e % 2 == 1;
          });
        },
      }),
    (e.ui.keyCode = {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38,
    }),
    (e.fn.labels = function () {
      var t, i, s;
      return this.length
        ? this[0].labels && this[0].labels.length
          ? this.pushStack(this[0].labels)
          : ((i = this.eq(0).parents("label")),
            (t = this.attr("id")) &&
              ((s = (s = this.eq(0).parents().last()).add(
                (s.length ? s : this).siblings()
              )),
              (t = "label[for='" + e.escapeSelector(t) + "']"),
              (i = i.add(s.find(t).addBack(t)))),
            this.pushStack(i))
        : this.pushStack([]);
    }),
    (e.fn.scrollParent = function (t) {
      var i = this.css("position"),
        s = "absolute" === i,
        n = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/;
      t = this.parents()
        .filter(function () {
          var t = e(this);
          return (
            (!s || "static" !== t.css("position")) &&
            n.test(
              t.css("overflow") + t.css("overflow-y") + t.css("overflow-x")
            )
          );
        })
        .eq(0);
      return "fixed" !== i && t.length
        ? t
        : e(this[0].ownerDocument || document);
    }),
    e.extend(e.expr.pseudos, {
      tabbable: function (t) {
        var i = e.attr(t, "tabindex"),
          s = null != i;
        return (!s || 0 <= i) && e.ui.focusable(t, s);
      },
    }),
    e.fn.extend({
      uniqueId:
        ((Y = 0),
        function () {
          return this.each(function () {
            this.id || (this.id = "ui-id-" + ++Y);
          });
        }),
      removeUniqueId: function () {
        return this.each(function () {
          /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id");
        });
      },
    }),
    e.widget("ui.accordion", {
      version: "1.13.2",
      options: {
        active: 0,
        animate: {},
        classes: {
          "ui-accordion-header": "ui-corner-top",
          "ui-accordion-header-collapsed": "ui-corner-all",
          "ui-accordion-content": "ui-corner-bottom",
        },
        collapsible: !1,
        event: "click",
        header: function (e) {
          return e.find("> li > :first-child").add(e.find("> :not(li)").even());
        },
        heightStyle: "auto",
        icons: {
          activeHeader: "ui-icon-triangle-1-s",
          header: "ui-icon-triangle-1-e",
        },
        activate: null,
        beforeActivate: null,
      },
      hideProps: {
        borderTopWidth: "hide",
        borderBottomWidth: "hide",
        paddingTop: "hide",
        paddingBottom: "hide",
        height: "hide",
      },
      showProps: {
        borderTopWidth: "show",
        borderBottomWidth: "show",
        paddingTop: "show",
        paddingBottom: "show",
        height: "show",
      },
      _create: function () {
        var t = this.options;
        (this.prevShow = this.prevHide = e()),
          this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
          this.element.attr("role", "tablist"),
          t.collapsible ||
            (!1 !== t.active && null != t.active) ||
            (t.active = 0),
          this._processPanels(),
          t.active < 0 && (t.active += this.headers.length),
          this._refresh();
      },
      _getCreateEventData: function () {
        return {
          header: this.active,
          panel: this.active.length ? this.active.next() : e(),
        };
      },
      _createIcons: function () {
        var t,
          i = this.options.icons;
        i &&
          ((t = e("<span>")),
          this._addClass(t, "ui-accordion-header-icon", "ui-icon " + i.header),
          t.prependTo(this.headers),
          (t = this.active.children(".ui-accordion-header-icon")),
          this._removeClass(t, i.header)
            ._addClass(t, null, i.activeHeader)
            ._addClass(this.headers, "ui-accordion-icons"));
      },
      _destroyIcons: function () {
        this._removeClass(this.headers, "ui-accordion-icons"),
          this.headers.children(".ui-accordion-header-icon").remove();
      },
      _destroy: function () {
        var e;
        this.element.removeAttr("role"),
          this.headers
            .removeAttr(
              "role aria-expanded aria-selected aria-controls tabIndex"
            )
            .removeUniqueId(),
          this._destroyIcons(),
          (e = this.headers
            .next()
            .css("display", "")
            .removeAttr("role aria-hidden aria-labelledby")
            .removeUniqueId()),
          "content" !== this.options.heightStyle && e.css("height", "");
      },
      _setOption: function (e, t) {
        "active" !== e
          ? ("event" === e &&
              (this.options.event &&
                this._off(this.headers, this.options.event),
              this._setupEvents(t)),
            this._super(e, t),
            "collapsible" !== e ||
              t ||
              !1 !== this.options.active ||
              this._activate(0),
            "icons" === e && (this._destroyIcons(), t && this._createIcons()))
          : this._activate(t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", e),
          this._toggleClass(null, "ui-state-disabled", !!e),
          this._toggleClass(
            this.headers.add(this.headers.next()),
            null,
            "ui-state-disabled",
            !!e
          );
      },
      _keydown: function (t) {
        if (!t.altKey && !t.ctrlKey) {
          var i = e.ui.keyCode,
            s = this.headers.length,
            n = this.headers.index(t.target),
            a = !1;
          switch (t.keyCode) {
            case i.RIGHT:
            case i.DOWN:
              a = this.headers[(n + 1) % s];
              break;
            case i.LEFT:
            case i.UP:
              a = this.headers[(n - 1 + s) % s];
              break;
            case i.SPACE:
            case i.ENTER:
              this._eventHandler(t);
              break;
            case i.HOME:
              a = this.headers[0];
              break;
            case i.END:
              a = this.headers[s - 1];
          }
          a &&
            (e(t.target).attr("tabIndex", -1),
            e(a).attr("tabIndex", 0),
            e(a).trigger("focus"),
            t.preventDefault());
        }
      },
      _panelKeyDown: function (t) {
        t.keyCode === e.ui.keyCode.UP &&
          t.ctrlKey &&
          e(t.currentTarget).prev().trigger("focus");
      },
      refresh: function () {
        var t = this.options;
        this._processPanels(),
          (!1 === t.active && !0 === t.collapsible) || !this.headers.length
            ? ((t.active = !1), (this.active = e()))
            : !1 === t.active
            ? this._activate(0)
            : this.active.length && !e.contains(this.element[0], this.active[0])
            ? this.headers.length ===
              this.headers.find(".ui-state-disabled").length
              ? ((t.active = !1), (this.active = e()))
              : this._activate(Math.max(0, t.active - 1))
            : (t.active = this.headers.index(this.active)),
          this._destroyIcons(),
          this._refresh();
      },
      _processPanels: function () {
        var e = this.headers,
          t = this.panels;
        "function" == typeof this.options.header
          ? (this.headers = this.options.header(this.element))
          : (this.headers = this.element.find(this.options.header)),
          this._addClass(
            this.headers,
            "ui-accordion-header ui-accordion-header-collapsed",
            "ui-state-default"
          ),
          (this.panels = this.headers
            .next()
            .filter(":not(.ui-accordion-content-active)")
            .hide()),
          this._addClass(
            this.panels,
            "ui-accordion-content",
            "ui-helper-reset ui-widget-content"
          ),
          t && (this._off(e.not(this.headers)), this._off(t.not(this.panels)));
      },
      _refresh: function () {
        var t,
          i = this.options,
          s = i.heightStyle,
          n = this.element.parent();
        (this.active = this._findActive(i.active)),
          this._addClass(
            this.active,
            "ui-accordion-header-active",
            "ui-state-active"
          )._removeClass(this.active, "ui-accordion-header-collapsed"),
          this._addClass(this.active.next(), "ui-accordion-content-active"),
          this.active.next().show(),
          this.headers
            .attr("role", "tab")
            .each(function () {
              var t = e(this),
                i = t.uniqueId().attr("id"),
                s = t.next(),
                n = s.uniqueId().attr("id");
              t.attr("aria-controls", n), s.attr("aria-labelledby", i);
            })
            .next()
            .attr("role", "tabpanel"),
          this.headers
            .not(this.active)
            .attr({
              "aria-selected": "false",
              "aria-expanded": "false",
              tabIndex: -1,
            })
            .next()
            .attr({ "aria-hidden": "true" })
            .hide(),
          this.active.length
            ? this.active
                .attr({
                  "aria-selected": "true",
                  "aria-expanded": "true",
                  tabIndex: 0,
                })
                .next()
                .attr({ "aria-hidden": "false" })
            : this.headers.eq(0).attr("tabIndex", 0),
          this._createIcons(),
          this._setupEvents(i.event),
          "fill" === s
            ? ((t = n.height()),
              this.element.siblings(":visible").each(function () {
                var i = e(this),
                  s = i.css("position");
                "absolute" !== s && "fixed" !== s && (t -= i.outerHeight(!0));
              }),
              this.headers.each(function () {
                t -= e(this).outerHeight(!0);
              }),
              this.headers
                .next()
                .each(function () {
                  e(this).height(
                    Math.max(0, t - e(this).innerHeight() + e(this).height())
                  );
                })
                .css("overflow", "auto"))
            : "auto" === s &&
              ((t = 0),
              this.headers
                .next()
                .each(function () {
                  var i = e(this).is(":visible");
                  i || e(this).show(),
                    (t = Math.max(t, e(this).css("height", "").height())),
                    i || e(this).hide();
                })
                .height(t));
      },
      _activate: function (t) {
        (t = this._findActive(t)[0]) !== this.active[0] &&
          ((t = t || this.active[0]),
          this._eventHandler({
            target: t,
            currentTarget: t,
            preventDefault: e.noop,
          }));
      },
      _findActive: function (t) {
        return "number" == typeof t ? this.headers.eq(t) : e();
      },
      _setupEvents: function (t) {
        var i = { keydown: "_keydown" };
        t &&
          e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler";
          }),
          this._off(this.headers.add(this.headers.next())),
          this._on(this.headers, i),
          this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
          this._hoverable(this.headers),
          this._focusable(this.headers);
      },
      _eventHandler: function (t) {
        var i = this.options,
          s = this.active,
          n = e(t.currentTarget),
          a = n[0] === s[0],
          r = a && i.collapsible,
          o = r ? e() : n.next(),
          l = s.next();
        o = { oldHeader: s, oldPanel: l, newHeader: r ? e() : n, newPanel: o };
        t.preventDefault(),
          (a && !i.collapsible) ||
            !1 === this._trigger("beforeActivate", t, o) ||
            ((i.active = !r && this.headers.index(n)),
            (this.active = a ? e() : n),
            this._toggle(o),
            this._removeClass(
              s,
              "ui-accordion-header-active",
              "ui-state-active"
            ),
            i.icons &&
              ((s = s.children(".ui-accordion-header-icon")),
              this._removeClass(s, null, i.icons.activeHeader)._addClass(
                s,
                null,
                i.icons.header
              )),
            a ||
              (this._removeClass(n, "ui-accordion-header-collapsed")._addClass(
                n,
                "ui-accordion-header-active",
                "ui-state-active"
              ),
              i.icons &&
                ((a = n.children(".ui-accordion-header-icon")),
                this._removeClass(a, null, i.icons.header)._addClass(
                  a,
                  null,
                  i.icons.activeHeader
                )),
              this._addClass(n.next(), "ui-accordion-content-active")));
      },
      _toggle: function (t) {
        var i = t.newPanel,
          s = this.prevShow.length ? this.prevShow : t.oldPanel;
        this.prevShow.add(this.prevHide).stop(!0, !0),
          (this.prevShow = i),
          (this.prevHide = s),
          this.options.animate
            ? this._animate(i, s, t)
            : (s.hide(), i.show(), this._toggleComplete(t)),
          s.attr({ "aria-hidden": "true" }),
          s.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }),
          i.length && s.length
            ? s.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
            : i.length &&
              this.headers
                .filter(function () {
                  return 0 === parseInt(e(this).attr("tabIndex"), 10);
                })
                .attr("tabIndex", -1),
          i.attr("aria-hidden", "false").prev().attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _animate: function (e, t, i) {
        var s,
          n,
          a,
          r = this,
          o = 0,
          l = e.css("box-sizing"),
          c = e.length && (!t.length || e.index() < t.index()),
          h = this.options.animate || {},
          d = (c && h.down) || h;
        c = function () {
          r._toggleComplete(i);
        };
        return (
          (n = (n = "string" == typeof d ? d : n) || d.easing || h.easing),
          (a = (a = "number" == typeof d ? d : a) || d.duration || h.duration),
          t.length
            ? e.length
              ? ((s = e.show().outerHeight()),
                t.animate(this.hideProps, {
                  duration: a,
                  easing: n,
                  step: function (e, t) {
                    t.now = Math.round(e);
                  },
                }),
                void e.hide().animate(this.showProps, {
                  duration: a,
                  easing: n,
                  complete: c,
                  step: function (e, i) {
                    (i.now = Math.round(e)),
                      "height" !== i.prop
                        ? "content-box" === l && (o += i.now)
                        : "content" !== r.options.heightStyle &&
                          ((i.now = Math.round(s - t.outerHeight() - o)),
                          (o = 0));
                  },
                }))
              : t.animate(this.hideProps, a, n, c)
            : e.animate(this.showProps, a, n, c)
        );
      },
      _toggleComplete: function (e) {
        var t = e.oldPanel,
          i = t.prev();
        this._removeClass(t, "ui-accordion-content-active"),
          this._removeClass(i, "ui-accordion-header-active")._addClass(
            i,
            "ui-accordion-header-collapsed"
          ),
          t.length && (t.parent()[0].className = t.parent()[0].className),
          this._trigger("activate", null, e);
      },
    }),
    (e.ui.safeActiveElement = function (e) {
      var t;
      try {
        t = e.activeElement;
      } catch (i) {
        t = e.body;
      }
      return (t = t || e.body).nodeName ? t : e.body;
    }),
    e.widget("ui.menu", {
      version: "1.13.2",
      defaultElement: "<ul>",
      delay: 300,
      options: {
        icons: { submenu: "ui-icon-caret-1-e" },
        items: "> *",
        menus: "ul",
        position: { my: "left top", at: "right top" },
        role: "menu",
        blur: null,
        focus: null,
        select: null,
      },
      _create: function () {
        (this.activeMenu = this.element),
          (this.mouseHandled = !1),
          (this.lastMousePosition = { x: null, y: null }),
          this.element
            .uniqueId()
            .attr({ role: this.options.role, tabIndex: 0 }),
          this._addClass("ui-menu", "ui-widget ui-widget-content"),
          this._on({
            "mousedown .ui-menu-item": function (e) {
              e.preventDefault(), this._activateItem(e);
            },
            "click .ui-menu-item": function (t) {
              var i = e(t.target),
                s = e(e.ui.safeActiveElement(this.document[0]));
              !this.mouseHandled &&
                i.not(".ui-state-disabled").length &&
                (this.select(t),
                t.isPropagationStopped() || (this.mouseHandled = !0),
                i.has(".ui-menu").length
                  ? this.expand(t)
                  : !this.element.is(":focus") &&
                    s.closest(".ui-menu").length &&
                    (this.element.trigger("focus", [!0]),
                    this.active &&
                      1 === this.active.parents(".ui-menu").length &&
                      clearTimeout(this.timer)));
            },
            "mouseenter .ui-menu-item": "_activateItem",
            "mousemove .ui-menu-item": "_activateItem",
            mouseleave: "collapseAll",
            "mouseleave .ui-menu": "collapseAll",
            focus: function (e, t) {
              var i = this.active || this._menuItems().first();
              t || this.focus(e, i);
            },
            blur: function (t) {
              this._delay(function () {
                e.contains(
                  this.element[0],
                  e.ui.safeActiveElement(this.document[0])
                ) || this.collapseAll(t);
              });
            },
            keydown: "_keydown",
          }),
          this.refresh(),
          this._on(this.document, {
            click: function (e) {
              this._closeOnDocumentClick(e) && this.collapseAll(e, !0),
                (this.mouseHandled = !1);
            },
          });
      },
      _activateItem: function (t) {
        var i, s;
        this.previousFilter ||
          (t.clientX === this.lastMousePosition.x &&
            t.clientY === this.lastMousePosition.y) ||
          ((this.lastMousePosition = { x: t.clientX, y: t.clientY }),
          (i = e(t.target).closest(".ui-menu-item")),
          (s = e(t.currentTarget)),
          i[0] === s[0] &&
            (s.is(".ui-state-active") ||
              (this._removeClass(
                s.siblings().children(".ui-state-active"),
                null,
                "ui-state-active"
              ),
              this.focus(t, s))));
      },
      _destroy: function () {
        var t = this.element
          .find(".ui-menu-item")
          .removeAttr("role aria-disabled")
          .children(".ui-menu-item-wrapper")
          .removeUniqueId()
          .removeAttr("tabIndex role aria-haspopup");
        this.element
          .removeAttr("aria-activedescendant")
          .find(".ui-menu")
          .addBack()
          .removeAttr(
            "role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex"
          )
          .removeUniqueId()
          .show(),
          t.children().each(function () {
            var t = e(this);
            t.data("ui-menu-submenu-caret") && t.remove();
          });
      },
      _keydown: function (t) {
        var i,
          s,
          n,
          a = !0;
        switch (t.keyCode) {
          case e.ui.keyCode.PAGE_UP:
            this.previousPage(t);
            break;
          case e.ui.keyCode.PAGE_DOWN:
            this.nextPage(t);
            break;
          case e.ui.keyCode.HOME:
            this._move("first", "first", t);
            break;
          case e.ui.keyCode.END:
            this._move("last", "last", t);
            break;
          case e.ui.keyCode.UP:
            this.previous(t);
            break;
          case e.ui.keyCode.DOWN:
            this.next(t);
            break;
          case e.ui.keyCode.LEFT:
            this.collapse(t);
            break;
          case e.ui.keyCode.RIGHT:
            this.active &&
              !this.active.is(".ui-state-disabled") &&
              this.expand(t);
            break;
          case e.ui.keyCode.ENTER:
          case e.ui.keyCode.SPACE:
            this._activate(t);
            break;
          case e.ui.keyCode.ESCAPE:
            this.collapse(t);
            break;
          default:
            (i = this.previousFilter || ""),
              (n = a = !1),
              (s =
                96 <= t.keyCode && t.keyCode <= 105
                  ? (t.keyCode - 96).toString()
                  : String.fromCharCode(t.keyCode)),
              clearTimeout(this.filterTimer),
              s === i ? (n = !0) : (s = i + s),
              (i = this._filterMenuItems(s)),
              (i =
                n && -1 !== i.index(this.active.next())
                  ? this.active.nextAll(".ui-menu-item")
                  : i).length ||
                ((s = String.fromCharCode(t.keyCode)),
                (i = this._filterMenuItems(s))),
              i.length
                ? (this.focus(t, i),
                  (this.previousFilter = s),
                  (this.filterTimer = this._delay(function () {
                    delete this.previousFilter;
                  }, 1e3)))
                : delete this.previousFilter;
        }
        a && t.preventDefault();
      },
      _activate: function (e) {
        this.active &&
          !this.active.is(".ui-state-disabled") &&
          (this.active.children("[aria-haspopup='true']").length
            ? this.expand(e)
            : this.select(e));
      },
      refresh: function () {
        var t,
          i,
          s = this,
          n = this.options.icons.submenu,
          a = this.element.find(this.options.menus);
        this._toggleClass(
          "ui-menu-icons",
          null,
          !!this.element.find(".ui-icon").length
        ),
          (i = a
            .filter(":not(.ui-menu)")
            .hide()
            .attr({
              role: this.options.role,
              "aria-hidden": "true",
              "aria-expanded": "false",
            })
            .each(function () {
              var t = e(this),
                i = t.prev(),
                a = e("<span>").data("ui-menu-submenu-caret", !0);
              s._addClass(a, "ui-menu-icon", "ui-icon " + n),
                i.attr("aria-haspopup", "true").prepend(a),
                t.attr("aria-labelledby", i.attr("id"));
            })),
          this._addClass(i, "ui-menu", "ui-widget ui-widget-content ui-front"),
          (t = a.add(this.element).find(this.options.items))
            .not(".ui-menu-item")
            .each(function () {
              var t = e(this);
              s._isDivider(t) &&
                s._addClass(t, "ui-menu-divider", "ui-widget-content");
            }),
          (a = (i = t.not(".ui-menu-item, .ui-menu-divider"))
            .children()
            .not(".ui-menu")
            .uniqueId()
            .attr({ tabIndex: -1, role: this._itemRole() })),
          this._addClass(i, "ui-menu-item")._addClass(
            a,
            "ui-menu-item-wrapper"
          ),
          t.filter(".ui-state-disabled").attr("aria-disabled", "true"),
          this.active &&
            !e.contains(this.element[0], this.active[0]) &&
            this.blur();
      },
      _itemRole: function () {
        return { menu: "menuitem", listbox: "option" }[this.options.role];
      },
      _setOption: function (e, t) {
        var i;
        "icons" === e &&
          ((i = this.element.find(".ui-menu-icon")),
          this._removeClass(i, null, this.options.icons.submenu)._addClass(
            i,
            null,
            t.submenu
          )),
          this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", String(e)),
          this._toggleClass(null, "ui-state-disabled", !!e);
      },
      focus: function (e, t) {
        var i;
        this.blur(e, e && "focus" === e.type),
          this._scrollIntoView(t),
          (this.active = t.first()),
          (i = this.active.children(".ui-menu-item-wrapper")),
          this._addClass(i, null, "ui-state-active"),
          this.options.role &&
            this.element.attr("aria-activedescendant", i.attr("id")),
          (i = this.active
            .parent()
            .closest(".ui-menu-item")
            .children(".ui-menu-item-wrapper")),
          this._addClass(i, null, "ui-state-active"),
          e && "keydown" === e.type
            ? this._close()
            : (this.timer = this._delay(function () {
                this._close();
              }, this.delay)),
          (i = t.children(".ui-menu")).length &&
            e &&
            /^mouse/.test(e.type) &&
            this._startOpening(i),
          (this.activeMenu = t.parent()),
          this._trigger("focus", e, { item: t });
      },
      _scrollIntoView: function (t) {
        var i, s, n;
        this._hasScroll() &&
          ((s = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0),
          (n = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0),
          (i = t.offset().top - this.activeMenu.offset().top - s - n),
          (s = this.activeMenu.scrollTop()),
          (n = this.activeMenu.height()),
          (t = t.outerHeight()),
          i < 0
            ? this.activeMenu.scrollTop(s + i)
            : n < i + t && this.activeMenu.scrollTop(s + i - n + t));
      },
      blur: function (e, t) {
        t || clearTimeout(this.timer),
          this.active &&
            (this._removeClass(
              this.active.children(".ui-menu-item-wrapper"),
              null,
              "ui-state-active"
            ),
            this._trigger("blur", e, { item: this.active }),
            (this.active = null));
      },
      _startOpening: function (e) {
        clearTimeout(this.timer),
          "true" === e.attr("aria-hidden") &&
            (this.timer = this._delay(function () {
              this._close(), this._open(e);
            }, this.delay));
      },
      _open: function (t) {
        var i = e.extend({ of: this.active }, this.options.position);
        clearTimeout(this.timer),
          this.element
            .find(".ui-menu")
            .not(t.parents(".ui-menu"))
            .hide()
            .attr("aria-hidden", "true"),
          t
            .show()
            .removeAttr("aria-hidden")
            .attr("aria-expanded", "true")
            .position(i);
      },
      collapseAll: function (t, i) {
        clearTimeout(this.timer),
          (this.timer = this._delay(
            function () {
              var s = i
                ? this.element
                : e(t && t.target).closest(this.element.find(".ui-menu"));
              s.length || (s = this.element),
                this._close(s),
                this.blur(t),
                this._removeClass(
                  s.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                (this.activeMenu = s);
            },
            i ? 0 : this.delay
          ));
      },
      _close: function (e) {
        (e = e || (this.active ? this.active.parent() : this.element))
          .find(".ui-menu")
          .hide()
          .attr("aria-hidden", "true")
          .attr("aria-expanded", "false");
      },
      _closeOnDocumentClick: function (t) {
        return !e(t.target).closest(".ui-menu").length;
      },
      _isDivider: function (e) {
        return !/[^\-\u2014\u2013\s]/.test(e.text());
      },
      collapse: function (e) {
        var t =
          this.active &&
          this.active.parent().closest(".ui-menu-item", this.element);
        t && t.length && (this._close(), this.focus(e, t));
      },
      expand: function (e) {
        var t =
          this.active &&
          this._menuItems(this.active.children(".ui-menu")).first();
        t &&
          t.length &&
          (this._open(t.parent()),
          this._delay(function () {
            this.focus(e, t);
          }));
      },
      next: function (e) {
        this._move("next", "first", e);
      },
      previous: function (e) {
        this._move("prev", "last", e);
      },
      isFirstItem: function () {
        return this.active && !this.active.prevAll(".ui-menu-item").length;
      },
      isLastItem: function () {
        return this.active && !this.active.nextAll(".ui-menu-item").length;
      },
      _menuItems: function (e) {
        return (e || this.element)
          .find(this.options.items)
          .filter(".ui-menu-item");
      },
      _move: function (e, t, i) {
        var s;
        ((s = this.active
          ? "first" === e || "last" === e
            ? this.active["first" === e ? "prevAll" : "nextAll"](
                ".ui-menu-item"
              ).last()
            : this.active[e + "All"](".ui-menu-item").first()
          : s) &&
          s.length &&
          this.active) ||
          (s = this._menuItems(this.activeMenu)[t]()),
          this.focus(i, s);
      },
      nextPage: function (t) {
        var i, s, n;
        this.active
          ? this.isLastItem() ||
            (this._hasScroll()
              ? ((s = this.active.offset().top),
                (n = this.element.innerHeight()),
                0 === e.fn.jquery.indexOf("3.2.") &&
                  (n +=
                    this.element[0].offsetHeight - this.element.outerHeight()),
                this.active.nextAll(".ui-menu-item").each(function () {
                  return (i = e(this)).offset().top - s - n < 0;
                }),
                this.focus(t, i))
              : this.focus(
                  t,
                  this._menuItems(this.activeMenu)[
                    this.active ? "last" : "first"
                  ]()
                ))
          : this.next(t);
      },
      previousPage: function (t) {
        var i, s, n;
        this.active
          ? this.isFirstItem() ||
            (this._hasScroll()
              ? ((s = this.active.offset().top),
                (n = this.element.innerHeight()),
                0 === e.fn.jquery.indexOf("3.2.") &&
                  (n +=
                    this.element[0].offsetHeight - this.element.outerHeight()),
                this.active.prevAll(".ui-menu-item").each(function () {
                  return 0 < (i = e(this)).offset().top - s + n;
                }),
                this.focus(t, i))
              : this.focus(t, this._menuItems(this.activeMenu).first()))
          : this.next(t);
      },
      _hasScroll: function () {
        return this.element.outerHeight() < this.element.prop("scrollHeight");
      },
      select: function (t) {
        this.active = this.active || e(t.target).closest(".ui-menu-item");
        var i = { item: this.active };
        this.active.has(".ui-menu").length || this.collapseAll(t, !0),
          this._trigger("select", t, i);
      },
      _filterMenuItems: function (t) {
        t = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        var i = new RegExp("^" + t, "i");
        return this.activeMenu
          .find(this.options.items)
          .filter(".ui-menu-item")
          .filter(function () {
            return i.test(
              String.prototype.trim.call(
                e(this).children(".ui-menu-item-wrapper").text()
              )
            );
          });
      },
    }),
    e.widget("ui.autocomplete", {
      version: "1.13.2",
      defaultElement: "<input>",
      options: {
        appendTo: null,
        autoFocus: !1,
        delay: 300,
        minLength: 1,
        position: { my: "left top", at: "left bottom", collision: "none" },
        source: null,
        change: null,
        close: null,
        focus: null,
        open: null,
        response: null,
        search: null,
        select: null,
      },
      requestIndex: 0,
      pending: 0,
      liveRegionTimer: null,
      _create: function () {
        var t,
          i,
          s,
          n = "textarea" === (a = this.element[0].nodeName.toLowerCase()),
          a = "input" === a;
        (this.isMultiLine = n || (!a && this._isContentEditable(this.element))),
          (this.valueMethod = this.element[n || a ? "val" : "text"]),
          (this.isNewMenu = !0),
          this._addClass("ui-autocomplete-input"),
          this.element.attr("autocomplete", "off"),
          this._on(this.element, {
            keydown: function (n) {
              if (this.element.prop("readOnly")) i = s = t = !0;
              else {
                i = s = t = !1;
                var a = e.ui.keyCode;
                switch (n.keyCode) {
                  case a.PAGE_UP:
                    (t = !0), this._move("previousPage", n);
                    break;
                  case a.PAGE_DOWN:
                    (t = !0), this._move("nextPage", n);
                    break;
                  case a.UP:
                    (t = !0), this._keyEvent("previous", n);
                    break;
                  case a.DOWN:
                    (t = !0), this._keyEvent("next", n);
                    break;
                  case a.ENTER:
                    this.menu.active &&
                      ((t = !0), n.preventDefault(), this.menu.select(n));
                    break;
                  case a.TAB:
                    this.menu.active && this.menu.select(n);
                    break;
                  case a.ESCAPE:
                    this.menu.element.is(":visible") &&
                      (this.isMultiLine || this._value(this.term),
                      this.close(n),
                      n.preventDefault());
                    break;
                  default:
                    (i = !0), this._searchTimeout(n);
                }
              }
            },
            keypress: function (s) {
              if (t)
                return (
                  (t = !1),
                  void (
                    (this.isMultiLine && !this.menu.element.is(":visible")) ||
                    s.preventDefault()
                  )
                );
              if (!i) {
                var n = e.ui.keyCode;
                switch (s.keyCode) {
                  case n.PAGE_UP:
                    this._move("previousPage", s);
                    break;
                  case n.PAGE_DOWN:
                    this._move("nextPage", s);
                    break;
                  case n.UP:
                    this._keyEvent("previous", s);
                    break;
                  case n.DOWN:
                    this._keyEvent("next", s);
                }
              }
            },
            input: function (e) {
              if (s) return (s = !1), void e.preventDefault();
              this._searchTimeout(e);
            },
            focus: function () {
              (this.selectedItem = null), (this.previous = this._value());
            },
            blur: function (e) {
              clearTimeout(this.searching), this.close(e), this._change(e);
            },
          }),
          this._initSource(),
          (this.menu = e("<ul>")
            .appendTo(this._appendTo())
            .menu({ role: null })
            .hide()
            .attr({ unselectable: "on" })
            .menu("instance")),
          this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
          this._on(this.menu.element, {
            mousedown: function (e) {
              e.preventDefault();
            },
            menufocus: function (t, i) {
              var s, n;
              if (
                this.isNewMenu &&
                ((this.isNewMenu = !1),
                t.originalEvent && /^mouse/.test(t.originalEvent.type))
              )
                return (
                  this.menu.blur(),
                  void this.document.one("mousemove", function () {
                    e(t.target).trigger(t.originalEvent);
                  })
                );
              (n = i.item.data("ui-autocomplete-item")),
                !1 !== this._trigger("focus", t, { item: n }) &&
                  t.originalEvent &&
                  /^key/.test(t.originalEvent.type) &&
                  this._value(n.value),
                (s = i.item.attr("aria-label") || n.value) &&
                  String.prototype.trim.call(s).length &&
                  (clearTimeout(this.liveRegionTimer),
                  (this.liveRegionTimer = this._delay(function () {
                    this.liveRegion.html(e("<div>").text(s));
                  }, 100)));
            },
            menuselect: function (t, i) {
              var s = i.item.data("ui-autocomplete-item"),
                n = this.previous;
              this.element[0] !== e.ui.safeActiveElement(this.document[0]) &&
                (this.element.trigger("focus"),
                (this.previous = n),
                this._delay(function () {
                  (this.previous = n), (this.selectedItem = s);
                })),
                !1 !== this._trigger("select", t, { item: s }) &&
                  this._value(s.value),
                (this.term = this._value()),
                this.close(t),
                (this.selectedItem = s);
            },
          }),
          (this.liveRegion = e("<div>", {
            role: "status",
            "aria-live": "assertive",
            "aria-relevant": "additions",
          }).appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _destroy: function () {
        clearTimeout(this.searching),
          this.element.removeAttr("autocomplete"),
          this.menu.element.remove(),
          this.liveRegion.remove();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          "source" === e && this._initSource(),
          "appendTo" === e && this.menu.element.appendTo(this._appendTo()),
          "disabled" === e && t && this.xhr && this.xhr.abort();
      },
      _isEventTargetInWidget: function (t) {
        var i = this.menu.element[0];
        return (
          t.target === this.element[0] ||
          t.target === i ||
          e.contains(i, t.target)
        );
      },
      _closeOnClickOutside: function (e) {
        this._isEventTargetInWidget(e) || this.close();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return (t =
          (t =
            t &&
            (t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0))) &&
          t[0]
            ? t
            : this.element.closest(".ui-front, dialog")).length
          ? t
          : this.document[0].body;
      },
      _initSource: function () {
        var t,
          i,
          s = this;
        Array.isArray(this.options.source)
          ? ((t = this.options.source),
            (this.source = function (i, s) {
              s(e.ui.autocomplete.filter(t, i.term));
            }))
          : "string" == typeof this.options.source
          ? ((i = this.options.source),
            (this.source = function (t, n) {
              s.xhr && s.xhr.abort(),
                (s.xhr = e.ajax({
                  url: i,
                  data: t,
                  dataType: "json",
                  success: function (e) {
                    n(e);
                  },
                  error: function () {
                    n([]);
                  },
                }));
            }))
          : (this.source = this.options.source);
      },
      _searchTimeout: function (e) {
        clearTimeout(this.searching),
          (this.searching = this._delay(function () {
            var t = this.term === this._value(),
              i = this.menu.element.is(":visible"),
              s = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
            (t && (i || s)) ||
              ((this.selectedItem = null), this.search(null, e));
          }, this.options.delay));
      },
      search: function (e, t) {
        return (
          (e = null != e ? e : this._value()),
          (this.term = this._value()),
          e.length < this.options.minLength
            ? this.close(t)
            : !1 !== this._trigger("search", t)
            ? this._search(e)
            : void 0
        );
      },
      _search: function (e) {
        this.pending++,
          this._addClass("ui-autocomplete-loading"),
          (this.cancelSearch = !1),
          this.source({ term: e }, this._response());
      },
      _response: function () {
        var e = ++this.requestIndex;
        return function (t) {
          e === this.requestIndex && this.__response(t),
            this.pending--,
            this.pending || this._removeClass("ui-autocomplete-loading");
        }.bind(this);
      },
      __response: function (e) {
        (e = e && this._normalize(e)),
          this._trigger("response", null, { content: e }),
          !this.options.disabled && e && e.length && !this.cancelSearch
            ? (this._suggest(e), this._trigger("open"))
            : this._close();
      },
      close: function (e) {
        (this.cancelSearch = !0), this._close(e);
      },
      _close: function (e) {
        this._off(this.document, "mousedown"),
          this.menu.element.is(":visible") &&
            (this.menu.element.hide(),
            this.menu.blur(),
            (this.isNewMenu = !0),
            this._trigger("close", e));
      },
      _change: function (e) {
        this.previous !== this._value() &&
          this._trigger("change", e, { item: this.selectedItem });
      },
      _normalize: function (t) {
        return t.length && t[0].label && t[0].value
          ? t
          : e.map(t, function (t) {
              return "string" == typeof t
                ? { label: t, value: t }
                : e.extend({}, t, {
                    label: t.label || t.value,
                    value: t.value || t.label,
                  });
            });
      },
      _suggest: function (t) {
        var i = this.menu.element.empty();
        this._renderMenu(i, t),
          (this.isNewMenu = !0),
          this.menu.refresh(),
          i.show(),
          this._resizeMenu(),
          i.position(e.extend({ of: this.element }, this.options.position)),
          this.options.autoFocus && this.menu.next(),
          this._on(this.document, { mousedown: "_closeOnClickOutside" });
      },
      _resizeMenu: function () {
        var e = this.menu.element;
        e.outerWidth(
          Math.max(e.width("").outerWidth() + 1, this.element.outerWidth())
        );
      },
      _renderMenu: function (t, i) {
        var s = this;
        e.each(i, function (e, i) {
          s._renderItemData(t, i);
        });
      },
      _renderItemData: function (e, t) {
        return this._renderItem(e, t).data("ui-autocomplete-item", t);
      },
      _renderItem: function (t, i) {
        return e("<li>").append(e("<div>").text(i.label)).appendTo(t);
      },
      _move: function (e, t) {
        if (this.menu.element.is(":visible"))
          return (this.menu.isFirstItem() && /^previous/.test(e)) ||
            (this.menu.isLastItem() && /^next/.test(e))
            ? (this.isMultiLine || this._value(this.term),
              void this.menu.blur())
            : void this.menu[e](t);
        this.search(null, t);
      },
      widget: function () {
        return this.menu.element;
      },
      _value: function () {
        return this.valueMethod.apply(this.element, arguments);
      },
      _keyEvent: function (e, t) {
        (this.isMultiLine && !this.menu.element.is(":visible")) ||
          (this._move(e, t), t.preventDefault());
      },
      _isContentEditable: function (e) {
        if (!e.length) return !1;
        var t = e.prop("contentEditable");
        return "inherit" === t
          ? this._isContentEditable(e.parent())
          : "true" === t;
      },
    }),
    e.extend(e.ui.autocomplete, {
      escapeRegex: function (e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
      },
      filter: function (t, i) {
        var s = new RegExp(e.ui.autocomplete.escapeRegex(i), "i");
        return e.grep(t, function (e) {
          return s.test(e.label || e.value || e);
        });
      },
    }),
    e.widget("ui.autocomplete", e.ui.autocomplete, {
      options: {
        messages: {
          noResults: "No search results.",
          results: function (e) {
            return (
              e +
              (1 < e ? " results are" : " result is") +
              " available, use up and down arrow keys to navigate."
            );
          },
        },
      },
      __response: function (t) {
        var i;
        this._superApply(arguments),
          this.options.disabled ||
            this.cancelSearch ||
            ((i =
              t && t.length
                ? this.options.messages.results(t.length)
                : this.options.messages.noResults),
            clearTimeout(this.liveRegionTimer),
            (this.liveRegionTimer = this._delay(function () {
              this.liveRegion.html(e("<div>").text(i));
            }, 100)));
      },
    }),
    e.ui.autocomplete;
  var ee,
    te,
    ie = /ui-corner-([a-z]){2,6}/g;
  function se() {
    (this._curInst = null),
      (this._keyEvent = !1),
      (this._disabledInputs = []),
      (this._datepickerShowing = !1),
      (this._inDialog = !1),
      (this._mainDivId = "ui-datepicker-div"),
      (this._inlineClass = "ui-datepicker-inline"),
      (this._appendClass = "ui-datepicker-append"),
      (this._triggerClass = "ui-datepicker-trigger"),
      (this._dialogClass = "ui-datepicker-dialog"),
      (this._disableClass = "ui-datepicker-disabled"),
      (this._unselectableClass = "ui-datepicker-unselectable"),
      (this._currentClass = "ui-datepicker-current-day"),
      (this._dayOverClass = "ui-datepicker-days-cell-over"),
      (this.regional = []),
      (this.regional[""] = {
        closeText: "Done",
        prevText: "Prev",
        nextText: "Next",
        currentText: "Today",
        monthNames: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        monthNamesShort: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        dayNames: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        weekHeader: "Wk",
        dateFormat: "mm/dd/yy",
        firstDay: 0,
        isRTL: !1,
        showMonthAfterYear: !1,
        yearSuffix: "",
        selectMonthLabel: "Select month",
        selectYearLabel: "Select year",
      }),
      (this._defaults = {
        showOn: "focus",
        showAnim: "fadeIn",
        showOptions: {},
        defaultDate: null,
        appendText: "",
        buttonText: "...",
        buttonImage: "",
        buttonImageOnly: !1,
        hideIfNoPrevNext: !1,
        navigationAsDateFormat: !1,
        gotoCurrent: !1,
        changeMonth: !1,
        changeYear: !1,
        yearRange: "c-10:c+10",
        showOtherMonths: !1,
        selectOtherMonths: !1,
        showWeek: !1,
        calculateWeek: this.iso8601Week,
        shortYearCutoff: "+10",
        minDate: null,
        maxDate: null,
        duration: "fast",
        beforeShowDay: null,
        beforeShow: null,
        onSelect: null,
        onChangeMonthYear: null,
        onClose: null,
        onUpdateDatepicker: null,
        numberOfMonths: 1,
        showCurrentAtPos: 0,
        stepMonths: 1,
        stepBigMonths: 12,
        altField: "",
        altFormat: "",
        constrainInput: !0,
        showButtonPanel: !1,
        autoSize: !1,
        disabled: !1,
      }),
      e.extend(this._defaults, this.regional[""]),
      (this.regional.en = e.extend(!0, {}, this.regional[""])),
      (this.regional["en-US"] = e.extend(!0, {}, this.regional.en)),
      (this.dpDiv = ne(
        e(
          "<div id='" +
            this._mainDivId +
            "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
        )
      ));
  }
  function ne(t) {
    var i =
      "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    return t
      .on("mouseout", i, function () {
        e(this).removeClass("ui-state-hover"),
          -1 !== this.className.indexOf("ui-datepicker-prev") &&
            e(this).removeClass("ui-datepicker-prev-hover"),
          -1 !== this.className.indexOf("ui-datepicker-next") &&
            e(this).removeClass("ui-datepicker-next-hover");
      })
      .on("mouseover", i, ae);
  }
  function ae() {
    e.datepicker._isDisabledDatepicker(
      (te.inline ? te.dpDiv.parent() : te.input)[0]
    ) ||
      (e(this)
        .parents(".ui-datepicker-calendar")
        .find("a")
        .removeClass("ui-state-hover"),
      e(this).addClass("ui-state-hover"),
      -1 !== this.className.indexOf("ui-datepicker-prev") &&
        e(this).addClass("ui-datepicker-prev-hover"),
      -1 !== this.className.indexOf("ui-datepicker-next") &&
        e(this).addClass("ui-datepicker-next-hover"));
  }
  function re(t, i) {
    for (var s in (e.extend(t, i), i)) null == i[s] && (t[s] = i[s]);
    return t;
  }
  e.widget("ui.controlgroup", {
    version: "1.13.2",
    defaultElement: "<div>",
    options: {
      direction: "horizontal",
      disabled: null,
      onlyVisible: !0,
      items: {
        button:
          "input[type=button], input[type=submit], input[type=reset], button, a",
        controlgroupLabel: ".ui-controlgroup-label",
        checkboxradio: "input[type='checkbox'], input[type='radio']",
        selectmenu: "select",
        spinner: ".ui-spinner-input",
      },
    },
    _create: function () {
      this._enhance();
    },
    _enhance: function () {
      this.element.attr("role", "toolbar"), this.refresh();
    },
    _destroy: function () {
      this._callChildMethod("destroy"),
        this.childWidgets.removeData("ui-controlgroup-data"),
        this.element.removeAttr("role"),
        this.options.items.controlgroupLabel &&
          this.element
            .find(this.options.items.controlgroupLabel)
            .find(".ui-controlgroup-label-contents")
            .contents()
            .unwrap();
    },
    _initWidgets: function () {
      var t = this,
        i = [];
      e.each(this.options.items, function (s, n) {
        var a,
          r = {};
        if (n)
          return "controlgroupLabel" === s
            ? ((a = t.element.find(n)).each(function () {
                var t = e(this);
                t.children(".ui-controlgroup-label-contents").length ||
                  t
                    .contents()
                    .wrapAll(
                      "<span class='ui-controlgroup-label-contents'></span>"
                    );
              }),
              t._addClass(
                a,
                null,
                "ui-widget ui-widget-content ui-state-default"
              ),
              void (i = i.concat(a.get())))
            : void (
                e.fn[s] &&
                ((r = t["_" + s + "Options"]
                  ? t["_" + s + "Options"]("middle")
                  : { classes: {} }),
                t.element.find(n).each(function () {
                  var n = e(this),
                    a = n[s]("instance"),
                    o = e.widget.extend({}, r);
                  ("button" === s && n.parent(".ui-spinner").length) ||
                    ((a = a || n[s]()[s]("instance")) &&
                      (o.classes = t._resolveClassesValues(o.classes, a)),
                    n[s](o),
                    (o = n[s]("widget")),
                    e.data(o[0], "ui-controlgroup-data", a || n[s]("instance")),
                    i.push(o[0]));
                }))
              );
      }),
        (this.childWidgets = e(e.uniqueSort(i))),
        this._addClass(this.childWidgets, "ui-controlgroup-item");
    },
    _callChildMethod: function (t) {
      this.childWidgets.each(function () {
        var i = e(this).data("ui-controlgroup-data");
        i && i[t] && i[t]();
      });
    },
    _updateCornerClass: function (e, t) {
      (t = this._buildSimpleOptions(t, "label").classes.label),
        this._removeClass(
          e,
          null,
          "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"
        ),
        this._addClass(e, null, t);
    },
    _buildSimpleOptions: function (e, t) {
      var i = "vertical" === this.options.direction,
        s = { classes: {} };
      return (
        (s.classes[t] = {
          middle: "",
          first: "ui-corner-" + (i ? "top" : "left"),
          last: "ui-corner-" + (i ? "bottom" : "right"),
          only: "ui-corner-all",
        }[e]),
        s
      );
    },
    _spinnerOptions: function (e) {
      return (
        ((e = this._buildSimpleOptions(e, "ui-spinner")).classes[
          "ui-spinner-up"
        ] = ""),
        (e.classes["ui-spinner-down"] = ""),
        e
      );
    },
    _buttonOptions: function (e) {
      return this._buildSimpleOptions(e, "ui-button");
    },
    _checkboxradioOptions: function (e) {
      return this._buildSimpleOptions(e, "ui-checkboxradio-label");
    },
    _selectmenuOptions: function (e) {
      var t = "vertical" === this.options.direction;
      return {
        width: t && "auto",
        classes: {
          middle: {
            "ui-selectmenu-button-open": "",
            "ui-selectmenu-button-closed": "",
          },
          first: {
            "ui-selectmenu-button-open": "ui-corner-" + (t ? "top" : "tl"),
            "ui-selectmenu-button-closed": "ui-corner-" + (t ? "top" : "left"),
          },
          last: {
            "ui-selectmenu-button-open": t ? "" : "ui-corner-tr",
            "ui-selectmenu-button-closed":
              "ui-corner-" + (t ? "bottom" : "right"),
          },
          only: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
        }[e],
      };
    },
    _resolveClassesValues: function (t, i) {
      var s = {};
      return (
        e.each(t, function (e) {
          var n = i.options.classes[e] || "";
          n = String.prototype.trim.call(n.replace(ie, ""));
          s[e] = (n + " " + t[e]).replace(/\s+/g, " ");
        }),
        s
      );
    },
    _setOption: function (e, t) {
      "direction" === e &&
        this._removeClass("ui-controlgroup-" + this.options.direction),
        this._super(e, t),
        "disabled" !== e
          ? this.refresh()
          : this._callChildMethod(t ? "disable" : "enable");
    },
    refresh: function () {
      var t,
        i = this;
      this._addClass(
        "ui-controlgroup ui-controlgroup-" + this.options.direction
      ),
        "horizontal" === this.options.direction &&
          this._addClass(null, "ui-helper-clearfix"),
        this._initWidgets(),
        (t = this.childWidgets),
        (t = this.options.onlyVisible ? t.filter(":visible") : t).length &&
          (e.each(["first", "last"], function (e, s) {
            var n,
              a = t[s]().data("ui-controlgroup-data");
            a && i["_" + a.widgetName + "Options"]
              ? (((n = i["_" + a.widgetName + "Options"](
                  1 === t.length ? "only" : s
                )).classes = i._resolveClassesValues(n.classes, a)),
                a.element[a.widgetName](n))
              : i._updateCornerClass(t[s](), s);
          }),
          this._callChildMethod("refresh"));
    },
  }),
    e.widget("ui.checkboxradio", [
      e.ui.formResetMixin,
      {
        version: "1.13.2",
        options: {
          disabled: null,
          label: null,
          icon: !0,
          classes: {
            "ui-checkboxradio-label": "ui-corner-all",
            "ui-checkboxradio-icon": "ui-corner-all",
          },
        },
        _getCreateOptions: function () {
          var t,
            i = this._super() || {};
          return (
            this._readType(),
            (t = this.element.labels()),
            (this.label = e(t[t.length - 1])),
            this.label.length ||
              e.error("No label found for checkboxradio widget"),
            (this.originalLabel = ""),
            (t = this.label.contents().not(this.element[0])).length &&
              (this.originalLabel += t
                .clone()
                .wrapAll("<div></div>")
                .parent()
                .html()),
            this.originalLabel && (i.label = this.originalLabel),
            null != (t = this.element[0].disabled) && (i.disabled = t),
            i
          );
        },
        _create: function () {
          var e = this.element[0].checked;
          this._bindFormResetHandler(),
            null == this.options.disabled &&
              (this.options.disabled = this.element[0].disabled),
            this._setOption("disabled", this.options.disabled),
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
            this._addClass(
              this.label,
              "ui-checkboxradio-label",
              "ui-button ui-widget"
            ),
            "radio" === this.type &&
              this._addClass(this.label, "ui-checkboxradio-radio-label"),
            this.options.label && this.options.label !== this.originalLabel
              ? this._updateLabel()
              : this.originalLabel && (this.options.label = this.originalLabel),
            this._enhance(),
            e &&
              this._addClass(
                this.label,
                "ui-checkboxradio-checked",
                "ui-state-active"
              ),
            this._on({
              change: "_toggleClasses",
              focus: function () {
                this._addClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
              blur: function () {
                this._removeClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
            });
        },
        _readType: function () {
          var t = this.element[0].nodeName.toLowerCase();
          (this.type = this.element[0].type),
            ("input" === t && /radio|checkbox/.test(this.type)) ||
              e.error(
                "Can't create checkboxradio on element.nodeName=" +
                  t +
                  " and element.type=" +
                  this.type
              );
        },
        _enhance: function () {
          this._updateIcon(this.element[0].checked);
        },
        widget: function () {
          return this.label;
        },
        _getRadioGroup: function () {
          var t = this.element[0].name,
            i = "input[name='" + e.escapeSelector(t) + "']";
          return t
            ? (this.form.length
                ? e(this.form[0].elements).filter(i)
                : e(i).filter(function () {
                    return 0 === e(this)._form().length;
                  })
              ).not(this.element)
            : e([]);
        },
        _toggleClasses: function () {
          var t = this.element[0].checked;
          this._toggleClass(
            this.label,
            "ui-checkboxradio-checked",
            "ui-state-active",
            t
          ),
            this.options.icon &&
              "checkbox" === this.type &&
              this._toggleClass(
                this.icon,
                null,
                "ui-icon-check ui-state-checked",
                t
              )._toggleClass(this.icon, null, "ui-icon-blank", !t),
            "radio" === this.type &&
              this._getRadioGroup().each(function () {
                var t = e(this).checkboxradio("instance");
                t &&
                  t._removeClass(
                    t.label,
                    "ui-checkboxradio-checked",
                    "ui-state-active"
                  );
              });
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.icon && (this.icon.remove(), this.iconSpace.remove());
        },
        _setOption: function (e, t) {
          if ("label" !== e || t) {
            if ((this._super(e, t), "disabled" === e))
              return (
                this._toggleClass(this.label, null, "ui-state-disabled", t),
                void (this.element[0].disabled = t)
              );
            this.refresh();
          }
        },
        _updateIcon: function (t) {
          var i = "ui-icon ui-icon-background ";
          this.options.icon
            ? (this.icon ||
                ((this.icon = e("<span>")),
                (this.iconSpace = e("<span> </span>")),
                this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
              "checkbox" === this.type
                ? ((i += t
                    ? "ui-icon-check ui-state-checked"
                    : "ui-icon-blank"),
                  this._removeClass(
                    this.icon,
                    null,
                    t ? "ui-icon-blank" : "ui-icon-check"
                  ))
                : (i += "ui-icon-blank"),
              this._addClass(this.icon, "ui-checkboxradio-icon", i),
              t ||
                this._removeClass(
                  this.icon,
                  null,
                  "ui-icon-check ui-state-checked"
                ),
              this.icon.prependTo(this.label).after(this.iconSpace))
            : void 0 !== this.icon &&
              (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
        },
        _updateLabel: function () {
          var e = this.label.contents().not(this.element[0]);
          this.icon && (e = e.not(this.icon[0])),
            (e = this.iconSpace ? e.not(this.iconSpace[0]) : e).remove(),
            this.label.append(this.options.label);
        },
        refresh: function () {
          var e = this.element[0].checked,
            t = this.element[0].disabled;
          this._updateIcon(e),
            this._toggleClass(
              this.label,
              "ui-checkboxradio-checked",
              "ui-state-active",
              e
            ),
            null !== this.options.label && this._updateLabel(),
            t !== this.options.disabled && this._setOptions({ disabled: t });
        },
      },
    ]),
    e.ui.checkboxradio,
    e.widget("ui.button", {
      version: "1.13.2",
      defaultElement: "<button>",
      options: {
        classes: { "ui-button": "ui-corner-all" },
        disabled: null,
        icon: null,
        iconPosition: "beginning",
        label: null,
        showLabel: !0,
      },
      _getCreateOptions: function () {
        var e,
          t = this._super() || {};
        return (
          (this.isInput = this.element.is("input")),
          null != (e = this.element[0].disabled) && (t.disabled = e),
          (this.originalLabel = this.isInput
            ? this.element.val()
            : this.element.html()),
          this.originalLabel && (t.label = this.originalLabel),
          t
        );
      },
      _create: function () {
        !this.option.showLabel & !this.options.icon &&
          (this.options.showLabel = !0),
          null == this.options.disabled &&
            (this.options.disabled = this.element[0].disabled || !1),
          (this.hasTitle = !!this.element.attr("title")),
          this.options.label &&
            this.options.label !== this.originalLabel &&
            (this.isInput
              ? this.element.val(this.options.label)
              : this.element.html(this.options.label)),
          this._addClass("ui-button", "ui-widget"),
          this._setOption("disabled", this.options.disabled),
          this._enhance(),
          this.element.is("a") &&
            this._on({
              keyup: function (t) {
                t.keyCode === e.ui.keyCode.SPACE &&
                  (t.preventDefault(),
                  this.element[0].click
                    ? this.element[0].click()
                    : this.element.trigger("click"));
              },
            });
      },
      _enhance: function () {
        this.element.is("button") || this.element.attr("role", "button"),
          this.options.icon &&
            (this._updateIcon("icon", this.options.icon),
            this._updateTooltip());
      },
      _updateTooltip: function () {
        (this.title = this.element.attr("title")),
          this.options.showLabel ||
            this.title ||
            this.element.attr("title", this.options.label);
      },
      _updateIcon: function (t, i) {
        var s = "iconPosition" !== t,
          n = s ? this.options.iconPosition : i;
        t = "top" === n || "bottom" === n;
        this.icon
          ? s && this._removeClass(this.icon, null, this.options.icon)
          : ((this.icon = e("<span>")),
            this._addClass(this.icon, "ui-button-icon", "ui-icon"),
            this.options.showLabel || this._addClass("ui-button-icon-only")),
          s && this._addClass(this.icon, null, i),
          this._attachIcon(n),
          t
            ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
              this.iconSpace && this.iconSpace.remove())
            : (this.iconSpace ||
                ((this.iconSpace = e("<span> </span>")),
                this._addClass(this.iconSpace, "ui-button-icon-space")),
              this._removeClass(this.icon, null, "ui-wiget-icon-block"),
              this._attachIconSpace(n));
      },
      _destroy: function () {
        this.element.removeAttr("role"),
          this.icon && this.icon.remove(),
          this.iconSpace && this.iconSpace.remove(),
          this.hasTitle || this.element.removeAttr("title");
      },
      _attachIconSpace: function (e) {
        this.icon[/^(?:end|bottom)/.test(e) ? "before" : "after"](
          this.iconSpace
        );
      },
      _attachIcon: function (e) {
        this.element[/^(?:end|bottom)/.test(e) ? "append" : "prepend"](
          this.icon
        );
      },
      _setOptions: function (e) {
        var t = (void 0 === e.showLabel ? this.options : e).showLabel,
          i = (void 0 === e.icon ? this.options : e).icon;
        t || i || (e.showLabel = !0), this._super(e);
      },
      _setOption: function (e, t) {
        "icon" === e &&
          (t
            ? this._updateIcon(e, t)
            : this.icon &&
              (this.icon.remove(), this.iconSpace && this.iconSpace.remove())),
          "iconPosition" === e && this._updateIcon(e, t),
          "showLabel" === e &&
            (this._toggleClass("ui-button-icon-only", null, !t),
            this._updateTooltip()),
          "label" === e &&
            (this.isInput
              ? this.element.val(t)
              : (this.element.html(t),
                this.icon &&
                  (this._attachIcon(this.options.iconPosition),
                  this._attachIconSpace(this.options.iconPosition)))),
          this._super(e, t),
          "disabled" === e &&
            (this._toggleClass(null, "ui-state-disabled", t),
            (this.element[0].disabled = t) && this.element.trigger("blur"));
      },
      refresh: function () {
        var e = this.element.is("input, button")
          ? this.element[0].disabled
          : this.element.hasClass("ui-button-disabled");
        e !== this.options.disabled && this._setOptions({ disabled: e }),
          this._updateTooltip();
      },
    }),
    !1 !== e.uiBackCompat &&
      (e.widget("ui.button", e.ui.button, {
        options: { text: !0, icons: { primary: null, secondary: null } },
        _create: function () {
          this.options.showLabel &&
            !this.options.text &&
            (this.options.showLabel = this.options.text),
            !this.options.showLabel &&
              this.options.text &&
              (this.options.text = this.options.showLabel),
            this.options.icon ||
            (!this.options.icons.primary && !this.options.icons.secondary)
              ? this.options.icon &&
                (this.options.icons.primary = this.options.icon)
              : this.options.icons.primary
              ? (this.options.icon = this.options.icons.primary)
              : ((this.options.icon = this.options.icons.secondary),
                (this.options.iconPosition = "end")),
            this._super();
        },
        _setOption: function (e, t) {
          "text" !== e
            ? ("showLabel" === e && (this.options.text = t),
              "icon" === e && (this.options.icons.primary = t),
              "icons" === e &&
                (t.primary
                  ? (this._super("icon", t.primary),
                    this._super("iconPosition", "beginning"))
                  : t.secondary &&
                    (this._super("icon", t.secondary),
                    this._super("iconPosition", "end"))),
              this._superApply(arguments))
            : this._super("showLabel", t);
        },
      }),
      (e.fn.button =
        ((ee = e.fn.button),
        function (t) {
          var i = "string" == typeof t,
            s = Array.prototype.slice.call(arguments, 1),
            n = this;
          return (
            i
              ? this.length || "instance" !== t
                ? this.each(function () {
                    var i = e(this).attr("type"),
                      a = e.data(
                        this,
                        "ui-" +
                          ("checkbox" !== i && "radio" !== i
                            ? "button"
                            : "checkboxradio")
                      );
                    return "instance" === t
                      ? ((n = a), !1)
                      : a
                      ? "function" != typeof a[t] || "_" === t.charAt(0)
                        ? e.error(
                            "no such method '" +
                              t +
                              "' for button widget instance"
                          )
                        : (i = a[t].apply(a, s)) !== a && void 0 !== i
                        ? ((n = i && i.jquery ? n.pushStack(i.get()) : i), !1)
                        : void 0
                      : e.error(
                          "cannot call methods on button prior to initialization; attempted to call method '" +
                            t +
                            "'"
                        );
                  })
                : (n = void 0)
              : (s.length && (t = e.widget.extend.apply(null, [t].concat(s))),
                this.each(function () {
                  var i,
                    s =
                      "checkbox" !== (i = e(this).attr("type")) && "radio" !== i
                        ? "button"
                        : "checkboxradio";
                  (i = e.data(this, "ui-" + s))
                    ? (i.option(t || {}), i._init && i._init())
                    : "button" != s
                    ? e(this).checkboxradio(e.extend({ icon: !1 }, t))
                    : ee.call(e(this), t);
                })),
            n
          );
        })),
      (e.fn.buttonset = function () {
        return (
          e.ui.controlgroup || e.error("Controlgroup widget missing"),
          "option" === arguments[0] && "items" === arguments[1] && arguments[2]
            ? this.controlgroup.apply(this, [
                arguments[0],
                "items.button",
                arguments[2],
              ])
            : "option" === arguments[0] && "items" === arguments[1]
            ? this.controlgroup.apply(this, [arguments[0], "items.button"])
            : ("object" == typeof arguments[0] &&
                arguments[0].items &&
                (arguments[0].items = { button: arguments[0].items }),
              this.controlgroup.apply(this, arguments))
        );
      })),
    e.ui.button,
    e.extend(e.ui, { datepicker: { version: "1.13.2" } }),
    e.extend(se.prototype, {
      markerClassName: "hasDatepicker",
      maxRows: 4,
      _widgetDatepicker: function () {
        return this.dpDiv;
      },
      setDefaults: function (e) {
        return re(this._defaults, e || {}), this;
      },
      _attachDatepicker: function (t, i) {
        var s,
          n = t.nodeName.toLowerCase(),
          a = "div" === n || "span" === n;
        t.id || ((this.uuid += 1), (t.id = "dp" + this.uuid)),
          ((s = this._newInst(e(t), a)).settings = e.extend({}, i || {})),
          "input" === n
            ? this._connectDatepicker(t, s)
            : a && this._inlineDatepicker(t, s);
      },
      _newInst: function (t, i) {
        return {
          id: t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
          input: t,
          selectedDay: 0,
          selectedMonth: 0,
          selectedYear: 0,
          drawMonth: 0,
          drawYear: 0,
          inline: i,
          dpDiv: i
            ? ne(
                e(
                  "<div class='" +
                    this._inlineClass +
                    " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
                )
              )
            : this.dpDiv,
        };
      },
      _connectDatepicker: function (t, i) {
        var s = e(t);
        (i.append = e([])),
          (i.trigger = e([])),
          s.hasClass(this.markerClassName) ||
            (this._attachments(s, i),
            s
              .addClass(this.markerClassName)
              .on("keydown", this._doKeyDown)
              .on("keypress", this._doKeyPress)
              .on("keyup", this._doKeyUp),
            this._autoSize(i),
            e.data(t, "datepicker", i),
            i.settings.disabled && this._disableDatepicker(t));
      },
      _attachments: function (t, i) {
        var s,
          n = this._get(i, "appendText"),
          a = this._get(i, "isRTL");
        i.append && i.append.remove(),
          n &&
            ((i.append = e("<span>").addClass(this._appendClass).text(n)),
            t[a ? "before" : "after"](i.append)),
          t.off("focus", this._showDatepicker),
          i.trigger && i.trigger.remove(),
          ("focus" !== (s = this._get(i, "showOn")) && "both" !== s) ||
            t.on("focus", this._showDatepicker),
          ("button" !== s && "both" !== s) ||
            ((n = this._get(i, "buttonText")),
            (s = this._get(i, "buttonImage")),
            this._get(i, "buttonImageOnly")
              ? (i.trigger = e("<img>")
                  .addClass(this._triggerClass)
                  .attr({ src: s, alt: n, title: n }))
              : ((i.trigger = e("<button type='button'>").addClass(
                  this._triggerClass
                )),
                s
                  ? i.trigger.html(
                      e("<img>").attr({ src: s, alt: n, title: n })
                    )
                  : i.trigger.text(n)),
            t[a ? "before" : "after"](i.trigger),
            i.trigger.on("click", function () {
              return (
                e.datepicker._datepickerShowing &&
                e.datepicker._lastInput === t[0]
                  ? e.datepicker._hideDatepicker()
                  : (e.datepicker._datepickerShowing &&
                      e.datepicker._lastInput !== t[0] &&
                      e.datepicker._hideDatepicker(),
                    e.datepicker._showDatepicker(t[0])),
                !1
              );
            }));
      },
      _autoSize: function (e) {
        var t, i, s, n, a, r;
        this._get(e, "autoSize") &&
          !e.inline &&
          ((a = new Date(2009, 11, 20)),
          (r = this._get(e, "dateFormat")).match(/[DM]/) &&
            ((t = function (e) {
              for (n = s = i = 0; n < e.length; n++)
                e[n].length > i && ((i = e[n].length), (s = n));
              return s;
            }),
            a.setMonth(
              t(this._get(e, r.match(/MM/) ? "monthNames" : "monthNamesShort"))
            ),
            a.setDate(
              t(this._get(e, r.match(/DD/) ? "dayNames" : "dayNamesShort")) +
                20 -
                a.getDay()
            )),
          e.input.attr("size", this._formatDate(e, a).length));
      },
      _inlineDatepicker: function (t, i) {
        var s = e(t);
        s.hasClass(this.markerClassName) ||
          (s.addClass(this.markerClassName).append(i.dpDiv),
          e.data(t, "datepicker", i),
          this._setDate(i, this._getDefaultDate(i), !0),
          this._updateDatepicker(i),
          this._updateAlternate(i),
          i.settings.disabled && this._disableDatepicker(t),
          i.dpDiv.css("display", "block"));
      },
      _dialogDatepicker: function (t, i, s, n, a) {
        var r,
          o = this._dialogInst;
        return (
          o ||
            ((this.uuid += 1),
            (r = "dp" + this.uuid),
            (this._dialogInput = e(
              "<input type='text' id='" +
                r +
                "' style='position: absolute; top: -100px; width: 0px;'/>"
            )),
            this._dialogInput.on("keydown", this._doKeyDown),
            e("body").append(this._dialogInput),
            ((o = this._dialogInst =
              this._newInst(this._dialogInput, !1)).settings = {}),
            e.data(this._dialogInput[0], "datepicker", o)),
          re(o.settings, n || {}),
          (i = i && i.constructor === Date ? this._formatDate(o, i) : i),
          this._dialogInput.val(i),
          (this._pos = a ? (a.length ? a : [a.pageX, a.pageY]) : null),
          this._pos ||
            ((r = document.documentElement.clientWidth),
            (n = document.documentElement.clientHeight),
            (i =
              document.documentElement.scrollLeft || document.body.scrollLeft),
            (a = document.documentElement.scrollTop || document.body.scrollTop),
            (this._pos = [r / 2 - 100 + i, n / 2 - 150 + a])),
          this._dialogInput
            .css("left", this._pos[0] + 20 + "px")
            .css("top", this._pos[1] + "px"),
          (o.settings.onSelect = s),
          (this._inDialog = !0),
          this.dpDiv.addClass(this._dialogClass),
          this._showDatepicker(this._dialogInput[0]),
          e.blockUI && e.blockUI(this.dpDiv),
          e.data(this._dialogInput[0], "datepicker", o),
          this
        );
      },
      _destroyDatepicker: function (t) {
        var i,
          s = e(t),
          n = e.data(t, "datepicker");
        s.hasClass(this.markerClassName) &&
          ((i = t.nodeName.toLowerCase()),
          e.removeData(t, "datepicker"),
          "input" === i
            ? (n.append.remove(),
              n.trigger.remove(),
              s
                .removeClass(this.markerClassName)
                .off("focus", this._showDatepicker)
                .off("keydown", this._doKeyDown)
                .off("keypress", this._doKeyPress)
                .off("keyup", this._doKeyUp))
            : ("div" !== i && "span" !== i) ||
              s.removeClass(this.markerClassName).empty(),
          te === n && ((te = null), (this._curInst = null)));
      },
      _enableDatepicker: function (t) {
        var i,
          s = e(t),
          n = e.data(t, "datepicker");
        s.hasClass(this.markerClassName) &&
          ("input" === (i = t.nodeName.toLowerCase())
            ? ((t.disabled = !1),
              n.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !1;
                })
                .end()
                .filter("img")
                .css({ opacity: "1.0", cursor: "" }))
            : ("div" !== i && "span" !== i) ||
              ((s = s.children("." + this._inlineClass))
                .children()
                .removeClass("ui-state-disabled"),
              s
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !1)),
          (this._disabledInputs = e.map(this._disabledInputs, function (e) {
            return e === t ? null : e;
          })));
      },
      _disableDatepicker: function (t) {
        var i,
          s = e(t),
          n = e.data(t, "datepicker");
        s.hasClass(this.markerClassName) &&
          ("input" === (i = t.nodeName.toLowerCase())
            ? ((t.disabled = !0),
              n.trigger
                .filter("button")
                .each(function () {
                  this.disabled = !0;
                })
                .end()
                .filter("img")
                .css({ opacity: "0.5", cursor: "default" }))
            : ("div" !== i && "span" !== i) ||
              ((s = s.children("." + this._inlineClass))
                .children()
                .addClass("ui-state-disabled"),
              s
                .find("select.ui-datepicker-month, select.ui-datepicker-year")
                .prop("disabled", !0)),
          (this._disabledInputs = e.map(this._disabledInputs, function (e) {
            return e === t ? null : e;
          })),
          (this._disabledInputs[this._disabledInputs.length] = t));
      },
      _isDisabledDatepicker: function (e) {
        if (!e) return !1;
        for (var t = 0; t < this._disabledInputs.length; t++)
          if (this._disabledInputs[t] === e) return !0;
        return !1;
      },
      _getInst: function (t) {
        try {
          return e.data(t, "datepicker");
        } catch (t) {
          throw "Missing instance data for this datepicker";
        }
      },
      _optionDatepicker: function (t, i, s) {
        var n,
          a,
          r = this._getInst(t);
        if (2 === arguments.length && "string" == typeof i)
          return "defaults" === i
            ? e.extend({}, e.datepicker._defaults)
            : r
            ? "all" === i
              ? e.extend({}, r.settings)
              : this._get(r, i)
            : null;
        (n = i || {}),
          "string" == typeof i && ((n = {})[i] = s),
          r &&
            (this._curInst === r && this._hideDatepicker(),
            (a = this._getDateDatepicker(t, !0)),
            (i = this._getMinMaxDate(r, "min")),
            (s = this._getMinMaxDate(r, "max")),
            re(r.settings, n),
            null !== i &&
              void 0 !== n.dateFormat &&
              void 0 === n.minDate &&
              (r.settings.minDate = this._formatDate(r, i)),
            null !== s &&
              void 0 !== n.dateFormat &&
              void 0 === n.maxDate &&
              (r.settings.maxDate = this._formatDate(r, s)),
            "disabled" in n &&
              (n.disabled
                ? this._disableDatepicker(t)
                : this._enableDatepicker(t)),
            this._attachments(e(t), r),
            this._autoSize(r),
            this._setDate(r, a),
            this._updateAlternate(r),
            this._updateDatepicker(r));
      },
      _changeDatepicker: function (e, t, i) {
        this._optionDatepicker(e, t, i);
      },
      _refreshDatepicker: function (e) {
        (e = this._getInst(e)) && this._updateDatepicker(e);
      },
      _setDateDatepicker: function (e, t) {
        (e = this._getInst(e)) &&
          (this._setDate(e, t),
          this._updateDatepicker(e),
          this._updateAlternate(e));
      },
      _getDateDatepicker: function (e, t) {
        return (
          (e = this._getInst(e)) && !e.inline && this._setDateFromField(e, t),
          e ? this._getDate(e) : null
        );
      },
      _doKeyDown: function (t) {
        var i,
          s,
          n = e.datepicker._getInst(t.target),
          a = !0,
          r = n.dpDiv.is(".ui-datepicker-rtl");
        if (((n._keyEvent = !0), e.datepicker._datepickerShowing))
          switch (t.keyCode) {
            case 9:
              e.datepicker._hideDatepicker(), (a = !1);
              break;
            case 13:
              return (
                (s = e(
                  "td." +
                    e.datepicker._dayOverClass +
                    ":not(." +
                    e.datepicker._currentClass +
                    ")",
                  n.dpDiv
                ))[0] &&
                  e.datepicker._selectDay(
                    t.target,
                    n.selectedMonth,
                    n.selectedYear,
                    s[0]
                  ),
                (i = e.datepicker._get(n, "onSelect"))
                  ? ((s = e.datepicker._formatDate(n)),
                    i.apply(n.input ? n.input[0] : null, [s, n]))
                  : e.datepicker._hideDatepicker(),
                !1
              );
            case 27:
              e.datepicker._hideDatepicker();
              break;
            case 33:
              e.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? -e.datepicker._get(n, "stepBigMonths")
                  : -e.datepicker._get(n, "stepMonths"),
                "M"
              );
              break;
            case 34:
              e.datepicker._adjustDate(
                t.target,
                t.ctrlKey
                  ? +e.datepicker._get(n, "stepBigMonths")
                  : +e.datepicker._get(n, "stepMonths"),
                "M"
              );
              break;
            case 35:
              (t.ctrlKey || t.metaKey) && e.datepicker._clearDate(t.target),
                (a = t.ctrlKey || t.metaKey);
              break;
            case 36:
              (t.ctrlKey || t.metaKey) && e.datepicker._gotoToday(t.target),
                (a = t.ctrlKey || t.metaKey);
              break;
            case 37:
              (t.ctrlKey || t.metaKey) &&
                e.datepicker._adjustDate(t.target, r ? 1 : -1, "D"),
                (a = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  e.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? -e.datepicker._get(n, "stepBigMonths")
                      : -e.datepicker._get(n, "stepMonths"),
                    "M"
                  );
              break;
            case 38:
              (t.ctrlKey || t.metaKey) &&
                e.datepicker._adjustDate(t.target, -7, "D"),
                (a = t.ctrlKey || t.metaKey);
              break;
            case 39:
              (t.ctrlKey || t.metaKey) &&
                e.datepicker._adjustDate(t.target, r ? -1 : 1, "D"),
                (a = t.ctrlKey || t.metaKey),
                t.originalEvent.altKey &&
                  e.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? +e.datepicker._get(n, "stepBigMonths")
                      : +e.datepicker._get(n, "stepMonths"),
                    "M"
                  );
              break;
            case 40:
              (t.ctrlKey || t.metaKey) &&
                e.datepicker._adjustDate(t.target, 7, "D"),
                (a = t.ctrlKey || t.metaKey);
              break;
            default:
              a = !1;
          }
        else
          36 === t.keyCode && t.ctrlKey
            ? e.datepicker._showDatepicker(this)
            : (a = !1);
        a && (t.preventDefault(), t.stopPropagation());
      },
      _doKeyPress: function (t) {
        var i,
          s = e.datepicker._getInst(t.target);
        if (e.datepicker._get(s, "constrainInput"))
          return (
            (i = e.datepicker._possibleChars(
              e.datepicker._get(s, "dateFormat")
            )),
            (s = String.fromCharCode(
              null == t.charCode ? t.keyCode : t.charCode
            )),
            t.ctrlKey || t.metaKey || s < " " || !i || -1 < i.indexOf(s)
          );
      },
      _doKeyUp: function (t) {
        if ((t = e.datepicker._getInst(t.target)).input.val() !== t.lastVal)
          try {
            e.datepicker.parseDate(
              e.datepicker._get(t, "dateFormat"),
              t.input ? t.input.val() : null,
              e.datepicker._getFormatConfig(t)
            ) &&
              (e.datepicker._setDateFromField(t),
              e.datepicker._updateAlternate(t),
              e.datepicker._updateDatepicker(t));
          } catch (t) {}
        return !0;
      },
      _showDatepicker: function (t) {
        var i, s, n, a;
        "input" !== (t = t.target || t).nodeName.toLowerCase() &&
          (t = e("input", t.parentNode)[0]),
          e.datepicker._isDisabledDatepicker(t) ||
            e.datepicker._lastInput === t ||
            ((a = e.datepicker._getInst(t)),
            e.datepicker._curInst &&
              e.datepicker._curInst !== a &&
              (e.datepicker._curInst.dpDiv.stop(!0, !0),
              a &&
                e.datepicker._datepickerShowing &&
                e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),
            !1 !==
              (s = (n = e.datepicker._get(a, "beforeShow"))
                ? n.apply(t, [t, a])
                : {}) &&
              (re(a.settings, s),
              (a.lastVal = null),
              (e.datepicker._lastInput = t),
              e.datepicker._setDateFromField(a),
              e.datepicker._inDialog && (t.value = ""),
              e.datepicker._pos ||
                ((e.datepicker._pos = e.datepicker._findPos(t)),
                (e.datepicker._pos[1] += t.offsetHeight)),
              (i = !1),
              e(t)
                .parents()
                .each(function () {
                  return !(i |= "fixed" === e(this).css("position"));
                }),
              (n = { left: e.datepicker._pos[0], top: e.datepicker._pos[1] }),
              (e.datepicker._pos = null),
              a.dpDiv.empty(),
              a.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px",
              }),
              e.datepicker._updateDatepicker(a),
              (n = e.datepicker._checkOffset(a, n, i)),
              a.dpDiv.css({
                position:
                  e.datepicker._inDialog && e.blockUI
                    ? "static"
                    : i
                    ? "fixed"
                    : "absolute",
                display: "none",
                left: n.left + "px",
                top: n.top + "px",
              }),
              a.inline ||
                ((s = e.datepicker._get(a, "showAnim")),
                (n = e.datepicker._get(a, "duration")),
                a.dpDiv.css(
                  "z-index",
                  (function (e) {
                    for (var t, i; e.length && e[0] !== document; ) {
                      if (
                        ("absolute" === (t = e.css("position")) ||
                          "relative" === t ||
                          "fixed" === t) &&
                        ((i = parseInt(e.css("zIndex"), 10)),
                        !isNaN(i) && 0 !== i)
                      )
                        return i;
                      e = e.parent();
                    }
                    return 0;
                  })(e(t)) + 1
                ),
                (e.datepicker._datepickerShowing = !0),
                e.effects && e.effects.effect[s]
                  ? a.dpDiv.show(s, e.datepicker._get(a, "showOptions"), n)
                  : a.dpDiv[s || "show"](s ? n : null),
                e.datepicker._shouldFocusInput(a) && a.input.trigger("focus"),
                (e.datepicker._curInst = a))));
      },
      _updateDatepicker: function (t) {
        (this.maxRows = 4),
          (te = t).dpDiv.empty().append(this._generateHTML(t)),
          this._attachHandlers(t);
        var i,
          s = this._getNumberOfMonths(t),
          n = s[1],
          a = t.dpDiv.find("." + this._dayOverClass + " a"),
          r = e.datepicker._get(t, "onUpdateDatepicker");
        0 < a.length && ae.apply(a.get(0)),
          t.dpDiv
            .removeClass(
              "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"
            )
            .width(""),
          1 < n &&
            t.dpDiv
              .addClass("ui-datepicker-multi-" + n)
              .css("width", 17 * n + "em"),
          t.dpDiv[(1 !== s[0] || 1 !== s[1] ? "add" : "remove") + "Class"](
            "ui-datepicker-multi"
          ),
          t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"](
            "ui-datepicker-rtl"
          ),
          t === e.datepicker._curInst &&
            e.datepicker._datepickerShowing &&
            e.datepicker._shouldFocusInput(t) &&
            t.input.trigger("focus"),
          t.yearshtml &&
            ((i = t.yearshtml),
            setTimeout(function () {
              i === t.yearshtml &&
                t.yearshtml &&
                t.dpDiv
                  .find("select.ui-datepicker-year")
                  .first()
                  .replaceWith(t.yearshtml),
                (i = t.yearshtml = null);
            }, 0)),
          r && r.apply(t.input ? t.input[0] : null, [t]);
      },
      _shouldFocusInput: function (e) {
        return (
          e.input &&
          e.input.is(":visible") &&
          !e.input.is(":disabled") &&
          !e.input.is(":focus")
        );
      },
      _checkOffset: function (t, i, s) {
        var n = t.dpDiv.outerWidth(),
          a = t.dpDiv.outerHeight(),
          r = t.input ? t.input.outerWidth() : 0,
          o = t.input ? t.input.outerHeight() : 0,
          l =
            document.documentElement.clientWidth +
            (s ? 0 : e(document).scrollLeft()),
          c =
            document.documentElement.clientHeight +
            (s ? 0 : e(document).scrollTop());
        return (
          (i.left -= this._get(t, "isRTL") ? n - r : 0),
          (i.left -=
            s && i.left === t.input.offset().left
              ? e(document).scrollLeft()
              : 0),
          (i.top -=
            s && i.top === t.input.offset().top + o
              ? e(document).scrollTop()
              : 0),
          (i.left -= Math.min(
            i.left,
            i.left + n > l && n < l ? Math.abs(i.left + n - l) : 0
          )),
          (i.top -= Math.min(
            i.top,
            i.top + a > c && a < c ? Math.abs(a + o) : 0
          )),
          i
        );
      },
      _findPos: function (t) {
        for (
          var i = this._getInst(t), s = this._get(i, "isRTL");
          t &&
          ("hidden" === t.type || 1 !== t.nodeType || e.expr.pseudos.hidden(t));

        )
          t = t[s ? "previousSibling" : "nextSibling"];
        return [(i = e(t).offset()).left, i.top];
      },
      _hideDatepicker: function (t) {
        var i,
          s,
          n = this._curInst;
        !n ||
          (t && n !== e.data(t, "datepicker")) ||
          (this._datepickerShowing &&
            ((i = this._get(n, "showAnim")),
            (s = this._get(n, "duration")),
            (t = function () {
              e.datepicker._tidyDialog(n);
            }),
            e.effects && (e.effects.effect[i] || e.effects[i])
              ? n.dpDiv.hide(i, e.datepicker._get(n, "showOptions"), s, t)
              : n.dpDiv[
                  "slideDown" === i
                    ? "slideUp"
                    : "fadeIn" === i
                    ? "fadeOut"
                    : "hide"
                ](i ? s : null, t),
            i || t(),
            (this._datepickerShowing = !1),
            (t = this._get(n, "onClose")) &&
              t.apply(n.input ? n.input[0] : null, [
                n.input ? n.input.val() : "",
                n,
              ]),
            (this._lastInput = null),
            this._inDialog &&
              (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px",
              }),
              e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))),
            (this._inDialog = !1)));
      },
      _tidyDialog: function (e) {
        e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
      },
      _checkExternalClick: function (t) {
        var i;
        e.datepicker._curInst &&
          ((i = e(t.target)),
          (t = e.datepicker._getInst(i[0])),
          ((i[0].id === e.datepicker._mainDivId ||
            0 !== i.parents("#" + e.datepicker._mainDivId).length ||
            i.hasClass(e.datepicker.markerClassName) ||
            i.closest("." + e.datepicker._triggerClass).length ||
            !e.datepicker._datepickerShowing ||
            (e.datepicker._inDialog && e.blockUI)) &&
            (!i.hasClass(e.datepicker.markerClassName) ||
              e.datepicker._curInst === t)) ||
            e.datepicker._hideDatepicker());
      },
      _adjustDate: function (t, i, s) {
        var n = e(t);
        t = this._getInst(n[0]);
        this._isDisabledDatepicker(n[0]) ||
          (this._adjustInstDate(t, i, s), this._updateDatepicker(t));
      },
      _gotoToday: function (t) {
        var i = e(t),
          s = this._getInst(i[0]);
        this._get(s, "gotoCurrent") && s.currentDay
          ? ((s.selectedDay = s.currentDay),
            (s.drawMonth = s.selectedMonth = s.currentMonth),
            (s.drawYear = s.selectedYear = s.currentYear))
          : ((t = new Date()),
            (s.selectedDay = t.getDate()),
            (s.drawMonth = s.selectedMonth = t.getMonth()),
            (s.drawYear = s.selectedYear = t.getFullYear())),
          this._notifyChange(s),
          this._adjustDate(i);
      },
      _selectMonthYear: function (t, i, s) {
        var n = e(t);
        ((t = this._getInst(n[0]))[
          "selected" + ("M" === s ? "Month" : "Year")
        ] = t["draw" + ("M" === s ? "Month" : "Year")] =
          parseInt(i.options[i.selectedIndex].value, 10)),
          this._notifyChange(t),
          this._adjustDate(n);
      },
      _selectDay: function (t, i, s, n) {
        var a = e(t);
        e(n).hasClass(this._unselectableClass) ||
          this._isDisabledDatepicker(a[0]) ||
          (((a = this._getInst(a[0])).selectedDay = a.currentDay =
            parseInt(e("a", n).attr("data-date"))),
          (a.selectedMonth = a.currentMonth = i),
          (a.selectedYear = a.currentYear = s),
          this._selectDate(
            t,
            this._formatDate(a, a.currentDay, a.currentMonth, a.currentYear)
          ));
      },
      _clearDate: function (t) {
        (t = e(t)), this._selectDate(t, "");
      },
      _selectDate: function (t, i) {
        var s = e(t);
        t = this._getInst(s[0]);
        (i = null != i ? i : this._formatDate(t)),
          t.input && t.input.val(i),
          this._updateAlternate(t),
          (s = this._get(t, "onSelect"))
            ? s.apply(t.input ? t.input[0] : null, [i, t])
            : t.input && t.input.trigger("change"),
          t.inline
            ? this._updateDatepicker(t)
            : (this._hideDatepicker(),
              (this._lastInput = t.input[0]),
              "object" != typeof t.input[0] && t.input.trigger("focus"),
              (this._lastInput = null));
      },
      _updateAlternate: function (t) {
        var i,
          s,
          n = this._get(t, "altField");
        n &&
          ((i = this._get(t, "altFormat") || this._get(t, "dateFormat")),
          (s = this._getDate(t)),
          (t = this.formatDate(i, s, this._getFormatConfig(t))),
          e(document).find(n).val(t));
      },
      noWeekends: function (e) {
        return [0 < (e = e.getDay()) && e < 6, ""];
      },
      iso8601Week: function (e) {
        var t = new Date(e.getTime());
        return (
          t.setDate(t.getDate() + 4 - (t.getDay() || 7)),
          (e = t.getTime()),
          t.setMonth(0),
          t.setDate(1),
          Math.floor(Math.round((e - t) / 864e5) / 7) + 1
        );
      },
      parseDate: function (t, i, s) {
        if (null == t || null == i) throw "Invalid arguments";
        if ("" === (i = "object" == typeof i ? i.toString() : i + ""))
          return null;
        for (
          var n,
            a,
            r,
            o = 0,
            l =
              "string" !=
              typeof (l =
                (s ? s.shortYearCutoff : null) ||
                this._defaults.shortYearCutoff)
                ? l
                : (new Date().getFullYear() % 100) + parseInt(l, 10),
            c = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort,
            h = (s ? s.dayNames : null) || this._defaults.dayNames,
            d =
              (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort,
            u = (s ? s.monthNames : null) || this._defaults.monthNames,
            p = -1,
            f = -1,
            m = -1,
            g = -1,
            v = !1,
            b = function (e) {
              return (e = x + 1 < t.length && t.charAt(x + 1) === e) && x++, e;
            },
            y = function (e) {
              var t = b(e);
              (t =
                "@" === e
                  ? 14
                  : "!" === e
                  ? 20
                  : "y" === e && t
                  ? 4
                  : "o" === e
                  ? 3
                  : 2),
                (t = new RegExp("^\\d{" + ("y" === e ? t : 1) + "," + t + "}"));
              if (!(t = i.substring(o).match(t)))
                throw "Missing number at position " + o;
              return (o += t[0].length), parseInt(t[0], 10);
            },
            _ = function (t, s, n) {
              var a = -1;
              s = e
                .map(b(t) ? n : s, function (e, t) {
                  return [[t, e]];
                })
                .sort(function (e, t) {
                  return -(e[1].length - t[1].length);
                });
              if (
                (e.each(s, function (e, t) {
                  var s = t[1];
                  if (i.substr(o, s.length).toLowerCase() === s.toLowerCase())
                    return (a = t[0]), (o += s.length), !1;
                }),
                -1 !== a)
              )
                return a + 1;
              throw "Unknown name at position " + o;
            },
            w = function () {
              if (i.charAt(o) !== t.charAt(x))
                throw "Unexpected literal at position " + o;
              o++;
            },
            x = 0;
          x < t.length;
          x++
        )
          if (v) "'" !== t.charAt(x) || b("'") ? w() : (v = !1);
          else
            switch (t.charAt(x)) {
              case "d":
                m = y("d");
                break;
              case "D":
                _("D", c, h);
                break;
              case "o":
                g = y("o");
                break;
              case "m":
                f = y("m");
                break;
              case "M":
                f = _("M", d, u);
                break;
              case "y":
                p = y("y");
                break;
              case "@":
                (p = (r = new Date(y("@"))).getFullYear()),
                  (f = r.getMonth() + 1),
                  (m = r.getDate());
                break;
              case "!":
                (p = (r = new Date(
                  (y("!") - this._ticksTo1970) / 1e4
                )).getFullYear()),
                  (f = r.getMonth() + 1),
                  (m = r.getDate());
                break;
              case "'":
                b("'") ? w() : (v = !0);
                break;
              default:
                w();
            }
        if (o < i.length && ((a = i.substr(o)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (-1 === p
            ? (p = new Date().getFullYear())
            : p < 100 &&
              (p +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (p <= l ? 0 : -100)),
          -1 < g)
        )
          for (f = 1, m = g; !(m <= (n = this._getDaysInMonth(p, f - 1))); )
            f++, (m -= n);
        if (
          (r = this._daylightSavingAdjust(
            new Date(p, f - 1, m)
          )).getFullYear() !== p ||
          r.getMonth() + 1 !== f ||
          r.getDate() !== m
        )
          throw "Invalid date";
        return r;
      },
      ATOM: "yy-mm-dd",
      COOKIE: "D, dd M yy",
      ISO_8601: "yy-mm-dd",
      RFC_822: "D, d M y",
      RFC_850: "DD, dd-M-y",
      RFC_1036: "D, d M y",
      RFC_1123: "D, d M yy",
      RFC_2822: "D, d M yy",
      RSS: "D, d M y",
      TICKS: "!",
      TIMESTAMP: "@",
      W3C: "yy-mm-dd",
      _ticksTo1970:
        24 *
        (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) *
        60 *
        60 *
        1e7,
      formatDate: function (e, t, i) {
        if (!t) return "";
        function s(e, t, i) {
          var s = "" + t;
          if (h(e)) for (; s.length < i; ) s = "0" + s;
          return s;
        }
        function n(e, t, i, s) {
          return (h(e) ? s : i)[t];
        }
        var a,
          r = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
          o = (i ? i.dayNames : null) || this._defaults.dayNames,
          l = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
          c = (i ? i.monthNames : null) || this._defaults.monthNames,
          h = function (t) {
            return (t = a + 1 < e.length && e.charAt(a + 1) === t) && a++, t;
          },
          d = "",
          u = !1;
        if (t)
          for (a = 0; a < e.length; a++)
            if (u)
              "'" !== e.charAt(a) || h("'") ? (d += e.charAt(a)) : (u = !1);
            else
              switch (e.charAt(a)) {
                case "d":
                  d += s("d", t.getDate(), 2);
                  break;
                case "D":
                  d += n("D", t.getDay(), r, o);
                  break;
                case "o":
                  d += s(
                    "o",
                    Math.round(
                      (new Date(
                        t.getFullYear(),
                        t.getMonth(),
                        t.getDate()
                      ).getTime() -
                        new Date(t.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  d += s("m", t.getMonth() + 1, 2);
                  break;
                case "M":
                  d += n("M", t.getMonth(), l, c);
                  break;
                case "y":
                  d += h("y")
                    ? t.getFullYear()
                    : (t.getFullYear() % 100 < 10 ? "0" : "") +
                      (t.getFullYear() % 100);
                  break;
                case "@":
                  d += t.getTime();
                  break;
                case "!":
                  d += 1e4 * t.getTime() + this._ticksTo1970;
                  break;
                case "'":
                  h("'") ? (d += "'") : (u = !0);
                  break;
                default:
                  d += e.charAt(a);
              }
        return d;
      },
      _possibleChars: function (e) {
        for (
          var t = "",
            i = !1,
            s = function (t) {
              return (t = n + 1 < e.length && e.charAt(n + 1) === t) && n++, t;
            },
            n = 0;
          n < e.length;
          n++
        )
          if (i) "'" !== e.charAt(n) || s("'") ? (t += e.charAt(n)) : (i = !1);
          else
            switch (e.charAt(n)) {
              case "d":
              case "m":
              case "y":
              case "@":
                t += "0123456789";
                break;
              case "D":
              case "M":
                return null;
              case "'":
                s("'") ? (t += "'") : (i = !0);
                break;
              default:
                t += e.charAt(n);
            }
        return t;
      },
      _get: function (e, t) {
        return (void 0 !== e.settings[t] ? e.settings : this._defaults)[t];
      },
      _setDateFromField: function (e, t) {
        if (e.input.val() !== e.lastVal) {
          var i = this._get(e, "dateFormat"),
            s = (e.lastVal = e.input ? e.input.val() : null),
            n = this._getDefaultDate(e),
            a = n,
            r = this._getFormatConfig(e);
          try {
            a = this.parseDate(i, s, r) || n;
          } catch (e) {
            s = t ? "" : s;
          }
          (e.selectedDay = a.getDate()),
            (e.drawMonth = e.selectedMonth = a.getMonth()),
            (e.drawYear = e.selectedYear = a.getFullYear()),
            (e.currentDay = s ? a.getDate() : 0),
            (e.currentMonth = s ? a.getMonth() : 0),
            (e.currentYear = s ? a.getFullYear() : 0),
            this._adjustInstDate(e);
        }
      },
      _getDefaultDate: function (e) {
        return this._restrictMinMax(
          e,
          this._determineDate(e, this._get(e, "defaultDate"), new Date())
        );
      },
      _determineDate: function (t, i, s) {
        var n, a;
        i =
          null == i || "" === i
            ? s
            : "string" == typeof i
            ? (function (i) {
                try {
                  return e.datepicker.parseDate(
                    e.datepicker._get(t, "dateFormat"),
                    i,
                    e.datepicker._getFormatConfig(t)
                  );
                } catch (i) {}
                for (
                  var s =
                      (i.toLowerCase().match(/^c/)
                        ? e.datepicker._getDate(t)
                        : null) || new Date(),
                    n = s.getFullYear(),
                    a = s.getMonth(),
                    r = s.getDate(),
                    o = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                    l = o.exec(i);
                  l;

                ) {
                  switch (l[2] || "d") {
                    case "d":
                    case "D":
                      r += parseInt(l[1], 10);
                      break;
                    case "w":
                    case "W":
                      r += 7 * parseInt(l[1], 10);
                      break;
                    case "m":
                    case "M":
                      (a += parseInt(l[1], 10)),
                        (r = Math.min(r, e.datepicker._getDaysInMonth(n, a)));
                      break;
                    case "y":
                    case "Y":
                      (n += parseInt(l[1], 10)),
                        (r = Math.min(r, e.datepicker._getDaysInMonth(n, a)));
                  }
                  l = o.exec(i);
                }
                return new Date(n, a, r);
              })(i)
            : "number" == typeof i
            ? isNaN(i)
              ? s
              : ((n = i), (a = new Date()).setDate(a.getDate() + n), a)
            : new Date(i.getTime());
        return (
          (i = i && "Invalid Date" === i.toString() ? s : i) &&
            (i.setHours(0),
            i.setMinutes(0),
            i.setSeconds(0),
            i.setMilliseconds(0)),
          this._daylightSavingAdjust(i)
        );
      },
      _daylightSavingAdjust: function (e) {
        return e
          ? (e.setHours(12 < e.getHours() ? e.getHours() + 2 : 0), e)
          : null;
      },
      _setDate: function (e, t, i) {
        var s = !t,
          n = e.selectedMonth,
          a = e.selectedYear;
        t = this._restrictMinMax(e, this._determineDate(e, t, new Date()));
        (e.selectedDay = e.currentDay = t.getDate()),
          (e.drawMonth = e.selectedMonth = e.currentMonth = t.getMonth()),
          (e.drawYear = e.selectedYear = e.currentYear = t.getFullYear()),
          (n === e.selectedMonth && a === e.selectedYear) ||
            i ||
            this._notifyChange(e),
          this._adjustInstDate(e),
          e.input && e.input.val(s ? "" : this._formatDate(e));
      },
      _getDate: function (e) {
        return !e.currentYear || (e.input && "" === e.input.val())
          ? null
          : this._daylightSavingAdjust(
              new Date(e.currentYear, e.currentMonth, e.currentDay)
            );
      },
      _attachHandlers: function (t) {
        var i = this._get(t, "stepMonths"),
          s = "#" + t.id.replace(/\\\\/g, "\\");
        t.dpDiv.find("[data-handler]").map(function () {
          var t = {
            prev: function () {
              e.datepicker._adjustDate(s, -i, "M");
            },
            next: function () {
              e.datepicker._adjustDate(s, +i, "M");
            },
            hide: function () {
              e.datepicker._hideDatepicker();
            },
            today: function () {
              e.datepicker._gotoToday(s);
            },
            selectDay: function () {
              return (
                e.datepicker._selectDay(
                  s,
                  +this.getAttribute("data-month"),
                  +this.getAttribute("data-year"),
                  this
                ),
                !1
              );
            },
            selectMonth: function () {
              return e.datepicker._selectMonthYear(s, this, "M"), !1;
            },
            selectYear: function () {
              return e.datepicker._selectMonthYear(s, this, "Y"), !1;
            },
          };
          e(this).on(
            this.getAttribute("data-event"),
            t[this.getAttribute("data-handler")]
          );
        });
      },
      _generateHTML: function (t) {
        var i,
          s,
          n,
          a,
          r,
          o,
          l,
          c,
          h,
          d,
          u,
          p,
          f,
          m,
          g,
          v,
          b,
          y,
          _,
          w,
          x,
          C,
          T,
          S,
          k,
          E,
          M,
          D,
          P,
          I,
          A,
          L,
          O = new Date(),
          z = this._daylightSavingAdjust(
            new Date(O.getFullYear(), O.getMonth(), O.getDate())
          ),
          H = this._get(t, "isRTL"),
          N = this._get(t, "showButtonPanel"),
          $ = this._get(t, "hideIfNoPrevNext"),
          W = this._get(t, "navigationAsDateFormat"),
          R = this._getNumberOfMonths(t),
          F = this._get(t, "showCurrentAtPos"),
          q = ((O = this._get(t, "stepMonths")), 1 !== R[0] || 1 !== R[1]),
          j = this._daylightSavingAdjust(
            t.currentDay
              ? new Date(t.currentYear, t.currentMonth, t.currentDay)
              : new Date(9999, 9, 9)
          ),
          B = this._getMinMaxDate(t, "min"),
          Y = this._getMinMaxDate(t, "max"),
          V = t.drawMonth - F,
          X = t.drawYear;
        if ((V < 0 && ((V += 12), X--), Y))
          for (
            i = this._daylightSavingAdjust(
              new Date(
                Y.getFullYear(),
                Y.getMonth() - R[0] * R[1] + 1,
                Y.getDate()
              )
            ),
              i = B && i < B ? B : i;
            this._daylightSavingAdjust(new Date(X, V, 1)) > i;

          )
            --V < 0 && ((V = 11), X--);
        for (
          t.drawMonth = V,
            t.drawYear = X,
            F = this._get(t, "prevText"),
            F = W
              ? this.formatDate(
                  F,
                  this._daylightSavingAdjust(new Date(X, V - O, 1)),
                  this._getFormatConfig(t)
                )
              : F,
            s = this._canAdjustMonth(t, -1, X, V)
              ? e("<a>")
                  .attr({
                    class: "ui-datepicker-prev ui-corner-all",
                    "data-handler": "prev",
                    "data-event": "click",
                    title: F,
                  })
                  .append(
                    e("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (H ? "e" : "w")
                      )
                      .text(F)
                  )[0].outerHTML
              : $
              ? ""
              : e("<a>")
                  .attr({
                    class: "ui-datepicker-prev ui-corner-all ui-state-disabled",
                    title: F,
                  })
                  .append(
                    e("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (H ? "e" : "w")
                      )
                      .text(F)
                  )[0].outerHTML,
            F = this._get(t, "nextText"),
            F = W
              ? this.formatDate(
                  F,
                  this._daylightSavingAdjust(new Date(X, V + O, 1)),
                  this._getFormatConfig(t)
                )
              : F,
            n = this._canAdjustMonth(t, 1, X, V)
              ? e("<a>")
                  .attr({
                    class: "ui-datepicker-next ui-corner-all",
                    "data-handler": "next",
                    "data-event": "click",
                    title: F,
                  })
                  .append(
                    e("<span>")
                      .addClass(
                        "ui-icon ui-icon-circle-triangle-" + (H ? "w" : "e")
                      )
                      .text(F)
                  )[0].outerHTML
              : $
              ? ""
              : e("<a>")
                  .attr({
                    class: "ui-datepicker-next ui-corner-all ui-state-disabled",
                    title: F,
                  })
                  .append(
                    e("<span>")
                      .attr(
                        "class",
                        "ui-icon ui-icon-circle-triangle-" + (H ? "w" : "e")
                      )
                      .text(F)
                  )[0].outerHTML,
            O = this._get(t, "currentText"),
            $ = this._get(t, "gotoCurrent") && t.currentDay ? j : z,
            O = W ? this.formatDate(O, $, this._getFormatConfig(t)) : O,
            F = "",
            t.inline ||
              (F = e("<button>")
                .attr({
                  type: "button",
                  class:
                    "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all",
                  "data-handler": "hide",
                  "data-event": "click",
                })
                .text(this._get(t, "closeText"))[0].outerHTML),
            W = "",
            N &&
              (W = e("<div class='ui-datepicker-buttonpane ui-widget-content'>")
                .append(H ? F : "")
                .append(
                  this._isInRange(t, $)
                    ? e("<button>")
                        .attr({
                          type: "button",
                          class:
                            "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all",
                          "data-handler": "today",
                          "data-event": "click",
                        })
                        .text(O)
                    : ""
                )
                .append(H ? "" : F)[0].outerHTML),
            a = parseInt(this._get(t, "firstDay"), 10),
            a = isNaN(a) ? 0 : a,
            r = this._get(t, "showWeek"),
            o = this._get(t, "dayNames"),
            l = this._get(t, "dayNamesMin"),
            c = this._get(t, "monthNames"),
            h = this._get(t, "monthNamesShort"),
            d = this._get(t, "beforeShowDay"),
            u = this._get(t, "showOtherMonths"),
            p = this._get(t, "selectOtherMonths"),
            f = this._getDefaultDate(t),
            m = "",
            v = 0;
          v < R[0];
          v++
        ) {
          for (b = "", this.maxRows = 4, y = 0; y < R[1]; y++) {
            if (
              ((_ = this._daylightSavingAdjust(new Date(X, V, t.selectedDay))),
              (w = " ui-corner-all"),
              (x = ""),
              q)
            ) {
              if (((x += "<div class='ui-datepicker-group"), 1 < R[1]))
                switch (y) {
                  case 0:
                    (x += " ui-datepicker-group-first"),
                      (w = " ui-corner-" + (H ? "right" : "left"));
                    break;
                  case R[1] - 1:
                    (x += " ui-datepicker-group-last"),
                      (w = " ui-corner-" + (H ? "left" : "right"));
                    break;
                  default:
                    (x += " ui-datepicker-group-middle"), (w = "");
                }
              x += "'>";
            }
            for (
              x +=
                "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                w +
                "'>" +
                (/all|left/.test(w) && 0 === v ? (H ? n : s) : "") +
                (/all|right/.test(w) && 0 === v ? (H ? s : n) : "") +
                this._generateMonthYearHeader(
                  t,
                  V,
                  X,
                  B,
                  Y,
                  0 < v || 0 < y,
                  c,
                  h
                ) +
                "</div><table class='ui-datepicker-calendar'><thead><tr>",
                C = r
                  ? "<th class='ui-datepicker-week-col'>" +
                    this._get(t, "weekHeader") +
                    "</th>"
                  : "",
                g = 0;
              g < 7;
              g++
            )
              C +=
                "<th scope='col'" +
                (5 <= (g + a + 6) % 7
                  ? " class='ui-datepicker-week-end'"
                  : "") +
                "><span title='" +
                o[(T = (g + a) % 7)] +
                "'>" +
                l[T] +
                "</span></th>";
            for (
              x += C + "</tr></thead><tbody>",
                k = this._getDaysInMonth(X, V),
                X === t.selectedYear &&
                  V === t.selectedMonth &&
                  (t.selectedDay = Math.min(t.selectedDay, k)),
                S = (this._getFirstDayOfMonth(X, V) - a + 7) % 7,
                k = Math.ceil((S + k) / 7),
                E = q && this.maxRows > k ? this.maxRows : k,
                this.maxRows = E,
                M = this._daylightSavingAdjust(new Date(X, V, 1 - S)),
                D = 0;
              D < E;
              D++
            ) {
              for (
                x += "<tr>",
                  P = r
                    ? "<td class='ui-datepicker-week-col'>" +
                      this._get(t, "calculateWeek")(M) +
                      "</td>"
                    : "",
                  g = 0;
                g < 7;
                g++
              )
                (I = d ? d.apply(t.input ? t.input[0] : null, [M]) : [!0, ""]),
                  (L =
                    ((A = M.getMonth() !== V) && !p) ||
                    !I[0] ||
                    (B && M < B) ||
                    (Y && Y < M)),
                  (P +=
                    "<td class='" +
                    (5 <= (g + a + 6) % 7 ? " ui-datepicker-week-end" : "") +
                    (A ? " ui-datepicker-other-month" : "") +
                    ((M.getTime() === _.getTime() &&
                      V === t.selectedMonth &&
                      t._keyEvent) ||
                    (f.getTime() === M.getTime() && f.getTime() === _.getTime())
                      ? " " + this._dayOverClass
                      : "") +
                    (L
                      ? " " + this._unselectableClass + " ui-state-disabled"
                      : "") +
                    (A && !u
                      ? ""
                      : " " +
                        I[1] +
                        (M.getTime() === j.getTime()
                          ? " " + this._currentClass
                          : "") +
                        (M.getTime() === z.getTime()
                          ? " ui-datepicker-today"
                          : "")) +
                    "'" +
                    ((A && !u) || !I[2]
                      ? ""
                      : " title='" + I[2].replace(/'/g, "&#39;") + "'") +
                    (L
                      ? ""
                      : " data-handler='selectDay' data-event='click' data-month='" +
                        M.getMonth() +
                        "' data-year='" +
                        M.getFullYear() +
                        "'") +
                    ">" +
                    (A && !u
                      ? "&#xa0;"
                      : L
                      ? "<span class='ui-state-default'>" +
                        M.getDate() +
                        "</span>"
                      : "<a class='ui-state-default" +
                        (M.getTime() === z.getTime()
                          ? " ui-state-highlight"
                          : "") +
                        (M.getTime() === j.getTime()
                          ? " ui-state-active"
                          : "") +
                        (A ? " ui-priority-secondary" : "") +
                        "' href='#' aria-current='" +
                        (M.getTime() === j.getTime() ? "true" : "false") +
                        "' data-date='" +
                        M.getDate() +
                        "'>" +
                        M.getDate() +
                        "</a>") +
                    "</td>"),
                  M.setDate(M.getDate() + 1),
                  (M = this._daylightSavingAdjust(M));
              x += P + "</tr>";
            }
            11 < ++V && ((V = 0), X++),
              (b += x +=
                "</tbody></table>" +
                (q
                  ? "</div>" +
                    (0 < R[0] && y === R[1] - 1
                      ? "<div class='ui-datepicker-row-break'></div>"
                      : "")
                  : ""));
          }
          m += b;
        }
        return (m += W), (t._keyEvent = !1), m;
      },
      _generateMonthYearHeader: function (e, t, i, s, n, a, r, o) {
        var l,
          c,
          h,
          d,
          u,
          p,
          f = this._get(e, "changeMonth"),
          m = this._get(e, "changeYear"),
          g = this._get(e, "showMonthAfterYear"),
          v = this._get(e, "selectMonthLabel"),
          b = this._get(e, "selectYearLabel"),
          y = "<div class='ui-datepicker-title'>",
          _ = "";
        if (a || !f)
          _ += "<span class='ui-datepicker-month'>" + r[t] + "</span>";
        else {
          for (
            l = s && s.getFullYear() === i,
              c = n && n.getFullYear() === i,
              _ +=
                "<select class='ui-datepicker-month' aria-label='" +
                v +
                "' data-handler='selectMonth' data-event='change'>",
              h = 0;
            h < 12;
            h++
          )
            (!l || h >= s.getMonth()) &&
              (!c || h <= n.getMonth()) &&
              (_ +=
                "<option value='" +
                h +
                "'" +
                (h === t ? " selected='selected'" : "") +
                ">" +
                o[h] +
                "</option>");
          _ += "</select>";
        }
        if ((g || (y += _ + (!a && f && m ? "" : "&#xa0;")), !e.yearshtml))
          if (((e.yearshtml = ""), a || !m))
            y += "<span class='ui-datepicker-year'>" + i + "</span>";
          else {
            for (
              r = this._get(e, "yearRange").split(":"),
                d = new Date().getFullYear(),
                u = (v = function (e) {
                  return (
                    (e = e.match(/c[+\-].*/)
                      ? i + parseInt(e.substring(1), 10)
                      : e.match(/[+\-].*/)
                      ? d + parseInt(e, 10)
                      : parseInt(e, 10)),
                    isNaN(e) ? d : e
                  );
                })(r[0]),
                p = Math.max(u, v(r[1] || "")),
                u = s ? Math.max(u, s.getFullYear()) : u,
                p = n ? Math.min(p, n.getFullYear()) : p,
                e.yearshtml +=
                  "<select class='ui-datepicker-year' aria-label='" +
                  b +
                  "' data-handler='selectYear' data-event='change'>";
              u <= p;
              u++
            )
              e.yearshtml +=
                "<option value='" +
                u +
                "'" +
                (u === i ? " selected='selected'" : "") +
                ">" +
                u +
                "</option>";
            (e.yearshtml += "</select>"),
              (y += e.yearshtml),
              (e.yearshtml = null);
          }
        return (
          (y += this._get(e, "yearSuffix")),
          g && (y += (!a && f && m ? "" : "&#xa0;") + _),
          y + "</div>"
        );
      },
      _adjustInstDate: function (e, t, i) {
        var s = e.selectedYear + ("Y" === i ? t : 0),
          n = e.selectedMonth + ("M" === i ? t : 0);
        (t =
          Math.min(e.selectedDay, this._getDaysInMonth(s, n)) +
          ("D" === i ? t : 0)),
          (t = this._restrictMinMax(
            e,
            this._daylightSavingAdjust(new Date(s, n, t))
          ));
        (e.selectedDay = t.getDate()),
          (e.drawMonth = e.selectedMonth = t.getMonth()),
          (e.drawYear = e.selectedYear = t.getFullYear()),
          ("M" !== i && "Y" !== i) || this._notifyChange(e);
      },
      _restrictMinMax: function (e, t) {
        var i = this._getMinMaxDate(e, "min");
        t = i && t < i ? i : t;
        return (e = this._getMinMaxDate(e, "max")) && e < t ? e : t;
      },
      _notifyChange: function (e) {
        var t = this._get(e, "onChangeMonthYear");
        t &&
          t.apply(e.input ? e.input[0] : null, [
            e.selectedYear,
            e.selectedMonth + 1,
            e,
          ]);
      },
      _getNumberOfMonths: function (e) {
        return null == (e = this._get(e, "numberOfMonths"))
          ? [1, 1]
          : "number" == typeof e
          ? [1, e]
          : e;
      },
      _getMinMaxDate: function (e, t) {
        return this._determineDate(e, this._get(e, t + "Date"), null);
      },
      _getDaysInMonth: function (e, t) {
        return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate();
      },
      _getFirstDayOfMonth: function (e, t) {
        return new Date(e, t, 1).getDay();
      },
      _canAdjustMonth: function (e, t, i, s) {
        var n = this._getNumberOfMonths(e);
        n = this._daylightSavingAdjust(
          new Date(i, s + (t < 0 ? t : n[0] * n[1]), 1)
        );
        return (
          t < 0 &&
            n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth())),
          this._isInRange(e, n)
        );
      },
      _isInRange: function (e, t) {
        var i = this._getMinMaxDate(e, "min"),
          s = this._getMinMaxDate(e, "max"),
          n = null,
          a = null,
          r = this._get(e, "yearRange");
        return (
          r &&
            ((e = r.split(":")),
            (r = new Date().getFullYear()),
            (n = parseInt(e[0], 10)),
            (a = parseInt(e[1], 10)),
            e[0].match(/[+\-].*/) && (n += r),
            e[1].match(/[+\-].*/) && (a += r)),
          (!i || t.getTime() >= i.getTime()) &&
            (!s || t.getTime() <= s.getTime()) &&
            (!n || t.getFullYear() >= n) &&
            (!a || t.getFullYear() <= a)
        );
      },
      _getFormatConfig: function (e) {
        var t = this._get(e, "shortYearCutoff");
        return {
          shortYearCutoff: (t =
            "string" != typeof t
              ? t
              : (new Date().getFullYear() % 100) + parseInt(t, 10)),
          dayNamesShort: this._get(e, "dayNamesShort"),
          dayNames: this._get(e, "dayNames"),
          monthNamesShort: this._get(e, "monthNamesShort"),
          monthNames: this._get(e, "monthNames"),
        };
      },
      _formatDate: function (e, t, i, s) {
        return (
          t ||
            ((e.currentDay = e.selectedDay),
            (e.currentMonth = e.selectedMonth),
            (e.currentYear = e.selectedYear)),
          (t = t
            ? "object" == typeof t
              ? t
              : this._daylightSavingAdjust(new Date(s, i, t))
            : this._daylightSavingAdjust(
                new Date(e.currentYear, e.currentMonth, e.currentDay)
              )),
          this.formatDate(
            this._get(e, "dateFormat"),
            t,
            this._getFormatConfig(e)
          )
        );
      },
    }),
    (e.fn.datepicker = function (t) {
      if (!this.length) return this;
      e.datepicker.initialized ||
        (e(document).on("mousedown", e.datepicker._checkExternalClick),
        (e.datepicker.initialized = !0)),
        0 === e("#" + e.datepicker._mainDivId).length &&
          e("body").append(e.datepicker.dpDiv);
      var i = Array.prototype.slice.call(arguments, 1);
      return ("string" == typeof t &&
        ("isDisabled" === t || "getDate" === t || "widget" === t)) ||
        ("option" === t &&
          2 === arguments.length &&
          "string" == typeof arguments[1])
        ? e.datepicker["_" + t + "Datepicker"].apply(
            e.datepicker,
            [this[0]].concat(i)
          )
        : this.each(function () {
            "string" == typeof t
              ? e.datepicker["_" + t + "Datepicker"].apply(
                  e.datepicker,
                  [this].concat(i)
                )
              : e.datepicker._attachDatepicker(this, t);
          });
    }),
    (e.datepicker = new se()),
    (e.datepicker.initialized = !1),
    (e.datepicker.uuid = new Date().getTime()),
    (e.datepicker.version = "1.13.2"),
    e.datepicker,
    (e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
  var oe,
    le = !1;
  function ce(e, t, i) {
    return t <= e && e < t + i;
  }
  function he(e) {
    return function () {
      var t = this.element.val();
      e.apply(this, arguments),
        this._refresh(),
        t !== this.element.val() && this._trigger("change");
    };
  }
  e(document).on("mouseup", function () {
    le = !1;
  }),
    e.widget("ui.mouse", {
      version: "1.13.2",
      options: {
        cancel: "input, textarea, button, select, option",
        distance: 1,
        delay: 0,
      },
      _mouseInit: function () {
        var t = this;
        this.element
          .on("mousedown." + this.widgetName, function (e) {
            return t._mouseDown(e);
          })
          .on("click." + this.widgetName, function (i) {
            if (!0 === e.data(i.target, t.widgetName + ".preventClickEvent"))
              return (
                e.removeData(i.target, t.widgetName + ".preventClickEvent"),
                i.stopImmediatePropagation(),
                !1
              );
          }),
          (this.started = !1);
      },
      _mouseDestroy: function () {
        this.element.off("." + this.widgetName),
          this._mouseMoveDelegate &&
            this.document
              .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
              .off("mouseup." + this.widgetName, this._mouseUpDelegate);
      },
      _mouseDown: function (t) {
        if (!le) {
          (this._mouseMoved = !1),
            this._mouseStarted && this._mouseUp(t),
            (this._mouseDownEvent = t);
          var i = this,
            s = 1 === t.which,
            n =
              !("string" != typeof this.options.cancel || !t.target.nodeName) &&
              e(t.target).closest(this.options.cancel).length;
          return (
            !(s && !n && this._mouseCapture(t)) ||
            ((this.mouseDelayMet = !this.options.delay),
            this.mouseDelayMet ||
              (this._mouseDelayTimer = setTimeout(function () {
                i.mouseDelayMet = !0;
              }, this.options.delay)),
            this._mouseDistanceMet(t) &&
            this._mouseDelayMet(t) &&
            ((this._mouseStarted = !1 !== this._mouseStart(t)),
            !this._mouseStarted)
              ? (t.preventDefault(), !0)
              : (!0 ===
                  e.data(t.target, this.widgetName + ".preventClickEvent") &&
                  e.removeData(
                    t.target,
                    this.widgetName + ".preventClickEvent"
                  ),
                (this._mouseMoveDelegate = function (e) {
                  return i._mouseMove(e);
                }),
                (this._mouseUpDelegate = function (e) {
                  return i._mouseUp(e);
                }),
                this.document
                  .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                  .on("mouseup." + this.widgetName, this._mouseUpDelegate),
                t.preventDefault(),
                (le = !0)))
          );
        }
      },
      _mouseMove: function (t) {
        if (this._mouseMoved) {
          if (
            e.ui.ie &&
            (!document.documentMode || document.documentMode < 9) &&
            !t.button
          )
            return this._mouseUp(t);
          if (!t.which)
            if (
              t.originalEvent.altKey ||
              t.originalEvent.ctrlKey ||
              t.originalEvent.metaKey ||
              t.originalEvent.shiftKey
            )
              this.ignoreMissingWhich = !0;
            else if (!this.ignoreMissingWhich) return this._mouseUp(t);
        }
        return (
          (t.which || t.button) && (this._mouseMoved = !0),
          this._mouseStarted
            ? (this._mouseDrag(t), t.preventDefault())
            : (this._mouseDistanceMet(t) &&
                this._mouseDelayMet(t) &&
                ((this._mouseStarted =
                  !1 !== this._mouseStart(this._mouseDownEvent, t)),
                this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
              !this._mouseStarted)
        );
      },
      _mouseUp: function (t) {
        this.document
          .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
          .off("mouseup." + this.widgetName, this._mouseUpDelegate),
          this._mouseStarted &&
            ((this._mouseStarted = !1),
            t.target === this._mouseDownEvent.target &&
              e.data(t.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(t)),
          this._mouseDelayTimer &&
            (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
          (this.ignoreMissingWhich = !1),
          (le = !1),
          t.preventDefault();
      },
      _mouseDistanceMet: function (e) {
        return (
          Math.max(
            Math.abs(this._mouseDownEvent.pageX - e.pageX),
            Math.abs(this._mouseDownEvent.pageY - e.pageY)
          ) >= this.options.distance
        );
      },
      _mouseDelayMet: function () {
        return this.mouseDelayMet;
      },
      _mouseStart: function () {},
      _mouseDrag: function () {},
      _mouseStop: function () {},
      _mouseCapture: function () {
        return !0;
      },
    }),
    (e.ui.plugin = {
      add: function (t, i, s) {
        var n,
          a = e.ui[t].prototype;
        for (n in s)
          (a.plugins[n] = a.plugins[n] || []), a.plugins[n].push([i, s[n]]);
      },
      call: function (e, t, i, s) {
        var n,
          a = e.plugins[t];
        if (
          a &&
          (s ||
            (e.element[0].parentNode &&
              11 !== e.element[0].parentNode.nodeType))
        )
          for (n = 0; n < a.length; n++)
            e.options[a[n][0]] && a[n][1].apply(e.element, i);
      },
    }),
    (e.ui.safeBlur = function (t) {
      t && "body" !== t.nodeName.toLowerCase() && e(t).trigger("blur");
    }),
    e.widget("ui.draggable", e.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "drag",
      options: {
        addClasses: !0,
        appendTo: "parent",
        axis: !1,
        connectToSortable: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        iframeFix: !1,
        opacity: !1,
        refreshPositions: !1,
        revert: !1,
        revertDuration: 500,
        scope: "default",
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        snap: !1,
        snapMode: "both",
        snapTolerance: 20,
        stack: !1,
        zIndex: !1,
        drag: null,
        start: null,
        stop: null,
      },
      _create: function () {
        "original" === this.options.helper && this._setPositionRelative(),
          this.options.addClasses && this._addClass("ui-draggable"),
          this._setHandleClassName(),
          this._mouseInit();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          "handle" === e &&
            (this._removeHandleClassName(), this._setHandleClassName());
      },
      _destroy: function () {
        (this.helper || this.element).is(".ui-draggable-dragging")
          ? (this.destroyOnClear = !0)
          : (this._removeHandleClassName(), this._mouseDestroy());
      },
      _mouseCapture: function (t) {
        var i = this.options;
        return !(
          this.helper ||
          i.disabled ||
          0 < e(t.target).closest(".ui-resizable-handle").length ||
          ((this.handle = this._getHandle(t)),
          !this.handle ||
            (this._blurActiveElement(t),
            this._blockFrames(!0 === i.iframeFix ? "iframe" : i.iframeFix),
            0))
        );
      },
      _blockFrames: function (t) {
        this.iframeBlocks = this.document.find(t).map(function () {
          var t = e(this);
          return e("<div>")
            .css("position", "absolute")
            .appendTo(t.parent())
            .outerWidth(t.outerWidth())
            .outerHeight(t.outerHeight())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _blurActiveElement: function (t) {
        var i = e.ui.safeActiveElement(this.document[0]);
        e(t.target).closest(i).length || e.ui.safeBlur(i);
      },
      _mouseStart: function (t) {
        var i = this.options;
        return (
          (this.helper = this._createHelper(t)),
          this._addClass(this.helper, "ui-draggable-dragging"),
          this._cacheHelperProportions(),
          e.ui.ddmanager && (e.ui.ddmanager.current = this),
          this._cacheMargins(),
          (this.cssPosition = this.helper.css("position")),
          (this.scrollParent = this.helper.scrollParent(!0)),
          (this.offsetParent = this.helper.offsetParent()),
          (this.hasFixedAncestor =
            0 <
            this.helper.parents().filter(function () {
              return "fixed" === e(this).css("position");
            }).length),
          (this.positionAbs = this.element.offset()),
          this._refreshOffsets(t),
          (this.originalPosition = this.position =
            this._generatePosition(t, !1)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
          this._setContainment(),
          !1 === this._trigger("start", t)
            ? (this._clear(), !1)
            : (this._cacheHelperProportions(),
              e.ui.ddmanager &&
                !i.dropBehaviour &&
                e.ui.ddmanager.prepareOffsets(this, t),
              this._mouseDrag(t, !0),
              e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t),
              !0)
        );
      },
      _refreshOffsets: function (e) {
        (this.offset = {
          top: this.positionAbs.top - this.margins.top,
          left: this.positionAbs.left - this.margins.left,
          scroll: !1,
          parent: this._getParentOffset(),
          relative: this._getRelativeOffset(),
        }),
          (this.offset.click = {
            left: e.pageX - this.offset.left,
            top: e.pageY - this.offset.top,
          });
      },
      _mouseDrag: function (t, i) {
        if (
          (this.hasFixedAncestor &&
            (this.offset.parent = this._getParentOffset()),
          (this.position = this._generatePosition(t, !0)),
          (this.positionAbs = this._convertPositionTo("absolute")),
          !i)
        ) {
          if (((i = this._uiHash()), !1 === this._trigger("drag", t, i)))
            return this._mouseUp(new e.Event("mouseup", t)), !1;
          this.position = i.position;
        }
        return (
          (this.helper[0].style.left = this.position.left + "px"),
          (this.helper[0].style.top = this.position.top + "px"),
          e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
          !1
        );
      },
      _mouseStop: function (t) {
        var i = this,
          s = !1;
        return (
          e.ui.ddmanager &&
            !this.options.dropBehaviour &&
            (s = e.ui.ddmanager.drop(this, t)),
          this.dropped && ((s = this.dropped), (this.dropped = !1)),
          ("invalid" === this.options.revert && !s) ||
          ("valid" === this.options.revert && s) ||
          !0 === this.options.revert ||
          ("function" == typeof this.options.revert &&
            this.options.revert.call(this.element, s))
            ? e(this.helper).animate(
                this.originalPosition,
                parseInt(this.options.revertDuration, 10),
                function () {
                  !1 !== i._trigger("stop", t) && i._clear();
                }
              )
            : !1 !== this._trigger("stop", t) && this._clear(),
          !1
        );
      },
      _mouseUp: function (t) {
        return (
          this._unblockFrames(),
          e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t),
          this.handleElement.is(t.target) && this.element.trigger("focus"),
          e.ui.mouse.prototype._mouseUp.call(this, t)
        );
      },
      cancel: function () {
        return (
          this.helper.is(".ui-draggable-dragging")
            ? this._mouseUp(new e.Event("mouseup", { target: this.element[0] }))
            : this._clear(),
          this
        );
      },
      _getHandle: function (t) {
        return (
          !this.options.handle ||
          !!e(t.target).closest(this.element.find(this.options.handle)).length
        );
      },
      _setHandleClassName: function () {
        (this.handleElement = this.options.handle
          ? this.element.find(this.options.handle)
          : this.element),
          this._addClass(this.handleElement, "ui-draggable-handle");
      },
      _removeHandleClassName: function () {
        this._removeClass(this.handleElement, "ui-draggable-handle");
      },
      _createHelper: function (t) {
        var i = this.options,
          s = "function" == typeof i.helper;
        return (
          (t = s
            ? e(i.helper.apply(this.element[0], [t]))
            : "clone" === i.helper
            ? this.element.clone().removeAttr("id")
            : this.element).parents("body").length ||
            t.appendTo(
              "parent" === i.appendTo ? this.element[0].parentNode : i.appendTo
            ),
          s && t[0] === this.element[0] && this._setPositionRelative(),
          t[0] === this.element[0] ||
            /(fixed|absolute)/.test(t.css("position")) ||
            t.css("position", "absolute"),
          t
        );
      },
      _setPositionRelative: function () {
        /^(?:r|a|f)/.test(this.element.css("position")) ||
          (this.element[0].style.position = "relative");
      },
      _adjustOffsetFromHelper: function (e) {
        "string" == typeof e && (e = e.split(" ")),
          "left" in
            (e = Array.isArray(e) ? { left: +e[0], top: +e[1] || 0 } : e) &&
            (this.offset.click.left = e.left + this.margins.left),
          "right" in e &&
            (this.offset.click.left =
              this.helperProportions.width - e.right + this.margins.left),
          "top" in e && (this.offset.click.top = e.top + this.margins.top),
          "bottom" in e &&
            (this.offset.click.top =
              this.helperProportions.height - e.bottom + this.margins.top);
      },
      _isRootNode: function (e) {
        return /(html|body)/i.test(e.tagName) || e === this.document[0];
      },
      _getParentOffset: function () {
        var t = this.offsetParent.offset(),
          i = this.document[0];
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== i &&
            e.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          {
            top:
              (t = this._isRootNode(this.offsetParent[0])
                ? { top: 0, left: 0 }
                : t).top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
        var e = this.element.position(),
          t = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            e.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollTop()),
          left:
            e.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollLeft()),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.element.css("marginLeft"), 10) || 0,
          top: parseInt(this.element.css("marginTop"), 10) || 0,
          right: parseInt(this.element.css("marginRight"), 10) || 0,
          bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          i,
          s,
          n = this.options,
          a = this.document[0];
        (this.relativeContainer = null),
          n.containment
            ? "window" !== n.containment
              ? "document" !== n.containment
                ? n.containment.constructor !== Array
                  ? ("parent" === n.containment &&
                      (n.containment = this.helper[0].parentNode),
                    (s = (i = e(n.containment))[0]) &&
                      ((t = /(scroll|auto)/.test(i.css("overflow"))),
                      (this.containment = [
                        (parseInt(i.css("borderLeftWidth"), 10) || 0) +
                          (parseInt(i.css("paddingLeft"), 10) || 0),
                        (parseInt(i.css("borderTopWidth"), 10) || 0) +
                          (parseInt(i.css("paddingTop"), 10) || 0),
                        (t
                          ? Math.max(s.scrollWidth, s.offsetWidth)
                          : s.offsetWidth) -
                          (parseInt(i.css("borderRightWidth"), 10) || 0) -
                          (parseInt(i.css("paddingRight"), 10) || 0) -
                          this.helperProportions.width -
                          this.margins.left -
                          this.margins.right,
                        (t
                          ? Math.max(s.scrollHeight, s.offsetHeight)
                          : s.offsetHeight) -
                          (parseInt(i.css("borderBottomWidth"), 10) || 0) -
                          (parseInt(i.css("paddingBottom"), 10) || 0) -
                          this.helperProportions.height -
                          this.margins.top -
                          this.margins.bottom,
                      ]),
                      (this.relativeContainer = i)))
                  : (this.containment = n.containment)
                : (this.containment = [
                    0,
                    0,
                    e(a).width() -
                      this.helperProportions.width -
                      this.margins.left,
                    (e(a).height() || a.body.parentNode.scrollHeight) -
                      this.helperProportions.height -
                      this.margins.top,
                  ])
              : (this.containment = [
                  e(window).scrollLeft() -
                    this.offset.relative.left -
                    this.offset.parent.left,
                  e(window).scrollTop() -
                    this.offset.relative.top -
                    this.offset.parent.top,
                  e(window).scrollLeft() +
                    e(window).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  e(window).scrollTop() +
                    (e(window).height() || a.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
            : (this.containment = null);
      },
      _convertPositionTo: function (e, t) {
        t = t || this.position;
        var i = "absolute" === e ? 1 : -1;
        e = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            t.top +
            this.offset.relative.top * i +
            this.offset.parent.top * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.top
              : e
              ? 0
              : this.offset.scroll.top) *
              i,
          left:
            t.left +
            this.offset.relative.left * i +
            this.offset.parent.left * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.left
              : e
              ? 0
              : this.offset.scroll.left) *
              i,
        };
      },
      _generatePosition: function (e, t) {
        var i,
          s = this.options,
          n = this._isRootNode(this.scrollParent[0]),
          a = e.pageX,
          r = e.pageY;
        return (
          (n && this.offset.scroll) ||
            (this.offset.scroll = {
              top: this.scrollParent.scrollTop(),
              left: this.scrollParent.scrollLeft(),
            }),
          t &&
            (this.containment &&
              ((i = this.relativeContainer
                ? ((i = this.relativeContainer.offset()),
                  [
                    this.containment[0] + i.left,
                    this.containment[1] + i.top,
                    this.containment[2] + i.left,
                    this.containment[3] + i.top,
                  ])
                : this.containment),
              e.pageX - this.offset.click.left < i[0] &&
                (a = i[0] + this.offset.click.left),
              e.pageY - this.offset.click.top < i[1] &&
                (r = i[1] + this.offset.click.top),
              e.pageX - this.offset.click.left > i[2] &&
                (a = i[2] + this.offset.click.left),
              e.pageY - this.offset.click.top > i[3] &&
                (r = i[3] + this.offset.click.top)),
            s.grid &&
              ((e = s.grid[1]
                ? this.originalPageY +
                  Math.round((r - this.originalPageY) / s.grid[1]) * s.grid[1]
                : this.originalPageY),
              (r =
                !i ||
                e - this.offset.click.top >= i[1] ||
                e - this.offset.click.top > i[3]
                  ? e
                  : e - this.offset.click.top >= i[1]
                  ? e - s.grid[1]
                  : e + s.grid[1]),
              (e = s.grid[0]
                ? this.originalPageX +
                  Math.round((a - this.originalPageX) / s.grid[0]) * s.grid[0]
                : this.originalPageX),
              (a =
                !i ||
                e - this.offset.click.left >= i[0] ||
                e - this.offset.click.left > i[2]
                  ? e
                  : e - this.offset.click.left >= i[0]
                  ? e - s.grid[0]
                  : e + s.grid[0])),
            "y" === s.axis && (a = this.originalPageX),
            "x" === s.axis && (r = this.originalPageY)),
          {
            top:
              r -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.top
                : n
                ? 0
                : this.offset.scroll.top),
            left:
              a -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.left
                : n
                ? 0
                : this.offset.scroll.left),
          }
        );
      },
      _clear: function () {
        this._removeClass(this.helper, "ui-draggable-dragging"),
          this.helper[0] === this.element[0] ||
            this.cancelHelperRemoval ||
            this.helper.remove(),
          (this.helper = null),
          (this.cancelHelperRemoval = !1),
          this.destroyOnClear && this.destroy();
      },
      _trigger: function (t, i, s) {
        return (
          (s = s || this._uiHash()),
          e.ui.plugin.call(this, t, [i, s, this], !0),
          /^(drag|start|stop)/.test(t) &&
            ((this.positionAbs = this._convertPositionTo("absolute")),
            (s.offset = this.positionAbs)),
          e.Widget.prototype._trigger.call(this, t, i, s)
        );
      },
      plugins: {},
      _uiHash: function () {
        return {
          helper: this.helper,
          position: this.position,
          originalPosition: this.originalPosition,
          offset: this.positionAbs,
        };
      },
    }),
    e.ui.plugin.add("draggable", "connectToSortable", {
      start: function (t, i, s) {
        var n = e.extend({}, i, { item: s.element });
        (s.sortables = []),
          e(s.options.connectToSortable).each(function () {
            var i = e(this).sortable("instance");
            i &&
              !i.options.disabled &&
              (s.sortables.push(i),
              i.refreshPositions(),
              i._trigger("activate", t, n));
          });
      },
      stop: function (t, i, s) {
        var n = e.extend({}, i, { item: s.element });
        (s.cancelHelperRemoval = !1),
          e.each(s.sortables, function () {
            var e = this;
            e.isOver
              ? ((e.isOver = 0),
                (s.cancelHelperRemoval = !0),
                (e.cancelHelperRemoval = !1),
                (e._storedCSS = {
                  position: e.placeholder.css("position"),
                  top: e.placeholder.css("top"),
                  left: e.placeholder.css("left"),
                }),
                e._mouseStop(t),
                (e.options.helper = e.options._helper))
              : ((e.cancelHelperRemoval = !0), e._trigger("deactivate", t, n));
          });
      },
      drag: function (t, i, s) {
        e.each(s.sortables, function () {
          var n = !1,
            a = this;
          (a.positionAbs = s.positionAbs),
            (a.helperProportions = s.helperProportions),
            (a.offset.click = s.offset.click),
            a._intersectsWith(a.containerCache) &&
              ((n = !0),
              e.each(s.sortables, function () {
                return (
                  (this.positionAbs = s.positionAbs),
                  (this.helperProportions = s.helperProportions),
                  (this.offset.click = s.offset.click),
                  (n =
                    (this === a ||
                      !this._intersectsWith(this.containerCache) ||
                      !e.contains(a.element[0], this.element[0])) &&
                    n)
                );
              })),
            n
              ? (a.isOver ||
                  ((a.isOver = 1),
                  (s._parent = i.helper.parent()),
                  (a.currentItem = i.helper
                    .appendTo(a.element)
                    .data("ui-sortable-item", !0)),
                  (a.options._helper = a.options.helper),
                  (a.options.helper = function () {
                    return i.helper[0];
                  }),
                  (t.target = a.currentItem[0]),
                  a._mouseCapture(t, !0),
                  a._mouseStart(t, !0, !0),
                  (a.offset.click.top = s.offset.click.top),
                  (a.offset.click.left = s.offset.click.left),
                  (a.offset.parent.left -=
                    s.offset.parent.left - a.offset.parent.left),
                  (a.offset.parent.top -=
                    s.offset.parent.top - a.offset.parent.top),
                  s._trigger("toSortable", t),
                  (s.dropped = a.element),
                  e.each(s.sortables, function () {
                    this.refreshPositions();
                  }),
                  (s.currentItem = s.element),
                  (a.fromOutside = s)),
                a.currentItem && (a._mouseDrag(t), (i.position = a.position)))
              : a.isOver &&
                ((a.isOver = 0),
                (a.cancelHelperRemoval = !0),
                (a.options._revert = a.options.revert),
                (a.options.revert = !1),
                a._trigger("out", t, a._uiHash(a)),
                a._mouseStop(t, !0),
                (a.options.revert = a.options._revert),
                (a.options.helper = a.options._helper),
                a.placeholder && a.placeholder.remove(),
                i.helper.appendTo(s._parent),
                s._refreshOffsets(t),
                (i.position = s._generatePosition(t, !0)),
                s._trigger("fromSortable", t),
                (s.dropped = !1),
                e.each(s.sortables, function () {
                  this.refreshPositions();
                }));
        });
      },
    }),
    e.ui.plugin.add("draggable", "cursor", {
      start: function (t, i, s) {
        var n = e("body");
        s = s.options;
        n.css("cursor") && (s._cursor = n.css("cursor")),
          n.css("cursor", s.cursor);
      },
      stop: function (t, i, s) {
        (s = s.options)._cursor && e("body").css("cursor", s._cursor);
      },
    }),
    e.ui.plugin.add("draggable", "opacity", {
      start: function (t, i, s) {
        (i = e(i.helper)),
          (s = s.options),
          i.css("opacity") && (s._opacity = i.css("opacity")),
          i.css("opacity", s.opacity);
      },
      stop: function (t, i, s) {
        (s = s.options)._opacity && e(i.helper).css("opacity", s._opacity);
      },
    }),
    e.ui.plugin.add("draggable", "scroll", {
      start: function (e, t, i) {
        i.scrollParentNotHidden ||
          (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
          i.scrollParentNotHidden[0] !== i.document[0] &&
            "HTML" !== i.scrollParentNotHidden[0].tagName &&
            (i.overflowOffset = i.scrollParentNotHidden.offset());
      },
      drag: function (t, i, s) {
        var n = s.options,
          a = !1,
          r = s.scrollParentNotHidden[0],
          o = s.document[0];
        r !== o && "HTML" !== r.tagName
          ? ((n.axis && "x" === n.axis) ||
              (s.overflowOffset.top + r.offsetHeight - t.pageY <
              n.scrollSensitivity
                ? (r.scrollTop = a = r.scrollTop + n.scrollSpeed)
                : t.pageY - s.overflowOffset.top < n.scrollSensitivity &&
                  (r.scrollTop = a = r.scrollTop - n.scrollSpeed)),
            (n.axis && "y" === n.axis) ||
              (s.overflowOffset.left + r.offsetWidth - t.pageX <
              n.scrollSensitivity
                ? (r.scrollLeft = a = r.scrollLeft + n.scrollSpeed)
                : t.pageX - s.overflowOffset.left < n.scrollSensitivity &&
                  (r.scrollLeft = a = r.scrollLeft - n.scrollSpeed)))
          : ((n.axis && "x" === n.axis) ||
              (t.pageY - e(o).scrollTop() < n.scrollSensitivity
                ? (a = e(o).scrollTop(e(o).scrollTop() - n.scrollSpeed))
                : e(window).height() - (t.pageY - e(o).scrollTop()) <
                    n.scrollSensitivity &&
                  (a = e(o).scrollTop(e(o).scrollTop() + n.scrollSpeed))),
            (n.axis && "y" === n.axis) ||
              (t.pageX - e(o).scrollLeft() < n.scrollSensitivity
                ? (a = e(o).scrollLeft(e(o).scrollLeft() - n.scrollSpeed))
                : e(window).width() - (t.pageX - e(o).scrollLeft()) <
                    n.scrollSensitivity &&
                  (a = e(o).scrollLeft(e(o).scrollLeft() + n.scrollSpeed)))),
          !1 !== a &&
            e.ui.ddmanager &&
            !n.dropBehaviour &&
            e.ui.ddmanager.prepareOffsets(s, t);
      },
    }),
    e.ui.plugin.add("draggable", "snap", {
      start: function (t, i, s) {
        var n = s.options;
        (s.snapElements = []),
          e(
            n.snap.constructor !== String
              ? n.snap.items || ":data(ui-draggable)"
              : n.snap
          ).each(function () {
            var t = e(this),
              i = t.offset();
            this !== s.element[0] &&
              s.snapElements.push({
                item: this,
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: i.top,
                left: i.left,
              });
          });
      },
      drag: function (t, i, s) {
        for (
          var n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            p = s.options,
            f = p.snapTolerance,
            m = i.offset.left,
            g = m + s.helperProportions.width,
            v = i.offset.top,
            b = v + s.helperProportions.height,
            y = s.snapElements.length - 1;
          0 <= y;
          y--
        )
          (c =
            (l = s.snapElements[y].left - s.margins.left) +
            s.snapElements[y].width),
            (d =
              (h = s.snapElements[y].top - s.margins.top) +
              s.snapElements[y].height),
            g < l - f ||
            c + f < m ||
            b < h - f ||
            d + f < v ||
            !e.contains(
              s.snapElements[y].item.ownerDocument,
              s.snapElements[y].item
            )
              ? (s.snapElements[y].snapping &&
                  s.options.snap.release &&
                  s.options.snap.release.call(
                    s.element,
                    t,
                    e.extend(s._uiHash(), { snapItem: s.snapElements[y].item })
                  ),
                (s.snapElements[y].snapping = !1))
              : ("inner" !== p.snapMode &&
                  ((n = Math.abs(h - b) <= f),
                  (a = Math.abs(d - v) <= f),
                  (r = Math.abs(l - g) <= f),
                  (o = Math.abs(c - m) <= f),
                  n &&
                    (i.position.top = s._convertPositionTo("relative", {
                      top: h - s.helperProportions.height,
                      left: 0,
                    }).top),
                  a &&
                    (i.position.top = s._convertPositionTo("relative", {
                      top: d,
                      left: 0,
                    }).top),
                  r &&
                    (i.position.left = s._convertPositionTo("relative", {
                      top: 0,
                      left: l - s.helperProportions.width,
                    }).left),
                  o &&
                    (i.position.left = s._convertPositionTo("relative", {
                      top: 0,
                      left: c,
                    }).left)),
                (u = n || a || r || o),
                "outer" !== p.snapMode &&
                  ((n = Math.abs(h - v) <= f),
                  (a = Math.abs(d - b) <= f),
                  (r = Math.abs(l - m) <= f),
                  (o = Math.abs(c - g) <= f),
                  n &&
                    (i.position.top = s._convertPositionTo("relative", {
                      top: h,
                      left: 0,
                    }).top),
                  a &&
                    (i.position.top = s._convertPositionTo("relative", {
                      top: d - s.helperProportions.height,
                      left: 0,
                    }).top),
                  r &&
                    (i.position.left = s._convertPositionTo("relative", {
                      top: 0,
                      left: l,
                    }).left),
                  o &&
                    (i.position.left = s._convertPositionTo("relative", {
                      top: 0,
                      left: c - s.helperProportions.width,
                    }).left)),
                !s.snapElements[y].snapping &&
                  (n || a || r || o || u) &&
                  s.options.snap.snap &&
                  s.options.snap.snap.call(
                    s.element,
                    t,
                    e.extend(s._uiHash(), { snapItem: s.snapElements[y].item })
                  ),
                (s.snapElements[y].snapping = n || a || r || o || u));
      },
    }),
    e.ui.plugin.add("draggable", "stack", {
      start: function (t, i, s) {
        var n;
        (s = s.options),
          (s = e.makeArray(e(s.stack)).sort(function (t, i) {
            return (
              (parseInt(e(t).css("zIndex"), 10) || 0) -
              (parseInt(e(i).css("zIndex"), 10) || 0)
            );
          }));
        s.length &&
          ((n = parseInt(e(s[0]).css("zIndex"), 10) || 0),
          e(s).each(function (t) {
            e(this).css("zIndex", n + t);
          }),
          this.css("zIndex", n + s.length));
      },
    }),
    e.ui.plugin.add("draggable", "zIndex", {
      start: function (t, i, s) {
        (i = e(i.helper)),
          (s = s.options),
          i.css("zIndex") && (s._zIndex = i.css("zIndex")),
          i.css("zIndex", s.zIndex);
      },
      stop: function (t, i, s) {
        (s = s.options)._zIndex && e(i.helper).css("zIndex", s._zIndex);
      },
    }),
    e.ui.draggable,
    e.widget("ui.resizable", e.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "resize",
      options: {
        alsoResize: !1,
        animate: !1,
        animateDuration: "slow",
        animateEasing: "swing",
        aspectRatio: !1,
        autoHide: !1,
        classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
        containment: !1,
        ghost: !1,
        grid: !1,
        handles: "e,s,se",
        helper: !1,
        maxHeight: null,
        maxWidth: null,
        minHeight: 10,
        minWidth: 10,
        zIndex: 90,
        resize: null,
        start: null,
        stop: null,
      },
      _num: function (e) {
        return parseFloat(e) || 0;
      },
      _isNumber: function (e) {
        return !isNaN(parseFloat(e));
      },
      _hasScroll: function (t, i) {
        if ("hidden" === e(t).css("overflow")) return !1;
        var s = i && "left" === i ? "scrollLeft" : "scrollTop";
        i = !1;
        if (0 < t[s]) return !0;
        try {
          (t[s] = 1), (i = 0 < t[s]), (t[s] = 0);
        } catch (t) {}
        return i;
      },
      _create: function () {
        var t,
          i = this.options,
          s = this;
        this._addClass("ui-resizable"),
          e.extend(this, {
            _aspectRatio: !!i.aspectRatio,
            aspectRatio: i.aspectRatio,
            originalElement: this.element,
            _proportionallyResizeElements: [],
            _helper:
              i.helper || i.ghost || i.animate
                ? i.helper || "ui-resizable-helper"
                : null,
          }),
          this.element[0].nodeName.match(
            /^(canvas|textarea|input|select|button|img)$/i
          ) &&
            (this.element.wrap(
              e("<div class='ui-wrapper'></div>").css({
                overflow: "hidden",
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left"),
              })
            ),
            (this.element = this.element
              .parent()
              .data("ui-resizable", this.element.resizable("instance"))),
            (this.elementIsWrapper = !0),
            (t = {
              marginTop: this.originalElement.css("marginTop"),
              marginRight: this.originalElement.css("marginRight"),
              marginBottom: this.originalElement.css("marginBottom"),
              marginLeft: this.originalElement.css("marginLeft"),
            }),
            this.element.css(t),
            this.originalElement.css("margin", 0),
            (this.originalResizeStyle = this.originalElement.css("resize")),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(
              this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block",
              })
            ),
            this.originalElement.css(t),
            this._proportionallyResize()),
          this._setupHandles(),
          i.autoHide &&
            e(this.element)
              .on("mouseenter", function () {
                i.disabled ||
                  (s._removeClass("ui-resizable-autohide"), s._handles.show());
              })
              .on("mouseleave", function () {
                i.disabled ||
                  s.resizing ||
                  (s._addClass("ui-resizable-autohide"), s._handles.hide());
              }),
          this._mouseInit();
      },
      _destroy: function () {
        function t(t) {
          e(t)
            .removeData("resizable")
            .removeData("ui-resizable")
            .off(".resizable");
        }
        var i;
        return (
          this._mouseDestroy(),
          this._addedHandles.remove(),
          this.elementIsWrapper &&
            (t(this.element),
            (i = this.element),
            this.originalElement
              .css({
                position: i.css("position"),
                width: i.outerWidth(),
                height: i.outerHeight(),
                top: i.css("top"),
                left: i.css("left"),
              })
              .insertAfter(i),
            i.remove()),
          this.originalElement.css("resize", this.originalResizeStyle),
          t(this.originalElement),
          this
        );
      },
      _setOption: function (e, t) {
        switch ((this._super(e, t), e)) {
          case "handles":
            this._removeHandles(), this._setupHandles();
            break;
          case "aspectRatio":
            this._aspectRatio = !!t;
        }
      },
      _setupHandles: function () {
        var t,
          i,
          s,
          n,
          a,
          r = this.options,
          o = this;
        if (
          ((this.handles =
            r.handles ||
            (e(".ui-resizable-handle", this.element).length
              ? {
                  n: ".ui-resizable-n",
                  e: ".ui-resizable-e",
                  s: ".ui-resizable-s",
                  w: ".ui-resizable-w",
                  se: ".ui-resizable-se",
                  sw: ".ui-resizable-sw",
                  ne: ".ui-resizable-ne",
                  nw: ".ui-resizable-nw",
                }
              : "e,s,se")),
          (this._handles = e()),
          (this._addedHandles = e()),
          this.handles.constructor === String)
        )
          for (
            "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
              s = this.handles.split(","),
              this.handles = {},
              i = 0;
            i < s.length;
            i++
          )
            (n = "ui-resizable-" + (t = String.prototype.trim.call(s[i]))),
              (a = e("<div>")),
              this._addClass(a, "ui-resizable-handle " + n),
              a.css({ zIndex: r.zIndex }),
              (this.handles[t] = ".ui-resizable-" + t),
              this.element.children(this.handles[t]).length ||
                (this.element.append(a),
                (this._addedHandles = this._addedHandles.add(a)));
        (this._renderAxis = function (t) {
          var i, s, n;
          for (i in ((t = t || this.element), this.handles))
            this.handles[i].constructor === String
              ? (this.handles[i] = this.element
                  .children(this.handles[i])
                  .first()
                  .show())
              : (this.handles[i].jquery || this.handles[i].nodeType) &&
                ((this.handles[i] = e(this.handles[i])),
                this._on(this.handles[i], { mousedown: o._mouseDown })),
              this.elementIsWrapper &&
                this.originalElement[0].nodeName.match(
                  /^(textarea|input|select|button)$/i
                ) &&
                ((s = e(this.handles[i], this.element)),
                (n = /sw|ne|nw|se|n|s/.test(i)
                  ? s.outerHeight()
                  : s.outerWidth()),
                (s = [
                  "padding",
                  /ne|nw|n/.test(i)
                    ? "Top"
                    : /se|sw|s/.test(i)
                    ? "Bottom"
                    : /^e$/.test(i)
                    ? "Right"
                    : "Left",
                ].join("")),
                t.css(s, n),
                this._proportionallyResize()),
              (this._handles = this._handles.add(this.handles[i]));
        }),
          this._renderAxis(this.element),
          (this._handles = this._handles.add(
            this.element.find(".ui-resizable-handle")
          )),
          this._handles.disableSelection(),
          this._handles.on("mouseover", function () {
            o.resizing ||
              (this.className &&
                (a = this.className.match(
                  /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i
                )),
              (o.axis = a && a[1] ? a[1] : "se"));
          }),
          r.autoHide &&
            (this._handles.hide(), this._addClass("ui-resizable-autohide"));
      },
      _removeHandles: function () {
        this._addedHandles.remove();
      },
      _mouseCapture: function (t) {
        var i,
          s,
          n = !1;
        for (i in this.handles)
          ((s = e(this.handles[i])[0]) !== t.target &&
            !e.contains(s, t.target)) ||
            (n = !0);
        return !this.options.disabled && n;
      },
      _mouseStart: function (t) {
        var i,
          s,
          n = this.options,
          a = this.element;
        return (
          (this.resizing = !0),
          this._renderProxy(),
          (i = this._num(this.helper.css("left"))),
          (s = this._num(this.helper.css("top"))),
          n.containment &&
            ((i += e(n.containment).scrollLeft() || 0),
            (s += e(n.containment).scrollTop() || 0)),
          (this.offset = this.helper.offset()),
          (this.position = { left: i, top: s }),
          (this.size = this._helper
            ? { width: this.helper.width(), height: this.helper.height() }
            : { width: a.width(), height: a.height() }),
          (this.originalSize = this._helper
            ? { width: a.outerWidth(), height: a.outerHeight() }
            : { width: a.width(), height: a.height() }),
          (this.sizeDiff = {
            width: a.outerWidth() - a.width(),
            height: a.outerHeight() - a.height(),
          }),
          (this.originalPosition = { left: i, top: s }),
          (this.originalMousePosition = { left: t.pageX, top: t.pageY }),
          (this.aspectRatio =
            "number" == typeof n.aspectRatio
              ? n.aspectRatio
              : this.originalSize.width / this.originalSize.height || 1),
          (n = e(".ui-resizable-" + this.axis).css("cursor")),
          e("body").css("cursor", "auto" === n ? this.axis + "-resize" : n),
          this._addClass("ui-resizable-resizing"),
          this._propagate("start", t),
          !0
        );
      },
      _mouseDrag: function (t) {
        var i = this.originalMousePosition,
          s = this.axis,
          n = t.pageX - i.left || 0;
        (i = t.pageY - i.top || 0), (s = this._change[s]);
        return (
          this._updatePrevProperties(),
          s &&
            ((i = s.apply(this, [t, n, i])),
            this._updateVirtualBoundaries(t.shiftKey),
            (this._aspectRatio || t.shiftKey) && (i = this._updateRatio(i, t)),
            (i = this._respectSize(i, t)),
            this._updateCache(i),
            this._propagate("resize", t),
            (i = this._applyChanges()),
            !this._helper &&
              this._proportionallyResizeElements.length &&
              this._proportionallyResize(),
            e.isEmptyObject(i) ||
              (this._updatePrevProperties(),
              this._trigger("resize", t, this.ui()),
              this._applyChanges())),
          !1
        );
      },
      _mouseStop: function (t) {
        this.resizing = !1;
        var i,
          s,
          n,
          a = this.options,
          r = this;
        return (
          this._helper &&
            ((n =
              (i =
                (s = this._proportionallyResizeElements).length &&
                /textarea/i.test(s[0].nodeName)) &&
              this._hasScroll(s[0], "left")
                ? 0
                : r.sizeDiff.height),
            (s = i ? 0 : r.sizeDiff.width),
            (i = {
              width: r.helper.width() - s,
              height: r.helper.height() - n,
            }),
            (s =
              parseFloat(r.element.css("left")) +
                (r.position.left - r.originalPosition.left) || null),
            (n =
              parseFloat(r.element.css("top")) +
                (r.position.top - r.originalPosition.top) || null),
            a.animate || this.element.css(e.extend(i, { top: n, left: s })),
            r.helper.height(r.size.height),
            r.helper.width(r.size.width),
            this._helper && !a.animate && this._proportionallyResize()),
          e("body").css("cursor", "auto"),
          this._removeClass("ui-resizable-resizing"),
          this._propagate("stop", t),
          this._helper && this.helper.remove(),
          !1
        );
      },
      _updatePrevProperties: function () {
        (this.prevPosition = {
          top: this.position.top,
          left: this.position.left,
        }),
          (this.prevSize = {
            width: this.size.width,
            height: this.size.height,
          });
      },
      _applyChanges: function () {
        var e = {};
        return (
          this.position.top !== this.prevPosition.top &&
            (e.top = this.position.top + "px"),
          this.position.left !== this.prevPosition.left &&
            (e.left = this.position.left + "px"),
          this.size.width !== this.prevSize.width &&
            (e.width = this.size.width + "px"),
          this.size.height !== this.prevSize.height &&
            (e.height = this.size.height + "px"),
          this.helper.css(e),
          e
        );
      },
      _updateVirtualBoundaries: function (e) {
        var t,
          i,
          s = this.options,
          n = {
            minWidth: this._isNumber(s.minWidth) ? s.minWidth : 0,
            maxWidth: this._isNumber(s.maxWidth) ? s.maxWidth : 1 / 0,
            minHeight: this._isNumber(s.minHeight) ? s.minHeight : 0,
            maxHeight: this._isNumber(s.maxHeight) ? s.maxHeight : 1 / 0,
          };
        (this._aspectRatio || e) &&
          ((t = n.minHeight * this.aspectRatio),
          (i = n.minWidth / this.aspectRatio),
          (s = n.maxHeight * this.aspectRatio),
          (e = n.maxWidth / this.aspectRatio),
          t > n.minWidth && (n.minWidth = t),
          i > n.minHeight && (n.minHeight = i),
          s < n.maxWidth && (n.maxWidth = s),
          e < n.maxHeight && (n.maxHeight = e)),
          (this._vBoundaries = n);
      },
      _updateCache: function (e) {
        (this.offset = this.helper.offset()),
          this._isNumber(e.left) && (this.position.left = e.left),
          this._isNumber(e.top) && (this.position.top = e.top),
          this._isNumber(e.height) && (this.size.height = e.height),
          this._isNumber(e.width) && (this.size.width = e.width);
      },
      _updateRatio: function (e) {
        var t = this.position,
          i = this.size,
          s = this.axis;
        return (
          this._isNumber(e.height)
            ? (e.width = e.height * this.aspectRatio)
            : this._isNumber(e.width) &&
              (e.height = e.width / this.aspectRatio),
          "sw" === s &&
            ((e.left = t.left + (i.width - e.width)), (e.top = null)),
          "nw" === s &&
            ((e.top = t.top + (i.height - e.height)),
            (e.left = t.left + (i.width - e.width))),
          e
        );
      },
      _respectSize: function (e) {
        var t = this._vBoundaries,
          i = this.axis,
          s = this._isNumber(e.width) && t.maxWidth && t.maxWidth < e.width,
          n = this._isNumber(e.height) && t.maxHeight && t.maxHeight < e.height,
          a = this._isNumber(e.width) && t.minWidth && t.minWidth > e.width,
          r = this._isNumber(e.height) && t.minHeight && t.minHeight > e.height,
          o = this.originalPosition.left + this.originalSize.width,
          l = this.originalPosition.top + this.originalSize.height,
          c = /sw|nw|w/.test(i);
        i = /nw|ne|n/.test(i);
        return (
          a && (e.width = t.minWidth),
          r && (e.height = t.minHeight),
          s && (e.width = t.maxWidth),
          n && (e.height = t.maxHeight),
          a && c && (e.left = o - t.minWidth),
          s && c && (e.left = o - t.maxWidth),
          r && i && (e.top = l - t.minHeight),
          n && i && (e.top = l - t.maxHeight),
          e.width || e.height || e.left || !e.top
            ? e.width || e.height || e.top || !e.left || (e.left = null)
            : (e.top = null),
          e
        );
      },
      _getPaddingPlusBorderDimensions: function (e) {
        for (
          var t = 0,
            i = [],
            s = [
              e.css("borderTopWidth"),
              e.css("borderRightWidth"),
              e.css("borderBottomWidth"),
              e.css("borderLeftWidth"),
            ],
            n = [
              e.css("paddingTop"),
              e.css("paddingRight"),
              e.css("paddingBottom"),
              e.css("paddingLeft"),
            ];
          t < 4;
          t++
        )
          (i[t] = parseFloat(s[t]) || 0), (i[t] += parseFloat(n[t]) || 0);
        return { height: i[0] + i[2], width: i[1] + i[3] };
      },
      _proportionallyResize: function () {
        if (this._proportionallyResizeElements.length)
          for (
            var e, t = 0, i = this.helper || this.element;
            t < this._proportionallyResizeElements.length;
            t++
          )
            (e = this._proportionallyResizeElements[t]),
              this.outerDimensions ||
                (this.outerDimensions =
                  this._getPaddingPlusBorderDimensions(e)),
              e.css({
                height: i.height() - this.outerDimensions.height || 0,
                width: i.width() - this.outerDimensions.width || 0,
              });
      },
      _renderProxy: function () {
        var t = this.element,
          i = this.options;
        (this.elementOffset = t.offset()),
          this._helper
            ? ((this.helper =
                this.helper || e("<div></div>").css({ overflow: "hidden" })),
              this._addClass(this.helper, this._helper),
              this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++i.zIndex,
              }),
              this.helper.appendTo("body").disableSelection())
            : (this.helper = this.element);
      },
      _change: {
        e: function (e, t) {
          return { width: this.originalSize.width + t };
        },
        w: function (e, t) {
          var i = this.originalSize;
          return { left: this.originalPosition.left + t, width: i.width - t };
        },
        n: function (e, t, i) {
          var s = this.originalSize;
          return { top: this.originalPosition.top + i, height: s.height - i };
        },
        s: function (e, t, i) {
          return { height: this.originalSize.height + i };
        },
        se: function (t, i, s) {
          return e.extend(
            this._change.s.apply(this, arguments),
            this._change.e.apply(this, [t, i, s])
          );
        },
        sw: function (t, i, s) {
          return e.extend(
            this._change.s.apply(this, arguments),
            this._change.w.apply(this, [t, i, s])
          );
        },
        ne: function (t, i, s) {
          return e.extend(
            this._change.n.apply(this, arguments),
            this._change.e.apply(this, [t, i, s])
          );
        },
        nw: function (t, i, s) {
          return e.extend(
            this._change.n.apply(this, arguments),
            this._change.w.apply(this, [t, i, s])
          );
        },
      },
      _propagate: function (t, i) {
        e.ui.plugin.call(this, t, [i, this.ui()]),
          "resize" !== t && this._trigger(t, i, this.ui());
      },
      plugins: {},
      ui: function () {
        return {
          originalElement: this.originalElement,
          element: this.element,
          helper: this.helper,
          position: this.position,
          size: this.size,
          originalSize: this.originalSize,
          originalPosition: this.originalPosition,
        };
      },
    }),
    e.ui.plugin.add("resizable", "animate", {
      stop: function (t) {
        var i = e(this).resizable("instance"),
          s = i.options,
          n = i._proportionallyResizeElements,
          a =
            (o = n.length && /textarea/i.test(n[0].nodeName)) &&
            i._hasScroll(n[0], "left")
              ? 0
              : i.sizeDiff.height,
          r = o ? 0 : i.sizeDiff.width,
          o = { width: i.size.width - r, height: i.size.height - a };
        (r =
          parseFloat(i.element.css("left")) +
            (i.position.left - i.originalPosition.left) || null),
          (a =
            parseFloat(i.element.css("top")) +
              (i.position.top - i.originalPosition.top) || null);
        i.element.animate(e.extend(o, a && r ? { top: a, left: r } : {}), {
          duration: s.animateDuration,
          easing: s.animateEasing,
          step: function () {
            var s = {
              width: parseFloat(i.element.css("width")),
              height: parseFloat(i.element.css("height")),
              top: parseFloat(i.element.css("top")),
              left: parseFloat(i.element.css("left")),
            };
            n && n.length && e(n[0]).css({ width: s.width, height: s.height }),
              i._updateCache(s),
              i._propagate("resize", t);
          },
        });
      },
    }),
    e.ui.plugin.add("resizable", "containment", {
      start: function () {
        var t,
          i,
          s = e(this).resizable("instance"),
          n = s.options,
          a = s.element,
          r = n.containment,
          o =
            r instanceof e
              ? r.get(0)
              : /parent/.test(r)
              ? a.parent().get(0)
              : r;
        o &&
          ((s.containerElement = e(o)),
          /document/.test(r) || r === document
            ? ((s.containerOffset = { left: 0, top: 0 }),
              (s.containerPosition = { left: 0, top: 0 }),
              (s.parentData = {
                element: e(document),
                left: 0,
                top: 0,
                width: e(document).width(),
                height:
                  e(document).height() || document.body.parentNode.scrollHeight,
              }))
            : ((t = e(o)),
              (i = []),
              e(["Top", "Right", "Left", "Bottom"]).each(function (e, n) {
                i[e] = s._num(t.css("padding" + n));
              }),
              (s.containerOffset = t.offset()),
              (s.containerPosition = t.position()),
              (s.containerSize = {
                height: t.innerHeight() - i[3],
                width: t.innerWidth() - i[1],
              }),
              (n = s.containerOffset),
              (a = s.containerSize.height),
              (r = s.containerSize.width),
              (r = s._hasScroll(o, "left") ? o.scrollWidth : r),
              (a = s._hasScroll(o) ? o.scrollHeight : a),
              (s.parentData = {
                element: o,
                left: n.left,
                top: n.top,
                width: r,
                height: a,
              })));
      },
      resize: function (t) {
        var i = e(this).resizable("instance"),
          s = i.options,
          n = i.containerOffset,
          a = i.position,
          r = i._aspectRatio || t.shiftKey,
          o = { top: 0, left: 0 },
          l = i.containerElement;
        t = !0;
        l[0] !== document && /static/.test(l.css("position")) && (o = n),
          a.left < (i._helper ? n.left : 0) &&
            ((i.size.width =
              i.size.width +
              (i._helper
                ? i.position.left - n.left
                : i.position.left - o.left)),
            r && ((i.size.height = i.size.width / i.aspectRatio), (t = !1)),
            (i.position.left = s.helper ? n.left : 0)),
          a.top < (i._helper ? n.top : 0) &&
            ((i.size.height =
              i.size.height +
              (i._helper ? i.position.top - n.top : i.position.top)),
            r && ((i.size.width = i.size.height * i.aspectRatio), (t = !1)),
            (i.position.top = i._helper ? n.top : 0)),
          (s = i.containerElement.get(0) === i.element.parent().get(0)),
          (a = /relative|absolute/.test(i.containerElement.css("position"))),
          s && a
            ? ((i.offset.left = i.parentData.left + i.position.left),
              (i.offset.top = i.parentData.top + i.position.top))
            : ((i.offset.left = i.element.offset().left),
              (i.offset.top = i.element.offset().top)),
          (a = Math.abs(
            i.sizeDiff.width +
              (i._helper ? i.offset.left - o.left : i.offset.left - n.left)
          )),
          (n = Math.abs(
            i.sizeDiff.height +
              (i._helper ? i.offset.top - o.top : i.offset.top - n.top)
          )),
          a + i.size.width >= i.parentData.width &&
            ((i.size.width = i.parentData.width - a),
            r && ((i.size.height = i.size.width / i.aspectRatio), (t = !1))),
          n + i.size.height >= i.parentData.height &&
            ((i.size.height = i.parentData.height - n),
            r && ((i.size.width = i.size.height * i.aspectRatio), (t = !1))),
          t ||
            ((i.position.left = i.prevPosition.left),
            (i.position.top = i.prevPosition.top),
            (i.size.width = i.prevSize.width),
            (i.size.height = i.prevSize.height));
      },
      stop: function () {
        var t = e(this).resizable("instance"),
          i = t.options,
          s = t.containerOffset,
          n = t.containerPosition,
          a = t.containerElement,
          r = (l = e(t.helper)).offset(),
          o = l.outerWidth() - t.sizeDiff.width,
          l = l.outerHeight() - t.sizeDiff.height;
        t._helper &&
          !i.animate &&
          /relative/.test(a.css("position")) &&
          e(this).css({ left: r.left - n.left - s.left, width: o, height: l }),
          t._helper &&
            !i.animate &&
            /static/.test(a.css("position")) &&
            e(this).css({
              left: r.left - n.left - s.left,
              width: o,
              height: l,
            });
      },
    }),
    e.ui.plugin.add("resizable", "alsoResize", {
      start: function () {
        var t = e(this).resizable("instance").options;
        e(t.alsoResize).each(function () {
          var t = e(this);
          t.data("ui-resizable-alsoresize", {
            width: parseFloat(t.width()),
            height: parseFloat(t.height()),
            left: parseFloat(t.css("left")),
            top: parseFloat(t.css("top")),
          });
        });
      },
      resize: function (t, i) {
        var s = e(this).resizable("instance"),
          n = s.options,
          a = s.originalSize,
          r = s.originalPosition,
          o = {
            height: s.size.height - a.height || 0,
            width: s.size.width - a.width || 0,
            top: s.position.top - r.top || 0,
            left: s.position.left - r.left || 0,
          };
        e(n.alsoResize).each(function () {
          var t = e(this),
            s = e(this).data("ui-resizable-alsoresize"),
            n = {},
            a = t.parents(i.originalElement[0]).length
              ? ["width", "height"]
              : ["width", "height", "top", "left"];
          e.each(a, function (e, t) {
            var i = (s[t] || 0) + (o[t] || 0);
            i && 0 <= i && (n[t] = i || null);
          }),
            t.css(n);
        });
      },
      stop: function () {
        e(this).removeData("ui-resizable-alsoresize");
      },
    }),
    e.ui.plugin.add("resizable", "ghost", {
      start: function () {
        var t = e(this).resizable("instance"),
          i = t.size;
        (t.ghost = t.originalElement.clone()),
          t.ghost.css({
            opacity: 0.25,
            display: "block",
            position: "relative",
            height: i.height,
            width: i.width,
            margin: 0,
            left: 0,
            top: 0,
          }),
          t._addClass(t.ghost, "ui-resizable-ghost"),
          !1 !== e.uiBackCompat &&
            "string" == typeof t.options.ghost &&
            t.ghost.addClass(this.options.ghost),
          t.ghost.appendTo(t.helper);
      },
      resize: function () {
        var t = e(this).resizable("instance");
        t.ghost &&
          t.ghost.css({
            position: "relative",
            height: t.size.height,
            width: t.size.width,
          });
      },
      stop: function () {
        var t = e(this).resizable("instance");
        t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
      },
    }),
    e.ui.plugin.add("resizable", "grid", {
      resize: function () {
        var t,
          i = e(this).resizable("instance"),
          s = i.options,
          n = i.size,
          a = i.originalSize,
          r = i.originalPosition,
          o = i.axis,
          l = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid,
          c = l[0] || 1,
          h = l[1] || 1,
          d = Math.round((n.width - a.width) / c) * c,
          u = Math.round((n.height - a.height) / h) * h,
          p = a.width + d,
          f = a.height + u,
          m = s.maxWidth && s.maxWidth < p,
          g = s.maxHeight && s.maxHeight < f,
          v = s.minWidth && s.minWidth > p;
        n = s.minHeight && s.minHeight > f;
        (s.grid = l),
          v && (p += c),
          n && (f += h),
          m && (p -= c),
          g && (f -= h),
          /^(se|s|e)$/.test(o)
            ? ((i.size.width = p), (i.size.height = f))
            : /^(ne)$/.test(o)
            ? ((i.size.width = p),
              (i.size.height = f),
              (i.position.top = r.top - u))
            : /^(sw)$/.test(o)
            ? ((i.size.width = p),
              (i.size.height = f),
              (i.position.left = r.left - d))
            : ((f - h <= 0 || p - c <= 0) &&
                (t = i._getPaddingPlusBorderDimensions(this)),
              0 < f - h
                ? ((i.size.height = f), (i.position.top = r.top - u))
                : ((f = h - t.height),
                  (i.size.height = f),
                  (i.position.top = r.top + a.height - f)),
              0 < p - c
                ? ((i.size.width = p), (i.position.left = r.left - d))
                : ((p = c - t.width),
                  (i.size.width = p),
                  (i.position.left = r.left + a.width - p)));
      },
    }),
    e.ui.resizable,
    e.widget("ui.dialog", {
      version: "1.13.2",
      options: {
        appendTo: "body",
        autoOpen: !0,
        buttons: [],
        classes: {
          "ui-dialog": "ui-corner-all",
          "ui-dialog-titlebar": "ui-corner-all",
        },
        closeOnEscape: !0,
        closeText: "Close",
        draggable: !0,
        hide: null,
        height: "auto",
        maxHeight: null,
        maxWidth: null,
        minHeight: 150,
        minWidth: 150,
        modal: !1,
        position: {
          my: "center",
          at: "center",
          of: window,
          collision: "fit",
          using: function (t) {
            var i = e(this).css(t).offset().top;
            i < 0 && e(this).css("top", t.top - i);
          },
        },
        resizable: !0,
        show: null,
        title: null,
        width: 300,
        beforeClose: null,
        close: null,
        drag: null,
        dragStart: null,
        dragStop: null,
        focus: null,
        open: null,
        resize: null,
        resizeStart: null,
        resizeStop: null,
      },
      sizeRelatedOptions: {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0,
      },
      resizableRelatedOptions: {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
      },
      _create: function () {
        (this.originalCss = {
          display: this.element[0].style.display,
          width: this.element[0].style.width,
          minHeight: this.element[0].style.minHeight,
          maxHeight: this.element[0].style.maxHeight,
          height: this.element[0].style.height,
        }),
          (this.originalPosition = {
            parent: this.element.parent(),
            index: this.element.parent().children().index(this.element),
          }),
          (this.originalTitle = this.element.attr("title")),
          null == this.options.title &&
            null != this.originalTitle &&
            (this.options.title = this.originalTitle),
          this.options.disabled && (this.options.disabled = !1),
          this._createWrapper(),
          this.element.show().removeAttr("title").appendTo(this.uiDialog),
          this._addClass("ui-dialog-content", "ui-widget-content"),
          this._createTitlebar(),
          this._createButtonPane(),
          this.options.draggable && e.fn.draggable && this._makeDraggable(),
          this.options.resizable && e.fn.resizable && this._makeResizable(),
          (this._isOpen = !1),
          this._trackFocus();
      },
      _init: function () {
        this.options.autoOpen && this.open();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return t && (t.jquery || t.nodeType)
          ? e(t)
          : this.document.find(t || "body").eq(0);
      },
      _destroy: function () {
        var e,
          t = this.originalPosition;
        this._untrackInstance(),
          this._destroyOverlay(),
          this.element.removeUniqueId().css(this.originalCss).detach(),
          this.uiDialog.remove(),
          this.originalTitle && this.element.attr("title", this.originalTitle),
          (e = t.parent.children().eq(t.index)).length &&
          e[0] !== this.element[0]
            ? e.before(this.element)
            : t.parent.append(this.element);
      },
      widget: function () {
        return this.uiDialog;
      },
      disable: e.noop,
      enable: e.noop,
      close: function (t) {
        var i = this;
        this._isOpen &&
          !1 !== this._trigger("beforeClose", t) &&
          ((this._isOpen = !1),
          (this._focusedElement = null),
          this._destroyOverlay(),
          this._untrackInstance(),
          this.opener.filter(":focusable").trigger("focus").length ||
            e.ui.safeBlur(e.ui.safeActiveElement(this.document[0])),
          this._hide(this.uiDialog, this.options.hide, function () {
            i._trigger("close", t);
          }));
      },
      isOpen: function () {
        return this._isOpen;
      },
      moveToTop: function () {
        this._moveToTop();
      },
      _moveToTop: function (t, i) {
        var s = !1,
          n = this.uiDialog
            .siblings(".ui-front:visible")
            .map(function () {
              return +e(this).css("z-index");
            })
            .get();
        return (
          (n = Math.max.apply(null, n)) >= +this.uiDialog.css("z-index") &&
            (this.uiDialog.css("z-index", n + 1), (s = !0)),
          s && !i && this._trigger("focus", t),
          s
        );
      },
      open: function () {
        var t = this;
        this._isOpen
          ? this._moveToTop() && this._focusTabbable()
          : ((this._isOpen = !0),
            (this.opener = e(e.ui.safeActiveElement(this.document[0]))),
            this._size(),
            this._position(),
            this._createOverlay(),
            this._moveToTop(null, !0),
            this.overlay &&
              this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
            this._show(this.uiDialog, this.options.show, function () {
              t._focusTabbable(), t._trigger("focus");
            }),
            this._makeFocusTarget(),
            this._trigger("open"));
      },
      _focusTabbable: function () {
        var e = this._focusedElement;
        (e = (e = (e = (e = (e = e || this.element.find("[autofocus]")).length
          ? e
          : this.element.find(":tabbable")).length
          ? e
          : this.uiDialogButtonPane.find(":tabbable")).length
          ? e
          : this.uiDialogTitlebarClose.filter(":tabbable")).length
          ? e
          : this.uiDialog)
          .eq(0)
          .trigger("focus");
      },
      _restoreTabbableFocus: function () {
        var t = e.ui.safeActiveElement(this.document[0]);
        this.uiDialog[0] === t ||
          e.contains(this.uiDialog[0], t) ||
          this._focusTabbable();
      },
      _keepFocus: function (e) {
        e.preventDefault(),
          this._restoreTabbableFocus(),
          this._delay(this._restoreTabbableFocus);
      },
      _createWrapper: function () {
        (this.uiDialog = e("<div>")
          .hide()
          .attr({ tabIndex: -1, role: "dialog" })
          .appendTo(this._appendTo())),
          this._addClass(
            this.uiDialog,
            "ui-dialog",
            "ui-widget ui-widget-content ui-front"
          ),
          this._on(this.uiDialog, {
            keydown: function (t) {
              if (
                this.options.closeOnEscape &&
                !t.isDefaultPrevented() &&
                t.keyCode &&
                t.keyCode === e.ui.keyCode.ESCAPE
              )
                return t.preventDefault(), void this.close(t);
              var i, s, n;
              t.keyCode !== e.ui.keyCode.TAB ||
                t.isDefaultPrevented() ||
                ((i = this.uiDialog.find(":tabbable")),
                (s = i.first()),
                (n = i.last()),
                (t.target !== n[0] && t.target !== this.uiDialog[0]) ||
                t.shiftKey
                  ? (t.target !== s[0] && t.target !== this.uiDialog[0]) ||
                    !t.shiftKey ||
                    (this._delay(function () {
                      n.trigger("focus");
                    }),
                    t.preventDefault())
                  : (this._delay(function () {
                      s.trigger("focus");
                    }),
                    t.preventDefault()));
            },
            mousedown: function (e) {
              this._moveToTop(e) && this._focusTabbable();
            },
          }),
          this.element.find("[aria-describedby]").length ||
            this.uiDialog.attr({
              "aria-describedby": this.element.uniqueId().attr("id"),
            });
      },
      _createTitlebar: function () {
        var t;
        (this.uiDialogTitlebar = e("<div>")),
          this._addClass(
            this.uiDialogTitlebar,
            "ui-dialog-titlebar",
            "ui-widget-header ui-helper-clearfix"
          ),
          this._on(this.uiDialogTitlebar, {
            mousedown: function (t) {
              e(t.target).closest(".ui-dialog-titlebar-close") ||
                this.uiDialog.trigger("focus");
            },
          }),
          (this.uiDialogTitlebarClose = e("<button type='button'></button>")
            .button({
              label: e("<a>").text(this.options.closeText).html(),
              icon: "ui-icon-closethick",
              showLabel: !1,
            })
            .appendTo(this.uiDialogTitlebar)),
          this._addClass(
            this.uiDialogTitlebarClose,
            "ui-dialog-titlebar-close"
          ),
          this._on(this.uiDialogTitlebarClose, {
            click: function (e) {
              e.preventDefault(), this.close(e);
            },
          }),
          (t = e("<span>").uniqueId().prependTo(this.uiDialogTitlebar)),
          this._addClass(t, "ui-dialog-title"),
          this._title(t),
          this.uiDialogTitlebar.prependTo(this.uiDialog),
          this.uiDialog.attr({ "aria-labelledby": t.attr("id") });
      },
      _title: function (e) {
        this.options.title ? e.text(this.options.title) : e.html("&#160;");
      },
      _createButtonPane: function () {
        (this.uiDialogButtonPane = e("<div>")),
          this._addClass(
            this.uiDialogButtonPane,
            "ui-dialog-buttonpane",
            "ui-widget-content ui-helper-clearfix"
          ),
          (this.uiButtonSet = e("<div>").appendTo(this.uiDialogButtonPane)),
          this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
          this._createButtons();
      },
      _createButtons: function () {
        var t = this,
          i = this.options.buttons;
        this.uiDialogButtonPane.remove(),
          this.uiButtonSet.empty(),
          e.isEmptyObject(i) || (Array.isArray(i) && !i.length)
            ? this._removeClass(this.uiDialog, "ui-dialog-buttons")
            : (e.each(i, function (i, s) {
                var n;
                (s = e.extend(
                  { type: "button" },
                  (s = "function" == typeof s ? { click: s, text: i } : s)
                )),
                  (n = s.click),
                  (i = {
                    icon: s.icon,
                    iconPosition: s.iconPosition,
                    showLabel: s.showLabel,
                    icons: s.icons,
                    text: s.text,
                  }),
                  delete s.click,
                  delete s.icon,
                  delete s.iconPosition,
                  delete s.showLabel,
                  delete s.icons,
                  "boolean" == typeof s.text && delete s.text,
                  e("<button></button>", s)
                    .button(i)
                    .appendTo(t.uiButtonSet)
                    .on("click", function () {
                      n.apply(t.element[0], arguments);
                    });
              }),
              this._addClass(this.uiDialog, "ui-dialog-buttons"),
              this.uiDialogButtonPane.appendTo(this.uiDialog));
      },
      _makeDraggable: function () {
        var t = this,
          i = this.options;
        function s(e) {
          return { position: e.position, offset: e.offset };
        }
        this.uiDialog.draggable({
          cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
          handle: ".ui-dialog-titlebar",
          containment: "document",
          start: function (i, n) {
            t._addClass(e(this), "ui-dialog-dragging"),
              t._blockFrames(),
              t._trigger("dragStart", i, s(n));
          },
          drag: function (e, i) {
            t._trigger("drag", e, s(i));
          },
          stop: function (n, a) {
            var r = a.offset.left - t.document.scrollLeft(),
              o = a.offset.top - t.document.scrollTop();
            (i.position = {
              my: "left top",
              at:
                "left" +
                (0 <= r ? "+" : "") +
                r +
                " top" +
                (0 <= o ? "+" : "") +
                o,
              of: t.window,
            }),
              t._removeClass(e(this), "ui-dialog-dragging"),
              t._unblockFrames(),
              t._trigger("dragStop", n, s(a));
          },
        });
      },
      _makeResizable: function () {
        var t = this,
          i = this.options,
          s = i.resizable,
          n = this.uiDialog.css("position");
        s = "string" == typeof s ? s : "n,e,s,w,se,sw,ne,nw";
        function a(e) {
          return {
            originalPosition: e.originalPosition,
            originalSize: e.originalSize,
            position: e.position,
            size: e.size,
          };
        }
        this.uiDialog
          .resizable({
            cancel: ".ui-dialog-content",
            containment: "document",
            alsoResize: this.element,
            maxWidth: i.maxWidth,
            maxHeight: i.maxHeight,
            minWidth: i.minWidth,
            minHeight: this._minHeight(),
            handles: s,
            start: function (i, s) {
              t._addClass(e(this), "ui-dialog-resizing"),
                t._blockFrames(),
                t._trigger("resizeStart", i, a(s));
            },
            resize: function (e, i) {
              t._trigger("resize", e, a(i));
            },
            stop: function (s, n) {
              var r = (o = t.uiDialog.offset()).left - t.document.scrollLeft(),
                o = o.top - t.document.scrollTop();
              (i.height = t.uiDialog.height()),
                (i.width = t.uiDialog.width()),
                (i.position = {
                  my: "left top",
                  at:
                    "left" +
                    (0 <= r ? "+" : "") +
                    r +
                    " top" +
                    (0 <= o ? "+" : "") +
                    o,
                  of: t.window,
                }),
                t._removeClass(e(this), "ui-dialog-resizing"),
                t._unblockFrames(),
                t._trigger("resizeStop", s, a(n));
            },
          })
          .css("position", n);
      },
      _trackFocus: function () {
        this._on(this.widget(), {
          focusin: function (t) {
            this._makeFocusTarget(), (this._focusedElement = e(t.target));
          },
        });
      },
      _makeFocusTarget: function () {
        this._untrackInstance(), this._trackingInstances().unshift(this);
      },
      _untrackInstance: function () {
        var t = this._trackingInstances(),
          i = e.inArray(this, t);
        -1 !== i && t.splice(i, 1);
      },
      _trackingInstances: function () {
        var e = this.document.data("ui-dialog-instances");
        return e || this.document.data("ui-dialog-instances", (e = [])), e;
      },
      _minHeight: function () {
        var e = this.options;
        return "auto" === e.height
          ? e.minHeight
          : Math.min(e.minHeight, e.height);
      },
      _position: function () {
        var e = this.uiDialog.is(":visible");
        e || this.uiDialog.show(),
          this.uiDialog.position(this.options.position),
          e || this.uiDialog.hide();
      },
      _setOptions: function (t) {
        var i = this,
          s = !1,
          n = {};
        e.each(t, function (e, t) {
          i._setOption(e, t),
            e in i.sizeRelatedOptions && (s = !0),
            e in i.resizableRelatedOptions && (n[e] = t);
        }),
          s && (this._size(), this._position()),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", n);
      },
      _setOption: function (t, i) {
        var s,
          n = this.uiDialog;
        "disabled" !== t &&
          (this._super(t, i),
          "appendTo" === t && this.uiDialog.appendTo(this._appendTo()),
          "buttons" === t && this._createButtons(),
          "closeText" === t &&
            this.uiDialogTitlebarClose.button({
              label: e("<a>")
                .text("" + this.options.closeText)
                .html(),
            }),
          "draggable" === t &&
            ((s = n.is(":data(ui-draggable)")) && !i && n.draggable("destroy"),
            !s && i && this._makeDraggable()),
          "position" === t && this._position(),
          "resizable" === t &&
            ((s = n.is(":data(ui-resizable)")) && !i && n.resizable("destroy"),
            s && "string" == typeof i && n.resizable("option", "handles", i),
            s || !1 === i || this._makeResizable()),
          "title" === t &&
            this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
      },
      _size: function () {
        var e,
          t,
          i,
          s = this.options;
        this.element
          .show()
          .css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }),
          s.minWidth > s.width && (s.width = s.minWidth),
          (e = this.uiDialog
            .css({ height: "auto", width: s.width })
            .outerHeight()),
          (t = Math.max(0, s.minHeight - e)),
          (i =
            "number" == typeof s.maxHeight
              ? Math.max(0, s.maxHeight - e)
              : "none"),
          "auto" === s.height
            ? this.element.css({ minHeight: t, maxHeight: i, height: "auto" })
            : this.element.height(Math.max(0, s.height - e)),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", "minHeight", this._minHeight());
      },
      _blockFrames: function () {
        this.iframeBlocks = this.document.find("iframe").map(function () {
          var t = e(this);
          return e("<div>")
            .css({
              position: "absolute",
              width: t.outerWidth(),
              height: t.outerHeight(),
            })
            .appendTo(t.parent())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _allowInteraction: function (t) {
        return (
          !!e(t.target).closest(".ui-dialog").length ||
          !!e(t.target).closest(".ui-datepicker").length
        );
      },
      _createOverlay: function () {
        var t, i;
        this.options.modal &&
          ((t = e.fn.jquery.substring(0, 4)),
          (i = !0),
          this._delay(function () {
            i = !1;
          }),
          this.document.data("ui-dialog-overlays") ||
            this.document.on(
              "focusin.ui-dialog",
              function (e) {
                var s;
                i ||
                  (s = this._trackingInstances()[0])._allowInteraction(e) ||
                  (e.preventDefault(),
                  s._focusTabbable(),
                  ("3.4." !== t && "3.5." !== t) ||
                    s._delay(s._restoreTabbableFocus));
              }.bind(this)
            ),
          (this.overlay = e("<div>").appendTo(this._appendTo())),
          this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
          this._on(this.overlay, { mousedown: "_keepFocus" }),
          this.document.data(
            "ui-dialog-overlays",
            (this.document.data("ui-dialog-overlays") || 0) + 1
          ));
      },
      _destroyOverlay: function () {
        var e;
        this.options.modal &&
          this.overlay &&
          ((e = this.document.data("ui-dialog-overlays") - 1)
            ? this.document.data("ui-dialog-overlays", e)
            : (this.document.off("focusin.ui-dialog"),
              this.document.removeData("ui-dialog-overlays")),
          this.overlay.remove(),
          (this.overlay = null));
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.dialog", e.ui.dialog, {
        options: { dialogClass: "" },
        _createWrapper: function () {
          this._super(), this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function (e, t) {
          "dialogClass" === e &&
            this.uiDialog.removeClass(this.options.dialogClass).addClass(t),
            this._superApply(arguments);
        },
      }),
    e.ui.dialog,
    e.widget("ui.droppable", {
      version: "1.13.2",
      widgetEventPrefix: "drop",
      options: {
        accept: "*",
        addClasses: !0,
        greedy: !1,
        scope: "default",
        tolerance: "intersect",
        activate: null,
        deactivate: null,
        drop: null,
        out: null,
        over: null,
      },
      _create: function () {
        var e,
          t = this.options,
          i = t.accept;
        (this.isover = !1),
          (this.isout = !0),
          (this.accept =
            "function" == typeof i
              ? i
              : function (e) {
                  return e.is(i);
                }),
          (this.proportions = function () {
            if (!arguments.length)
              return (e = e || {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight,
              });
            e = arguments[0];
          }),
          this._addToManager(t.scope),
          t.addClasses && this._addClass("ui-droppable");
      },
      _addToManager: function (t) {
        (e.ui.ddmanager.droppables[t] = e.ui.ddmanager.droppables[t] || []),
          e.ui.ddmanager.droppables[t].push(this);
      },
      _splice: function (e) {
        for (var t = 0; t < e.length; t++) e[t] === this && e.splice(t, 1);
      },
      _destroy: function () {
        var t = e.ui.ddmanager.droppables[this.options.scope];
        this._splice(t);
      },
      _setOption: function (t, i) {
        var s;
        "accept" === t
          ? (this.accept =
              "function" == typeof i
                ? i
                : function (e) {
                    return e.is(i);
                  })
          : "scope" === t &&
            ((s = e.ui.ddmanager.droppables[this.options.scope]),
            this._splice(s),
            this._addToManager(i)),
          this._super(t, i);
      },
      _activate: function (t) {
        var i = e.ui.ddmanager.current;
        this._addActiveClass(), i && this._trigger("activate", t, this.ui(i));
      },
      _deactivate: function (t) {
        var i = e.ui.ddmanager.current;
        this._removeActiveClass(),
          i && this._trigger("deactivate", t, this.ui(i));
      },
      _over: function (t) {
        var i = e.ui.ddmanager.current;
        i &&
          (i.currentItem || i.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], i.currentItem || i.element) &&
          (this._addHoverClass(), this._trigger("over", t, this.ui(i)));
      },
      _out: function (t) {
        var i = e.ui.ddmanager.current;
        i &&
          (i.currentItem || i.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], i.currentItem || i.element) &&
          (this._removeHoverClass(), this._trigger("out", t, this.ui(i)));
      },
      _drop: function (t, i) {
        var s = i || e.ui.ddmanager.current,
          n = !1;
        return (
          !(!s || (s.currentItem || s.element)[0] === this.element[0]) &&
          (this.element
            .find(":data(ui-droppable)")
            .not(".ui-draggable-dragging")
            .each(function () {
              var i = e(this).droppable("instance");
              if (
                i.options.greedy &&
                !i.options.disabled &&
                i.options.scope === s.options.scope &&
                i.accept.call(i.element[0], s.currentItem || s.element) &&
                e.ui.intersect(
                  s,
                  e.extend(i, { offset: i.element.offset() }),
                  i.options.tolerance,
                  t
                )
              )
                return !(n = !0);
            }),
          !n &&
            !!this.accept.call(this.element[0], s.currentItem || s.element) &&
            (this._removeActiveClass(),
            this._removeHoverClass(),
            this._trigger("drop", t, this.ui(s)),
            this.element))
        );
      },
      ui: function (e) {
        return {
          draggable: e.currentItem || e.element,
          helper: e.helper,
          position: e.position,
          offset: e.positionAbs,
        };
      },
      _addHoverClass: function () {
        this._addClass("ui-droppable-hover");
      },
      _removeHoverClass: function () {
        this._removeClass("ui-droppable-hover");
      },
      _addActiveClass: function () {
        this._addClass("ui-droppable-active");
      },
      _removeActiveClass: function () {
        this._removeClass("ui-droppable-active");
      },
    }),
    (e.ui.intersect = function (e, t, i, s) {
      if (!t.offset) return !1;
      var n = (e.positionAbs || e.position.absolute).left + e.margins.left,
        a = (e.positionAbs || e.position.absolute).top + e.margins.top,
        r = n + e.helperProportions.width,
        o = a + e.helperProportions.height,
        l = t.offset.left,
        c = t.offset.top,
        h = l + t.proportions().width,
        d = c + t.proportions().height;
      switch (i) {
        case "fit":
          return l <= n && r <= h && c <= a && o <= d;
        case "intersect":
          return (
            l < n + e.helperProportions.width / 2 &&
            r - e.helperProportions.width / 2 < h &&
            c < a + e.helperProportions.height / 2 &&
            o - e.helperProportions.height / 2 < d
          );
        case "pointer":
          return (
            ce(s.pageY, c, t.proportions().height) &&
            ce(s.pageX, l, t.proportions().width)
          );
        case "touch":
          return (
            ((c <= a && a <= d) || (c <= o && o <= d) || (a < c && d < o)) &&
            ((l <= n && n <= h) || (l <= r && r <= h) || (n < l && h < r))
          );
        default:
          return !1;
      }
    }),
    !(e.ui.ddmanager = {
      current: null,
      droppables: { default: [] },
      prepareOffsets: function (t, i) {
        var s,
          n,
          a = e.ui.ddmanager.droppables[t.options.scope] || [],
          r = i ? i.type : null,
          o = (t.currentItem || t.element)
            .find(":data(ui-droppable)")
            .addBack();
        e: for (s = 0; s < a.length; s++)
          if (
            !(
              a[s].options.disabled ||
              (t &&
                !a[s].accept.call(a[s].element[0], t.currentItem || t.element))
            )
          ) {
            for (n = 0; n < o.length; n++)
              if (o[n] === a[s].element[0]) {
                a[s].proportions().height = 0;
                continue e;
              }
            (a[s].visible = "none" !== a[s].element.css("display")),
              a[s].visible &&
                ("mousedown" === r && a[s]._activate.call(a[s], i),
                (a[s].offset = a[s].element.offset()),
                a[s].proportions({
                  width: a[s].element[0].offsetWidth,
                  height: a[s].element[0].offsetHeight,
                }));
          }
      },
      drop: function (t, i) {
        var s = !1;
        return (
          e.each(
            (e.ui.ddmanager.droppables[t.options.scope] || []).slice(),
            function () {
              this.options &&
                (!this.options.disabled &&
                  this.visible &&
                  e.ui.intersect(t, this, this.options.tolerance, i) &&
                  (s = this._drop.call(this, i) || s),
                !this.options.disabled &&
                  this.visible &&
                  this.accept.call(
                    this.element[0],
                    t.currentItem || t.element
                  ) &&
                  ((this.isout = !0),
                  (this.isover = !1),
                  this._deactivate.call(this, i)));
            }
          ),
          s
        );
      },
      dragStart: function (t, i) {
        t.element.parentsUntil("body").on("scroll.droppable", function () {
          t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
        });
      },
      drag: function (t, i) {
        t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i),
          e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function () {
            var s, n, a, r;
            this.options.disabled ||
              this.greedyChild ||
              !this.visible ||
              ((r =
                !(a = e.ui.intersect(t, this, this.options.tolerance, i)) &&
                this.isover
                  ? "isout"
                  : a && !this.isover
                  ? "isover"
                  : null) &&
                (this.options.greedy &&
                  ((n = this.options.scope),
                  (a = this.element
                    .parents(":data(ui-droppable)")
                    .filter(function () {
                      return e(this).droppable("instance").options.scope === n;
                    })).length &&
                    ((s = e(a[0]).droppable("instance")).greedyChild =
                      "isover" === r)),
                s &&
                  "isover" === r &&
                  ((s.isover = !1), (s.isout = !0), s._out.call(s, i)),
                (this[r] = !0),
                (this["isout" === r ? "isover" : "isout"] = !1),
                this["isover" === r ? "_over" : "_out"].call(this, i),
                s &&
                  "isout" === r &&
                  ((s.isout = !1), (s.isover = !0), s._over.call(s, i))));
          });
      },
      dragStop: function (t, i) {
        t.element.parentsUntil("body").off("scroll.droppable"),
          t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
      },
    }) !== e.uiBackCompat &&
      e.widget("ui.droppable", e.ui.droppable, {
        options: { hoverClass: !1, activeClass: !1 },
        _addActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.addClass(this.options.activeClass);
        },
        _removeActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.removeClass(this.options.activeClass);
        },
        _addHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.addClass(this.options.hoverClass);
        },
        _removeHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.removeClass(this.options.hoverClass);
        },
      }),
    e.ui.droppable,
    e.widget("ui.progressbar", {
      version: "1.13.2",
      options: {
        classes: {
          "ui-progressbar": "ui-corner-all",
          "ui-progressbar-value": "ui-corner-left",
          "ui-progressbar-complete": "ui-corner-right",
        },
        max: 100,
        value: 0,
        change: null,
        complete: null,
      },
      min: 0,
      _create: function () {
        (this.oldValue = this.options.value = this._constrainedValue()),
          this.element.attr({ role: "progressbar", "aria-valuemin": this.min }),
          this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
          (this.valueDiv = e("<div>").appendTo(this.element)),
          this._addClass(
            this.valueDiv,
            "ui-progressbar-value",
            "ui-widget-header"
          ),
          this._refreshValue();
      },
      _destroy: function () {
        this.element.removeAttr(
          "role aria-valuemin aria-valuemax aria-valuenow"
        ),
          this.valueDiv.remove();
      },
      value: function (e) {
        if (void 0 === e) return this.options.value;
        (this.options.value = this._constrainedValue(e)), this._refreshValue();
      },
      _constrainedValue: function (e) {
        return (
          void 0 === e && (e = this.options.value),
          (this.indeterminate = !1 === e),
          "number" != typeof e && (e = 0),
          !this.indeterminate &&
            Math.min(this.options.max, Math.max(this.min, e))
        );
      },
      _setOptions: function (e) {
        var t = e.value;
        delete e.value,
          this._super(e),
          (this.options.value = this._constrainedValue(t)),
          this._refreshValue();
      },
      _setOption: function (e, t) {
        "max" === e && (t = Math.max(this.min, t)), this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", e),
          this._toggleClass(null, "ui-state-disabled", !!e);
      },
      _percentage: function () {
        return this.indeterminate
          ? 100
          : (100 * (this.options.value - this.min)) /
              (this.options.max - this.min);
      },
      _refreshValue: function () {
        var t = this.options.value,
          i = this._percentage();
        this.valueDiv
          .toggle(this.indeterminate || t > this.min)
          .width(i.toFixed(0) + "%"),
          this._toggleClass(
            this.valueDiv,
            "ui-progressbar-complete",
            null,
            t === this.options.max
          )._toggleClass(
            "ui-progressbar-indeterminate",
            null,
            this.indeterminate
          ),
          this.indeterminate
            ? (this.element.removeAttr("aria-valuenow"),
              this.overlayDiv ||
                ((this.overlayDiv = e("<div>").appendTo(this.valueDiv)),
                this._addClass(this.overlayDiv, "ui-progressbar-overlay")))
            : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": t,
              }),
              this.overlayDiv &&
                (this.overlayDiv.remove(), (this.overlayDiv = null))),
          this.oldValue !== t && ((this.oldValue = t), this._trigger("change")),
          t === this.options.max && this._trigger("complete");
      },
    }),
    e.widget("ui.selectable", e.ui.mouse, {
      version: "1.13.2",
      options: {
        appendTo: "body",
        autoRefresh: !0,
        distance: 0,
        filter: "*",
        tolerance: "touch",
        selected: null,
        selecting: null,
        start: null,
        stop: null,
        unselected: null,
        unselecting: null,
      },
      _create: function () {
        var t = this;
        this._addClass("ui-selectable"),
          (this.dragged = !1),
          (this.refresh = function () {
            (t.elementPos = e(t.element[0]).offset()),
              (t.selectees = e(t.options.filter, t.element[0])),
              t._addClass(t.selectees, "ui-selectee"),
              t.selectees.each(function () {
                var i = e(this),
                  s = {
                    left: (s = i.offset()).left - t.elementPos.left,
                    top: s.top - t.elementPos.top,
                  };
                e.data(this, "selectable-item", {
                  element: this,
                  $element: i,
                  left: s.left,
                  top: s.top,
                  right: s.left + i.outerWidth(),
                  bottom: s.top + i.outerHeight(),
                  startselected: !1,
                  selected: i.hasClass("ui-selected"),
                  selecting: i.hasClass("ui-selecting"),
                  unselecting: i.hasClass("ui-unselecting"),
                });
              });
          }),
          this.refresh(),
          this._mouseInit(),
          (this.helper = e("<div>")),
          this._addClass(this.helper, "ui-selectable-helper");
      },
      _destroy: function () {
        this.selectees.removeData("selectable-item"), this._mouseDestroy();
      },
      _mouseStart: function (t) {
        var i = this,
          s = this.options;
        (this.opos = [t.pageX, t.pageY]),
          (this.elementPos = e(this.element[0]).offset()),
          this.options.disabled ||
            ((this.selectees = e(s.filter, this.element[0])),
            this._trigger("start", t),
            e(s.appendTo).append(this.helper),
            this.helper.css({
              left: t.pageX,
              top: t.pageY,
              width: 0,
              height: 0,
            }),
            s.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function () {
              var s = e.data(this, "selectable-item");
              (s.startselected = !0),
                t.metaKey ||
                  t.ctrlKey ||
                  (i._removeClass(s.$element, "ui-selected"),
                  (s.selected = !1),
                  i._addClass(s.$element, "ui-unselecting"),
                  (s.unselecting = !0),
                  i._trigger("unselecting", t, { unselecting: s.element }));
            }),
            e(t.target)
              .parents()
              .addBack()
              .each(function () {
                var s,
                  n = e.data(this, "selectable-item");
                if (n)
                  return (
                    (s =
                      (!t.metaKey && !t.ctrlKey) ||
                      !n.$element.hasClass("ui-selected")),
                    i
                      ._removeClass(
                        n.$element,
                        s ? "ui-unselecting" : "ui-selected"
                      )
                      ._addClass(
                        n.$element,
                        s ? "ui-selecting" : "ui-unselecting"
                      ),
                    (n.unselecting = !s),
                    (n.selecting = s),
                    (n.selected = s)
                      ? i._trigger("selecting", t, { selecting: n.element })
                      : i._trigger("unselecting", t, {
                          unselecting: n.element,
                        }),
                    !1
                  );
              }));
      },
      _mouseDrag: function (t) {
        if (((this.dragged = !0), !this.options.disabled)) {
          var i,
            s = this,
            n = this.options,
            a = this.opos[0],
            r = this.opos[1],
            o = t.pageX,
            l = t.pageY;
          return (
            o < a && ((i = o), (o = a), (a = i)),
            l < r && ((i = l), (l = r), (r = i)),
            this.helper.css({ left: a, top: r, width: o - a, height: l - r }),
            this.selectees.each(function () {
              var i = e.data(this, "selectable-item"),
                c = !1,
                h = {};
              i &&
                i.element !== s.element[0] &&
                ((h.left = i.left + s.elementPos.left),
                (h.right = i.right + s.elementPos.left),
                (h.top = i.top + s.elementPos.top),
                (h.bottom = i.bottom + s.elementPos.top),
                "touch" === n.tolerance
                  ? (c = !(
                      h.left > o ||
                      h.right < a ||
                      h.top > l ||
                      h.bottom < r
                    ))
                  : "fit" === n.tolerance &&
                    (c =
                      h.left > a && h.right < o && h.top > r && h.bottom < l),
                c
                  ? (i.selected &&
                      (s._removeClass(i.$element, "ui-selected"),
                      (i.selected = !1)),
                    i.unselecting &&
                      (s._removeClass(i.$element, "ui-unselecting"),
                      (i.unselecting = !1)),
                    i.selecting ||
                      (s._addClass(i.$element, "ui-selecting"),
                      (i.selecting = !0),
                      s._trigger("selecting", t, { selecting: i.element })))
                  : (i.selecting &&
                      ((t.metaKey || t.ctrlKey) && i.startselected
                        ? (s._removeClass(i.$element, "ui-selecting"),
                          (i.selecting = !1),
                          s._addClass(i.$element, "ui-selected"),
                          (i.selected = !0))
                        : (s._removeClass(i.$element, "ui-selecting"),
                          (i.selecting = !1),
                          i.startselected &&
                            (s._addClass(i.$element, "ui-unselecting"),
                            (i.unselecting = !0)),
                          s._trigger("unselecting", t, {
                            unselecting: i.element,
                          }))),
                    i.selected &&
                      (t.metaKey ||
                        t.ctrlKey ||
                        i.startselected ||
                        (s._removeClass(i.$element, "ui-selected"),
                        (i.selected = !1),
                        s._addClass(i.$element, "ui-unselecting"),
                        (i.unselecting = !0),
                        s._trigger("unselecting", t, {
                          unselecting: i.element,
                        })))));
            }),
            !1
          );
        }
      },
      _mouseStop: function (t) {
        var i = this;
        return (
          (this.dragged = !1),
          e(".ui-unselecting", this.element[0]).each(function () {
            var s = e.data(this, "selectable-item");
            i._removeClass(s.$element, "ui-unselecting"),
              (s.unselecting = !1),
              (s.startselected = !1),
              i._trigger("unselected", t, { unselected: s.element });
          }),
          e(".ui-selecting", this.element[0]).each(function () {
            var s = e.data(this, "selectable-item");
            i
              ._removeClass(s.$element, "ui-selecting")
              ._addClass(s.$element, "ui-selected"),
              (s.selecting = !1),
              (s.selected = !0),
              (s.startselected = !0),
              i._trigger("selected", t, { selected: s.element });
          }),
          this._trigger("stop", t),
          this.helper.remove(),
          !1
        );
      },
    }),
    e.widget("ui.selectmenu", [
      e.ui.formResetMixin,
      {
        version: "1.13.2",
        defaultElement: "<select>",
        options: {
          appendTo: null,
          classes: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
          disabled: null,
          icons: { button: "ui-icon-triangle-1-s" },
          position: { my: "left top", at: "left bottom", collision: "none" },
          width: !1,
          change: null,
          close: null,
          focus: null,
          open: null,
          select: null,
        },
        _create: function () {
          var t = this.element.uniqueId().attr("id");
          (this.ids = { element: t, button: t + "-button", menu: t + "-menu" }),
            this._drawButton(),
            this._drawMenu(),
            this._bindFormResetHandler(),
            (this._rendered = !1),
            (this.menuItems = e());
        },
        _drawButton: function () {
          var t,
            i = this,
            s = this._parseOption(
              this.element.find("option:selected"),
              this.element[0].selectedIndex
            );
          (this.labels = this.element.labels().attr("for", this.ids.button)),
            this._on(this.labels, {
              click: function (e) {
                this.button.trigger("focus"), e.preventDefault();
              },
            }),
            this.element.hide(),
            (this.button = e("<span>", {
              tabindex: this.options.disabled ? -1 : 0,
              id: this.ids.button,
              role: "combobox",
              "aria-expanded": "false",
              "aria-autocomplete": "list",
              "aria-owns": this.ids.menu,
              "aria-haspopup": "true",
              title: this.element.attr("title"),
            }).insertAfter(this.element)),
            this._addClass(
              this.button,
              "ui-selectmenu-button ui-selectmenu-button-closed",
              "ui-button ui-widget"
            ),
            (t = e("<span>").appendTo(this.button)),
            this._addClass(
              t,
              "ui-selectmenu-icon",
              "ui-icon " + this.options.icons.button
            ),
            (this.buttonItem = this._renderButtonItem(s).appendTo(this.button)),
            !1 !== this.options.width && this._resizeButton(),
            this._on(this.button, this._buttonEvents),
            this.button.one("focusin", function () {
              i._rendered || i._refreshMenu();
            });
        },
        _drawMenu: function () {
          var t = this;
          (this.menu = e("<ul>", {
            "aria-hidden": "true",
            "aria-labelledby": this.ids.button,
            id: this.ids.menu,
          })),
            (this.menuWrap = e("<div>").append(this.menu)),
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
            this.menuWrap.appendTo(this._appendTo()),
            (this.menuInstance = this.menu
              .menu({
                classes: { "ui-menu": "ui-corner-bottom" },
                role: "listbox",
                select: function (e, i) {
                  e.preventDefault(),
                    t._setSelection(),
                    t._select(i.item.data("ui-selectmenu-item"), e);
                },
                focus: function (e, i) {
                  (i = i.item.data("ui-selectmenu-item")),
                    null != t.focusIndex &&
                      i.index !== t.focusIndex &&
                      (t._trigger("focus", e, { item: i }),
                      t.isOpen || t._select(i, e)),
                    (t.focusIndex = i.index),
                    t.button.attr(
                      "aria-activedescendant",
                      t.menuItems.eq(i.index).attr("id")
                    );
                },
              })
              .menu("instance")),
            this.menuInstance._off(this.menu, "mouseleave"),
            (this.menuInstance._closeOnDocumentClick = function () {
              return !1;
            }),
            (this.menuInstance._isDivider = function () {
              return !1;
            });
        },
        refresh: function () {
          this._refreshMenu(),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(
                this._getSelectedItem().data("ui-selectmenu-item") || {}
              ))
            ),
            null === this.options.width && this._resizeButton();
        },
        _refreshMenu: function () {
          var e = this.element.find("option");
          this.menu.empty(),
            this._parseOptions(e),
            this._renderMenu(this.menu, this.items),
            this.menuInstance.refresh(),
            (this.menuItems = this.menu
              .find("li")
              .not(".ui-selectmenu-optgroup")
              .find(".ui-menu-item-wrapper")),
            (this._rendered = !0),
            e.length &&
              ((e = this._getSelectedItem()),
              this.menuInstance.focus(null, e),
              this._setAria(e.data("ui-selectmenu-item")),
              this._setOption("disabled", this.element.prop("disabled")));
        },
        open: function (e) {
          this.options.disabled ||
            (this._rendered
              ? (this._removeClass(
                  this.menu.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                this.menuInstance.focus(null, this._getSelectedItem()))
              : this._refreshMenu(),
            this.menuItems.length &&
              ((this.isOpen = !0),
              this._toggleAttr(),
              this._resizeMenu(),
              this._position(),
              this._on(this.document, this._documentClick),
              this._trigger("open", e)));
        },
        _position: function () {
          this.menuWrap.position(
            e.extend({ of: this.button }, this.options.position)
          );
        },
        close: function (e) {
          this.isOpen &&
            ((this.isOpen = !1),
            this._toggleAttr(),
            (this.range = null),
            this._off(this.document),
            this._trigger("close", e));
        },
        widget: function () {
          return this.button;
        },
        menuWidget: function () {
          return this.menu;
        },
        _renderButtonItem: function (t) {
          var i = e("<span>");
          return (
            this._setText(i, t.label),
            this._addClass(i, "ui-selectmenu-text"),
            i
          );
        },
        _renderMenu: function (t, i) {
          var s = this,
            n = "";
          e.each(i, function (i, a) {
            var r;
            a.optgroup !== n &&
              ((r = e("<li>", { text: a.optgroup })),
              s._addClass(
                r,
                "ui-selectmenu-optgroup",
                "ui-menu-divider" +
                  (a.element.parent("optgroup").prop("disabled")
                    ? " ui-state-disabled"
                    : "")
              ),
              r.appendTo(t),
              (n = a.optgroup)),
              s._renderItemData(t, a);
          });
        },
        _renderItemData: function (e, t) {
          return this._renderItem(e, t).data("ui-selectmenu-item", t);
        },
        _renderItem: function (t, i) {
          var s = e("<li>"),
            n = e("<div>", { title: i.element.attr("title") });
          return (
            i.disabled && this._addClass(s, null, "ui-state-disabled"),
            this._setText(n, i.label),
            s.append(n).appendTo(t)
          );
        },
        _setText: function (e, t) {
          t ? e.text(t) : e.html("&#160;");
        },
        _move: function (e, t) {
          var i,
            s = ".ui-menu-item";
          this.isOpen
            ? (i = this.menuItems.eq(this.focusIndex).parent("li"))
            : ((i = this.menuItems
                .eq(this.element[0].selectedIndex)
                .parent("li")),
              (s += ":not(.ui-state-disabled)")),
            (s =
              "first" === e || "last" === e
                ? i["first" === e ? "prevAll" : "nextAll"](s).eq(-1)
                : i[e + "All"](s).eq(0)).length &&
              this.menuInstance.focus(t, s);
        },
        _getSelectedItem: function () {
          return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },
        _toggle: function (e) {
          this[this.isOpen ? "close" : "open"](e);
        },
        _setSelection: function () {
          var e;
          this.range &&
            (window.getSelection
              ? ((e = window.getSelection()).removeAllRanges(),
                e.addRange(this.range))
              : this.range.select(),
            this.button.trigger("focus"));
        },
        _documentClick: {
          mousedown: function (t) {
            this.isOpen &&
              (e(t.target).closest(
                ".ui-selectmenu-menu, #" + e.escapeSelector(this.ids.button)
              ).length ||
                this.close(t));
          },
        },
        _buttonEvents: {
          mousedown: function () {
            var e;
            window.getSelection
              ? (e = window.getSelection()).rangeCount &&
                (this.range = e.getRangeAt(0))
              : (this.range = document.selection.createRange());
          },
          click: function (e) {
            this._setSelection(), this._toggle(e);
          },
          keydown: function (t) {
            var i = !0;
            switch (t.keyCode) {
              case e.ui.keyCode.TAB:
              case e.ui.keyCode.ESCAPE:
                this.close(t), (i = !1);
                break;
              case e.ui.keyCode.ENTER:
                this.isOpen && this._selectFocusedItem(t);
                break;
              case e.ui.keyCode.UP:
                t.altKey ? this._toggle(t) : this._move("prev", t);
                break;
              case e.ui.keyCode.DOWN:
                t.altKey ? this._toggle(t) : this._move("next", t);
                break;
              case e.ui.keyCode.SPACE:
                this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);
                break;
              case e.ui.keyCode.LEFT:
                this._move("prev", t);
                break;
              case e.ui.keyCode.RIGHT:
                this._move("next", t);
                break;
              case e.ui.keyCode.HOME:
              case e.ui.keyCode.PAGE_UP:
                this._move("first", t);
                break;
              case e.ui.keyCode.END:
              case e.ui.keyCode.PAGE_DOWN:
                this._move("last", t);
                break;
              default:
                this.menu.trigger(t), (i = !1);
            }
            i && t.preventDefault();
          },
        },
        _selectFocusedItem: function (e) {
          var t = this.menuItems.eq(this.focusIndex).parent("li");
          t.hasClass("ui-state-disabled") ||
            this._select(t.data("ui-selectmenu-item"), e);
        },
        _select: function (e, t) {
          var i = this.element[0].selectedIndex;
          (this.element[0].selectedIndex = e.index),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(e))
            ),
            this._setAria(e),
            this._trigger("select", t, { item: e }),
            e.index !== i && this._trigger("change", t, { item: e }),
            this.close(t);
        },
        _setAria: function (e) {
          (e = this.menuItems.eq(e.index).attr("id")),
            this.button.attr({
              "aria-labelledby": e,
              "aria-activedescendant": e,
            }),
            this.menu.attr("aria-activedescendant", e);
        },
        _setOption: function (e, t) {
          var i;
          "icons" === e &&
            ((i = this.button.find("span.ui-icon")),
            this._removeClass(i, null, this.options.icons.button)._addClass(
              i,
              null,
              t.button
            )),
            this._super(e, t),
            "appendTo" === e && this.menuWrap.appendTo(this._appendTo()),
            "width" === e && this._resizeButton();
        },
        _setOptionDisabled: function (e) {
          this._super(e),
            this.menuInstance.option("disabled", e),
            this.button.attr("aria-disabled", e),
            this._toggleClass(this.button, null, "ui-state-disabled", e),
            this.element.prop("disabled", e),
            e
              ? (this.button.attr("tabindex", -1), this.close())
              : this.button.attr("tabindex", 0);
        },
        _appendTo: function () {
          var t = this.options.appendTo;
          return (t =
            (t =
              t &&
              (t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0))) &&
            t[0]
              ? t
              : this.element.closest(".ui-front, dialog")).length
            ? t
            : this.document[0].body;
        },
        _toggleAttr: function () {
          this.button.attr("aria-expanded", this.isOpen),
            this._removeClass(
              this.button,
              "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open")
            )
              ._addClass(
                this.button,
                "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed")
              )
              ._toggleClass(
                this.menuWrap,
                "ui-selectmenu-open",
                null,
                this.isOpen
              ),
            this.menu.attr("aria-hidden", !this.isOpen);
        },
        _resizeButton: function () {
          var e = this.options.width;
          !1 !== e
            ? (null === e &&
                ((e = this.element.show().outerWidth()), this.element.hide()),
              this.button.outerWidth(e))
            : this.button.css("width", "");
        },
        _resizeMenu: function () {
          this.menu.outerWidth(
            Math.max(
              this.button.outerWidth(),
              this.menu.width("").outerWidth() + 1
            )
          );
        },
        _getCreateOptions: function () {
          var e = this._super();
          return (e.disabled = this.element.prop("disabled")), e;
        },
        _parseOptions: function (t) {
          var i = this,
            s = [];
          t.each(function (t, n) {
            n.hidden || s.push(i._parseOption(e(n), t));
          }),
            (this.items = s);
        },
        _parseOption: function (e, t) {
          var i = e.parent("optgroup");
          return {
            element: e,
            index: t,
            value: e.val(),
            label: e.text(),
            optgroup: i.attr("label") || "",
            disabled: i.prop("disabled") || e.prop("disabled"),
          };
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.menuWrap.remove(),
            this.button.remove(),
            this.element.show(),
            this.element.removeUniqueId(),
            this.labels.attr("for", this.ids.element);
        },
      },
    ]),
    e.widget("ui.slider", e.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "slide",
      options: {
        animate: !1,
        classes: {
          "ui-slider": "ui-corner-all",
          "ui-slider-handle": "ui-corner-all",
          "ui-slider-range": "ui-corner-all ui-widget-header",
        },
        distance: 0,
        max: 100,
        min: 0,
        orientation: "horizontal",
        range: !1,
        step: 1,
        value: 0,
        values: null,
        change: null,
        slide: null,
        start: null,
        stop: null,
      },
      numPages: 5,
      _create: function () {
        (this._keySliding = !1),
          (this._mouseSliding = !1),
          (this._animateOff = !0),
          (this._handleIndex = null),
          this._detectOrientation(),
          this._mouseInit(),
          this._calculateNewMax(),
          this._addClass(
            "ui-slider ui-slider-" + this.orientation,
            "ui-widget ui-widget-content"
          ),
          this._refresh(),
          (this._animateOff = !1);
      },
      _refresh: function () {
        this._createRange(),
          this._createHandles(),
          this._setupEvents(),
          this._refreshValue();
      },
      _createHandles: function () {
        var t,
          i = this.options,
          s = this.element.find(".ui-slider-handle"),
          n = [],
          a = (i.values && i.values.length) || 1;
        for (
          s.length > a && (s.slice(a).remove(), (s = s.slice(0, a))),
            t = s.length;
          t < a;
          t++
        )
          n.push("<span tabindex='0'></span>");
        (this.handles = s.add(e(n.join("")).appendTo(this.element))),
          this._addClass(this.handles, "ui-slider-handle", "ui-state-default"),
          (this.handle = this.handles.eq(0)),
          this.handles.each(function (t) {
            e(this).data("ui-slider-handle-index", t).attr("tabIndex", 0);
          });
      },
      _createRange: function () {
        var t = this.options;
        t.range
          ? (!0 === t.range &&
              (t.values
                ? t.values.length && 2 !== t.values.length
                  ? (t.values = [t.values[0], t.values[0]])
                  : Array.isArray(t.values) && (t.values = t.values.slice(0))
                : (t.values = [this._valueMin(), this._valueMin()])),
            this.range && this.range.length
              ? (this._removeClass(
                  this.range,
                  "ui-slider-range-min ui-slider-range-max"
                ),
                this.range.css({ left: "", bottom: "" }))
              : ((this.range = e("<div>").appendTo(this.element)),
                this._addClass(this.range, "ui-slider-range")),
            ("min" !== t.range && "max" !== t.range) ||
              this._addClass(this.range, "ui-slider-range-" + t.range))
          : (this.range && this.range.remove(), (this.range = null));
      },
      _setupEvents: function () {
        this._off(this.handles),
          this._on(this.handles, this._handleEvents),
          this._hoverable(this.handles),
          this._focusable(this.handles);
      },
      _destroy: function () {
        this.handles.remove(),
          this.range && this.range.remove(),
          this._mouseDestroy();
      },
      _mouseCapture: function (t) {
        var i,
          s,
          n,
          a,
          r,
          o,
          l = this,
          c = this.options;
        return (
          !c.disabled &&
          ((this.elementSize = {
            width: this.element.outerWidth(),
            height: this.element.outerHeight(),
          }),
          (this.elementOffset = this.element.offset()),
          (o = { x: t.pageX, y: t.pageY }),
          (i = this._normValueFromMouse(o)),
          (s = this._valueMax() - this._valueMin() + 1),
          this.handles.each(function (t) {
            var r = Math.abs(i - l.values(t));
            (r < s ||
              (s === r &&
                (t === l._lastChangedValue || l.values(t) === c.min))) &&
              ((s = r), (n = e(this)), (a = t));
          }),
          !1 !== this._start(t, a) &&
            ((this._mouseSliding = !0),
            (this._handleIndex = a),
            this._addClass(n, null, "ui-state-active"),
            n.trigger("focus"),
            (r = n.offset()),
            (o = !e(t.target).parents().addBack().is(".ui-slider-handle")),
            (this._clickOffset = o
              ? { left: 0, top: 0 }
              : {
                  left: t.pageX - r.left - n.width() / 2,
                  top:
                    t.pageY -
                    r.top -
                    n.height() / 2 -
                    (parseInt(n.css("borderTopWidth"), 10) || 0) -
                    (parseInt(n.css("borderBottomWidth"), 10) || 0) +
                    (parseInt(n.css("marginTop"), 10) || 0),
                }),
            this.handles.hasClass("ui-state-hover") || this._slide(t, a, i),
            (this._animateOff = !0)))
        );
      },
      _mouseStart: function () {
        return !0;
      },
      _mouseDrag: function (e) {
        var t = { x: e.pageX, y: e.pageY };
        t = this._normValueFromMouse(t);
        return this._slide(e, this._handleIndex, t), !1;
      },
      _mouseStop: function (e) {
        return (
          this._removeClass(this.handles, null, "ui-state-active"),
          (this._mouseSliding = !1),
          this._stop(e, this._handleIndex),
          this._change(e, this._handleIndex),
          (this._handleIndex = null),
          (this._clickOffset = null),
          (this._animateOff = !1)
        );
      },
      _detectOrientation: function () {
        this.orientation =
          "vertical" === this.options.orientation ? "vertical" : "horizontal";
      },
      _normValueFromMouse: function (e) {
        var t;
        return (
          (e =
            1 <
            (e =
              (e =
                "horizontal" === this.orientation
                  ? ((t = this.elementSize.width),
                    e.x -
                      this.elementOffset.left -
                      (this._clickOffset ? this._clickOffset.left : 0))
                  : ((t = this.elementSize.height),
                    e.y -
                      this.elementOffset.top -
                      (this._clickOffset ? this._clickOffset.top : 0))) / t)
              ? 1
              : e) < 0 && (e = 0),
          "vertical" === this.orientation && (e = 1 - e),
          (t = this._valueMax() - this._valueMin()),
          (t = this._valueMin() + e * t),
          this._trimAlignValue(t)
        );
      },
      _uiHash: function (e, t, i) {
        var s = {
          handle: this.handles[e],
          handleIndex: e,
          value: void 0 !== t ? t : this.value(),
        };
        return (
          this._hasMultipleValues() &&
            ((s.value = void 0 !== t ? t : this.values(e)),
            (s.values = i || this.values())),
          s
        );
      },
      _hasMultipleValues: function () {
        return this.options.values && this.options.values.length;
      },
      _start: function (e, t) {
        return this._trigger("start", e, this._uiHash(t));
      },
      _slide: function (e, t, i) {
        var s,
          n = this.value(),
          a = this.values();
        this._hasMultipleValues() &&
          ((s = this.values(t ? 0 : 1)),
          (n = this.values(t)),
          2 === this.options.values.length &&
            !0 === this.options.range &&
            (i = 0 === t ? Math.min(s, i) : Math.max(s, i)),
          (a[t] = i)),
          i !== n &&
            !1 !== this._trigger("slide", e, this._uiHash(t, i, a)) &&
            (this._hasMultipleValues() ? this.values(t, i) : this.value(i));
      },
      _stop: function (e, t) {
        this._trigger("stop", e, this._uiHash(t));
      },
      _change: function (e, t) {
        this._keySliding ||
          this._mouseSliding ||
          ((this._lastChangedValue = t),
          this._trigger("change", e, this._uiHash(t)));
      },
      value: function (e) {
        return arguments.length
          ? ((this.options.value = this._trimAlignValue(e)),
            this._refreshValue(),
            void this._change(null, 0))
          : this._value();
      },
      values: function (e, t) {
        var i, s, n;
        if (1 < arguments.length)
          return (
            (this.options.values[e] = this._trimAlignValue(t)),
            this._refreshValue(),
            void this._change(null, e)
          );
        if (!arguments.length) return this._values();
        if (!Array.isArray(e))
          return this._hasMultipleValues() ? this._values(e) : this.value();
        for (i = this.options.values, s = e, n = 0; n < i.length; n += 1)
          (i[n] = this._trimAlignValue(s[n])), this._change(null, n);
        this._refreshValue();
      },
      _setOption: function (e, t) {
        var i,
          s = 0;
        switch (
          ("range" === e &&
            !0 === this.options.range &&
            ("min" === t
              ? ((this.options.value = this._values(0)),
                (this.options.values = null))
              : "max" === t &&
                ((this.options.value = this._values(
                  this.options.values.length - 1
                )),
                (this.options.values = null))),
          Array.isArray(this.options.values) &&
            (s = this.options.values.length),
          this._super(e, t),
          e)
        ) {
          case "orientation":
            this._detectOrientation(),
              this._removeClass(
                "ui-slider-horizontal ui-slider-vertical"
              )._addClass("ui-slider-" + this.orientation),
              this._refreshValue(),
              this.options.range && this._refreshRange(t),
              this.handles.css("horizontal" === t ? "bottom" : "left", "");
            break;
          case "value":
            (this._animateOff = !0),
              this._refreshValue(),
              this._change(null, 0),
              (this._animateOff = !1);
            break;
          case "values":
            for (
              this._animateOff = !0, this._refreshValue(), i = s - 1;
              0 <= i;
              i--
            )
              this._change(null, i);
            this._animateOff = !1;
            break;
          case "step":
          case "min":
          case "max":
            (this._animateOff = !0),
              this._calculateNewMax(),
              this._refreshValue(),
              (this._animateOff = !1);
            break;
          case "range":
            (this._animateOff = !0), this._refresh(), (this._animateOff = !1);
        }
      },
      _setOptionDisabled: function (e) {
        this._super(e), this._toggleClass(null, "ui-state-disabled", !!e);
      },
      _value: function () {
        var e = this.options.value;
        return this._trimAlignValue(e);
      },
      _values: function (e) {
        var t, i;
        if (arguments.length)
          return (e = this.options.values[e]), this._trimAlignValue(e);
        if (this._hasMultipleValues()) {
          for (t = this.options.values.slice(), i = 0; i < t.length; i += 1)
            t[i] = this._trimAlignValue(t[i]);
          return t;
        }
        return [];
      },
      _trimAlignValue: function (e) {
        if (e <= this._valueMin()) return this._valueMin();
        if (e >= this._valueMax()) return this._valueMax();
        var t = 0 < this.options.step ? this.options.step : 1,
          i = (e - this._valueMin()) % t;
        e -= i;
        return (
          2 * Math.abs(i) >= t && (e += 0 < i ? t : -t),
          parseFloat(e.toFixed(5))
        );
      },
      _calculateNewMax: function () {
        var e = this.options.max,
          t = this._valueMin(),
          i = this.options.step;
        (e = Math.round((e - t) / i) * i + t) > this.options.max && (e -= i),
          (this.max = parseFloat(e.toFixed(this._precision())));
      },
      _precision: function () {
        var e = this._precisionOf(this.options.step);
        return null !== this.options.min
          ? Math.max(e, this._precisionOf(this.options.min))
          : e;
      },
      _precisionOf: function (e) {
        var t = e.toString();
        return -1 === (e = t.indexOf(".")) ? 0 : t.length - e - 1;
      },
      _valueMin: function () {
        return this.options.min;
      },
      _valueMax: function () {
        return this.max;
      },
      _refreshRange: function (e) {
        "vertical" === e && this.range.css({ width: "", left: "" }),
          "horizontal" === e && this.range.css({ height: "", bottom: "" });
      },
      _refreshValue: function () {
        var t,
          i,
          s,
          n,
          a,
          r = this.options.range,
          o = this.options,
          l = this,
          c = !this._animateOff && o.animate,
          h = {};
        this._hasMultipleValues()
          ? this.handles.each(function (s) {
              (i =
                ((l.values(s) - l._valueMin()) /
                  (l._valueMax() - l._valueMin())) *
                100),
                (h["horizontal" === l.orientation ? "left" : "bottom"] =
                  i + "%"),
                e(this).stop(1, 1)[c ? "animate" : "css"](h, o.animate),
                !0 === l.options.range &&
                  ("horizontal" === l.orientation
                    ? (0 === s &&
                        l.range
                          .stop(1, 1)
                          [c ? "animate" : "css"]({ left: i + "%" }, o.animate),
                      1 === s &&
                        l.range[c ? "animate" : "css"](
                          { width: i - t + "%" },
                          { queue: !1, duration: o.animate }
                        ))
                    : (0 === s &&
                        l.range
                          .stop(1, 1)
                          [c ? "animate" : "css"](
                            { bottom: i + "%" },
                            o.animate
                          ),
                      1 === s &&
                        l.range[c ? "animate" : "css"](
                          { height: i - t + "%" },
                          { queue: !1, duration: o.animate }
                        ))),
                (t = i);
            })
          : ((s = this.value()),
            (n = this._valueMin()),
            (a = this._valueMax()),
            (i = a !== n ? ((s - n) / (a - n)) * 100 : 0),
            (h["horizontal" === this.orientation ? "left" : "bottom"] =
              i + "%"),
            this.handle.stop(1, 1)[c ? "animate" : "css"](h, o.animate),
            "min" === r &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ width: i + "%" }, o.animate),
            "max" === r &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ width: 100 - i + "%" }, o.animate),
            "min" === r &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ height: i + "%" }, o.animate),
            "max" === r &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ height: 100 - i + "%" }, o.animate));
      },
      _handleEvents: {
        keydown: function (t) {
          var i,
            s,
            n,
            a = e(t.target).data("ui-slider-handle-index");
          switch (t.keyCode) {
            case e.ui.keyCode.HOME:
            case e.ui.keyCode.END:
            case e.ui.keyCode.PAGE_UP:
            case e.ui.keyCode.PAGE_DOWN:
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
              if (
                (t.preventDefault(),
                !this._keySliding &&
                  ((this._keySliding = !0),
                  this._addClass(e(t.target), null, "ui-state-active"),
                  !1 === this._start(t, a)))
              )
                return;
          }
          switch (
            ((n = this.options.step),
            (i = s = this._hasMultipleValues() ? this.values(a) : this.value()),
            t.keyCode)
          ) {
            case e.ui.keyCode.HOME:
              s = this._valueMin();
              break;
            case e.ui.keyCode.END:
              s = this._valueMax();
              break;
            case e.ui.keyCode.PAGE_UP:
              s = this._trimAlignValue(
                i + (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case e.ui.keyCode.PAGE_DOWN:
              s = this._trimAlignValue(
                i - (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
              if (i === this._valueMax()) return;
              s = this._trimAlignValue(i + n);
              break;
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
              if (i === this._valueMin()) return;
              s = this._trimAlignValue(i - n);
          }
          this._slide(t, a, s);
        },
        keyup: function (t) {
          var i = e(t.target).data("ui-slider-handle-index");
          this._keySliding &&
            ((this._keySliding = !1),
            this._stop(t, i),
            this._change(t, i),
            this._removeClass(e(t.target), null, "ui-state-active"));
        },
      },
    }),
    e.widget("ui.sortable", e.ui.mouse, {
      version: "1.13.2",
      widgetEventPrefix: "sort",
      ready: !1,
      options: {
        appendTo: "parent",
        axis: !1,
        connectWith: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        dropOnEmpty: !0,
        forcePlaceholderSize: !1,
        forceHelperSize: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        items: "> *",
        opacity: !1,
        placeholder: !1,
        revert: !1,
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        scope: "default",
        tolerance: "intersect",
        zIndex: 1e3,
        activate: null,
        beforeStop: null,
        change: null,
        deactivate: null,
        out: null,
        over: null,
        receive: null,
        remove: null,
        sort: null,
        start: null,
        stop: null,
        update: null,
      },
      _isOverAxis: function (e, t, i) {
        return t <= e && e < t + i;
      },
      _isFloating: function (e) {
        return (
          /left|right/.test(e.css("float")) ||
          /inline|table-cell/.test(e.css("display"))
        );
      },
      _create: function () {
        (this.containerCache = {}),
          this._addClass("ui-sortable"),
          this.refresh(),
          (this.offset = this.element.offset()),
          this._mouseInit(),
          this._setHandleClassName(),
          (this.ready = !0);
      },
      _setOption: function (e, t) {
        this._super(e, t), "handle" === e && this._setHandleClassName();
      },
      _setHandleClassName: function () {
        var t = this;
        this._removeClass(
          this.element.find(".ui-sortable-handle"),
          "ui-sortable-handle"
        ),
          e.each(this.items, function () {
            t._addClass(
              this.instance.options.handle
                ? this.item.find(this.instance.options.handle)
                : this.item,
              "ui-sortable-handle"
            );
          });
      },
      _destroy: function () {
        this._mouseDestroy();
        for (var e = this.items.length - 1; 0 <= e; e--)
          this.items[e].item.removeData(this.widgetName + "-item");
        return this;
      },
      _mouseCapture: function (t, i) {
        var s = null,
          n = !1,
          a = this;
        return !(
          this.reverting ||
          this.options.disabled ||
          "static" === this.options.type ||
          (this._refreshItems(t),
          e(t.target)
            .parents()
            .each(function () {
              if (e.data(this, a.widgetName + "-item") === a)
                return (s = e(this)), !1;
            }),
          !(s =
            e.data(t.target, a.widgetName + "-item") === a ? e(t.target) : s) ||
            (this.options.handle &&
              !i &&
              (e(this.options.handle, s)
                .find("*")
                .addBack()
                .each(function () {
                  this === t.target && (n = !0);
                }),
              !n)) ||
            ((this.currentItem = s), this._removeCurrentsFromItems(), 0))
        );
      },
      _mouseStart: function (t, i, s) {
        var n,
          a,
          r = this.options;
        if (
          ((this.currentContainer = this).refreshPositions(),
          (this.appendTo = e(
            "parent" !== r.appendTo ? r.appendTo : this.currentItem.parent()
          )),
          (this.helper = this._createHelper(t)),
          this._cacheHelperProportions(),
          this._cacheMargins(),
          (this.offset = this.currentItem.offset()),
          (this.offset = {
            top: this.offset.top - this.margins.top,
            left: this.offset.left - this.margins.left,
          }),
          e.extend(this.offset, {
            click: {
              left: t.pageX - this.offset.left,
              top: t.pageY - this.offset.top,
            },
            relative: this._getRelativeOffset(),
          }),
          this.helper.css("position", "absolute"),
          (this.cssPosition = this.helper.css("position")),
          r.cursorAt && this._adjustOffsetFromHelper(r.cursorAt),
          (this.domPosition = {
            prev: this.currentItem.prev()[0],
            parent: this.currentItem.parent()[0],
          }),
          this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
          this._createPlaceholder(),
          (this.scrollParent = this.placeholder.scrollParent()),
          e.extend(this.offset, { parent: this._getParentOffset() }),
          r.containment && this._setContainment(),
          r.cursor &&
            "auto" !== r.cursor &&
            ((a = this.document.find("body")),
            (this.storedCursor = a.css("cursor")),
            a.css("cursor", r.cursor),
            (this.storedStylesheet = e(
              "<style>*{ cursor: " + r.cursor + " !important; }</style>"
            ).appendTo(a))),
          r.zIndex &&
            (this.helper.css("zIndex") &&
              (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", r.zIndex)),
          r.opacity &&
            (this.helper.css("opacity") &&
              (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", r.opacity)),
          this.scrollParent[0] !== this.document[0] &&
            "HTML" !== this.scrollParent[0].tagName &&
            (this.overflowOffset = this.scrollParent.offset()),
          this._trigger("start", t, this._uiHash()),
          this._preserveHelperProportions || this._cacheHelperProportions(),
          !s)
        )
          for (n = this.containers.length - 1; 0 <= n; n--)
            this.containers[n]._trigger("activate", t, this._uiHash(this));
        return (
          e.ui.ddmanager && (e.ui.ddmanager.current = this),
          e.ui.ddmanager &&
            !r.dropBehaviour &&
            e.ui.ddmanager.prepareOffsets(this, t),
          (this.dragging = !0),
          this._addClass(this.helper, "ui-sortable-helper"),
          this.helper.parent().is(this.appendTo) ||
            (this.helper.detach().appendTo(this.appendTo),
            (this.offset.parent = this._getParentOffset())),
          (this.position = this.originalPosition = this._generatePosition(t)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          (this.lastPositionAbs = this.positionAbs =
            this._convertPositionTo("absolute")),
          this._mouseDrag(t),
          !0
        );
      },
      _scroll: function (e) {
        var t = this.options,
          i = !1;
        return (
          this.scrollParent[0] !== this.document[0] &&
          "HTML" !== this.scrollParent[0].tagName
            ? (this.overflowOffset.top +
                this.scrollParent[0].offsetHeight -
                e.pageY <
              t.scrollSensitivity
                ? (this.scrollParent[0].scrollTop = i =
                    this.scrollParent[0].scrollTop + t.scrollSpeed)
                : e.pageY - this.overflowOffset.top < t.scrollSensitivity &&
                  (this.scrollParent[0].scrollTop = i =
                    this.scrollParent[0].scrollTop - t.scrollSpeed),
              this.overflowOffset.left +
                this.scrollParent[0].offsetWidth -
                e.pageX <
              t.scrollSensitivity
                ? (this.scrollParent[0].scrollLeft = i =
                    this.scrollParent[0].scrollLeft + t.scrollSpeed)
                : e.pageX - this.overflowOffset.left < t.scrollSensitivity &&
                  (this.scrollParent[0].scrollLeft = i =
                    this.scrollParent[0].scrollLeft - t.scrollSpeed))
            : (e.pageY - this.document.scrollTop() < t.scrollSensitivity
                ? (i = this.document.scrollTop(
                    this.document.scrollTop() - t.scrollSpeed
                  ))
                : this.window.height() - (e.pageY - this.document.scrollTop()) <
                    t.scrollSensitivity &&
                  (i = this.document.scrollTop(
                    this.document.scrollTop() + t.scrollSpeed
                  )),
              e.pageX - this.document.scrollLeft() < t.scrollSensitivity
                ? (i = this.document.scrollLeft(
                    this.document.scrollLeft() - t.scrollSpeed
                  ))
                : this.window.width() - (e.pageX - this.document.scrollLeft()) <
                    t.scrollSensitivity &&
                  (i = this.document.scrollLeft(
                    this.document.scrollLeft() + t.scrollSpeed
                  ))),
          i
        );
      },
      _mouseDrag: function (t) {
        var i,
          s,
          n,
          a,
          r = this.options;
        for (
          this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute"),
            (this.options.axis && "y" === this.options.axis) ||
              (this.helper[0].style.left = this.position.left + "px"),
            (this.options.axis && "x" === this.options.axis) ||
              (this.helper[0].style.top = this.position.top + "px"),
            r.scroll &&
              !1 !== this._scroll(t) &&
              (this._refreshItemPositions(!0),
              e.ui.ddmanager &&
                !r.dropBehaviour &&
                e.ui.ddmanager.prepareOffsets(this, t)),
            this.dragDirection = {
              vertical: this._getDragVerticalDirection(),
              horizontal: this._getDragHorizontalDirection(),
            },
            i = this.items.length - 1;
          0 <= i;
          i--
        )
          if (
            ((n = (s = this.items[i]).item[0]),
            (a = this._intersectsWithPointer(s)) &&
              s.instance === this.currentContainer &&
              !(
                n === this.currentItem[0] ||
                this.placeholder[1 === a ? "next" : "prev"]()[0] === n ||
                e.contains(this.placeholder[0], n) ||
                ("semi-dynamic" === this.options.type &&
                  e.contains(this.element[0], n))
              ))
          ) {
            if (
              ((this.direction = 1 === a ? "down" : "up"),
              "pointer" !== this.options.tolerance &&
                !this._intersectsWithSides(s))
            )
              break;
            this._rearrange(t, s), this._trigger("change", t, this._uiHash());
            break;
          }
        return (
          this._contactContainers(t),
          e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
          this._trigger("sort", t, this._uiHash()),
          (this.lastPositionAbs = this.positionAbs),
          !1
        );
      },
      _mouseStop: function (t, i) {
        var s, n, a, r;
        if (t)
          return (
            e.ui.ddmanager &&
              !this.options.dropBehaviour &&
              e.ui.ddmanager.drop(this, t),
            this.options.revert
              ? ((n = (s = this).placeholder.offset()),
                (r = {}),
                ((a = this.options.axis) && "x" !== a) ||
                  (r.left =
                    n.left -
                    this.offset.parent.left -
                    this.margins.left +
                    (this.offsetParent[0] === this.document[0].body
                      ? 0
                      : this.offsetParent[0].scrollLeft)),
                (a && "y" !== a) ||
                  (r.top =
                    n.top -
                    this.offset.parent.top -
                    this.margins.top +
                    (this.offsetParent[0] === this.document[0].body
                      ? 0
                      : this.offsetParent[0].scrollTop)),
                (this.reverting = !0),
                e(this.helper).animate(
                  r,
                  parseInt(this.options.revert, 10) || 500,
                  function () {
                    s._clear(t);
                  }
                ))
              : this._clear(t, i),
            !1
          );
      },
      cancel: function () {
        if (this.dragging) {
          this._mouseUp(new e.Event("mouseup", { target: null })),
            "original" === this.options.helper
              ? (this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper"))
              : this.currentItem.show();
          for (var t = this.containers.length - 1; 0 <= t; t--)
            this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
              this.containers[t].containerCache.over &&
                (this.containers[t]._trigger("out", null, this._uiHash(this)),
                (this.containers[t].containerCache.over = 0));
        }
        return (
          this.placeholder &&
            (this.placeholder[0].parentNode &&
              this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            "original" !== this.options.helper &&
              this.helper &&
              this.helper[0].parentNode &&
              this.helper.remove(),
            e.extend(this, {
              helper: null,
              dragging: !1,
              reverting: !1,
              _noFinalSort: null,
            }),
            this.domPosition.prev
              ? e(this.domPosition.prev).after(this.currentItem)
              : e(this.domPosition.parent).prepend(this.currentItem)),
          this
        );
      },
      serialize: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected),
          s = [];
        return (
          (t = t || {}),
          e(i).each(function () {
            var i = (e(t.item || this).attr(t.attribute || "id") || "").match(
              t.expression || /(.+)[\-=_](.+)/
            );
            i &&
              s.push(
                (t.key || i[1] + "[]") +
                  "=" +
                  (t.key && t.expression ? i[1] : i[2])
              );
          }),
          !s.length && t.key && s.push(t.key + "="),
          s.join("&")
        );
      },
      toArray: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected),
          s = [];
        return (
          (t = t || {}),
          i.each(function () {
            s.push(e(t.item || this).attr(t.attribute || "id") || "");
          }),
          s
        );
      },
      _intersectsWith: function (e) {
        var t = this.positionAbs.left,
          i = t + this.helperProportions.width,
          s = this.positionAbs.top,
          n = s + this.helperProportions.height,
          a = e.left,
          r = a + e.width,
          o = e.top,
          l = o + e.height,
          c = this.offset.click.top,
          h = this.offset.click.left;
        (c = "x" === this.options.axis || (o < s + c && s + c < l)),
          (h = "y" === this.options.axis || (a < t + h && t + h < r));
        return "pointer" === this.options.tolerance ||
          this.options.forcePointerForContainers ||
          ("pointer" !== this.options.tolerance &&
            this.helperProportions[this.floating ? "width" : "height"] >
              e[this.floating ? "width" : "height"])
          ? c && h
          : a < t + this.helperProportions.width / 2 &&
              i - this.helperProportions.width / 2 < r &&
              o < s + this.helperProportions.height / 2 &&
              n - this.helperProportions.height / 2 < l;
      },
      _intersectsWithPointer: function (e) {
        var t =
          "x" === this.options.axis ||
          this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            e.top,
            e.height
          );
        e =
          "y" === this.options.axis ||
          this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            e.left,
            e.width
          );
        return (
          !(!t || !e) &&
          ((t = this.dragDirection.vertical),
          (e = this.dragDirection.horizontal),
          this.floating
            ? "right" === e || "down" === t
              ? 2
              : 1
            : t && ("down" === t ? 2 : 1))
        );
      },
      _intersectsWithSides: function (e) {
        var t = this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            e.top + e.height / 2,
            e.height
          ),
          i = this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            e.left + e.width / 2,
            e.width
          ),
          s = this.dragDirection.vertical;
        e = this.dragDirection.horizontal;
        return this.floating && e
          ? ("right" === e && i) || ("left" === e && !i)
          : s && (("down" === s && t) || ("up" === s && !t));
      },
      _getDragVerticalDirection: function () {
        var e = this.positionAbs.top - this.lastPositionAbs.top;
        return 0 != e && (0 < e ? "down" : "up");
      },
      _getDragHorizontalDirection: function () {
        var e = this.positionAbs.left - this.lastPositionAbs.left;
        return 0 != e && (0 < e ? "right" : "left");
      },
      refresh: function (e) {
        return (
          this._refreshItems(e),
          this._setHandleClassName(),
          this.refreshPositions(),
          this
        );
      },
      _connectWith: function () {
        var e = this.options;
        return e.connectWith.constructor === String
          ? [e.connectWith]
          : e.connectWith;
      },
      _getItemsAsjQuery: function (t) {
        var i,
          s,
          n,
          a,
          r = [],
          o = [],
          l = this._connectWith();
        if (l && t)
          for (i = l.length - 1; 0 <= i; i--)
            for (s = (n = e(l[i], this.document[0])).length - 1; 0 <= s; s--)
              (a = e.data(n[s], this.widgetFullName)) &&
                a !== this &&
                !a.options.disabled &&
                o.push([
                  "function" == typeof a.options.items
                    ? a.options.items.call(a.element)
                    : e(a.options.items, a.element)
                        .not(".ui-sortable-helper")
                        .not(".ui-sortable-placeholder"),
                  a,
                ]);
        function c() {
          r.push(this);
        }
        for (
          o.push([
            "function" == typeof this.options.items
              ? this.options.items.call(this.element, null, {
                  options: this.options,
                  item: this.currentItem,
                })
              : e(this.options.items, this.element)
                  .not(".ui-sortable-helper")
                  .not(".ui-sortable-placeholder"),
            this,
          ]),
            i = o.length - 1;
          0 <= i;
          i--
        )
          o[i][0].each(c);
        return e(r);
      },
      _removeCurrentsFromItems: function () {
        var t = this.currentItem.find(":data(" + this.widgetName + "-item)");
        this.items = e.grep(this.items, function (e) {
          for (var i = 0; i < t.length; i++) if (t[i] === e.item[0]) return !1;
          return !0;
        });
      },
      _refreshItems: function (t) {
        (this.items = []), (this.containers = [this]);
        var i,
          s,
          n,
          a,
          r,
          o,
          l,
          c,
          h = this.items,
          d = [
            [
              "function" == typeof this.options.items
                ? this.options.items.call(this.element[0], t, {
                    item: this.currentItem,
                  })
                : e(this.options.items, this.element),
              this,
            ],
          ],
          u = this._connectWith();
        if (u && this.ready)
          for (i = u.length - 1; 0 <= i; i--)
            for (s = (n = e(u[i], this.document[0])).length - 1; 0 <= s; s--)
              (a = e.data(n[s], this.widgetFullName)) &&
                a !== this &&
                !a.options.disabled &&
                (d.push([
                  "function" == typeof a.options.items
                    ? a.options.items.call(a.element[0], t, {
                        item: this.currentItem,
                      })
                    : e(a.options.items, a.element),
                  a,
                ]),
                this.containers.push(a));
        for (i = d.length - 1; 0 <= i; i--)
          for (r = d[i][1], c = (o = d[i][(s = 0)]).length; s < c; s++)
            (l = e(o[s])).data(this.widgetName + "-item", r),
              h.push({
                item: l,
                instance: r,
                width: 0,
                height: 0,
                left: 0,
                top: 0,
              });
      },
      _refreshItemPositions: function (t) {
        for (var i, s, n = this.items.length - 1; 0 <= n; n--)
          (i = this.items[n]),
            (this.currentContainer &&
              i.instance !== this.currentContainer &&
              i.item[0] !== this.currentItem[0]) ||
              ((s = this.options.toleranceElement
                ? e(this.options.toleranceElement, i.item)
                : i.item),
              t || ((i.width = s.outerWidth()), (i.height = s.outerHeight())),
              (s = s.offset()),
              (i.left = s.left),
              (i.top = s.top));
      },
      refreshPositions: function (e) {
        var t, i;
        if (
          ((this.floating =
            !!this.items.length &&
            ("x" === this.options.axis ||
              this._isFloating(this.items[0].item))),
          this.offsetParent &&
            this.helper &&
            (this.offset.parent = this._getParentOffset()),
          this._refreshItemPositions(e),
          this.options.custom && this.options.custom.refreshContainers)
        )
          this.options.custom.refreshContainers.call(this);
        else
          for (t = this.containers.length - 1; 0 <= t; t--)
            (i = this.containers[t].element.offset()),
              (this.containers[t].containerCache.left = i.left),
              (this.containers[t].containerCache.top = i.top),
              (this.containers[t].containerCache.width =
                this.containers[t].element.outerWidth()),
              (this.containers[t].containerCache.height =
                this.containers[t].element.outerHeight());
        return this;
      },
      _createPlaceholder: function (t) {
        var i,
          s,
          n = (t = t || this).options;
        (n.placeholder && n.placeholder.constructor !== String) ||
          ((i = n.placeholder),
          (s = t.currentItem[0].nodeName.toLowerCase()),
          (n.placeholder = {
            element: function () {
              var n = e("<" + s + ">", t.document[0]);
              return (
                t
                  ._addClass(
                    n,
                    "ui-sortable-placeholder",
                    i || t.currentItem[0].className
                  )
                  ._removeClass(n, "ui-sortable-helper"),
                "tbody" === s
                  ? t._createTrPlaceholder(
                      t.currentItem.find("tr").eq(0),
                      e("<tr>", t.document[0]).appendTo(n)
                    )
                  : "tr" === s
                  ? t._createTrPlaceholder(t.currentItem, n)
                  : "img" === s && n.attr("src", t.currentItem.attr("src")),
                i || n.css("visibility", "hidden"),
                n
              );
            },
            update: function (e, a) {
              (i && !n.forcePlaceholderSize) ||
                ((a.height() &&
                  (!n.forcePlaceholderSize || ("tbody" !== s && "tr" !== s))) ||
                  a.height(
                    t.currentItem.innerHeight() -
                      parseInt(t.currentItem.css("paddingTop") || 0, 10) -
                      parseInt(t.currentItem.css("paddingBottom") || 0, 10)
                  ),
                a.width() ||
                  a.width(
                    t.currentItem.innerWidth() -
                      parseInt(t.currentItem.css("paddingLeft") || 0, 10) -
                      parseInt(t.currentItem.css("paddingRight") || 0, 10)
                  ));
            },
          })),
          (t.placeholder = e(
            n.placeholder.element.call(t.element, t.currentItem)
          )),
          t.currentItem.after(t.placeholder),
          n.placeholder.update(t, t.placeholder);
      },
      _createTrPlaceholder: function (t, i) {
        var s = this;
        t.children().each(function () {
          e("<td>&#160;</td>", s.document[0])
            .attr("colspan", e(this).attr("colspan") || 1)
            .appendTo(i);
        });
      },
      _contactContainers: function (t) {
        for (
          var i,
            s,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d = null,
            u = null,
            p = this.containers.length - 1;
          0 <= p;
          p--
        )
          e.contains(this.currentItem[0], this.containers[p].element[0]) ||
            (this._intersectsWith(this.containers[p].containerCache)
              ? (d &&
                  e.contains(this.containers[p].element[0], d.element[0])) ||
                ((d = this.containers[p]), (u = p))
              : this.containers[p].containerCache.over &&
                (this.containers[p]._trigger("out", t, this._uiHash(this)),
                (this.containers[p].containerCache.over = 0)));
        if (d)
          if (1 === this.containers.length)
            this.containers[u].containerCache.over ||
              (this.containers[u]._trigger("over", t, this._uiHash(this)),
              (this.containers[u].containerCache.over = 1));
          else {
            for (
              s = 1e4,
                n = null,
                a = (c = d.floating || this._isFloating(this.currentItem))
                  ? "left"
                  : "top",
                r = c ? "width" : "height",
                h = c ? "pageX" : "pageY",
                i = this.items.length - 1;
              0 <= i;
              i--
            )
              e.contains(
                this.containers[u].element[0],
                this.items[i].item[0]
              ) &&
                this.items[i].item[0] !== this.currentItem[0] &&
                ((o = this.items[i].item.offset()[a]),
                (l = !1),
                t[h] - o > this.items[i][r] / 2 && (l = !0),
                Math.abs(t[h] - o) < s &&
                  ((s = Math.abs(t[h] - o)),
                  (n = this.items[i]),
                  (this.direction = l ? "up" : "down")));
            (n || this.options.dropOnEmpty) &&
              (this.currentContainer !== this.containers[u]
                ? (n
                    ? this._rearrange(t, n, null, !0)
                    : this._rearrange(t, null, this.containers[u].element, !0),
                  this._trigger("change", t, this._uiHash()),
                  this.containers[u]._trigger("change", t, this._uiHash(this)),
                  (this.currentContainer = this.containers[u]),
                  this.options.placeholder.update(
                    this.currentContainer,
                    this.placeholder
                  ),
                  (this.scrollParent = this.placeholder.scrollParent()),
                  this.scrollParent[0] !== this.document[0] &&
                    "HTML" !== this.scrollParent[0].tagName &&
                    (this.overflowOffset = this.scrollParent.offset()),
                  this.containers[u]._trigger("over", t, this._uiHash(this)),
                  (this.containers[u].containerCache.over = 1))
                : this.currentContainer.containerCache.over ||
                  (this.containers[u]._trigger("over", t, this._uiHash()),
                  (this.currentContainer.containerCache.over = 1)));
          }
      },
      _createHelper: function (t) {
        var i = this.options;
        return (
          (t =
            "function" == typeof i.helper
              ? e(i.helper.apply(this.element[0], [t, this.currentItem]))
              : "clone" === i.helper
              ? this.currentItem.clone()
              : this.currentItem).parents("body").length ||
            this.appendTo[0].appendChild(t[0]),
          t[0] === this.currentItem[0] &&
            (this._storedCSS = {
              width: this.currentItem[0].style.width,
              height: this.currentItem[0].style.height,
              position: this.currentItem.css("position"),
              top: this.currentItem.css("top"),
              left: this.currentItem.css("left"),
            }),
          (t[0].style.width && !i.forceHelperSize) ||
            t.width(this.currentItem.width()),
          (t[0].style.height && !i.forceHelperSize) ||
            t.height(this.currentItem.height()),
          t
        );
      },
      _adjustOffsetFromHelper: function (e) {
        "string" == typeof e && (e = e.split(" ")),
          "left" in
            (e = Array.isArray(e) ? { left: +e[0], top: +e[1] || 0 } : e) &&
            (this.offset.click.left = e.left + this.margins.left),
          "right" in e &&
            (this.offset.click.left =
              this.helperProportions.width - e.right + this.margins.left),
          "top" in e && (this.offset.click.top = e.top + this.margins.top),
          "bottom" in e &&
            (this.offset.click.top =
              this.helperProportions.height - e.bottom + this.margins.top);
      },
      _getParentOffset: function () {
        this.offsetParent = this.helper.offsetParent();
        var t = this.offsetParent.offset();
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== this.document[0] &&
            e.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          {
            top:
              (t =
                this.offsetParent[0] === this.document[0].body ||
                (this.offsetParent[0].tagName &&
                  "html" === this.offsetParent[0].tagName.toLowerCase() &&
                  e.ui.ie)
                  ? { top: 0, left: 0 }
                  : t).top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
        var e = this.currentItem.position();
        return {
          top:
            e.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            this.scrollParent.scrollTop(),
          left:
            e.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            this.scrollParent.scrollLeft(),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
          top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          i,
          s = this.options;
        "parent" === s.containment &&
          (s.containment = this.helper[0].parentNode),
          ("document" !== s.containment && "window" !== s.containment) ||
            (this.containment = [
              0 - this.offset.relative.left - this.offset.parent.left,
              0 - this.offset.relative.top - this.offset.parent.top,
              "document" === s.containment
                ? this.document.width()
                : this.window.width() -
                  this.helperProportions.width -
                  this.margins.left,
              ("document" === s.containment
                ? this.document.height() ||
                  document.body.parentNode.scrollHeight
                : this.window.height() ||
                  this.document[0].body.parentNode.scrollHeight) -
                this.helperProportions.height -
                this.margins.top,
            ]),
          /^(document|window|parent)$/.test(s.containment) ||
            ((t = e(s.containment)[0]),
            (i = e(s.containment).offset()),
            (s = "hidden" !== e(t).css("overflow")),
            (this.containment = [
              i.left +
                (parseInt(e(t).css("borderLeftWidth"), 10) || 0) +
                (parseInt(e(t).css("paddingLeft"), 10) || 0) -
                this.margins.left,
              i.top +
                (parseInt(e(t).css("borderTopWidth"), 10) || 0) +
                (parseInt(e(t).css("paddingTop"), 10) || 0) -
                this.margins.top,
              i.left +
                (s ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) -
                (parseInt(e(t).css("borderLeftWidth"), 10) || 0) -
                (parseInt(e(t).css("paddingRight"), 10) || 0) -
                this.helperProportions.width -
                this.margins.left,
              i.top +
                (s
                  ? Math.max(t.scrollHeight, t.offsetHeight)
                  : t.offsetHeight) -
                (parseInt(e(t).css("borderTopWidth"), 10) || 0) -
                (parseInt(e(t).css("paddingBottom"), 10) || 0) -
                this.helperProportions.height -
                this.margins.top,
            ]));
      },
      _convertPositionTo: function (t, i) {
        i = i || this.position;
        var s = "absolute" === t ? 1 : -1,
          n =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              e.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent;
        t = /(html|body)/i.test(n[0].tagName);
        return {
          top:
            i.top +
            this.offset.relative.top * s +
            this.offset.parent.top * s -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollTop()
              : t
              ? 0
              : n.scrollTop()) *
              s,
          left:
            i.left +
            this.offset.relative.left * s +
            this.offset.parent.left * s -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollLeft()
              : t
              ? 0
              : n.scrollLeft()) *
              s,
        };
      },
      _generatePosition: function (t) {
        var i = this.options,
          s = t.pageX,
          n = t.pageY,
          a =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              e.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          r = /(html|body)/i.test(a[0].tagName);
        return (
          "relative" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              this.scrollParent[0] !== this.offsetParent[0]) ||
            (this.offset.relative = this._getRelativeOffset()),
          this.originalPosition &&
            (this.containment &&
              (t.pageX - this.offset.click.left < this.containment[0] &&
                (s = this.containment[0] + this.offset.click.left),
              t.pageY - this.offset.click.top < this.containment[1] &&
                (n = this.containment[1] + this.offset.click.top),
              t.pageX - this.offset.click.left > this.containment[2] &&
                (s = this.containment[2] + this.offset.click.left),
              t.pageY - this.offset.click.top > this.containment[3] &&
                (n = this.containment[3] + this.offset.click.top)),
            i.grid &&
              ((t =
                this.originalPageY +
                Math.round((n - this.originalPageY) / i.grid[1]) * i.grid[1]),
              (n =
                !this.containment ||
                (t - this.offset.click.top >= this.containment[1] &&
                  t - this.offset.click.top <= this.containment[3])
                  ? t
                  : t - this.offset.click.top >= this.containment[1]
                  ? t - i.grid[1]
                  : t + i.grid[1]),
              (t =
                this.originalPageX +
                Math.round((s - this.originalPageX) / i.grid[0]) * i.grid[0]),
              (s =
                !this.containment ||
                (t - this.offset.click.left >= this.containment[0] &&
                  t - this.offset.click.left <= this.containment[2])
                  ? t
                  : t - this.offset.click.left >= this.containment[0]
                  ? t - i.grid[0]
                  : t + i.grid[0]))),
          {
            top:
              n -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollTop()
                : r
                ? 0
                : a.scrollTop()),
            left:
              s -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollLeft()
                : r
                ? 0
                : a.scrollLeft()),
          }
        );
      },
      _rearrange: function (e, t, i, s) {
        i
          ? i[0].appendChild(this.placeholder[0])
          : t.item[0].parentNode.insertBefore(
              this.placeholder[0],
              "down" === this.direction ? t.item[0] : t.item[0].nextSibling
            ),
          (this.counter = this.counter ? ++this.counter : 1);
        var n = this.counter;
        this._delay(function () {
          n === this.counter && this.refreshPositions(!s);
        });
      },
      _clear: function (e, t) {
        this.reverting = !1;
        var i,
          s = [];
        if (
          (!this._noFinalSort &&
            this.currentItem.parent().length &&
            this.placeholder.before(this.currentItem),
          (this._noFinalSort = null),
          this.helper[0] === this.currentItem[0])
        ) {
          for (i in this._storedCSS)
            ("auto" !== this._storedCSS[i] &&
              "static" !== this._storedCSS[i]) ||
              (this._storedCSS[i] = "");
          this.currentItem.css(this._storedCSS),
            this._removeClass(this.currentItem, "ui-sortable-helper");
        } else this.currentItem.show();
        function n(e, t, i) {
          return function (s) {
            i._trigger(e, s, t._uiHash(t));
          };
        }
        for (
          this.fromOutside &&
            !t &&
            s.push(function (e) {
              this._trigger("receive", e, this._uiHash(this.fromOutside));
            }),
            (!this.fromOutside &&
              this.domPosition.prev ===
                this.currentItem.prev().not(".ui-sortable-helper")[0] &&
              this.domPosition.parent === this.currentItem.parent()[0]) ||
              t ||
              s.push(function (e) {
                this._trigger("update", e, this._uiHash());
              }),
            this !== this.currentContainer &&
              (t ||
                (s.push(function (e) {
                  this._trigger("remove", e, this._uiHash());
                }),
                s.push(
                  function (e) {
                    return function (t) {
                      e._trigger("receive", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ),
                s.push(
                  function (e) {
                    return function (t) {
                      e._trigger("update", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ))),
            i = this.containers.length - 1;
          0 <= i;
          i--
        )
          t || s.push(n("deactivate", this, this.containers[i])),
            this.containers[i].containerCache.over &&
              (s.push(n("out", this, this.containers[i])),
              (this.containers[i].containerCache.over = 0));
        if (
          (this.storedCursor &&
            (this.document.find("body").css("cursor", this.storedCursor),
            this.storedStylesheet.remove()),
          this._storedOpacity &&
            this.helper.css("opacity", this._storedOpacity),
          this._storedZIndex &&
            this.helper.css(
              "zIndex",
              "auto" === this._storedZIndex ? "" : this._storedZIndex
            ),
          (this.dragging = !1),
          t || this._trigger("beforeStop", e, this._uiHash()),
          this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
          this.cancelHelperRemoval ||
            (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
            (this.helper = null)),
          !t)
        ) {
          for (i = 0; i < s.length; i++) s[i].call(this, e);
          this._trigger("stop", e, this._uiHash());
        }
        return (this.fromOutside = !1), !this.cancelHelperRemoval;
      },
      _trigger: function () {
        !1 === e.Widget.prototype._trigger.apply(this, arguments) &&
          this.cancel();
      },
      _uiHash: function (t) {
        var i = t || this;
        return {
          helper: i.helper,
          placeholder: i.placeholder || e([]),
          position: i.position,
          originalPosition: i.originalPosition,
          offset: i.positionAbs,
          item: i.currentItem,
          sender: t ? t.element : null,
        };
      },
    }),
    e.widget("ui.spinner", {
      version: "1.13.2",
      defaultElement: "<input>",
      widgetEventPrefix: "spin",
      options: {
        classes: {
          "ui-spinner": "ui-corner-all",
          "ui-spinner-down": "ui-corner-br",
          "ui-spinner-up": "ui-corner-tr",
        },
        culture: null,
        icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
        incremental: !0,
        max: null,
        min: null,
        numberFormat: null,
        page: 10,
        step: 1,
        change: null,
        spin: null,
        start: null,
        stop: null,
      },
      _create: function () {
        this._setOption("max", this.options.max),
          this._setOption("min", this.options.min),
          this._setOption("step", this.options.step),
          "" !== this.value() && this._value(this.element.val(), !0),
          this._draw(),
          this._on(this._events),
          this._refresh(),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _getCreateOptions: function () {
        var t = this._super(),
          i = this.element;
        return (
          e.each(["min", "max", "step"], function (e, s) {
            var n = i.attr(s);
            null != n && n.length && (t[s] = n);
          }),
          t
        );
      },
      _events: {
        keydown: function (e) {
          this._start(e) && this._keydown(e) && e.preventDefault();
        },
        keyup: "_stop",
        focus: function () {
          this.previous = this.element.val();
        },
        blur: function (e) {
          this.cancelBlur
            ? delete this.cancelBlur
            : (this._stop(),
              this._refresh(),
              this.previous !== this.element.val() &&
                this._trigger("change", e));
        },
        mousewheel: function (t, i) {
          var s = e.ui.safeActiveElement(this.document[0]);
          if (this.element[0] === s && i) {
            if (!this.spinning && !this._start(t)) return !1;
            this._spin((0 < i ? 1 : -1) * this.options.step, t),
              clearTimeout(this.mousewheelTimer),
              (this.mousewheelTimer = this._delay(function () {
                this.spinning && this._stop(t);
              }, 100)),
              t.preventDefault();
          }
        },
        "mousedown .ui-spinner-button": function (t) {
          var i;
          function s() {
            this.element[0] === e.ui.safeActiveElement(this.document[0]) ||
              (this.element.trigger("focus"),
              (this.previous = i),
              this._delay(function () {
                this.previous = i;
              }));
          }
          (i =
            this.element[0] === e.ui.safeActiveElement(this.document[0])
              ? this.previous
              : this.element.val()),
            t.preventDefault(),
            s.call(this),
            (this.cancelBlur = !0),
            this._delay(function () {
              delete this.cancelBlur, s.call(this);
            }),
            !1 !== this._start(t) &&
              this._repeat(
                null,
                e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                t
              );
        },
        "mouseup .ui-spinner-button": "_stop",
        "mouseenter .ui-spinner-button": function (t) {
          if (e(t.currentTarget).hasClass("ui-state-active"))
            return (
              !1 !== this._start(t) &&
              void this._repeat(
                null,
                e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                t
              )
            );
        },
        "mouseleave .ui-spinner-button": "_stop",
      },
      _enhance: function () {
        this.uiSpinner = this.element
          .attr("autocomplete", "off")
          .wrap("<span>")
          .parent()
          .append("<a></a><a></a>");
      },
      _draw: function () {
        this._enhance(),
          this._addClass(
            this.uiSpinner,
            "ui-spinner",
            "ui-widget ui-widget-content"
          ),
          this._addClass("ui-spinner-input"),
          this.element.attr("role", "spinbutton"),
          (this.buttons = this.uiSpinner
            .children("a")
            .attr("tabIndex", -1)
            .attr("aria-hidden", !0)
            .button({ classes: { "ui-button": "" } })),
          this._removeClass(this.buttons, "ui-corner-all"),
          this._addClass(
            this.buttons.first(),
            "ui-spinner-button ui-spinner-up"
          ),
          this._addClass(
            this.buttons.last(),
            "ui-spinner-button ui-spinner-down"
          ),
          this.buttons
            .first()
            .button({ icon: this.options.icons.up, showLabel: !1 }),
          this.buttons
            .last()
            .button({ icon: this.options.icons.down, showLabel: !1 }),
          this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) &&
            0 < this.uiSpinner.height() &&
            this.uiSpinner.height(this.uiSpinner.height());
      },
      _keydown: function (t) {
        var i = this.options,
          s = e.ui.keyCode;
        switch (t.keyCode) {
          case s.UP:
            return this._repeat(null, 1, t), !0;
          case s.DOWN:
            return this._repeat(null, -1, t), !0;
          case s.PAGE_UP:
            return this._repeat(null, i.page, t), !0;
          case s.PAGE_DOWN:
            return this._repeat(null, -i.page, t), !0;
        }
        return !1;
      },
      _start: function (e) {
        return (
          !(!this.spinning && !1 === this._trigger("start", e)) &&
          (this.counter || (this.counter = 1), (this.spinning = !0))
        );
      },
      _repeat: function (e, t, i) {
        (e = e || 500),
          clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            this._repeat(40, t, i);
          }, e)),
          this._spin(t * this.options.step, i);
      },
      _spin: function (e, t) {
        var i = this.value() || 0;
        this.counter || (this.counter = 1),
          (i = this._adjustValue(i + e * this._increment(this.counter))),
          (this.spinning && !1 === this._trigger("spin", t, { value: i })) ||
            (this._value(i), this.counter++);
      },
      _increment: function (e) {
        var t = this.options.incremental;
        return t
          ? "function" == typeof t
            ? t(e)
            : Math.floor((e * e * e) / 5e4 - (e * e) / 500 + (17 * e) / 200 + 1)
          : 1;
      },
      _precision: function () {
        var e = this._precisionOf(this.options.step);
        return null !== this.options.min
          ? Math.max(e, this._precisionOf(this.options.min))
          : e;
      },
      _precisionOf: function (e) {
        var t = e.toString();
        return -1 === (e = t.indexOf(".")) ? 0 : t.length - e - 1;
      },
      _adjustValue: function (e) {
        var t = this.options,
          i = null !== t.min ? t.min : 0,
          s = e - i;
        return (
          (e = i + Math.round(s / t.step) * t.step),
          (e = parseFloat(e.toFixed(this._precision()))),
          null !== t.max && e > t.max
            ? t.max
            : null !== t.min && e < t.min
            ? t.min
            : e
        );
      },
      _stop: function (e) {
        this.spinning &&
          (clearTimeout(this.timer),
          clearTimeout(this.mousewheelTimer),
          (this.counter = 0),
          (this.spinning = !1),
          this._trigger("stop", e));
      },
      _setOption: function (e, t) {
        var i;
        if ("culture" === e || "numberFormat" === e)
          return (
            (i = this._parse(this.element.val())),
            (this.options[e] = t),
            void this.element.val(this._format(i))
          );
        ("max" !== e && "min" !== e && "step" !== e) ||
          ("string" == typeof t && (t = this._parse(t))),
          "icons" === e &&
            ((i = this.buttons.first().find(".ui-icon")),
            this._removeClass(i, null, this.options.icons.up),
            this._addClass(i, null, t.up),
            (i = this.buttons.last().find(".ui-icon")),
            this._removeClass(i, null, this.options.icons.down),
            this._addClass(i, null, t.down)),
          this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!e),
          this.element.prop("disabled", !!e),
          this.buttons.button(e ? "disable" : "enable");
      },
      _setOptions: he(function (e) {
        this._super(e);
      }),
      _parse: function (e) {
        return "" ===
          (e =
            "string" == typeof e && "" !== e
              ? window.Globalize && this.options.numberFormat
                ? Globalize.parseFloat(e, 10, this.options.culture)
                : +e
              : e) || isNaN(e)
          ? null
          : e;
      },
      _format: function (e) {
        return "" === e
          ? ""
          : window.Globalize && this.options.numberFormat
          ? Globalize.format(e, this.options.numberFormat, this.options.culture)
          : e;
      },
      _refresh: function () {
        this.element.attr({
          "aria-valuemin": this.options.min,
          "aria-valuemax": this.options.max,
          "aria-valuenow": this._parse(this.element.val()),
        });
      },
      isValid: function () {
        var e = this.value();
        return null !== e && e === this._adjustValue(e);
      },
      _value: function (e, t) {
        var i;
        "" !== e &&
          null !== (i = this._parse(e)) &&
          (t || (i = this._adjustValue(i)), (e = this._format(i))),
          this.element.val(e),
          this._refresh();
      },
      _destroy: function () {
        this.element
          .prop("disabled", !1)
          .removeAttr(
            "autocomplete role aria-valuemin aria-valuemax aria-valuenow"
          ),
          this.uiSpinner.replaceWith(this.element);
      },
      stepUp: he(function (e) {
        this._stepUp(e);
      }),
      _stepUp: function (e) {
        this._start() &&
          (this._spin((e || 1) * this.options.step), this._stop());
      },
      stepDown: he(function (e) {
        this._stepDown(e);
      }),
      _stepDown: function (e) {
        this._start() &&
          (this._spin((e || 1) * -this.options.step), this._stop());
      },
      pageUp: he(function (e) {
        this._stepUp((e || 1) * this.options.page);
      }),
      pageDown: he(function (e) {
        this._stepDown((e || 1) * this.options.page);
      }),
      value: function (e) {
        if (!arguments.length) return this._parse(this.element.val());
        he(this._value).call(this, e);
      },
      widget: function () {
        return this.uiSpinner;
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.spinner", e.ui.spinner, {
        _enhance: function () {
          this.uiSpinner = this.element
            .attr("autocomplete", "off")
            .wrap(this._uiSpinnerHtml())
            .parent()
            .append(this._buttonHtml());
        },
        _uiSpinnerHtml: function () {
          return "<span>";
        },
        _buttonHtml: function () {
          return "<a></a><a></a>";
        },
      }),
    e.ui.spinner,
    e.widget("ui.tabs", {
      version: "1.13.2",
      delay: 300,
      options: {
        active: null,
        classes: {
          "ui-tabs": "ui-corner-all",
          "ui-tabs-nav": "ui-corner-all",
          "ui-tabs-panel": "ui-corner-bottom",
          "ui-tabs-tab": "ui-corner-top",
        },
        collapsible: !1,
        event: "click",
        heightStyle: "content",
        hide: null,
        show: null,
        activate: null,
        beforeActivate: null,
        beforeLoad: null,
        load: null,
      },
      _isLocal:
        ((oe = /#.*$/),
        function (e) {
          var t = e.href.replace(oe, ""),
            i = location.href.replace(oe, "");
          try {
            t = decodeURIComponent(t);
          } catch (e) {}
          try {
            i = decodeURIComponent(i);
          } catch (e) {}
          return 1 < e.hash.length && t === i;
        }),
      _create: function () {
        var t = this,
          i = this.options;
        (this.running = !1),
          this._addClass("ui-tabs", "ui-widget ui-widget-content"),
          this._toggleClass("ui-tabs-collapsible", null, i.collapsible),
          this._processTabs(),
          (i.active = this._initialActive()),
          Array.isArray(i.disabled) &&
            (i.disabled = e
              .uniqueSort(
                i.disabled.concat(
                  e.map(this.tabs.filter(".ui-state-disabled"), function (e) {
                    return t.tabs.index(e);
                  })
                )
              )
              .sort()),
          !1 !== this.options.active && this.anchors.length
            ? (this.active = this._findActive(i.active))
            : (this.active = e()),
          this._refresh(),
          this.active.length && this.load(i.active);
      },
      _initialActive: function () {
        var t = this.options.active,
          i = this.options.collapsible,
          s = location.hash.substring(1);
        return (
          null === t &&
            (s &&
              this.tabs.each(function (i, n) {
                if (e(n).attr("aria-controls") === s) return (t = i), !1;
              }),
            (null !==
              (t =
                null === t
                  ? this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                  : t) &&
              -1 !== t) ||
              (t = !!this.tabs.length && 0)),
          !1 !== t &&
            -1 === (t = this.tabs.index(this.tabs.eq(t))) &&
            (t = !i && 0),
          (t = !i && !1 === t && this.anchors.length ? 0 : t)
        );
      },
      _getCreateEventData: function () {
        return {
          tab: this.active,
          panel: this.active.length ? this._getPanelForTab(this.active) : e(),
        };
      },
      _tabKeydown: function (t) {
        var i = e(e.ui.safeActiveElement(this.document[0])).closest("li"),
          s = this.tabs.index(i),
          n = !0;
        if (!this._handlePageNav(t)) {
          switch (t.keyCode) {
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
              s++;
              break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.LEFT:
              (n = !1), s--;
              break;
            case e.ui.keyCode.END:
              s = this.anchors.length - 1;
              break;
            case e.ui.keyCode.HOME:
              s = 0;
              break;
            case e.ui.keyCode.SPACE:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(s)
              );
            case e.ui.keyCode.ENTER:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(s !== this.options.active && s)
              );
            default:
              return;
          }
          t.preventDefault(),
            clearTimeout(this.activating),
            (s = this._focusNextTab(s, n)),
            t.ctrlKey ||
              t.metaKey ||
              (i.attr("aria-selected", "false"),
              this.tabs.eq(s).attr("aria-selected", "true"),
              (this.activating = this._delay(function () {
                this.option("active", s);
              }, this.delay)));
        }
      },
      _panelKeydown: function (t) {
        this._handlePageNav(t) ||
          (t.ctrlKey &&
            t.keyCode === e.ui.keyCode.UP &&
            (t.preventDefault(), this.active.trigger("focus")));
      },
      _handlePageNav: function (t) {
        return t.altKey && t.keyCode === e.ui.keyCode.PAGE_UP
          ? (this._activate(this._focusNextTab(this.options.active - 1, !1)),
            !0)
          : t.altKey && t.keyCode === e.ui.keyCode.PAGE_DOWN
          ? (this._activate(this._focusNextTab(this.options.active + 1, !0)),
            !0)
          : void 0;
      },
      _findNextTab: function (t, i) {
        for (
          var s = this.tabs.length - 1;
          -1 !==
          e.inArray(
            (t = (t = s < t ? 0 : t) < 0 ? s : t),
            this.options.disabled
          );

        )
          t = i ? t + 1 : t - 1;
        return t;
      },
      _focusNextTab: function (e, t) {
        return (
          (e = this._findNextTab(e, t)), this.tabs.eq(e).trigger("focus"), e
        );
      },
      _setOption: function (e, t) {
        "active" !== e
          ? (this._super(e, t),
            "collapsible" === e &&
              (this._toggleClass("ui-tabs-collapsible", null, t),
              t || !1 !== this.options.active || this._activate(0)),
            "event" === e && this._setupEvents(t),
            "heightStyle" === e && this._setupHeightStyle(t))
          : this._activate(t);
      },
      _sanitizeSelector: function (e) {
        return e
          ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&")
          : "";
      },
      refresh: function () {
        var t = this.options,
          i = this.tablist.children(":has(a[href])");
        (t.disabled = e.map(i.filter(".ui-state-disabled"), function (e) {
          return i.index(e);
        })),
          this._processTabs(),
          !1 !== t.active && this.anchors.length
            ? this.active.length && !e.contains(this.tablist[0], this.active[0])
              ? this.tabs.length === t.disabled.length
                ? ((t.active = !1), (this.active = e()))
                : this._activate(
                    this._findNextTab(Math.max(0, t.active - 1), !1)
                  )
              : (t.active = this.tabs.index(this.active))
            : ((t.active = !1), (this.active = e())),
          this._refresh();
      },
      _refresh: function () {
        this._setOptionDisabled(this.options.disabled),
          this._setupEvents(this.options.event),
          this._setupHeightStyle(this.options.heightStyle),
          this.tabs.not(this.active).attr({
            "aria-selected": "false",
            "aria-expanded": "false",
            tabIndex: -1,
          }),
          this.panels
            .not(this._getPanelForTab(this.active))
            .hide()
            .attr({ "aria-hidden": "true" }),
          this.active.length
            ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0,
              }),
              this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
              this._getPanelForTab(this.active)
                .show()
                .attr({ "aria-hidden": "false" }))
            : this.tabs.eq(0).attr("tabIndex", 0);
      },
      _processTabs: function () {
        var t = this,
          i = this.tabs,
          s = this.anchors,
          n = this.panels;
        (this.tablist = this._getList().attr("role", "tablist")),
          this._addClass(
            this.tablist,
            "ui-tabs-nav",
            "ui-helper-reset ui-helper-clearfix ui-widget-header"
          ),
          this.tablist
            .on("mousedown" + this.eventNamespace, "> li", function (t) {
              e(this).is(".ui-state-disabled") && t.preventDefault();
            })
            .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
              e(this).closest("li").is(".ui-state-disabled") && this.blur();
            }),
          (this.tabs = this.tablist
            .find("> li:has(a[href])")
            .attr({ role: "tab", tabIndex: -1 })),
          this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
          (this.anchors = this.tabs
            .map(function () {
              return e("a", this)[0];
            })
            .attr({ tabIndex: -1 })),
          this._addClass(this.anchors, "ui-tabs-anchor"),
          (this.panels = e()),
          this.anchors.each(function (i, s) {
            var n,
              a,
              r,
              o = e(s).uniqueId().attr("id"),
              l = e(s).closest("li"),
              c = l.attr("aria-controls");
            t._isLocal(s)
              ? ((r = (n = s.hash).substring(1)),
                (a = t.element.find(t._sanitizeSelector(n))))
              : ((r = l.attr("aria-controls") || e({}).uniqueId()[0].id),
                (a = t.element.find((n = "#" + r))).length ||
                  (a = t._createPanel(r)).insertAfter(
                    t.panels[i - 1] || t.tablist
                  ),
                a.attr("aria-live", "polite")),
              a.length && (t.panels = t.panels.add(a)),
              c && l.data("ui-tabs-aria-controls", c),
              l.attr({ "aria-controls": r, "aria-labelledby": o }),
              a.attr("aria-labelledby", o);
          }),
          this.panels.attr("role", "tabpanel"),
          this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
          i &&
            (this._off(i.not(this.tabs)),
            this._off(s.not(this.anchors)),
            this._off(n.not(this.panels)));
      },
      _getList: function () {
        return this.tablist || this.element.find("ol, ul").eq(0);
      },
      _createPanel: function (t) {
        return e("<div>").attr("id", t).data("ui-tabs-destroy", !0);
      },
      _setOptionDisabled: function (t) {
        var i, s;
        for (
          Array.isArray(t) &&
            (t.length
              ? t.length === this.anchors.length && (t = !0)
              : (t = !1)),
            s = 0;
          (i = this.tabs[s]);
          s++
        )
          (i = e(i)),
            !0 === t || -1 !== e.inArray(s, t)
              ? (i.attr("aria-disabled", "true"),
                this._addClass(i, null, "ui-state-disabled"))
              : (i.removeAttr("aria-disabled"),
                this._removeClass(i, null, "ui-state-disabled"));
        (this.options.disabled = t),
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !0 === t
          );
      },
      _setupEvents: function (t) {
        var i = {};
        t &&
          e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler";
          }),
          this._off(this.anchors.add(this.tabs).add(this.panels)),
          this._on(!0, this.anchors, {
            click: function (e) {
              e.preventDefault();
            },
          }),
          this._on(this.anchors, i),
          this._on(this.tabs, { keydown: "_tabKeydown" }),
          this._on(this.panels, { keydown: "_panelKeydown" }),
          this._focusable(this.tabs),
          this._hoverable(this.tabs);
      },
      _setupHeightStyle: function (t) {
        var i,
          s = this.element.parent();
        "fill" === t
          ? ((i = s.height()),
            (i -= this.element.outerHeight() - this.element.height()),
            this.element.siblings(":visible").each(function () {
              var t = e(this),
                s = t.css("position");
              "absolute" !== s && "fixed" !== s && (i -= t.outerHeight(!0));
            }),
            this.element
              .children()
              .not(this.panels)
              .each(function () {
                i -= e(this).outerHeight(!0);
              }),
            this.panels
              .each(function () {
                e(this).height(
                  Math.max(0, i - e(this).innerHeight() + e(this).height())
                );
              })
              .css("overflow", "auto"))
          : "auto" === t &&
            ((i = 0),
            this.panels
              .each(function () {
                i = Math.max(i, e(this).height("").height());
              })
              .height(i));
      },
      _eventHandler: function (t) {
        var i = this.options,
          s = this.active,
          n = e(t.currentTarget).closest("li"),
          a = n[0] === s[0],
          r = a && i.collapsible,
          o = r ? e() : this._getPanelForTab(n),
          l = s.length ? this._getPanelForTab(s) : e();
        s = { oldTab: s, oldPanel: l, newTab: r ? e() : n, newPanel: o };
        t.preventDefault(),
          n.hasClass("ui-state-disabled") ||
            n.hasClass("ui-tabs-loading") ||
            this.running ||
            (a && !i.collapsible) ||
            !1 === this._trigger("beforeActivate", t, s) ||
            ((i.active = !r && this.tabs.index(n)),
            (this.active = a ? e() : n),
            this.xhr && this.xhr.abort(),
            l.length ||
              o.length ||
              e.error("jQuery UI Tabs: Mismatching fragment identifier."),
            o.length && this.load(this.tabs.index(n), t),
            this._toggle(t, s));
      },
      _toggle: function (t, i) {
        var s = this,
          n = i.newPanel,
          a = i.oldPanel;
        function r() {
          (s.running = !1), s._trigger("activate", t, i);
        }
        function o() {
          s._addClass(
            i.newTab.closest("li"),
            "ui-tabs-active",
            "ui-state-active"
          ),
            n.length && s.options.show
              ? s._show(n, s.options.show, r)
              : (n.show(), r());
        }
        (this.running = !0),
          a.length && this.options.hide
            ? this._hide(a, this.options.hide, function () {
                s._removeClass(
                  i.oldTab.closest("li"),
                  "ui-tabs-active",
                  "ui-state-active"
                ),
                  o();
              })
            : (this._removeClass(
                i.oldTab.closest("li"),
                "ui-tabs-active",
                "ui-state-active"
              ),
              a.hide(),
              o()),
          a.attr("aria-hidden", "true"),
          i.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }),
          n.length && a.length
            ? i.oldTab.attr("tabIndex", -1)
            : n.length &&
              this.tabs
                .filter(function () {
                  return 0 === e(this).attr("tabIndex");
                })
                .attr("tabIndex", -1),
          n.attr("aria-hidden", "false"),
          i.newTab.attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _activate: function (t) {
        (t = this._findActive(t))[0] !== this.active[0] &&
          ((t = (t = t.length ? t : this.active).find(".ui-tabs-anchor")[0]),
          this._eventHandler({
            target: t,
            currentTarget: t,
            preventDefault: e.noop,
          }));
      },
      _findActive: function (t) {
        return !1 === t ? e() : this.tabs.eq(t);
      },
      _getIndex: function (t) {
        return "string" == typeof t
          ? this.anchors.index(
              this.anchors.filter("[href$='" + e.escapeSelector(t) + "']")
            )
          : t;
      },
      _destroy: function () {
        this.xhr && this.xhr.abort(),
          this.tablist.removeAttr("role").off(this.eventNamespace),
          this.anchors.removeAttr("role tabIndex").removeUniqueId(),
          this.tabs.add(this.panels).each(function () {
            e.data(this, "ui-tabs-destroy")
              ? e(this).remove()
              : e(this).removeAttr(
                  "role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded"
                );
          }),
          this.tabs.each(function () {
            var t = e(this),
              i = t.data("ui-tabs-aria-controls");
            i
              ? t.attr("aria-controls", i).removeData("ui-tabs-aria-controls")
              : t.removeAttr("aria-controls");
          }),
          this.panels.show(),
          "content" !== this.options.heightStyle &&
            this.panels.css("height", "");
      },
      enable: function (t) {
        var i = this.options.disabled;
        !1 !== i &&
          ((i =
            void 0 !== t &&
            ((t = this._getIndex(t)),
            Array.isArray(i)
              ? e.map(i, function (e) {
                  return e !== t ? e : null;
                })
              : e.map(this.tabs, function (e, i) {
                  return i !== t ? i : null;
                }))),
          this._setOptionDisabled(i));
      },
      disable: function (t) {
        var i = this.options.disabled;
        if (!0 !== i) {
          if (void 0 === t) i = !0;
          else {
            if (((t = this._getIndex(t)), -1 !== e.inArray(t, i))) return;
            i = Array.isArray(i) ? e.merge([t], i).sort() : [t];
          }
          this._setOptionDisabled(i);
        }
      },
      load: function (t, i) {
        function s(e, t) {
          "abort" === t && n.panels.stop(!1, !0),
            n._removeClass(a, "ui-tabs-loading"),
            r.removeAttr("aria-busy"),
            e === n.xhr && delete n.xhr;
        }
        t = this._getIndex(t);
        var n = this,
          a = this.tabs.eq(t),
          r = ((t = a.find(".ui-tabs-anchor")), this._getPanelForTab(a)),
          o = { tab: a, panel: r };
        this._isLocal(t[0]) ||
          ((this.xhr = e.ajax(this._ajaxSettings(t, i, o))),
          this.xhr &&
            "canceled" !== this.xhr.statusText &&
            (this._addClass(a, "ui-tabs-loading"),
            r.attr("aria-busy", "true"),
            this.xhr
              .done(function (e, t, a) {
                setTimeout(function () {
                  r.html(e), n._trigger("load", i, o), s(a, t);
                }, 1);
              })
              .fail(function (e, t) {
                setTimeout(function () {
                  s(e, t);
                }, 1);
              })));
      },
      _ajaxSettings: function (t, i, s) {
        var n = this;
        return {
          url: t.attr("href").replace(/#.*$/, ""),
          beforeSend: function (t, a) {
            return n._trigger(
              "beforeLoad",
              i,
              e.extend({ jqXHR: t, ajaxSettings: a }, s)
            );
          },
        };
      },
      _getPanelForTab: function (t) {
        return (
          (t = e(t).attr("aria-controls")),
          this.element.find(this._sanitizeSelector("#" + t))
        );
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.tabs", e.ui.tabs, {
        _processTabs: function () {
          this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        },
      }),
    e.ui.tabs,
    e.widget("ui.tooltip", {
      version: "1.13.2",
      options: {
        classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" },
        content: function () {
          var t = e(this).attr("title");
          return e("<a>").text(t).html();
        },
        hide: !0,
        items: "[title]:not([disabled])",
        position: {
          my: "left top+15",
          at: "left bottom",
          collision: "flipfit flip",
        },
        show: !0,
        track: !1,
        close: null,
        open: null,
      },
      _addDescribedBy: function (e, t) {
        var i = (e.attr("aria-describedby") || "").split(/\s+/);
        i.push(t),
          e
            .data("ui-tooltip-id", t)
            .attr("aria-describedby", String.prototype.trim.call(i.join(" ")));
      },
      _removeDescribedBy: function (t) {
        var i = t.data("ui-tooltip-id"),
          s = (t.attr("aria-describedby") || "").split(/\s+/);
        -1 !== (i = e.inArray(i, s)) && s.splice(i, 1),
          t.removeData("ui-tooltip-id"),
          (s = String.prototype.trim.call(s.join(" ")))
            ? t.attr("aria-describedby", s)
            : t.removeAttr("aria-describedby");
      },
      _create: function () {
        this._on({ mouseover: "open", focusin: "open" }),
          (this.tooltips = {}),
          (this.parents = {}),
          (this.liveRegion = e("<div>")
            .attr({
              role: "log",
              "aria-live": "assertive",
              "aria-relevant": "additions",
            })
            .appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          (this.disabledTitles = e([]));
      },
      _setOption: function (t, i) {
        var s = this;
        this._super(t, i),
          "content" === t &&
            e.each(this.tooltips, function (e, t) {
              s._updateContent(t.element);
            });
      },
      _setOptionDisabled: function (e) {
        this[e ? "_disable" : "_enable"]();
      },
      _disable: function () {
        var t = this;
        e.each(this.tooltips, function (i, s) {
          var n = e.Event("blur");
          (n.target = n.currentTarget = s.element[0]), t.close(n, !0);
        }),
          (this.disabledTitles = this.disabledTitles.add(
            this.element
              .find(this.options.items)
              .addBack()
              .filter(function () {
                var t = e(this);
                if (t.is("[title]"))
                  return t
                    .data("ui-tooltip-title", t.attr("title"))
                    .removeAttr("title");
              })
          ));
      },
      _enable: function () {
        this.disabledTitles.each(function () {
          var t = e(this);
          t.data("ui-tooltip-title") &&
            t.attr("title", t.data("ui-tooltip-title"));
        }),
          (this.disabledTitles = e([]));
      },
      open: function (t) {
        var i = this,
          s = e(t ? t.target : this.element).closest(this.options.items);
        s.length &&
          !s.data("ui-tooltip-id") &&
          (s.attr("title") && s.data("ui-tooltip-title", s.attr("title")),
          s.data("ui-tooltip-open", !0),
          t &&
            "mouseover" === t.type &&
            s.parents().each(function () {
              var t,
                s = e(this);
              s.data("ui-tooltip-open") &&
                (((t = e.Event("blur")).target = t.currentTarget = this),
                i.close(t, !0)),
                s.attr("title") &&
                  (s.uniqueId(),
                  (i.parents[this.id] = {
                    element: this,
                    title: s.attr("title"),
                  }),
                  s.attr("title", ""));
            }),
          this._registerCloseHandlers(t, s),
          this._updateContent(s, t));
      },
      _updateContent: function (e, t) {
        var i = this.options.content,
          s = this,
          n = t ? t.type : null;
        if ("string" == typeof i || i.nodeType || i.jquery)
          return this._open(t, e, i);
        (i = i.call(e[0], function (i) {
          s._delay(function () {
            e.data("ui-tooltip-open") &&
              (t && (t.type = n), this._open(t, e, i));
          });
        })) && this._open(t, e, i);
      },
      _open: function (t, i, s) {
        var n,
          a,
          r,
          o = e.extend({}, this.options.position);
        function l(e) {
          (o.of = e), a.is(":hidden") || a.position(o);
        }
        s &&
          ((n = this._find(i))
            ? n.tooltip.find(".ui-tooltip-content").html(s)
            : (i.is("[title]") &&
                (t && "mouseover" === t.type
                  ? i.attr("title", "")
                  : i.removeAttr("title")),
              (n = this._tooltip(i)),
              (a = n.tooltip),
              this._addDescribedBy(i, a.attr("id")),
              a.find(".ui-tooltip-content").html(s),
              this.liveRegion.children().hide(),
              (s = e("<div>").html(a.find(".ui-tooltip-content").html()))
                .removeAttr("name")
                .find("[name]")
                .removeAttr("name"),
              s.removeAttr("id").find("[id]").removeAttr("id"),
              s.appendTo(this.liveRegion),
              this.options.track && t && /^mouse/.test(t.type)
                ? (this._on(this.document, { mousemove: l }), l(t))
                : a.position(e.extend({ of: i }, this.options.position)),
              a.hide(),
              this._show(a, this.options.show),
              this.options.track &&
                this.options.show &&
                this.options.show.delay &&
                (r = this.delayedShow =
                  setInterval(function () {
                    a.is(":visible") && (l(o.of), clearInterval(r));
                  }, 13)),
              this._trigger("open", t, { tooltip: a })));
      },
      _registerCloseHandlers: function (t, i) {
        var s = {
          keyup: function (t) {
            t.keyCode === e.ui.keyCode.ESCAPE &&
              (((t = e.Event(t)).currentTarget = i[0]), this.close(t, !0));
          },
        };
        i[0] !== this.element[0] &&
          (s.remove = function () {
            var e = this._find(i);
            e && this._removeTooltip(e.tooltip);
          }),
          (t && "mouseover" !== t.type) || (s.mouseleave = "close"),
          (t && "focusin" !== t.type) || (s.focusout = "close"),
          this._on(!0, i, s);
      },
      close: function (t) {
        var i,
          s = this,
          n = e(t ? t.currentTarget : this.element),
          a = this._find(n);
        a
          ? ((i = a.tooltip),
            a.closing ||
              (clearInterval(this.delayedShow),
              n.data("ui-tooltip-title") &&
                !n.attr("title") &&
                n.attr("title", n.data("ui-tooltip-title")),
              this._removeDescribedBy(n),
              (a.hiding = !0),
              i.stop(!0),
              this._hide(i, this.options.hide, function () {
                s._removeTooltip(e(this));
              }),
              n.removeData("ui-tooltip-open"),
              this._off(n, "mouseleave focusout keyup"),
              n[0] !== this.element[0] && this._off(n, "remove"),
              this._off(this.document, "mousemove"),
              t &&
                "mouseleave" === t.type &&
                e.each(this.parents, function (t, i) {
                  e(i.element).attr("title", i.title), delete s.parents[t];
                }),
              (a.closing = !0),
              this._trigger("close", t, { tooltip: i }),
              a.hiding || (a.closing = !1)))
          : n.removeData("ui-tooltip-open");
      },
      _tooltip: function (t) {
        var i = e("<div>").attr("role", "tooltip"),
          s = e("<div>").appendTo(i),
          n = i.uniqueId().attr("id");
        return (
          this._addClass(s, "ui-tooltip-content"),
          this._addClass(i, "ui-tooltip", "ui-widget ui-widget-content"),
          i.appendTo(this._appendTo(t)),
          (this.tooltips[n] = { element: t, tooltip: i })
        );
      },
      _find: function (e) {
        return (e = e.data("ui-tooltip-id")) ? this.tooltips[e] : null;
      },
      _removeTooltip: function (e) {
        clearInterval(this.delayedShow),
          e.remove(),
          delete this.tooltips[e.attr("id")];
      },
      _appendTo: function (e) {
        return (e = e.closest(".ui-front, dialog")).length
          ? e
          : this.document[0].body;
      },
      _destroy: function () {
        var t = this;
        e.each(this.tooltips, function (i, s) {
          var n = e.Event("blur");
          s = s.element;
          (n.target = n.currentTarget = s[0]),
            t.close(n, !0),
            e("#" + i).remove(),
            s.data("ui-tooltip-title") &&
              (s.attr("title") || s.attr("title", s.data("ui-tooltip-title")),
              s.removeData("ui-tooltip-title"));
        }),
          this.liveRegion.remove();
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.tooltip", e.ui.tooltip, {
        options: { tooltipClass: null },
        _tooltip: function () {
          var e = this._superApply(arguments);
          return (
            this.options.tooltipClass &&
              e.tooltip.addClass(this.options.tooltipClass),
            e
          );
        },
      }),
    e.ui.tooltip;
}),
  (function (e) {
    function t(e, t) {
      if (!(e.originalEvent.touches.length > 1)) {
        e.preventDefault();
        var i = e.originalEvent.changedTouches[0],
          s = document.createEvent("MouseEvents");
        s.initMouseEvent(
          t,
          !0,
          !0,
          window,
          1,
          i.screenX,
          i.screenY,
          i.clientX,
          i.clientY,
          !1,
          !1,
          !1,
          !1,
          0,
          null
        ),
          e.target.dispatchEvent(s);
      }
    }
    if (((e.support.touch = "ontouchend" in document), e.support.touch)) {
      var i,
        s = e.ui.mouse.prototype,
        n = s._mouseInit,
        a = s._mouseDestroy;
      (s._touchStart = function (e) {
        !i &&
          this._mouseCapture(e.originalEvent.changedTouches[0]) &&
          ((i = !0),
          (this._touchMoved = !1),
          t(e, "mouseover"),
          t(e, "mousemove"),
          t(e, "mousedown"));
      }),
        (s._touchMove = function (e) {
          i && ((this._touchMoved = !0), t(e, "mousemove"));
        }),
        (s._touchEnd = function (e) {
          i &&
            (t(e, "mouseup"),
            t(e, "mouseout"),
            this._touchMoved || t(e, "click"),
            (i = !1));
        }),
        (s._mouseInit = function () {
          var t = this;
          t.element.bind({
            touchstart: e.proxy(t, "_touchStart"),
            touchmove: e.proxy(t, "_touchMove"),
            touchend: e.proxy(t, "_touchEnd"),
          }),
            n.call(t);
        }),
        (s._mouseDestroy = function () {
          var t = this;
          t.element.unbind({
            touchstart: e.proxy(t, "_touchStart"),
            touchmove: e.proxy(t, "_touchMove"),
            touchend: e.proxy(t, "_touchEnd"),
          }),
            a.call(t);
        });
    }
  })(jQuery),
  $(".header__burger").click(function (e) {
    $(".header__burger, .header__menu").toggleClass("burger-active");
    $("html, body").toggleClass("burger-active");
  }),
  $(".submenu").prev().addClass("has-submenu"),
  window.screen.width < 992
    ? ($(".block__title").click(function (e) {
        $(this).toggleClass("footer-active").next().slideToggle(300);
      }),
      $(".has-submenu").click(function (e) {
        $(this).toggleClass("active"), $(this).next().toggleClass("active");
      }))
    : ($(".header__link").hover(
        function (e) {
          $(".has-submenu").addClass("active"),
            $(".has-submenu").next().addClass("active");
        },
        function (e) {
          $(".has-submenu").removeClass("active"),
            $(".has-submenu").next().removeClass("active");
        }
      ),
      $(".submenu").hover(function (e) {
        $(this).addClass("active");
      })),
  $(".ui-slider-handle").draggable();
const customSelects = Array.from(document.querySelectorAll(".custom-select"));
function rangeSLiderSettings(e, t, i) {
  if ($(e)) {
    let n = $(e).data("min"),
      a = $(e).data("max");
    function s() {
      $(`#${t}`).val($(e).slider("values", 0)),
        $(`#${i}`).val($(e).slider("values", 1));
    }
    $(e).slider({
      values: [n, a],
      range: !0,
      create: s,
      slide: s,
      stop: s,
      min: n,
      max: a,
    }),
      $("input").change(function (s) {
        switch (this.id) {
          case t:
          case i:
            let s = this.id == i ? 1 : 0;
            ($(this).val() < n || $(this).val() > a) && 0 === s
              ? $(e).slider("values", s, $(this).val(n))
              : ($(this).val() < n || $(this).val() > a) && 1 === s
              ? $(e).slider("values", s, $(this).val(a))
              : $(e).slider("values", s, $(this).val());
            break;
          case "slideVal":
            $("#slider").slider("value", $(this).val());
        }
      });
  }
}
customSelects[0] &&
  customSelects.forEach((e) => {
    clickForCustomSelect(e);
  }),
  document.querySelector(".video-reviews__link") &&
    tabs(
      Array.from(document.querySelectorAll(".video-reviews__link")),
      Array.from(document.querySelectorAll(".video-reviews__block")),
      "active"
    ),
  document.querySelector(".write-review__link") &&
    tabs(
      Array.from(document.querySelectorAll(".write-review__link")),
      Array.from(document.querySelectorAll(".write-review__block")),
      "active"
    ),
  document.querySelector(".location__link") &&
    tabs(
      Array.from(document.querySelectorAll(".location__link")),
      Array.from(document.querySelectorAll(".location__block")),
      "active"
    ),
  document.querySelector(".equipment__link") &&
    tabs(
      Array.from(document.querySelectorAll(".equipment__link")),
      Array.from(document.querySelectorAll(".equipment__block")),
      "active"
    ),
  document.querySelector(".item-info__block") &&
    tabs(
      Array.from(document.querySelectorAll(".item-info__link")),
      Array.from(document.querySelectorAll(".item-info__block")),
      "active"
    ),
  document.querySelector(".filter") &&
    openClickPopup(".filter", ".filter__show", ".filter__hidden"),
  document.querySelector(".write-review__row") &&
    openClickPopup(
      ".write-review__row",
      ".write-review__button",
      ".write-review"
    ),
  document.querySelector(".more-popup") &&
    openClickPopup(".more-popup", ".more-btn", ".more-popup"),
  $(".header__address").hover(
    function (e) {
      $(".header__address-hover").addClass("active");
    },
    function (e) {
      $(".header__address-hover").removeClass("active");
    }
  ),
  rangeSLiderSettings(".rangeslider", "rangeMin", "rangeMax");
const customFile = document.querySelector(".custom-file");
function readFile(e) {
  let t = e.querySelector(".file"),
    i = new FileReader(),
    s = e.querySelector(".close");
  e.querySelector(".place").classList.toggle("active"),
    (t.onchange = () => {
      i.readAsDataURL(t.files[0]),
        (i.onload = function () {
          let t = document.createElement("video");
          (t.controls = !0),
            (t.src = i.result),
            e.appendChild(t),
            t.classList.toggle("active"),
            e.querySelector(".place").classList.toggle("active"),
            s.classList.toggle("active"),
            s.addEventListener("click", () => {
              e.removeChild(t),
                e.querySelector(".place").classList.toggle("active"),
                s.classList.toggle("active");
            });
        });
    });
}
function swiperGrid(e, t, i, s, n, a) {
  new Swiper(e, {
    spaceBetween: i,
    slidesPerView: 2,
    grid: { rows: 4 },
    navigation: { nextEl: a, prevEl: n },
    breakpoints: {
      577: { slidesPerView: 2, grid: { rows: 2 } },
      769: { slidesPerView: t, grid: { rows: s } },
    },
  });
}
function swiperGridMobile(e, t, i, s, n, a) {
  e == ".swiper-video"
    ? new Swiper(e, {
        spaceBetween: i,
        loop: !0,
        slidesPerView: 2,
        navigation: { nextEl: a, prevEl: n },
        breakpoints: {
          350: { slidesPerView: 1.5, centeredSlides: !0 },
          769: { slidesPerView: t, grid: { rows: s } },
        },
      })
    : new Swiper(e, {
        spaceBetween: i,
        loop: !0,
        slidesPerView: 2,
        navigation: { nextEl: a, prevEl: n },
        breakpoints: { 769: { slidesPerView: t, grid: { rows: s } } },
      });
}
function defaultSwiper(
  e,
  t,
  i,
  s = !1,
  n = !1,
  a,
  r,
  o = "horizontal",
  l = !1,
  c = ""
) {
  new Swiper(e, {
    slidesPerView: 1,
    spaceBetween: 10,
    centeredSlides: s,
    loop: n,
    navigation: { nextEl: r, prevEl: a },
    pagination: { el: c },
    direction: o,
    mousewheel: { releaseOnEdges: l },
    breakpoints: {
      577: { slidesPerView: 3, spaceBetween: 30 },
      769: { slidesPerView: t, spaceBetween: i },
    },
  });
}
customFile && readFile(customFile),
  $(".equipment__filter").click(function (e) {
    $(this).next().slideToggle(100);
  }),
  $(".close-btn").click(function (e) {
    $(this).parent().removeClass("active");
  }),
  swiperGrid(
    ".swiper-grid-three",
    3,
    20,
    3,
    ".swiper-grid-three-prev",
    ".swiper-grid-three-next"
  ),
  swiperGrid(
    ".swiper-grid-two",
    3,
    20,
    2,
    ".swiper-grid-two-prev",
    ".swiper-grid-two-next"
  ),
  swiperGridMobile(
    ".swiper-vertical-three",
    2,
    20,
    2,
    ".swiper-vertical-three-prev",
    ".swiper-vertical-three-next"
  ),
  swiperGridMobile(
    ".swiper-video",
    2,
    20,
    2,
    ".swiper-video-prev",
    ".swiper-video-next"
  ),
  defaultSwiper(
    ".swiper-mounth",
    1,
    0,
    !0,
    !0,
    ".swiper-mounth-prev",
    ".swiper-mounth-next"
  ),
  defaultSwiper(
    ".swiper-day",
    5,
    20,
    !0,
    !0,
    ".swiper-day-prev",
    ".swiper-day-next"
  ),
  new Swiper(".swiper-recently", {
    slidesPerView: 2.1,
    spaceBetween: 5,
    loop: !0,
    centeredSlides: !0,
    navigation: { nextEl: "", prevEl: "" },
    breakpoints: {
      577: {
        slidesPerView: 2.3,
        spaceBetween: 30,
        navigation: { nextEl: "", prevEl: "" },
      },
      993: {
        slidesPerView: 4,
        spaceBetween: 30,
        centeredSlides: !1,
        navigation: {
          nextEl: ".swiper-recently-next",
          prevEl: ".swiper-recently-prev",
        },
      },
    },
  }),
  new Swiper(".swiper-similar", {
    slidesPerView: 2.3,
    spaceBetween: 15,
    loop: !0,
    centeredSlides: !0,
    navigation: { nextEl: "", prevEl: "" },
    breakpoints: {
      577: {
        slidesPerView: 2.3,
        spaceBetween: 30,
        navigation: { nextEl: "", prevEl: "" },
      },
      993: {
        slidesPerView: 4,
        spaceBetween: 30,
        centeredSlides: !1,
        navigation: {
          nextEl: ".swiper-similar-next",
          prevEl: ".swiper-similar-prev",
        },
      },
    },
  }),
  new Swiper(".swiper-time", {
    slidesPerView: 5,
    spaceBetween: 20,
    centeredSlides: !0,
    loop: !1,
    direction: "vertical",
    mousewheel: { releaseOnEdges: !0 },
  });
const itemSlider = document.querySelector(".item-slider"),
  lgContainer = document.getElementById("lg-swipper"),
  thumbsForItemSlider = document.querySelector(".thumbs-slides");
if (itemSlider) {
  new Swiper(thumbsForItemSlider, {
    spaceBetween: 0,
    slidesPerView: 1,
    breakpoints: {
      993: {
        spaceBetween: 15,
        slidesPerView: 3,
        navigation: {
          nextEl: ".swiper-thumbs-next",
          prevEl: ".swiper-thumbs-prev",
        },
      },
    },
  });
  new Swiper(itemSlider, { thumbs: { swiper: thumbsForItemSlider } });
}
